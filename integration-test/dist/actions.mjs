import * as __WEBPACK_EXTERNAL_MODULE_assert__ from "assert";
import * as __WEBPACK_EXTERNAL_MODULE_async_hooks__ from "async_hooks";
import * as __WEBPACK_EXTERNAL_MODULE_buffer__ from "buffer";
import * as __WEBPACK_EXTERNAL_MODULE_console__ from "console";
import * as __WEBPACK_EXTERNAL_MODULE_crypto__ from "crypto";
import * as __WEBPACK_EXTERNAL_MODULE_diagnostics_channel__ from "diagnostics_channel";
import * as __WEBPACK_EXTERNAL_MODULE_events__ from "events";
import * as __WEBPACK_EXTERNAL_MODULE_fs__ from "fs";
import * as __WEBPACK_EXTERNAL_MODULE_http__ from "http";
import * as __WEBPACK_EXTERNAL_MODULE_http2__ from "http2";
import * as __WEBPACK_EXTERNAL_MODULE_https__ from "https";
import * as __WEBPACK_EXTERNAL_MODULE_net__ from "net";
import * as __WEBPACK_EXTERNAL_MODULE_node_events_819cca76__ from "node:events";
import * as __WEBPACK_EXTERNAL_MODULE_node_stream_62980834__ from "node:stream";
import * as __WEBPACK_EXTERNAL_MODULE_node_util_1f093676__ from "node:util";
import * as __WEBPACK_EXTERNAL_MODULE_os__ from "os";
import * as __WEBPACK_EXTERNAL_MODULE_path__ from "path";
import * as __WEBPACK_EXTERNAL_MODULE_perf_hooks__ from "perf_hooks";
import * as __WEBPACK_EXTERNAL_MODULE_querystring__ from "querystring";
import * as __WEBPACK_EXTERNAL_MODULE_stream__ from "stream";
import * as __WEBPACK_EXTERNAL_MODULE_stream_web_f5b18fac__ from "stream/web";
import * as __WEBPACK_EXTERNAL_MODULE_string_decoder__ from "string_decoder";
import * as __WEBPACK_EXTERNAL_MODULE_tls__ from "tls";
import * as __WEBPACK_EXTERNAL_MODULE_url__ from "url";
import * as __WEBPACK_EXTERNAL_MODULE_util__ from "util";
import * as __WEBPACK_EXTERNAL_MODULE_util_types_cbaa04f4__ from "util/types";
import * as __WEBPACK_EXTERNAL_MODULE_worker_threads__ from "worker_threads";
import * as __WEBPACK_EXTERNAL_MODULE_zlib__ from "zlib";
/******/ var __webpack_modules__ = ({

/***/ "../../node_modules/@actions/core/lib/command.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@actions/core/lib/command.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__webpack_require__(/*! os */ "os"));
const utils_1 = __webpack_require__(/*! ./utils */ "../../node_modules/@actions/core/lib/utils.js");
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ "../../node_modules/@actions/core/lib/core.js":
/*!****************************************************!*\
  !*** ../../node_modules/@actions/core/lib/core.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __webpack_require__(/*! ./command */ "../../node_modules/@actions/core/lib/command.js");
const file_command_1 = __webpack_require__(/*! ./file-command */ "../../node_modules/@actions/core/lib/file-command.js");
const utils_1 = __webpack_require__(/*! ./utils */ "../../node_modules/@actions/core/lib/utils.js");
const os = __importStar(__webpack_require__(/*! os */ "os"));
const path = __importStar(__webpack_require__(/*! path */ "path"));
const oidc_utils_1 = __webpack_require__(/*! ./oidc-utils */ "../../node_modules/@actions/core/lib/oidc-utils.js");
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));
    }
    command_1.issueCommand('set-env', { name }, convertedVal);
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueFileCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    if (options && options.trimWhitespace === false) {
        return inputs;
    }
    return inputs.map(input => input.trim());
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    const filePath = process.env['GITHUB_OUTPUT'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));
    }
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    const filePath = process.env['GITHUB_STATE'] || '';
    if (filePath) {
        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));
    }
    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __webpack_require__(/*! ./summary */ "../../node_modules/@actions/core/lib/summary.js");
Object.defineProperty(exports, "summary", ({ enumerable: true, get: function () { return summary_1.summary; } }));
/**
 * @deprecated use core.summary
 */
var summary_2 = __webpack_require__(/*! ./summary */ "../../node_modules/@actions/core/lib/summary.js");
Object.defineProperty(exports, "markdownSummary", ({ enumerable: true, get: function () { return summary_2.markdownSummary; } }));
/**
 * Path exports
 */
var path_utils_1 = __webpack_require__(/*! ./path-utils */ "../../node_modules/@actions/core/lib/path-utils.js");
Object.defineProperty(exports, "toPosixPath", ({ enumerable: true, get: function () { return path_utils_1.toPosixPath; } }));
Object.defineProperty(exports, "toWin32Path", ({ enumerable: true, get: function () { return path_utils_1.toWin32Path; } }));
Object.defineProperty(exports, "toPlatformPath", ({ enumerable: true, get: function () { return path_utils_1.toPlatformPath; } }));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ "../../node_modules/@actions/core/lib/file-command.js":
/*!************************************************************!*\
  !*** ../../node_modules/@actions/core/lib/file-command.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.prepareKeyValueMessage = exports.issueFileCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__webpack_require__(/*! fs */ "fs"));
const os = __importStar(__webpack_require__(/*! os */ "os"));
const uuid_1 = __webpack_require__(/*! uuid */ "../../node_modules/@actions/core/node_modules/uuid/wrapper.mjs");
const utils_1 = __webpack_require__(/*! ./utils */ "../../node_modules/@actions/core/lib/utils.js");
function issueFileCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueFileCommand = issueFileCommand;
function prepareKeyValueMessage(key, value) {
    const delimiter = `ghadelimiter_${uuid_1.v4()}`;
    const convertedValue = utils_1.toCommandValue(value);
    // These should realistically never happen, but just in case someone finds a
    // way to exploit uuid generation let's not allow keys or values that contain
    // the delimiter.
    if (key.includes(delimiter)) {
        throw new Error(`Unexpected input: name should not contain the delimiter "${delimiter}"`);
    }
    if (convertedValue.includes(delimiter)) {
        throw new Error(`Unexpected input: value should not contain the delimiter "${delimiter}"`);
    }
    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;
}
exports.prepareKeyValueMessage = prepareKeyValueMessage;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ "../../node_modules/@actions/core/lib/oidc-utils.js":
/*!**********************************************************!*\
  !*** ../../node_modules/@actions/core/lib/oidc-utils.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __webpack_require__(/*! @actions/http-client */ "../../node_modules/@actions/http-client/lib/index.js");
const auth_1 = __webpack_require__(/*! @actions/http-client/lib/auth */ "../../node_modules/@actions/http-client/lib/auth.js");
const core_1 = __webpack_require__(/*! ./core */ "../../node_modules/@actions/core/lib/core.js");
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ "../../node_modules/@actions/core/lib/path-utils.js":
/*!**********************************************************!*\
  !*** ../../node_modules/@actions/core/lib/path-utils.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
const path = __importStar(__webpack_require__(/*! path */ "path"));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
    return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
    return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
    return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ "../../node_modules/@actions/core/lib/summary.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@actions/core/lib/summary.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
const os_1 = __webpack_require__(/*! os */ "os");
const fs_1 = __webpack_require__(/*! fs */ "fs");
const { access, appendFile, writeFile } = fs_1.promises;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
class Summary {
    constructor() {
        this._buffer = '';
    }
    /**
     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
     * Also checks r/w permissions.
     *
     * @returns step summary file path
     */
    filePath() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._filePath) {
                return this._filePath;
            }
            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
            if (!pathFromEnv) {
                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            }
            catch (_a) {
                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = pathFromEnv;
            return this._filePath;
        });
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
    wrap(tag, content, attrs = {}) {
        const htmlAttrs = Object.entries(attrs)
            .map(([key, value]) => ` ${key}="${value}"`)
            .join('');
        if (!content) {
            return `<${tag}${htmlAttrs}>`;
        }
        return `<${tag}${htmlAttrs}>${content}</${tag}>`;
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
    write(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
            const filePath = yield this.filePath();
            const writeFunc = overwrite ? writeFile : appendFile;
            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });
            return this.emptyBuffer();
        });
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
    clear() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
        });
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
    stringify() {
        return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
    isEmptyBuffer() {
        return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
    emptyBuffer() {
        this._buffer = '';
        return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
    addRaw(text, addEOL = false) {
        this._buffer += text;
        return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
    addEOL() {
        return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
    addCodeBlock(code, lang) {
        const attrs = Object.assign({}, (lang && { lang }));
        const element = this.wrap('pre', this.wrap('code', code), attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
    addList(items, ordered = false) {
        const tag = ordered ? 'ol' : 'ul';
        const listItems = items.map(item => this.wrap('li', item)).join('');
        const element = this.wrap(tag, listItems);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
    addTable(rows) {
        const tableBody = rows
            .map(row => {
            const cells = row
                .map(cell => {
                if (typeof cell === 'string') {
                    return this.wrap('td', cell);
                }
                const { header, data, colspan, rowspan } = cell;
                const tag = header ? 'th' : 'td';
                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));
                return this.wrap(tag, data, attrs);
            })
                .join('');
            return this.wrap('tr', cells);
        })
            .join('');
        const element = this.wrap('table', tableBody);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
    addDetails(label, content) {
        const element = this.wrap('details', this.wrap('summary', label) + content);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
    addImage(src, alt, options) {
        const { width, height } = options || {};
        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));
        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
    addHeading(text, level) {
        const tag = `h${level}`;
        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)
            ? tag
            : 'h1';
        const element = this.wrap(allowedTag, text);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addSeparator() {
        const element = this.wrap('hr', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
    addBreak() {
        const element = this.wrap('br', null);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
    addQuote(text, cite) {
        const attrs = Object.assign({}, (cite && { cite }));
        const element = this.wrap('blockquote', text, attrs);
        return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
    addLink(text, href) {
        const element = this.wrap('a', text, { href });
        return this.addRaw(element).addEOL();
    }
}
const _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ "../../node_modules/@actions/core/lib/utils.js":
/*!*****************************************************!*\
  !*** ../../node_modules/@actions/core/lib/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {


// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/index.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "v1", ({
  enumerable: true,
  get: function () {
    return _v.default;
  }
}));
Object.defineProperty(exports, "v3", ({
  enumerable: true,
  get: function () {
    return _v2.default;
  }
}));
Object.defineProperty(exports, "v4", ({
  enumerable: true,
  get: function () {
    return _v3.default;
  }
}));
Object.defineProperty(exports, "v5", ({
  enumerable: true,
  get: function () {
    return _v4.default;
  }
}));
Object.defineProperty(exports, "NIL", ({
  enumerable: true,
  get: function () {
    return _nil.default;
  }
}));
Object.defineProperty(exports, "version", ({
  enumerable: true,
  get: function () {
    return _version.default;
  }
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.default;
  }
}));
Object.defineProperty(exports, "stringify", ({
  enumerable: true,
  get: function () {
    return _stringify.default;
  }
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parse.default;
  }
}));

var _v = _interopRequireDefault(__webpack_require__(/*! ./v1.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/v1.js"));

var _v2 = _interopRequireDefault(__webpack_require__(/*! ./v3.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/v3.js"));

var _v3 = _interopRequireDefault(__webpack_require__(/*! ./v4.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/v4.js"));

var _v4 = _interopRequireDefault(__webpack_require__(/*! ./v5.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/v5.js"));

var _nil = _interopRequireDefault(__webpack_require__(/*! ./nil.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/nil.js"));

var _version = _interopRequireDefault(__webpack_require__(/*! ./version.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/version.js"));

var _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/validate.js"));

var _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/stringify.js"));

var _parse = _interopRequireDefault(__webpack_require__(/*! ./parse.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/parse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/md5.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/md5.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ "crypto"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function md5(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('md5').update(bytes).digest();
}

var _default = md5;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/nil.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/nil.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = '00000000-0000-0000-0000-000000000000';
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/parse.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/parse.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/validate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  let v;
  const arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

var _default = parse;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/regex.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/regex.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/rng.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/rng.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = rng;

var _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ "crypto"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

let poolPtr = rnds8Pool.length;

function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    _crypto.default.randomFillSync(rnds8Pool);

    poolPtr = 0;
  }

  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/sha1.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/sha1.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ "crypto"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function sha1(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }

  return _crypto.default.createHash('sha1').update(bytes).digest();
}

var _default = sha1;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/stringify.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/stringify.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/validate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

var _default = stringify;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/v1.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/v1.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/rng.js"));

var _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/stringify.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html
let _nodeId;

let _clockseq; // Previous uuid creation time


let _lastMSecs = 0;
let _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  let i = buf && offset || 0;
  const b = buf || new Array(16);
  options = options || {};
  let node = options.node || _nodeId;
  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    const seedBytes = options.random || (options.rng || _rng.default)();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (let n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0, _stringify.default)(b);
}

var _default = v1;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/v3.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/v3.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/v35.js"));

var _md = _interopRequireDefault(__webpack_require__(/*! ./md5.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/md5.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v3 = (0, _v.default)('v3', 0x30, _md.default);
var _default = v3;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/v35.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/v35.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
exports.URL = exports.DNS = void 0;

var _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/stringify.js"));

var _parse = _interopRequireDefault(__webpack_require__(/*! ./parse.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/parse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  const bytes = [];

  for (let i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
exports.DNS = DNS;
const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
exports.URL = URL;

function _default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0, _parse.default)(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    let bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (let i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0, _stringify.default)(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/v4.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/v4.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/rng.js"));

var _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/stringify.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function v4(options, buf, offset) {
  options = options || {};

  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`


  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0, _stringify.default)(rnds);
}

var _default = v4;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/v5.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/v5.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/v35.js"));

var _sha = _interopRequireDefault(__webpack_require__(/*! ./sha1.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/sha1.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const v5 = (0, _v.default)('v5', 0x50, _sha.default);
var _default = v5;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/validate.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/validate.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _regex = _interopRequireDefault(__webpack_require__(/*! ./regex.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/regex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function validate(uuid) {
  return typeof uuid === 'string' && _regex.default.test(uuid);
}

var _default = validate;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/dist/version.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/dist/version.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/validate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function version(uuid) {
  if (!(0, _validate.default)(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

var _default = version;
exports["default"] = _default;

/***/ }),

/***/ "../../node_modules/@actions/github/lib/context.js":
/*!*********************************************************!*\
  !*** ../../node_modules/@actions/github/lib/context.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Context = void 0;
const fs_1 = __webpack_require__(/*! fs */ "fs");
const os_1 = __webpack_require__(/*! os */ "os");
class Context {
    /**
     * Hydrate the context from the environment
     */
    constructor() {
        var _a, _b, _c;
        this.payload = {};
        if (process.env.GITHUB_EVENT_PATH) {
            if ((0, fs_1.existsSync)(process.env.GITHUB_EVENT_PATH)) {
                this.payload = JSON.parse((0, fs_1.readFileSync)(process.env.GITHUB_EVENT_PATH, { encoding: 'utf8' }));
            }
            else {
                const path = process.env.GITHUB_EVENT_PATH;
                process.stdout.write(`GITHUB_EVENT_PATH ${path} does not exist${os_1.EOL}`);
            }
        }
        this.eventName = process.env.GITHUB_EVENT_NAME;
        this.sha = process.env.GITHUB_SHA;
        this.ref = process.env.GITHUB_REF;
        this.workflow = process.env.GITHUB_WORKFLOW;
        this.action = process.env.GITHUB_ACTION;
        this.actor = process.env.GITHUB_ACTOR;
        this.job = process.env.GITHUB_JOB;
        this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10);
        this.runId = parseInt(process.env.GITHUB_RUN_ID, 10);
        this.apiUrl = (_a = process.env.GITHUB_API_URL) !== null && _a !== void 0 ? _a : `https://api.github.com`;
        this.serverUrl = (_b = process.env.GITHUB_SERVER_URL) !== null && _b !== void 0 ? _b : `https://github.com`;
        this.graphqlUrl =
            (_c = process.env.GITHUB_GRAPHQL_URL) !== null && _c !== void 0 ? _c : `https://api.github.com/graphql`;
    }
    get issue() {
        const payload = this.payload;
        return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pull_request || payload).number });
    }
    get repo() {
        if (process.env.GITHUB_REPOSITORY) {
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            return { owner, repo };
        }
        if (this.payload.repository) {
            return {
                owner: this.payload.repository.owner.login,
                repo: this.payload.repository.name
            };
        }
        throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'");
    }
}
exports.Context = Context;
//# sourceMappingURL=context.js.map

/***/ }),

/***/ "../../node_modules/@actions/github/lib/github.js":
/*!********************************************************!*\
  !*** ../../node_modules/@actions/github/lib/github.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getOctokit = exports.context = void 0;
const Context = __importStar(__webpack_require__(/*! ./context */ "../../node_modules/@actions/github/lib/context.js"));
const utils_1 = __webpack_require__(/*! ./utils */ "../../node_modules/@actions/github/lib/utils.js");
exports.context = new Context.Context();
/**
 * Returns a hydrated octokit ready to use for GitHub Actions
 *
 * @param     token    the repo PAT or GITHUB_TOKEN
 * @param     options  other options to set
 */
function getOctokit(token, options, ...additionalPlugins) {
    const GitHubWithPlugins = utils_1.GitHub.plugin(...additionalPlugins);
    return new GitHubWithPlugins((0, utils_1.getOctokitOptions)(token, options));
}
exports.getOctokit = getOctokit;
//# sourceMappingURL=github.js.map

/***/ }),

/***/ "../../node_modules/@actions/github/lib/internal/utils.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@actions/github/lib/internal/utils.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getApiBaseUrl = exports.getProxyFetch = exports.getProxyAgentDispatcher = exports.getProxyAgent = exports.getAuthString = void 0;
const httpClient = __importStar(__webpack_require__(/*! @actions/http-client */ "../../node_modules/@actions/http-client/lib/index.js"));
const undici_1 = __webpack_require__(/*! undici */ "../../node_modules/undici/index.js");
function getAuthString(token, options) {
    if (!token && !options.auth) {
        throw new Error('Parameter token or opts.auth is required');
    }
    else if (token && options.auth) {
        throw new Error('Parameters token and opts.auth may not both be specified');
    }
    return typeof options.auth === 'string' ? options.auth : `token ${token}`;
}
exports.getAuthString = getAuthString;
function getProxyAgent(destinationUrl) {
    const hc = new httpClient.HttpClient();
    return hc.getAgent(destinationUrl);
}
exports.getProxyAgent = getProxyAgent;
function getProxyAgentDispatcher(destinationUrl) {
    const hc = new httpClient.HttpClient();
    return hc.getAgentDispatcher(destinationUrl);
}
exports.getProxyAgentDispatcher = getProxyAgentDispatcher;
function getProxyFetch(destinationUrl) {
    const httpDispatcher = getProxyAgentDispatcher(destinationUrl);
    const proxyFetch = (url, opts) => __awaiter(this, void 0, void 0, function* () {
        return (0, undici_1.fetch)(url, Object.assign(Object.assign({}, opts), { dispatcher: httpDispatcher }));
    });
    return proxyFetch;
}
exports.getProxyFetch = getProxyFetch;
function getApiBaseUrl() {
    return process.env['GITHUB_API_URL'] || 'https://api.github.com';
}
exports.getApiBaseUrl = getApiBaseUrl;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "../../node_modules/@actions/github/lib/utils.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@actions/github/lib/utils.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getOctokitOptions = exports.GitHub = exports.defaults = exports.context = void 0;
const Context = __importStar(__webpack_require__(/*! ./context */ "../../node_modules/@actions/github/lib/context.js"));
const Utils = __importStar(__webpack_require__(/*! ./internal/utils */ "../../node_modules/@actions/github/lib/internal/utils.js"));
// octokit + plugins
const core_1 = __webpack_require__(/*! @octokit/core */ "../../node_modules/@octokit/core/dist-web/index.js");
const plugin_rest_endpoint_methods_1 = __webpack_require__(/*! @octokit/plugin-rest-endpoint-methods */ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js");
const plugin_paginate_rest_1 = __webpack_require__(/*! @octokit/plugin-paginate-rest */ "../../node_modules/@octokit/plugin-paginate-rest/dist-web/index.js");
exports.context = new Context.Context();
const baseUrl = Utils.getApiBaseUrl();
exports.defaults = {
    baseUrl,
    request: {
        agent: Utils.getProxyAgent(baseUrl),
        fetch: Utils.getProxyFetch(baseUrl)
    }
};
exports.GitHub = core_1.Octokit.plugin(plugin_rest_endpoint_methods_1.restEndpointMethods, plugin_paginate_rest_1.paginateRest).defaults(exports.defaults);
/**
 * Convience function to correctly format Octokit Options to pass into the constructor.
 *
 * @param     token    the repo PAT or GITHUB_TOKEN
 * @param     options  other options to set
 */
function getOctokitOptions(token, options) {
    const opts = Object.assign({}, options || {}); // Shallow clone - don't mutate the object provided by the caller
    // Auth
    const auth = Utils.getAuthString(token, opts);
    if (auth) {
        opts.auth = auth;
    }
    return opts;
}
exports.getOctokitOptions = getOctokitOptions;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "../../node_modules/@actions/http-client/lib/auth.js":
/*!***********************************************************!*\
  !*** ../../node_modules/@actions/http-client/lib/auth.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports) {


var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Bearer ${this.token}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        if (!options.headers) {
            throw Error('The request has no headers');
        }
        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    // This handler cannot handle 401
    canHandleAuthentication() {
        return false;
    }
    handleAuthentication() {
        return __awaiter(this, void 0, void 0, function* () {
            throw new Error('not implemented');
        });
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ "../../node_modules/@actions/http-client/lib/index.js":
/*!************************************************************!*\
  !*** ../../node_modules/@actions/http-client/lib/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/* eslint-disable @typescript-eslint/no-explicit-any */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
const http = __importStar(__webpack_require__(/*! http */ "http"));
const https = __importStar(__webpack_require__(/*! https */ "https"));
const pm = __importStar(__webpack_require__(/*! ./proxy */ "../../node_modules/@actions/http-client/lib/proxy.js"));
const tunnel = __importStar(__webpack_require__(/*! tunnel */ "../../node_modules/tunnel/index.js"));
const undici_1 = __webpack_require__(/*! undici */ "../../node_modules/undici/index.js");
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes || (exports.HttpCodes = HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers || (exports.Headers = Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes || (exports.MediaTypes = MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                let output = Buffer.alloc(0);
                this.message.on('data', (chunk) => {
                    output = Buffer.concat([output, chunk]);
                });
                this.message.on('end', () => {
                    resolve(output.toString());
                });
            }));
        });
    }
    readBodyBuffer() {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {
                const chunks = [];
                this.message.on('data', (chunk) => {
                    chunks.push(chunk);
                });
                this.message.on('end', () => {
                    resolve(Buffer.concat(chunks));
                });
            }));
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    const parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
        });
    }
    get(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('GET', requestUrl, null, additionalHeaders || {});
        });
    }
    del(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('DELETE', requestUrl, null, additionalHeaders || {});
        });
    }
    post(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('POST', requestUrl, data, additionalHeaders || {});
        });
    }
    patch(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PATCH', requestUrl, data, additionalHeaders || {});
        });
    }
    put(requestUrl, data, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('PUT', requestUrl, data, additionalHeaders || {});
        });
    }
    head(requestUrl, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request('HEAD', requestUrl, null, additionalHeaders || {});
        });
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.request(verb, requestUrl, stream, additionalHeaders);
        });
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    getJson(requestUrl, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            const res = yield this.get(requestUrl, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    postJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.post(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    putJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.put(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    patchJson(requestUrl, obj, additionalHeaders = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = JSON.stringify(obj, null, 2);
            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
            const res = yield this.patch(requestUrl, data, additionalHeaders);
            return this._processResponse(res, this.requestOptions);
        });
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    request(verb, requestUrl, data, headers) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this._disposed) {
                throw new Error('Client has already been disposed.');
            }
            const parsedUrl = new URL(requestUrl);
            let info = this._prepareRequest(verb, parsedUrl, headers);
            // Only perform retries on reads since writes may not be idempotent.
            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)
                ? this._maxRetries + 1
                : 1;
            let numTries = 0;
            let response;
            do {
                response = yield this.requestRaw(info, data);
                // Check if it's an authentication challenge
                if (response &&
                    response.message &&
                    response.message.statusCode === HttpCodes.Unauthorized) {
                    let authenticationHandler;
                    for (const handler of this.handlers) {
                        if (handler.canHandleAuthentication(response)) {
                            authenticationHandler = handler;
                            break;
                        }
                    }
                    if (authenticationHandler) {
                        return authenticationHandler.handleAuthentication(this, info, data);
                    }
                    else {
                        // We have received an unauthorized response but have no handlers to handle it.
                        // Let the response return to the caller.
                        return response;
                    }
                }
                let redirectsRemaining = this._maxRedirects;
                while (response.message.statusCode &&
                    HttpRedirectCodes.includes(response.message.statusCode) &&
                    this._allowRedirects &&
                    redirectsRemaining > 0) {
                    const redirectUrl = response.message.headers['location'];
                    if (!redirectUrl) {
                        // if there's no location to redirect to, we won't
                        break;
                    }
                    const parsedRedirectUrl = new URL(redirectUrl);
                    if (parsedUrl.protocol === 'https:' &&
                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&
                        !this._allowRedirectDowngrade) {
                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                    }
                    // we need to finish reading the response before reassigning response
                    // which will leak the open socket.
                    yield response.readBody();
                    // strip authorization header if redirected to a different hostname
                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                        for (const header in headers) {
                            // header names are case insensitive
                            if (header.toLowerCase() === 'authorization') {
                                delete headers[header];
                            }
                        }
                    }
                    // let's make the request with the new redirectUrl
                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                    response = yield this.requestRaw(info, data);
                    redirectsRemaining--;
                }
                if (!response.message.statusCode ||
                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {
                    // If not a retry code, return immediately instead of retrying
                    return response;
                }
                numTries += 1;
                if (numTries < maxTries) {
                    yield response.readBody();
                    yield this._performExponentialBackoff(numTries);
                }
            } while (numTries < maxTries);
            return response;
        });
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                function callbackForResult(err, res) {
                    if (err) {
                        reject(err);
                    }
                    else if (!res) {
                        // If `err` is not passed, then `res` must be passed.
                        reject(new Error('Unknown error'));
                    }
                    else {
                        resolve(res);
                    }
                }
                this.requestRawWithCallback(info, data, callbackForResult);
            });
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        if (typeof data === 'string') {
            if (!info.options.headers) {
                info.options.headers = {};
            }
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        function handleResult(err, res) {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        }
        const req = info.httpModule.request(info.options, (msg) => {
            const res = new HttpClientResponse(msg);
            handleResult(undefined, res);
        });
        let socket;
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error(`Request timeout: ${info.options.path}`));
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    getAgentDispatcher(serverUrl) {
        const parsedUrl = new URL(serverUrl);
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (!useProxy) {
            return;
        }
        return this._getProxyAgentDispatcher(parsedUrl, proxyUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            for (const handler of this.handlers) {
                handler.prepareRequest(info.options);
            }
        }
        return info;
    }
    _mergeHeaders(headers) {
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        const proxyUrl = pm.getProxyUrl(parsedUrl);
        const useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (!useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
        if (proxyUrl && proxyUrl.hostname) {
            const agentOptions = {
                maxSockets,
                keepAlive: this._keepAlive,
                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {
                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                })), { host: proxyUrl.hostname, port: proxyUrl.port })
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if tunneling agent isn't assigned create a new agent
        if (!agent) {
            const options = { keepAlive: this._keepAlive, maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _getProxyAgentDispatcher(parsedUrl, proxyUrl) {
        let proxyAgent;
        if (this._keepAlive) {
            proxyAgent = this._proxyAgentDispatcher;
        }
        // if agent is already assigned use that agent.
        if (proxyAgent) {
            return proxyAgent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        proxyAgent = new undici_1.ProxyAgent(Object.assign({ uri: proxyUrl.href, pipelining: !this._keepAlive ? 0 : 1 }, ((proxyUrl.username || proxyUrl.password) && {
            token: `${proxyUrl.username}:${proxyUrl.password}`
        })));
        this._proxyAgentDispatcher = proxyAgent;
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            proxyAgent.options = Object.assign(proxyAgent.options.requestTls || {}, {
                rejectUnauthorized: false
            });
        }
        return proxyAgent;
    }
    _performExponentialBackoff(retryNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
            return new Promise(resolve => setTimeout(() => resolve(), ms));
        });
    }
    _processResponse(res, options) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                const statusCode = res.message.statusCode || 0;
                const response = {
                    statusCode,
                    result: null,
                    headers: {}
                };
                // not found leads to null obj returned
                if (statusCode === HttpCodes.NotFound) {
                    resolve(response);
                }
                // get the result from the body
                function dateTimeDeserializer(key, value) {
                    if (typeof value === 'string') {
                        const a = new Date(value);
                        if (!isNaN(a.valueOf())) {
                            return a;
                        }
                    }
                    return value;
                }
                let obj;
                let contents;
                try {
                    contents = yield res.readBody();
                    if (contents && contents.length > 0) {
                        if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                        }
                        else {
                            obj = JSON.parse(contents);
                        }
                        response.result = obj;
                    }
                    response.headers = res.message.headers;
                }
                catch (err) {
                    // Invalid resource (contents not json);  leaving result obj null
                }
                // note that 3xx redirects are handled by the http layer.
                if (statusCode > 299) {
                    let msg;
                    // if exception/error in body, attempt to get better error
                    if (obj && obj.message) {
                        msg = obj.message;
                    }
                    else if (contents && contents.length > 0) {
                        // it may be the case that the exception is in the body message as string
                        msg = contents;
                    }
                    else {
                        msg = `Failed request: (${statusCode})`;
                    }
                    const err = new HttpClientError(msg, statusCode);
                    err.result = response.result;
                    reject(err);
                }
                else {
                    resolve(response);
                }
            }));
        });
    }
}
exports.HttpClient = HttpClient;
const lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "../../node_modules/@actions/http-client/lib/proxy.js":
/*!************************************************************!*\
  !*** ../../node_modules/@actions/http-client/lib/proxy.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
    const usingSsl = reqUrl.protocol === 'https:';
    if (checkBypass(reqUrl)) {
        return undefined;
    }
    const proxyVar = (() => {
        if (usingSsl) {
            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
        }
        else {
            return process.env['http_proxy'] || process.env['HTTP_PROXY'];
        }
    })();
    if (proxyVar) {
        try {
            return new URL(proxyVar);
        }
        catch (_a) {
            if (!proxyVar.startsWith('http://') && !proxyVar.startsWith('https://'))
                return new URL(`http://${proxyVar}`);
        }
    }
    else {
        return undefined;
    }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    const reqHost = reqUrl.hostname;
    if (isLoopbackAddress(reqHost)) {
        return true;
    }
    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    const upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (const upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperNoProxyItem === '*' ||
            upperReqHosts.some(x => x === upperNoProxyItem ||
                x.endsWith(`.${upperNoProxyItem}`) ||
                (upperNoProxyItem.startsWith('.') &&
                    x.endsWith(`${upperNoProxyItem}`)))) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;
function isLoopbackAddress(host) {
    const hostLower = host.toLowerCase();
    return (hostLower === 'localhost' ||
        hostLower.startsWith('127.') ||
        hostLower.startsWith('[::1]') ||
        hostLower.startsWith('[0:0:0:0:0:0:0:1]'));
}
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ "../../node_modules/@octokit/auth-token/dist-src/auth.js":
/*!***************************************************************!*\
  !*** ../../node_modules/@octokit/auth-token/dist-src/auth.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   auth: () => (/* binding */ auth)
/* harmony export */ });
const REGEX_IS_INSTALLATION_LEGACY = /^v1\./;
const REGEX_IS_INSTALLATION = /^ghs_/;
const REGEX_IS_USER_TO_SERVER = /^ghu_/;
async function auth(token) {
  const isApp = token.split(/\./).length === 3;
  const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) || REGEX_IS_INSTALLATION.test(token);
  const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);
  const tokenType = isApp ? "app" : isInstallation ? "installation" : isUserToServer ? "user-to-server" : "oauth";
  return {
    type: "token",
    token,
    tokenType
  };
}



/***/ }),

/***/ "../../node_modules/@octokit/auth-token/dist-src/hook.js":
/*!***************************************************************!*\
  !*** ../../node_modules/@octokit/auth-token/dist-src/hook.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hook: () => (/* binding */ hook)
/* harmony export */ });
/* harmony import */ var _with_authorization_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./with-authorization-prefix */ "../../node_modules/@octokit/auth-token/dist-src/with-authorization-prefix.js");

async function hook(token, request, route, parameters) {
  const endpoint = request.endpoint.merge(
    route,
    parameters
  );
  endpoint.headers.authorization = (0,_with_authorization_prefix__WEBPACK_IMPORTED_MODULE_0__.withAuthorizationPrefix)(token);
  return request(endpoint);
}



/***/ }),

/***/ "../../node_modules/@octokit/auth-token/dist-src/index.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@octokit/auth-token/dist-src/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createTokenAuth: () => (/* binding */ createTokenAuth)
/* harmony export */ });
/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ "../../node_modules/@octokit/auth-token/dist-src/auth.js");
/* harmony import */ var _hook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hook */ "../../node_modules/@octokit/auth-token/dist-src/hook.js");


const createTokenAuth = function createTokenAuth2(token) {
  if (!token) {
    throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
  }
  if (typeof token !== "string") {
    throw new Error(
      "[@octokit/auth-token] Token passed to createTokenAuth is not a string"
    );
  }
  token = token.replace(/^(token|bearer) +/i, "");
  return Object.assign(_auth__WEBPACK_IMPORTED_MODULE_0__.auth.bind(null, token), {
    hook: _hook__WEBPACK_IMPORTED_MODULE_1__.hook.bind(null, token)
  });
};



/***/ }),

/***/ "../../node_modules/@octokit/auth-token/dist-src/with-authorization-prefix.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@octokit/auth-token/dist-src/with-authorization-prefix.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withAuthorizationPrefix: () => (/* binding */ withAuthorizationPrefix)
/* harmony export */ });
function withAuthorizationPrefix(token) {
  if (token.split(/\./).length === 3) {
    return `bearer ${token}`;
  }
  return `token ${token}`;
}



/***/ }),

/***/ "../../node_modules/@octokit/core/dist-web/index.js":
/*!**********************************************************!*\
  !*** ../../node_modules/@octokit/core/dist-web/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Octokit: () => (/* binding */ Octokit)
/* harmony export */ });
/* harmony import */ var universal_user_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-user-agent */ "../../node_modules/universal-user-agent/dist-web/index.js");
/* harmony import */ var before_after_hook__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! before-after-hook */ "../../node_modules/before-after-hook/index.js");
/* harmony import */ var before_after_hook__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(before_after_hook__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _octokit_request__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @octokit/request */ "../../node_modules/@octokit/request/dist-src/index.js");
/* harmony import */ var _octokit_graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @octokit/graphql */ "../../node_modules/@octokit/graphql/dist-web/index.js");
/* harmony import */ var _octokit_auth_token__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @octokit/auth-token */ "../../node_modules/@octokit/auth-token/dist-src/index.js");
// pkg/dist-src/index.js






// pkg/dist-src/version.js
var VERSION = "5.2.0";

// pkg/dist-src/index.js
var noop = () => {
};
var consoleWarn = console.warn.bind(console);
var consoleError = console.error.bind(console);
var userAgentTrail = `octokit-core.js/${VERSION} ${(0,universal_user_agent__WEBPACK_IMPORTED_MODULE_1__.getUserAgent)()}`;
var Octokit = class {
  static {
    this.VERSION = VERSION;
  }
  static defaults(defaults) {
    const OctokitWithDefaults = class extends this {
      constructor(...args) {
        const options = args[0] || {};
        if (typeof defaults === "function") {
          super(defaults(options));
          return;
        }
        super(
          Object.assign(
            {},
            defaults,
            options,
            options.userAgent && defaults.userAgent ? {
              userAgent: `${options.userAgent} ${defaults.userAgent}`
            } : null
          )
        );
      }
    };
    return OctokitWithDefaults;
  }
  static {
    this.plugins = [];
  }
  /**
   * Attach a plugin (or many) to your Octokit instance.
   *
   * @example
   * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)
   */
  static plugin(...newPlugins) {
    const currentPlugins = this.plugins;
    const NewOctokit = class extends this {
      static {
        this.plugins = currentPlugins.concat(
          newPlugins.filter((plugin) => !currentPlugins.includes(plugin))
        );
      }
    };
    return NewOctokit;
  }
  constructor(options = {}) {
    const hook = new before_after_hook__WEBPACK_IMPORTED_MODULE_0__.Collection();
    const requestDefaults = {
      baseUrl: _octokit_request__WEBPACK_IMPORTED_MODULE_2__.request.endpoint.DEFAULTS.baseUrl,
      headers: {},
      request: Object.assign({}, options.request, {
        // @ts-ignore internal usage only, no need to type
        hook: hook.bind(null, "request")
      }),
      mediaType: {
        previews: [],
        format: ""
      }
    };
    requestDefaults.headers["user-agent"] = options.userAgent ? `${options.userAgent} ${userAgentTrail}` : userAgentTrail;
    if (options.baseUrl) {
      requestDefaults.baseUrl = options.baseUrl;
    }
    if (options.previews) {
      requestDefaults.mediaType.previews = options.previews;
    }
    if (options.timeZone) {
      requestDefaults.headers["time-zone"] = options.timeZone;
    }
    this.request = _octokit_request__WEBPACK_IMPORTED_MODULE_2__.request.defaults(requestDefaults);
    this.graphql = (0,_octokit_graphql__WEBPACK_IMPORTED_MODULE_3__.withCustomRequest)(this.request).defaults(requestDefaults);
    this.log = Object.assign(
      {
        debug: noop,
        info: noop,
        warn: consoleWarn,
        error: consoleError
      },
      options.log
    );
    this.hook = hook;
    if (!options.authStrategy) {
      if (!options.auth) {
        this.auth = async () => ({
          type: "unauthenticated"
        });
      } else {
        const auth = (0,_octokit_auth_token__WEBPACK_IMPORTED_MODULE_4__.createTokenAuth)(options.auth);
        hook.wrap("request", auth.hook);
        this.auth = auth;
      }
    } else {
      const { authStrategy, ...otherOptions } = options;
      const auth = authStrategy(
        Object.assign(
          {
            request: this.request,
            log: this.log,
            // we pass the current octokit instance as well as its constructor options
            // to allow for authentication strategies that return a new octokit instance
            // that shares the same internal state as the current one. The original
            // requirement for this was the "event-octokit" authentication strategy
            // of https://github.com/probot/octokit-auth-probot.
            octokit: this,
            octokitOptions: otherOptions
          },
          options.auth
        )
      );
      hook.wrap("request", auth.hook);
      this.auth = auth;
    }
    const classConstructor = this.constructor;
    for (let i = 0; i < classConstructor.plugins.length; ++i) {
      Object.assign(this, classConstructor.plugins[i](this, options));
    }
  }
};



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/defaults.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/defaults.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULTS: () => (/* binding */ DEFAULTS)
/* harmony export */ });
/* harmony import */ var universal_user_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-user-agent */ "../../node_modules/universal-user-agent/dist-web/index.js");
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ "../../node_modules/@octokit/endpoint/dist-src/version.js");


const userAgent = `octokit-endpoint.js/${_version__WEBPACK_IMPORTED_MODULE_0__.VERSION} ${(0,universal_user_agent__WEBPACK_IMPORTED_MODULE_1__.getUserAgent)()}`;
const DEFAULTS = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: {
    accept: "application/vnd.github.v3+json",
    "user-agent": userAgent
  },
  mediaType: {
    format: ""
  }
};



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/endpoint-with-defaults.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/endpoint-with-defaults.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   endpointWithDefaults: () => (/* binding */ endpointWithDefaults)
/* harmony export */ });
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./merge */ "../../node_modules/@octokit/endpoint/dist-src/merge.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse */ "../../node_modules/@octokit/endpoint/dist-src/parse.js");



function endpointWithDefaults(defaults, route, options) {
  return (0,_parse__WEBPACK_IMPORTED_MODULE_0__.parse)((0,_merge__WEBPACK_IMPORTED_MODULE_1__.merge)(defaults, route, options));
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/index.js":
/*!**************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   endpoint: () => (/* binding */ endpoint)
/* harmony export */ });
/* harmony import */ var _with_defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./with-defaults */ "../../node_modules/@octokit/endpoint/dist-src/with-defaults.js");
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults */ "../../node_modules/@octokit/endpoint/dist-src/defaults.js");


const endpoint = (0,_with_defaults__WEBPACK_IMPORTED_MODULE_0__.withDefaults)(null, _defaults__WEBPACK_IMPORTED_MODULE_1__.DEFAULTS);



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/merge.js":
/*!**************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/merge.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   merge: () => (/* binding */ merge)
/* harmony export */ });
/* harmony import */ var _util_lowercase_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/lowercase-keys */ "../../node_modules/@octokit/endpoint/dist-src/util/lowercase-keys.js");
/* harmony import */ var _util_merge_deep__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/merge-deep */ "../../node_modules/@octokit/endpoint/dist-src/util/merge-deep.js");
/* harmony import */ var _util_remove_undefined_properties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/remove-undefined-properties */ "../../node_modules/@octokit/endpoint/dist-src/util/remove-undefined-properties.js");



function merge(defaults, route, options) {
  if (typeof route === "string") {
    let [method, url] = route.split(" ");
    options = Object.assign(url ? { method, url } : { url: method }, options);
  } else {
    options = Object.assign({}, route);
  }
  options.headers = (0,_util_lowercase_keys__WEBPACK_IMPORTED_MODULE_0__.lowercaseKeys)(options.headers);
  (0,_util_remove_undefined_properties__WEBPACK_IMPORTED_MODULE_1__.removeUndefinedProperties)(options);
  (0,_util_remove_undefined_properties__WEBPACK_IMPORTED_MODULE_1__.removeUndefinedProperties)(options.headers);
  const mergedOptions = (0,_util_merge_deep__WEBPACK_IMPORTED_MODULE_2__.mergeDeep)(defaults || {}, options);
  if (options.url === "/graphql") {
    if (defaults && defaults.mediaType.previews?.length) {
      mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(
        (preview) => !mergedOptions.mediaType.previews.includes(preview)
      ).concat(mergedOptions.mediaType.previews);
    }
    mergedOptions.mediaType.previews = (mergedOptions.mediaType.previews || []).map((preview) => preview.replace(/-preview/, ""));
  }
  return mergedOptions;
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/parse.js":
/*!**************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/parse.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parse: () => (/* binding */ parse)
/* harmony export */ });
/* harmony import */ var _util_add_query_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/add-query-parameters */ "../../node_modules/@octokit/endpoint/dist-src/util/add-query-parameters.js");
/* harmony import */ var _util_extract_url_variable_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/extract-url-variable-names */ "../../node_modules/@octokit/endpoint/dist-src/util/extract-url-variable-names.js");
/* harmony import */ var _util_omit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/omit */ "../../node_modules/@octokit/endpoint/dist-src/util/omit.js");
/* harmony import */ var _util_url_template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/url-template */ "../../node_modules/@octokit/endpoint/dist-src/util/url-template.js");




function parse(options) {
  let method = options.method.toUpperCase();
  let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let headers = Object.assign({}, options.headers);
  let body;
  let parameters = (0,_util_omit__WEBPACK_IMPORTED_MODULE_0__.omit)(options, [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "mediaType"
  ]);
  const urlVariableNames = (0,_util_extract_url_variable_names__WEBPACK_IMPORTED_MODULE_1__.extractUrlVariableNames)(url);
  url = (0,_util_url_template__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(url).expand(parameters);
  if (!/^http/.test(url)) {
    url = options.baseUrl + url;
  }
  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat("baseUrl");
  const remainingParameters = (0,_util_omit__WEBPACK_IMPORTED_MODULE_0__.omit)(parameters, omittedParameters);
  const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
  if (!isBinaryRequest) {
    if (options.mediaType.format) {
      headers.accept = headers.accept.split(/,/).map(
        (format) => format.replace(
          /application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,
          `application/vnd$1$2.${options.mediaType.format}`
        )
      ).join(",");
    }
    if (url.endsWith("/graphql")) {
      if (options.mediaType.previews?.length) {
        const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {
          const format = options.mediaType.format ? `.${options.mediaType.format}` : "+json";
          return `application/vnd.github.${preview}-preview${format}`;
        }).join(",");
      }
    }
  }
  if (["GET", "HEAD"].includes(method)) {
    url = (0,_util_add_query_parameters__WEBPACK_IMPORTED_MODULE_3__.addQueryParameters)(url, remainingParameters);
  } else {
    if ("data" in remainingParameters) {
      body = remainingParameters.data;
    } else {
      if (Object.keys(remainingParameters).length) {
        body = remainingParameters;
      }
    }
  }
  if (!headers["content-type"] && typeof body !== "undefined") {
    headers["content-type"] = "application/json; charset=utf-8";
  }
  if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
    body = "";
  }
  return Object.assign(
    { method, url, headers },
    typeof body !== "undefined" ? { body } : null,
    options.request ? { request: options.request } : null
  );
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/add-query-parameters.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/add-query-parameters.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addQueryParameters: () => (/* binding */ addQueryParameters)
/* harmony export */ });
function addQueryParameters(url, parameters) {
  const separator = /\?/.test(url) ? "&" : "?";
  const names = Object.keys(parameters);
  if (names.length === 0) {
    return url;
  }
  return url + separator + names.map((name) => {
    if (name === "q") {
      return "q=" + parameters.q.split("+").map(encodeURIComponent).join("+");
    }
    return `${name}=${encodeURIComponent(parameters[name])}`;
  }).join("&");
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/extract-url-variable-names.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/extract-url-variable-names.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   extractUrlVariableNames: () => (/* binding */ extractUrlVariableNames)
/* harmony export */ });
const urlVariableRegex = /\{[^}]+\}/g;
function removeNonChars(variableName) {
  return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
}
function extractUrlVariableNames(url) {
  const matches = url.match(urlVariableRegex);
  if (!matches) {
    return [];
  }
  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/is-plain-object.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/is-plain-object.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject)
/* harmony export */ });
function isPlainObject(value) {
  if (typeof value !== "object" || value === null)
    return false;
  if (Object.prototype.toString.call(value) !== "[object Object]")
    return false;
  const proto = Object.getPrototypeOf(value);
  if (proto === null)
    return true;
  const Ctor = Object.prototype.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/lowercase-keys.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/lowercase-keys.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   lowercaseKeys: () => (/* binding */ lowercaseKeys)
/* harmony export */ });
function lowercaseKeys(object) {
  if (!object) {
    return {};
  }
  return Object.keys(object).reduce((newObj, key) => {
    newObj[key.toLowerCase()] = object[key];
    return newObj;
  }, {});
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/merge-deep.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/merge-deep.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)
/* harmony export */ });
/* harmony import */ var _is_plain_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-plain-object */ "../../node_modules/@octokit/endpoint/dist-src/util/is-plain-object.js");

function mergeDeep(defaults, options) {
  const result = Object.assign({}, defaults);
  Object.keys(options).forEach((key) => {
    if ((0,_is_plain_object__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(options[key])) {
      if (!(key in defaults))
        Object.assign(result, { [key]: options[key] });
      else
        result[key] = mergeDeep(defaults[key], options[key]);
    } else {
      Object.assign(result, { [key]: options[key] });
    }
  });
  return result;
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/omit.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/omit.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   omit: () => (/* binding */ omit)
/* harmony export */ });
function omit(object, keysToOmit) {
  const result = { __proto__: null };
  for (const key of Object.keys(object)) {
    if (keysToOmit.indexOf(key) === -1) {
      result[key] = object[key];
    }
  }
  return result;
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/remove-undefined-properties.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/remove-undefined-properties.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   removeUndefinedProperties: () => (/* binding */ removeUndefinedProperties)
/* harmony export */ });
function removeUndefinedProperties(obj) {
  for (const key in obj) {
    if (obj[key] === void 0) {
      delete obj[key];
    }
  }
  return obj;
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/util/url-template.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/util/url-template.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseUrl: () => (/* binding */ parseUrl)
/* harmony export */ });
function encodeReserved(str) {
  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
    if (!/%[0-9A-Fa-f]/.test(part)) {
      part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
    }
    return part;
  }).join("");
}
function encodeUnreserved(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
    return "%" + c.charCodeAt(0).toString(16).toUpperCase();
  });
}
function encodeValue(operator, value, key) {
  value = operator === "+" || operator === "#" ? encodeReserved(value) : encodeUnreserved(value);
  if (key) {
    return encodeUnreserved(key) + "=" + value;
  } else {
    return value;
  }
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function isKeyOperator(operator) {
  return operator === ";" || operator === "&" || operator === "?";
}
function getValues(context, operator, key, modifier) {
  var value = context[key], result = [];
  if (isDefined(value) && value !== "") {
    if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
      value = value.toString();
      if (modifier && modifier !== "*") {
        value = value.substring(0, parseInt(modifier, 10));
      }
      result.push(
        encodeValue(operator, value, isKeyOperator(operator) ? key : "")
      );
    } else {
      if (modifier === "*") {
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function(value2) {
            result.push(
              encodeValue(operator, value2, isKeyOperator(operator) ? key : "")
            );
          });
        } else {
          Object.keys(value).forEach(function(k) {
            if (isDefined(value[k])) {
              result.push(encodeValue(operator, value[k], k));
            }
          });
        }
      } else {
        const tmp = [];
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function(value2) {
            tmp.push(encodeValue(operator, value2));
          });
        } else {
          Object.keys(value).forEach(function(k) {
            if (isDefined(value[k])) {
              tmp.push(encodeUnreserved(k));
              tmp.push(encodeValue(operator, value[k].toString()));
            }
          });
        }
        if (isKeyOperator(operator)) {
          result.push(encodeUnreserved(key) + "=" + tmp.join(","));
        } else if (tmp.length !== 0) {
          result.push(tmp.join(","));
        }
      }
    }
  } else {
    if (operator === ";") {
      if (isDefined(value)) {
        result.push(encodeUnreserved(key));
      }
    } else if (value === "" && (operator === "&" || operator === "?")) {
      result.push(encodeUnreserved(key) + "=");
    } else if (value === "") {
      result.push("");
    }
  }
  return result;
}
function parseUrl(template) {
  return {
    expand: expand.bind(null, template)
  };
}
function expand(template, context) {
  var operators = ["+", "#", ".", "/", ";", "?", "&"];
  template = template.replace(
    /\{([^\{\}]+)\}|([^\{\}]+)/g,
    function(_, expression, literal) {
      if (expression) {
        let operator = "";
        const values = [];
        if (operators.indexOf(expression.charAt(0)) !== -1) {
          operator = expression.charAt(0);
          expression = expression.substr(1);
        }
        expression.split(/,/g).forEach(function(variable) {
          var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
        });
        if (operator && operator !== "+") {
          var separator = ",";
          if (operator === "?") {
            separator = "&";
          } else if (operator !== "#") {
            separator = operator;
          }
          return (values.length !== 0 ? operator : "") + values.join(separator);
        } else {
          return values.join(",");
        }
      } else {
        return encodeReserved(literal);
      }
    }
  );
  if (template === "/") {
    return template;
  } else {
    return template.replace(/\/$/, "");
  }
}



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/version.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VERSION: () => (/* binding */ VERSION)
/* harmony export */ });
const VERSION = "9.0.5";



/***/ }),

/***/ "../../node_modules/@octokit/endpoint/dist-src/with-defaults.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@octokit/endpoint/dist-src/with-defaults.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   withDefaults: () => (/* binding */ withDefaults)
/* harmony export */ });
/* harmony import */ var _endpoint_with_defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./endpoint-with-defaults */ "../../node_modules/@octokit/endpoint/dist-src/endpoint-with-defaults.js");
/* harmony import */ var _merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./merge */ "../../node_modules/@octokit/endpoint/dist-src/merge.js");
/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parse */ "../../node_modules/@octokit/endpoint/dist-src/parse.js");



function withDefaults(oldDefaults, newDefaults) {
  const DEFAULTS = (0,_merge__WEBPACK_IMPORTED_MODULE_0__.merge)(oldDefaults, newDefaults);
  const endpoint = _endpoint_with_defaults__WEBPACK_IMPORTED_MODULE_1__.endpointWithDefaults.bind(null, DEFAULTS);
  return Object.assign(endpoint, {
    DEFAULTS,
    defaults: withDefaults.bind(null, DEFAULTS),
    merge: _merge__WEBPACK_IMPORTED_MODULE_0__.merge.bind(null, DEFAULTS),
    parse: _parse__WEBPACK_IMPORTED_MODULE_2__.parse
  });
}



/***/ }),

/***/ "../../node_modules/@octokit/graphql/dist-web/index.js":
/*!*************************************************************!*\
  !*** ../../node_modules/@octokit/graphql/dist-web/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GraphqlResponseError: () => (/* binding */ GraphqlResponseError),
/* harmony export */   graphql: () => (/* binding */ graphql2),
/* harmony export */   withCustomRequest: () => (/* binding */ withCustomRequest)
/* harmony export */ });
/* harmony import */ var _octokit_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @octokit/request */ "../../node_modules/@octokit/request/dist-src/index.js");
/* harmony import */ var universal_user_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! universal-user-agent */ "../../node_modules/universal-user-agent/dist-web/index.js");
// pkg/dist-src/index.js



// pkg/dist-src/version.js
var VERSION = "7.1.0";

// pkg/dist-src/with-defaults.js


// pkg/dist-src/graphql.js


// pkg/dist-src/error.js
function _buildMessageForResponseErrors(data) {
  return `Request failed due to following response errors:
` + data.errors.map((e) => ` - ${e.message}`).join("\n");
}
var GraphqlResponseError = class extends Error {
  constructor(request2, headers, response) {
    super(_buildMessageForResponseErrors(response));
    this.request = request2;
    this.headers = headers;
    this.response = response;
    this.name = "GraphqlResponseError";
    this.errors = response.errors;
    this.data = response.data;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
};

// pkg/dist-src/graphql.js
var NON_VARIABLE_OPTIONS = [
  "method",
  "baseUrl",
  "url",
  "headers",
  "request",
  "query",
  "mediaType"
];
var FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
var GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
function graphql(request2, query, options) {
  if (options) {
    if (typeof query === "string" && "query" in options) {
      return Promise.reject(
        new Error(`[@octokit/graphql] "query" cannot be used as variable name`)
      );
    }
    for (const key in options) {
      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))
        continue;
      return Promise.reject(
        new Error(
          `[@octokit/graphql] "${key}" cannot be used as variable name`
        )
      );
    }
  }
  const parsedOptions = typeof query === "string" ? Object.assign({ query }, options) : query;
  const requestOptions = Object.keys(
    parsedOptions
  ).reduce((result, key) => {
    if (NON_VARIABLE_OPTIONS.includes(key)) {
      result[key] = parsedOptions[key];
      return result;
    }
    if (!result.variables) {
      result.variables = {};
    }
    result.variables[key] = parsedOptions[key];
    return result;
  }, {});
  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;
  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
  }
  return request2(requestOptions).then((response) => {
    if (response.data.errors) {
      const headers = {};
      for (const key of Object.keys(response.headers)) {
        headers[key] = response.headers[key];
      }
      throw new GraphqlResponseError(
        requestOptions,
        headers,
        response.data
      );
    }
    return response.data.data;
  });
}

// pkg/dist-src/with-defaults.js
function withDefaults(request2, newDefaults) {
  const newRequest = request2.defaults(newDefaults);
  const newApi = (query, options) => {
    return graphql(newRequest, query, options);
  };
  return Object.assign(newApi, {
    defaults: withDefaults.bind(null, newRequest),
    endpoint: newRequest.endpoint
  });
}

// pkg/dist-src/index.js
var graphql2 = withDefaults(_octokit_request__WEBPACK_IMPORTED_MODULE_0__.request, {
  headers: {
    "user-agent": `octokit-graphql.js/${VERSION} ${(0,universal_user_agent__WEBPACK_IMPORTED_MODULE_1__.getUserAgent)()}`
  },
  method: "POST",
  url: "/graphql"
});
function withCustomRequest(customRequest) {
  return withDefaults(customRequest, {
    method: "POST",
    url: "/graphql"
  });
}



/***/ }),

/***/ "../../node_modules/@octokit/plugin-paginate-rest/dist-web/index.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@octokit/plugin-paginate-rest/dist-web/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   composePaginateRest: () => (/* binding */ composePaginateRest),
/* harmony export */   isPaginatingEndpoint: () => (/* binding */ isPaginatingEndpoint),
/* harmony export */   paginateRest: () => (/* binding */ paginateRest),
/* harmony export */   paginatingEndpoints: () => (/* binding */ paginatingEndpoints)
/* harmony export */ });
// pkg/dist-src/version.js
var VERSION = "9.2.1";

// pkg/dist-src/normalize-paginated-list-response.js
function normalizePaginatedListResponse(response) {
  if (!response.data) {
    return {
      ...response,
      data: []
    };
  }
  const responseNeedsNormalization = "total_count" in response.data && !("url" in response.data);
  if (!responseNeedsNormalization)
    return response;
  const incompleteResults = response.data.incomplete_results;
  const repositorySelection = response.data.repository_selection;
  const totalCount = response.data.total_count;
  delete response.data.incomplete_results;
  delete response.data.repository_selection;
  delete response.data.total_count;
  const namespaceKey = Object.keys(response.data)[0];
  const data = response.data[namespaceKey];
  response.data = data;
  if (typeof incompleteResults !== "undefined") {
    response.data.incomplete_results = incompleteResults;
  }
  if (typeof repositorySelection !== "undefined") {
    response.data.repository_selection = repositorySelection;
  }
  response.data.total_count = totalCount;
  return response;
}

// pkg/dist-src/iterator.js
function iterator(octokit, route, parameters) {
  const options = typeof route === "function" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);
  const requestMethod = typeof route === "function" ? route : octokit.request;
  const method = options.method;
  const headers = options.headers;
  let url = options.url;
  return {
    [Symbol.asyncIterator]: () => ({
      async next() {
        if (!url)
          return { done: true };
        try {
          const response = await requestMethod({ method, url, headers });
          const normalizedResponse = normalizePaginatedListResponse(response);
          url = ((normalizedResponse.headers.link || "").match(
            /<([^>]+)>;\s*rel="next"/
          ) || [])[1];
          return { value: normalizedResponse };
        } catch (error) {
          if (error.status !== 409)
            throw error;
          url = "";
          return {
            value: {
              status: 200,
              headers: {},
              data: []
            }
          };
        }
      }
    })
  };
}

// pkg/dist-src/paginate.js
function paginate(octokit, route, parameters, mapFn) {
  if (typeof parameters === "function") {
    mapFn = parameters;
    parameters = void 0;
  }
  return gather(
    octokit,
    [],
    iterator(octokit, route, parameters)[Symbol.asyncIterator](),
    mapFn
  );
}
function gather(octokit, results, iterator2, mapFn) {
  return iterator2.next().then((result) => {
    if (result.done) {
      return results;
    }
    let earlyExit = false;
    function done() {
      earlyExit = true;
    }
    results = results.concat(
      mapFn ? mapFn(result.value, done) : result.value.data
    );
    if (earlyExit) {
      return results;
    }
    return gather(octokit, results, iterator2, mapFn);
  });
}

// pkg/dist-src/compose-paginate.js
var composePaginateRest = Object.assign(paginate, {
  iterator
});

// pkg/dist-src/generated/paginating-endpoints.js
var paginatingEndpoints = [
  "GET /advisories",
  "GET /app/hook/deliveries",
  "GET /app/installation-requests",
  "GET /app/installations",
  "GET /assignments/{assignment_id}/accepted_assignments",
  "GET /classrooms",
  "GET /classrooms/{classroom_id}/assignments",
  "GET /enterprises/{enterprise}/dependabot/alerts",
  "GET /enterprises/{enterprise}/secret-scanning/alerts",
  "GET /events",
  "GET /gists",
  "GET /gists/public",
  "GET /gists/starred",
  "GET /gists/{gist_id}/comments",
  "GET /gists/{gist_id}/commits",
  "GET /gists/{gist_id}/forks",
  "GET /installation/repositories",
  "GET /issues",
  "GET /licenses",
  "GET /marketplace_listing/plans",
  "GET /marketplace_listing/plans/{plan_id}/accounts",
  "GET /marketplace_listing/stubbed/plans",
  "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
  "GET /networks/{owner}/{repo}/events",
  "GET /notifications",
  "GET /organizations",
  "GET /orgs/{org}/actions/cache/usage-by-repository",
  "GET /orgs/{org}/actions/permissions/repositories",
  "GET /orgs/{org}/actions/runners",
  "GET /orgs/{org}/actions/secrets",
  "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/actions/variables",
  "GET /orgs/{org}/actions/variables/{name}/repositories",
  "GET /orgs/{org}/blocks",
  "GET /orgs/{org}/code-scanning/alerts",
  "GET /orgs/{org}/codespaces",
  "GET /orgs/{org}/codespaces/secrets",
  "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/copilot/billing/seats",
  "GET /orgs/{org}/dependabot/alerts",
  "GET /orgs/{org}/dependabot/secrets",
  "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/events",
  "GET /orgs/{org}/failed_invitations",
  "GET /orgs/{org}/hooks",
  "GET /orgs/{org}/hooks/{hook_id}/deliveries",
  "GET /orgs/{org}/installations",
  "GET /orgs/{org}/invitations",
  "GET /orgs/{org}/invitations/{invitation_id}/teams",
  "GET /orgs/{org}/issues",
  "GET /orgs/{org}/members",
  "GET /orgs/{org}/members/{username}/codespaces",
  "GET /orgs/{org}/migrations",
  "GET /orgs/{org}/migrations/{migration_id}/repositories",
  "GET /orgs/{org}/organization-roles/{role_id}/teams",
  "GET /orgs/{org}/organization-roles/{role_id}/users",
  "GET /orgs/{org}/outside_collaborators",
  "GET /orgs/{org}/packages",
  "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
  "GET /orgs/{org}/personal-access-token-requests",
  "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories",
  "GET /orgs/{org}/personal-access-tokens",
  "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories",
  "GET /orgs/{org}/projects",
  "GET /orgs/{org}/properties/values",
  "GET /orgs/{org}/public_members",
  "GET /orgs/{org}/repos",
  "GET /orgs/{org}/rulesets",
  "GET /orgs/{org}/rulesets/rule-suites",
  "GET /orgs/{org}/secret-scanning/alerts",
  "GET /orgs/{org}/security-advisories",
  "GET /orgs/{org}/teams",
  "GET /orgs/{org}/teams/{team_slug}/discussions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/invitations",
  "GET /orgs/{org}/teams/{team_slug}/members",
  "GET /orgs/{org}/teams/{team_slug}/projects",
  "GET /orgs/{org}/teams/{team_slug}/repos",
  "GET /orgs/{org}/teams/{team_slug}/teams",
  "GET /projects/columns/{column_id}/cards",
  "GET /projects/{project_id}/collaborators",
  "GET /projects/{project_id}/columns",
  "GET /repos/{owner}/{repo}/actions/artifacts",
  "GET /repos/{owner}/{repo}/actions/caches",
  "GET /repos/{owner}/{repo}/actions/organization-secrets",
  "GET /repos/{owner}/{repo}/actions/organization-variables",
  "GET /repos/{owner}/{repo}/actions/runners",
  "GET /repos/{owner}/{repo}/actions/runs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
  "GET /repos/{owner}/{repo}/actions/secrets",
  "GET /repos/{owner}/{repo}/actions/variables",
  "GET /repos/{owner}/{repo}/actions/workflows",
  "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
  "GET /repos/{owner}/{repo}/activity",
  "GET /repos/{owner}/{repo}/assignees",
  "GET /repos/{owner}/{repo}/branches",
  "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
  "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
  "GET /repos/{owner}/{repo}/code-scanning/alerts",
  "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
  "GET /repos/{owner}/{repo}/code-scanning/analyses",
  "GET /repos/{owner}/{repo}/codespaces",
  "GET /repos/{owner}/{repo}/codespaces/devcontainers",
  "GET /repos/{owner}/{repo}/codespaces/secrets",
  "GET /repos/{owner}/{repo}/collaborators",
  "GET /repos/{owner}/{repo}/comments",
  "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/commits",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
  "GET /repos/{owner}/{repo}/commits/{ref}/status",
  "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
  "GET /repos/{owner}/{repo}/contributors",
  "GET /repos/{owner}/{repo}/dependabot/alerts",
  "GET /repos/{owner}/{repo}/dependabot/secrets",
  "GET /repos/{owner}/{repo}/deployments",
  "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
  "GET /repos/{owner}/{repo}/environments",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
  "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps",
  "GET /repos/{owner}/{repo}/events",
  "GET /repos/{owner}/{repo}/forks",
  "GET /repos/{owner}/{repo}/hooks",
  "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
  "GET /repos/{owner}/{repo}/invitations",
  "GET /repos/{owner}/{repo}/issues",
  "GET /repos/{owner}/{repo}/issues/comments",
  "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/issues/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
  "GET /repos/{owner}/{repo}/keys",
  "GET /repos/{owner}/{repo}/labels",
  "GET /repos/{owner}/{repo}/milestones",
  "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
  "GET /repos/{owner}/{repo}/notifications",
  "GET /repos/{owner}/{repo}/pages/builds",
  "GET /repos/{owner}/{repo}/projects",
  "GET /repos/{owner}/{repo}/pulls",
  "GET /repos/{owner}/{repo}/pulls/comments",
  "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
  "GET /repos/{owner}/{repo}/releases",
  "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
  "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
  "GET /repos/{owner}/{repo}/rules/branches/{branch}",
  "GET /repos/{owner}/{repo}/rulesets",
  "GET /repos/{owner}/{repo}/rulesets/rule-suites",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
  "GET /repos/{owner}/{repo}/security-advisories",
  "GET /repos/{owner}/{repo}/stargazers",
  "GET /repos/{owner}/{repo}/subscribers",
  "GET /repos/{owner}/{repo}/tags",
  "GET /repos/{owner}/{repo}/teams",
  "GET /repos/{owner}/{repo}/topics",
  "GET /repositories",
  "GET /repositories/{repository_id}/environments/{environment_name}/secrets",
  "GET /repositories/{repository_id}/environments/{environment_name}/variables",
  "GET /search/code",
  "GET /search/commits",
  "GET /search/issues",
  "GET /search/labels",
  "GET /search/repositories",
  "GET /search/topics",
  "GET /search/users",
  "GET /teams/{team_id}/discussions",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
  "GET /teams/{team_id}/invitations",
  "GET /teams/{team_id}/members",
  "GET /teams/{team_id}/projects",
  "GET /teams/{team_id}/repos",
  "GET /teams/{team_id}/teams",
  "GET /user/blocks",
  "GET /user/codespaces",
  "GET /user/codespaces/secrets",
  "GET /user/emails",
  "GET /user/followers",
  "GET /user/following",
  "GET /user/gpg_keys",
  "GET /user/installations",
  "GET /user/installations/{installation_id}/repositories",
  "GET /user/issues",
  "GET /user/keys",
  "GET /user/marketplace_purchases",
  "GET /user/marketplace_purchases/stubbed",
  "GET /user/memberships/orgs",
  "GET /user/migrations",
  "GET /user/migrations/{migration_id}/repositories",
  "GET /user/orgs",
  "GET /user/packages",
  "GET /user/packages/{package_type}/{package_name}/versions",
  "GET /user/public_emails",
  "GET /user/repos",
  "GET /user/repository_invitations",
  "GET /user/social_accounts",
  "GET /user/ssh_signing_keys",
  "GET /user/starred",
  "GET /user/subscriptions",
  "GET /user/teams",
  "GET /users",
  "GET /users/{username}/events",
  "GET /users/{username}/events/orgs/{org}",
  "GET /users/{username}/events/public",
  "GET /users/{username}/followers",
  "GET /users/{username}/following",
  "GET /users/{username}/gists",
  "GET /users/{username}/gpg_keys",
  "GET /users/{username}/keys",
  "GET /users/{username}/orgs",
  "GET /users/{username}/packages",
  "GET /users/{username}/projects",
  "GET /users/{username}/received_events",
  "GET /users/{username}/received_events/public",
  "GET /users/{username}/repos",
  "GET /users/{username}/social_accounts",
  "GET /users/{username}/ssh_signing_keys",
  "GET /users/{username}/starred",
  "GET /users/{username}/subscriptions"
];

// pkg/dist-src/paginating-endpoints.js
function isPaginatingEndpoint(arg) {
  if (typeof arg === "string") {
    return paginatingEndpoints.includes(arg);
  } else {
    return false;
  }
}

// pkg/dist-src/index.js
function paginateRest(octokit) {
  return {
    paginate: Object.assign(paginate.bind(null, octokit), {
      iterator: iterator.bind(null, octokit)
    })
  };
}
paginateRest.VERSION = VERSION;



/***/ }),

/***/ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   endpointsToMethods: () => (/* binding */ endpointsToMethods)
/* harmony export */ });
/* harmony import */ var _generated_endpoints_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/endpoints.js */ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js");

const endpointMethodsMap = /* @__PURE__ */ new Map();
for (const [scope, endpoints] of Object.entries(_generated_endpoints_js__WEBPACK_IMPORTED_MODULE_0__["default"])) {
  for (const [methodName, endpoint] of Object.entries(endpoints)) {
    const [route, defaults, decorations] = endpoint;
    const [method, url] = route.split(/ /);
    const endpointDefaults = Object.assign(
      {
        method,
        url
      },
      defaults
    );
    if (!endpointMethodsMap.has(scope)) {
      endpointMethodsMap.set(scope, /* @__PURE__ */ new Map());
    }
    endpointMethodsMap.get(scope).set(methodName, {
      scope,
      methodName,
      endpointDefaults,
      decorations
    });
  }
}
const handler = {
  has({ scope }, methodName) {
    return endpointMethodsMap.get(scope).has(methodName);
  },
  getOwnPropertyDescriptor(target, methodName) {
    return {
      value: this.get(target, methodName),
      // ensures method is in the cache
      configurable: true,
      writable: true,
      enumerable: true
    };
  },
  defineProperty(target, methodName, descriptor) {
    Object.defineProperty(target.cache, methodName, descriptor);
    return true;
  },
  deleteProperty(target, methodName) {
    delete target.cache[methodName];
    return true;
  },
  ownKeys({ scope }) {
    return [...endpointMethodsMap.get(scope).keys()];
  },
  set(target, methodName, value) {
    return target.cache[methodName] = value;
  },
  get({ octokit, scope, cache }, methodName) {
    if (cache[methodName]) {
      return cache[methodName];
    }
    const method = endpointMethodsMap.get(scope).get(methodName);
    if (!method) {
      return void 0;
    }
    const { endpointDefaults, decorations } = method;
    if (decorations) {
      cache[methodName] = decorate(
        octokit,
        scope,
        methodName,
        endpointDefaults,
        decorations
      );
    } else {
      cache[methodName] = octokit.request.defaults(endpointDefaults);
    }
    return cache[methodName];
  }
};
function endpointsToMethods(octokit) {
  const newMethods = {};
  for (const scope of endpointMethodsMap.keys()) {
    newMethods[scope] = new Proxy({ octokit, scope, cache: {} }, handler);
  }
  return newMethods;
}
function decorate(octokit, scope, methodName, defaults, decorations) {
  const requestWithDefaults = octokit.request.defaults(defaults);
  function withDecorations(...args) {
    let options = requestWithDefaults.endpoint.merge(...args);
    if (decorations.mapToData) {
      options = Object.assign({}, options, {
        data: options[decorations.mapToData],
        [decorations.mapToData]: void 0
      });
      return requestWithDefaults(options);
    }
    if (decorations.renamed) {
      const [newScope, newMethodName] = decorations.renamed;
      octokit.log.warn(
        `octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`
      );
    }
    if (decorations.deprecated) {
      octokit.log.warn(decorations.deprecated);
    }
    if (decorations.renamedParameters) {
      const options2 = requestWithDefaults.endpoint.merge(...args);
      for (const [name, alias] of Object.entries(
        decorations.renamedParameters
      )) {
        if (name in options2) {
          octokit.log.warn(
            `"${name}" parameter is deprecated for "octokit.${scope}.${methodName}()". Use "${alias}" instead`
          );
          if (!(alias in options2)) {
            options2[alias] = options2[name];
          }
          delete options2[name];
        }
      }
      return requestWithDefaults(options2);
    }
    return requestWithDefaults(...args);
  }
  return Object.assign(withDecorations, requestWithDefaults);
}



/***/ }),

/***/ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/generated/endpoints.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ endpoints_default)
/* harmony export */ });
const Endpoints = {
  actions: {
    addCustomLabelsToSelfHostedRunnerForOrg: [
      "POST /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    addCustomLabelsToSelfHostedRunnerForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    addSelectedRepoToOrgVariable: [
      "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"
    ],
    approveWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"
    ],
    cancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"
    ],
    createEnvironmentVariable: [
      "POST /repositories/{repository_id}/environments/{environment_name}/variables"
    ],
    createOrUpdateEnvironmentSecret: [
      "PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    createOrgVariable: ["POST /orgs/{org}/actions/variables"],
    createRegistrationTokenForOrg: [
      "POST /orgs/{org}/actions/runners/registration-token"
    ],
    createRegistrationTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/registration-token"
    ],
    createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
    createRemoveTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/remove-token"
    ],
    createRepoVariable: ["POST /repos/{owner}/{repo}/actions/variables"],
    createWorkflowDispatch: [
      "POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"
    ],
    deleteActionsCacheById: [
      "DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"
    ],
    deleteActionsCacheByKey: [
      "DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"
    ],
    deleteArtifact: [
      "DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"
    ],
    deleteEnvironmentSecret: [
      "DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    deleteEnvironmentVariable: [
      "DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
    deleteOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    deleteRepoVariable: [
      "DELETE /repos/{owner}/{repo}/actions/variables/{name}"
    ],
    deleteSelfHostedRunnerFromOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}"
    ],
    deleteSelfHostedRunnerFromRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
    deleteWorkflowRunLogs: [
      "DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    disableSelectedRepositoryGithubActionsOrganization: [
      "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    disableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"
    ],
    downloadArtifact: [
      "GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"
    ],
    downloadJobLogsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"
    ],
    downloadWorkflowRunAttemptLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"
    ],
    downloadWorkflowRunLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    enableSelectedRepositoryGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    enableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"
    ],
    forceCancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"
    ],
    generateRunnerJitconfigForOrg: [
      "POST /orgs/{org}/actions/runners/generate-jitconfig"
    ],
    generateRunnerJitconfigForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"
    ],
    getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
    getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
    getActionsCacheUsageByRepoForOrg: [
      "GET /orgs/{org}/actions/cache/usage-by-repository"
    ],
    getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
    getAllowedActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/selected-actions"
    ],
    getAllowedActionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
    getCustomOidcSubClaimForRepo: [
      "GET /repos/{owner}/{repo}/actions/oidc/customization/sub"
    ],
    getEnvironmentPublicKey: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"
    ],
    getEnvironmentSecret: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    getEnvironmentVariable: [
      "GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"
    ],
    getGithubActionsDefaultWorkflowPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions/workflow"
    ],
    getGithubActionsDefaultWorkflowPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    getGithubActionsPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions"
    ],
    getGithubActionsPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions"
    ],
    getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
    getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
    getOrgVariable: ["GET /orgs/{org}/actions/variables/{name}"],
    getPendingDeploymentsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    getRepoPermissions: [
      "GET /repos/{owner}/{repo}/actions/permissions",
      {},
      { renamed: ["actions", "getGithubActionsPermissionsRepository"] }
    ],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    getRepoVariable: ["GET /repos/{owner}/{repo}/actions/variables/{name}"],
    getReviewsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"
    ],
    getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
    getSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
    getWorkflowAccessToRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/access"
    ],
    getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
    getWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"
    ],
    getWorkflowRunUsage: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"
    ],
    getWorkflowUsage: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"
    ],
    listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
    listEnvironmentSecrets: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets"
    ],
    listEnvironmentVariables: [
      "GET /repositories/{repository_id}/environments/{environment_name}/variables"
    ],
    listJobsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"
    ],
    listJobsForWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"
    ],
    listLabelsForSelfHostedRunnerForOrg: [
      "GET /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    listLabelsForSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
    listOrgVariables: ["GET /orgs/{org}/actions/variables"],
    listRepoOrganizationSecrets: [
      "GET /repos/{owner}/{repo}/actions/organization-secrets"
    ],
    listRepoOrganizationVariables: [
      "GET /repos/{owner}/{repo}/actions/organization-variables"
    ],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
    listRepoVariables: ["GET /repos/{owner}/{repo}/actions/variables"],
    listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
    listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
    listRunnerApplicationsForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/downloads"
    ],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    listSelectedReposForOrgVariable: [
      "GET /orgs/{org}/actions/variables/{name}/repositories"
    ],
    listSelectedRepositoriesEnabledGithubActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/repositories"
    ],
    listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
    listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
    listWorkflowRunArtifacts: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"
    ],
    listWorkflowRuns: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"
    ],
    listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
    reRunJobForWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"
    ],
    reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
    reRunWorkflowFailedJobs: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    removeCustomLabelFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeCustomLabelFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    removeSelectedRepoFromOrgVariable: [
      "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"
    ],
    reviewCustomGatesForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"
    ],
    reviewPendingDeploymentsForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    setAllowedActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/selected-actions"
    ],
    setAllowedActionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    setCustomLabelsForSelfHostedRunnerForOrg: [
      "PUT /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    setCustomLabelsForSelfHostedRunnerForRepo: [
      "PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    setCustomOidcSubClaimForRepo: [
      "PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"
    ],
    setGithubActionsDefaultWorkflowPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/workflow"
    ],
    setGithubActionsDefaultWorkflowPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    setGithubActionsPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions"
    ],
    setGithubActionsPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    setSelectedReposForOrgVariable: [
      "PUT /orgs/{org}/actions/variables/{name}/repositories"
    ],
    setSelectedRepositoriesEnabledGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories"
    ],
    setWorkflowAccessToRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/access"
    ],
    updateEnvironmentVariable: [
      "PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"
    ],
    updateOrgVariable: ["PATCH /orgs/{org}/actions/variables/{name}"],
    updateRepoVariable: [
      "PATCH /repos/{owner}/{repo}/actions/variables/{name}"
    ]
  },
  activity: {
    checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
    deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
    deleteThreadSubscription: [
      "DELETE /notifications/threads/{thread_id}/subscription"
    ],
    getFeeds: ["GET /feeds"],
    getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
    getThread: ["GET /notifications/threads/{thread_id}"],
    getThreadSubscriptionForAuthenticatedUser: [
      "GET /notifications/threads/{thread_id}/subscription"
    ],
    listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
    listNotificationsForAuthenticatedUser: ["GET /notifications"],
    listOrgEventsForAuthenticatedUser: [
      "GET /users/{username}/events/orgs/{org}"
    ],
    listPublicEvents: ["GET /events"],
    listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
    listPublicEventsForUser: ["GET /users/{username}/events/public"],
    listPublicOrgEvents: ["GET /orgs/{org}/events"],
    listReceivedEventsForUser: ["GET /users/{username}/received_events"],
    listReceivedPublicEventsForUser: [
      "GET /users/{username}/received_events/public"
    ],
    listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
    listRepoNotificationsForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/notifications"
    ],
    listReposStarredByAuthenticatedUser: ["GET /user/starred"],
    listReposStarredByUser: ["GET /users/{username}/starred"],
    listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
    listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
    listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
    listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
    markNotificationsAsRead: ["PUT /notifications"],
    markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
    markThreadAsDone: ["DELETE /notifications/threads/{thread_id}"],
    markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
    setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
    setThreadSubscription: [
      "PUT /notifications/threads/{thread_id}/subscription"
    ],
    starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
    unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"]
  },
  apps: {
    addRepoToInstallation: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] }
    ],
    addRepoToInstallationForAuthenticatedUser: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    checkToken: ["POST /applications/{client_id}/token"],
    createFromManifest: ["POST /app-manifests/{code}/conversions"],
    createInstallationAccessToken: [
      "POST /app/installations/{installation_id}/access_tokens"
    ],
    deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
    deleteInstallation: ["DELETE /app/installations/{installation_id}"],
    deleteToken: ["DELETE /applications/{client_id}/token"],
    getAuthenticated: ["GET /app"],
    getBySlug: ["GET /apps/{app_slug}"],
    getInstallation: ["GET /app/installations/{installation_id}"],
    getOrgInstallation: ["GET /orgs/{org}/installation"],
    getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
    getSubscriptionPlanForAccount: [
      "GET /marketplace_listing/accounts/{account_id}"
    ],
    getSubscriptionPlanForAccountStubbed: [
      "GET /marketplace_listing/stubbed/accounts/{account_id}"
    ],
    getUserInstallation: ["GET /users/{username}/installation"],
    getWebhookConfigForApp: ["GET /app/hook/config"],
    getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
    listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
    listAccountsForPlanStubbed: [
      "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"
    ],
    listInstallationReposForAuthenticatedUser: [
      "GET /user/installations/{installation_id}/repositories"
    ],
    listInstallationRequestsForAuthenticatedApp: [
      "GET /app/installation-requests"
    ],
    listInstallations: ["GET /app/installations"],
    listInstallationsForAuthenticatedUser: ["GET /user/installations"],
    listPlans: ["GET /marketplace_listing/plans"],
    listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
    listReposAccessibleToInstallation: ["GET /installation/repositories"],
    listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
    listSubscriptionsForAuthenticatedUserStubbed: [
      "GET /user/marketplace_purchases/stubbed"
    ],
    listWebhookDeliveries: ["GET /app/hook/deliveries"],
    redeliverWebhookDelivery: [
      "POST /app/hook/deliveries/{delivery_id}/attempts"
    ],
    removeRepoFromInstallation: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] }
    ],
    removeRepoFromInstallationForAuthenticatedUser: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    resetToken: ["PATCH /applications/{client_id}/token"],
    revokeInstallationAccessToken: ["DELETE /installation/token"],
    scopeToken: ["POST /applications/{client_id}/token/scoped"],
    suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
    unsuspendInstallation: [
      "DELETE /app/installations/{installation_id}/suspended"
    ],
    updateWebhookConfigForApp: ["PATCH /app/hook/config"]
  },
  billing: {
    getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
    getGithubActionsBillingUser: [
      "GET /users/{username}/settings/billing/actions"
    ],
    getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
    getGithubPackagesBillingUser: [
      "GET /users/{username}/settings/billing/packages"
    ],
    getSharedStorageBillingOrg: [
      "GET /orgs/{org}/settings/billing/shared-storage"
    ],
    getSharedStorageBillingUser: [
      "GET /users/{username}/settings/billing/shared-storage"
    ]
  },
  checks: {
    create: ["POST /repos/{owner}/{repo}/check-runs"],
    createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
    get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
    getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
    listAnnotations: [
      "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"
    ],
    listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
    listForSuite: [
      "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"
    ],
    listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
    rerequestRun: [
      "POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"
    ],
    rerequestSuite: [
      "POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"
    ],
    setSuitesPreferences: [
      "PATCH /repos/{owner}/{repo}/check-suites/preferences"
    ],
    update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]
  },
  codeScanning: {
    deleteAnalysis: [
      "DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"
    ],
    getAlert: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      {},
      { renamedParameters: { alert_id: "alert_number" } }
    ],
    getAnalysis: [
      "GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"
    ],
    getCodeqlDatabase: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"
    ],
    getDefaultSetup: ["GET /repos/{owner}/{repo}/code-scanning/default-setup"],
    getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
    listAlertInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
    listAlertsInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      {},
      { renamed: ["codeScanning", "listAlertInstances"] }
    ],
    listCodeqlDatabases: [
      "GET /repos/{owner}/{repo}/code-scanning/codeql/databases"
    ],
    listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"
    ],
    updateDefaultSetup: [
      "PATCH /repos/{owner}/{repo}/code-scanning/default-setup"
    ],
    uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"]
  },
  codesOfConduct: {
    getAllCodesOfConduct: ["GET /codes_of_conduct"],
    getConductCode: ["GET /codes_of_conduct/{key}"]
  },
  codespaces: {
    addRepositoryForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    checkPermissionsForDevcontainer: [
      "GET /repos/{owner}/{repo}/codespaces/permissions_check"
    ],
    codespaceMachinesForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/machines"
    ],
    createForAuthenticatedUser: ["POST /user/codespaces"],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}"
    ],
    createWithPrForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"
    ],
    createWithRepoForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/codespaces"
    ],
    deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
    deleteFromOrganization: [
      "DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    deleteSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}"
    ],
    exportForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/exports"
    ],
    getCodespacesForUserInOrg: [
      "GET /orgs/{org}/members/{username}/codespaces"
    ],
    getExportDetailsForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/exports/{export_id}"
    ],
    getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
    getOrgPublicKey: ["GET /orgs/{org}/codespaces/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}"],
    getPublicKeyForAuthenticatedUser: [
      "GET /user/codespaces/secrets/public-key"
    ],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    getSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}"
    ],
    listDevcontainersInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/devcontainers"
    ],
    listForAuthenticatedUser: ["GET /user/codespaces"],
    listInOrganization: [
      "GET /orgs/{org}/codespaces",
      {},
      { renamedParameters: { org_id: "org" } }
    ],
    listInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces"
    ],
    listOrgSecrets: ["GET /orgs/{org}/codespaces/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
    listRepositoriesForSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}/repositories"
    ],
    listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"
    ],
    preFlightWithRepoForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/new"
    ],
    publishForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/publish"
    ],
    removeRepositoryForSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    repoMachinesForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/machines"
    ],
    setRepositoriesForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"
    ],
    startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
    stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
    stopInOrganization: [
      "POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"
    ],
    updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"]
  },
  copilot: {
    addCopilotSeatsForTeams: [
      "POST /orgs/{org}/copilot/billing/selected_teams"
    ],
    addCopilotSeatsForUsers: [
      "POST /orgs/{org}/copilot/billing/selected_users"
    ],
    cancelCopilotSeatAssignmentForTeams: [
      "DELETE /orgs/{org}/copilot/billing/selected_teams"
    ],
    cancelCopilotSeatAssignmentForUsers: [
      "DELETE /orgs/{org}/copilot/billing/selected_users"
    ],
    getCopilotOrganizationDetails: ["GET /orgs/{org}/copilot/billing"],
    getCopilotSeatDetailsForUser: [
      "GET /orgs/{org}/members/{username}/copilot"
    ],
    listCopilotSeats: ["GET /orgs/{org}/copilot/billing/seats"]
  },
  dependabot: {
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    getAlert: ["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
    getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/dependabot/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/dependabot/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/dependabot/alerts"],
    listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"
    ]
  },
  dependencyGraph: {
    createRepositorySnapshot: [
      "POST /repos/{owner}/{repo}/dependency-graph/snapshots"
    ],
    diffRange: [
      "GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"
    ],
    exportSbom: ["GET /repos/{owner}/{repo}/dependency-graph/sbom"]
  },
  emojis: { get: ["GET /emojis"] },
  gists: {
    checkIsStarred: ["GET /gists/{gist_id}/star"],
    create: ["POST /gists"],
    createComment: ["POST /gists/{gist_id}/comments"],
    delete: ["DELETE /gists/{gist_id}"],
    deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
    fork: ["POST /gists/{gist_id}/forks"],
    get: ["GET /gists/{gist_id}"],
    getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
    getRevision: ["GET /gists/{gist_id}/{sha}"],
    list: ["GET /gists"],
    listComments: ["GET /gists/{gist_id}/comments"],
    listCommits: ["GET /gists/{gist_id}/commits"],
    listForUser: ["GET /users/{username}/gists"],
    listForks: ["GET /gists/{gist_id}/forks"],
    listPublic: ["GET /gists/public"],
    listStarred: ["GET /gists/starred"],
    star: ["PUT /gists/{gist_id}/star"],
    unstar: ["DELETE /gists/{gist_id}/star"],
    update: ["PATCH /gists/{gist_id}"],
    updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"]
  },
  git: {
    createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
    createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
    createRef: ["POST /repos/{owner}/{repo}/git/refs"],
    createTag: ["POST /repos/{owner}/{repo}/git/tags"],
    createTree: ["POST /repos/{owner}/{repo}/git/trees"],
    deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
    getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
    getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
    getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
    getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
    getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
    listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
    updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]
  },
  gitignore: {
    getAllTemplates: ["GET /gitignore/templates"],
    getTemplate: ["GET /gitignore/templates/{name}"]
  },
  interactions: {
    getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
    getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
    getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
    getRestrictionsForYourPublicRepos: [
      "GET /user/interaction-limits",
      {},
      { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }
    ],
    removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
    removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
    removeRestrictionsForRepo: [
      "DELETE /repos/{owner}/{repo}/interaction-limits"
    ],
    removeRestrictionsForYourPublicRepos: [
      "DELETE /user/interaction-limits",
      {},
      { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] }
    ],
    setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
    setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
    setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
    setRestrictionsForYourPublicRepos: [
      "PUT /user/interaction-limits",
      {},
      { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }
    ]
  },
  issues: {
    addAssignees: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
    checkUserCanBeAssignedToIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"
    ],
    create: ["POST /repos/{owner}/{repo}/issues"],
    createComment: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/comments"
    ],
    createLabel: ["POST /repos/{owner}/{repo}/labels"],
    createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
    deleteComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"
    ],
    deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
    deleteMilestone: [
      "DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"
    ],
    get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
    getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
    getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
    getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
    list: ["GET /issues"],
    listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
    listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
    listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
    listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
    listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
    listEventsForTimeline: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"
    ],
    listForAuthenticatedUser: ["GET /user/issues"],
    listForOrg: ["GET /orgs/{org}/issues"],
    listForRepo: ["GET /repos/{owner}/{repo}/issues"],
    listLabelsForMilestone: [
      "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"
    ],
    listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
    listLabelsOnIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
    lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    removeAllLabels: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    removeAssignees: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    removeLabel: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"
    ],
    setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
    updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
    updateMilestone: [
      "PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"
    ]
  },
  licenses: {
    get: ["GET /licenses/{license}"],
    getAllCommonlyUsed: ["GET /licenses"],
    getForRepo: ["GET /repos/{owner}/{repo}/license"]
  },
  markdown: {
    render: ["POST /markdown"],
    renderRaw: [
      "POST /markdown/raw",
      { headers: { "content-type": "text/plain; charset=utf-8" } }
    ]
  },
  meta: {
    get: ["GET /meta"],
    getAllVersions: ["GET /versions"],
    getOctocat: ["GET /octocat"],
    getZen: ["GET /zen"],
    root: ["GET /"]
  },
  migrations: {
    cancelImport: [
      "DELETE /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import"
      }
    ],
    deleteArchiveForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/archive"
    ],
    deleteArchiveForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/archive"
    ],
    downloadArchiveForOrg: [
      "GET /orgs/{org}/migrations/{migration_id}/archive"
    ],
    getArchiveForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/archive"
    ],
    getCommitAuthors: [
      "GET /repos/{owner}/{repo}/import/authors",
      {},
      {
        deprecated: "octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors"
      }
    ],
    getImportStatus: [
      "GET /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status"
      }
    ],
    getLargeFiles: [
      "GET /repos/{owner}/{repo}/import/large_files",
      {},
      {
        deprecated: "octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files"
      }
    ],
    getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
    getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
    listForAuthenticatedUser: ["GET /user/migrations"],
    listForOrg: ["GET /orgs/{org}/migrations"],
    listReposForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/repositories"
    ],
    listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
    listReposForUser: [
      "GET /user/migrations/{migration_id}/repositories",
      {},
      { renamed: ["migrations", "listReposForAuthenticatedUser"] }
    ],
    mapCommitAuthor: [
      "PATCH /repos/{owner}/{repo}/import/authors/{author_id}",
      {},
      {
        deprecated: "octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author"
      }
    ],
    setLfsPreference: [
      "PATCH /repos/{owner}/{repo}/import/lfs",
      {},
      {
        deprecated: "octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference"
      }
    ],
    startForAuthenticatedUser: ["POST /user/migrations"],
    startForOrg: ["POST /orgs/{org}/migrations"],
    startImport: [
      "PUT /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import"
      }
    ],
    unlockRepoForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    unlockRepoForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    updateImport: [
      "PATCH /repos/{owner}/{repo}/import",
      {},
      {
        deprecated: "octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import"
      }
    ]
  },
  oidc: {
    getOidcCustomSubTemplateForOrg: [
      "GET /orgs/{org}/actions/oidc/customization/sub"
    ],
    updateOidcCustomSubTemplateForOrg: [
      "PUT /orgs/{org}/actions/oidc/customization/sub"
    ]
  },
  orgs: {
    addSecurityManagerTeam: [
      "PUT /orgs/{org}/security-managers/teams/{team_slug}"
    ],
    assignTeamToOrgRole: [
      "PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"
    ],
    assignUserToOrgRole: [
      "PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"
    ],
    blockUser: ["PUT /orgs/{org}/blocks/{username}"],
    cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
    checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
    checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
    checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
    convertMemberToOutsideCollaborator: [
      "PUT /orgs/{org}/outside_collaborators/{username}"
    ],
    createCustomOrganizationRole: ["POST /orgs/{org}/organization-roles"],
    createInvitation: ["POST /orgs/{org}/invitations"],
    createOrUpdateCustomProperties: ["PATCH /orgs/{org}/properties/schema"],
    createOrUpdateCustomPropertiesValuesForRepos: [
      "PATCH /orgs/{org}/properties/values"
    ],
    createOrUpdateCustomProperty: [
      "PUT /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    createWebhook: ["POST /orgs/{org}/hooks"],
    delete: ["DELETE /orgs/{org}"],
    deleteCustomOrganizationRole: [
      "DELETE /orgs/{org}/organization-roles/{role_id}"
    ],
    deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
    enableOrDisableSecurityProductOnAllOrgRepos: [
      "POST /orgs/{org}/{security_product}/{enablement}"
    ],
    get: ["GET /orgs/{org}"],
    getAllCustomProperties: ["GET /orgs/{org}/properties/schema"],
    getCustomProperty: [
      "GET /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
    getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
    getOrgRole: ["GET /orgs/{org}/organization-roles/{role_id}"],
    getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
    getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
    getWebhookDelivery: [
      "GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    list: ["GET /organizations"],
    listAppInstallations: ["GET /orgs/{org}/installations"],
    listBlockedUsers: ["GET /orgs/{org}/blocks"],
    listCustomPropertiesValuesForRepos: ["GET /orgs/{org}/properties/values"],
    listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
    listForAuthenticatedUser: ["GET /user/orgs"],
    listForUser: ["GET /users/{username}/orgs"],
    listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
    listMembers: ["GET /orgs/{org}/members"],
    listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
    listOrgRoleTeams: ["GET /orgs/{org}/organization-roles/{role_id}/teams"],
    listOrgRoleUsers: ["GET /orgs/{org}/organization-roles/{role_id}/users"],
    listOrgRoles: ["GET /orgs/{org}/organization-roles"],
    listOrganizationFineGrainedPermissions: [
      "GET /orgs/{org}/organization-fine-grained-permissions"
    ],
    listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
    listPatGrantRepositories: [
      "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"
    ],
    listPatGrantRequestRepositories: [
      "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"
    ],
    listPatGrantRequests: ["GET /orgs/{org}/personal-access-token-requests"],
    listPatGrants: ["GET /orgs/{org}/personal-access-tokens"],
    listPendingInvitations: ["GET /orgs/{org}/invitations"],
    listPublicMembers: ["GET /orgs/{org}/public_members"],
    listSecurityManagerTeams: ["GET /orgs/{org}/security-managers"],
    listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
    listWebhooks: ["GET /orgs/{org}/hooks"],
    patchCustomOrganizationRole: [
      "PATCH /orgs/{org}/organization-roles/{role_id}"
    ],
    pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeCustomProperty: [
      "DELETE /orgs/{org}/properties/schema/{custom_property_name}"
    ],
    removeMember: ["DELETE /orgs/{org}/members/{username}"],
    removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
    removeOutsideCollaborator: [
      "DELETE /orgs/{org}/outside_collaborators/{username}"
    ],
    removePublicMembershipForAuthenticatedUser: [
      "DELETE /orgs/{org}/public_members/{username}"
    ],
    removeSecurityManagerTeam: [
      "DELETE /orgs/{org}/security-managers/teams/{team_slug}"
    ],
    reviewPatGrantRequest: [
      "POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"
    ],
    reviewPatGrantRequestsInBulk: [
      "POST /orgs/{org}/personal-access-token-requests"
    ],
    revokeAllOrgRolesTeam: [
      "DELETE /orgs/{org}/organization-roles/teams/{team_slug}"
    ],
    revokeAllOrgRolesUser: [
      "DELETE /orgs/{org}/organization-roles/users/{username}"
    ],
    revokeOrgRoleTeam: [
      "DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"
    ],
    revokeOrgRoleUser: [
      "DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"
    ],
    setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
    setPublicMembershipForAuthenticatedUser: [
      "PUT /orgs/{org}/public_members/{username}"
    ],
    unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
    update: ["PATCH /orgs/{org}"],
    updateMembershipForAuthenticatedUser: [
      "PATCH /user/memberships/orgs/{org}"
    ],
    updatePatAccess: ["POST /orgs/{org}/personal-access-tokens/{pat_id}"],
    updatePatAccesses: ["POST /orgs/{org}/personal-access-tokens"],
    updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
    updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"]
  },
  packages: {
    deletePackageForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}"
    ],
    deletePackageForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    deletePackageForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}"
    ],
    deletePackageVersionForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getAllPackageVersionsForAPackageOwnedByAnOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
      {},
      { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] }
    ],
    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions",
      {},
      {
        renamed: [
          "packages",
          "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"
        ]
      }
    ],
    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions"
    ],
    getPackageForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}"
    ],
    getPackageForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    getPackageForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}"
    ],
    getPackageVersionForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    listDockerMigrationConflictingPackagesForAuthenticatedUser: [
      "GET /user/docker/conflicts"
    ],
    listDockerMigrationConflictingPackagesForOrganization: [
      "GET /orgs/{org}/docker/conflicts"
    ],
    listDockerMigrationConflictingPackagesForUser: [
      "GET /users/{username}/docker/conflicts"
    ],
    listPackagesForAuthenticatedUser: ["GET /user/packages"],
    listPackagesForOrganization: ["GET /orgs/{org}/packages"],
    listPackagesForUser: ["GET /users/{username}/packages"],
    restorePackageForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageVersionForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ]
  },
  projects: {
    addCollaborator: ["PUT /projects/{project_id}/collaborators/{username}"],
    createCard: ["POST /projects/columns/{column_id}/cards"],
    createColumn: ["POST /projects/{project_id}/columns"],
    createForAuthenticatedUser: ["POST /user/projects"],
    createForOrg: ["POST /orgs/{org}/projects"],
    createForRepo: ["POST /repos/{owner}/{repo}/projects"],
    delete: ["DELETE /projects/{project_id}"],
    deleteCard: ["DELETE /projects/columns/cards/{card_id}"],
    deleteColumn: ["DELETE /projects/columns/{column_id}"],
    get: ["GET /projects/{project_id}"],
    getCard: ["GET /projects/columns/cards/{card_id}"],
    getColumn: ["GET /projects/columns/{column_id}"],
    getPermissionForUser: [
      "GET /projects/{project_id}/collaborators/{username}/permission"
    ],
    listCards: ["GET /projects/columns/{column_id}/cards"],
    listCollaborators: ["GET /projects/{project_id}/collaborators"],
    listColumns: ["GET /projects/{project_id}/columns"],
    listForOrg: ["GET /orgs/{org}/projects"],
    listForRepo: ["GET /repos/{owner}/{repo}/projects"],
    listForUser: ["GET /users/{username}/projects"],
    moveCard: ["POST /projects/columns/cards/{card_id}/moves"],
    moveColumn: ["POST /projects/columns/{column_id}/moves"],
    removeCollaborator: [
      "DELETE /projects/{project_id}/collaborators/{username}"
    ],
    update: ["PATCH /projects/{project_id}"],
    updateCard: ["PATCH /projects/columns/cards/{card_id}"],
    updateColumn: ["PATCH /projects/columns/{column_id}"]
  },
  pulls: {
    checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    create: ["POST /repos/{owner}/{repo}/pulls"],
    createReplyForReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"
    ],
    createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    createReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    deletePendingReview: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    deleteReviewComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ],
    dismissReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"
    ],
    get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
    getReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
    list: ["GET /repos/{owner}/{repo}/pulls"],
    listCommentsForReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
    listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
    listRequestedReviewers: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    listReviewComments: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
    listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    removeRequestedReviewers: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    requestReviewers: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    submitReview: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"
    ],
    update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
    updateBranch: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"
    ],
    updateReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    updateReviewComment: [
      "PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ]
  },
  rateLimit: { get: ["GET /rate_limit"] },
  reactions: {
    createForCommitComment: [
      "POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    createForIssue: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"
    ],
    createForIssueComment: [
      "POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    createForPullRequestReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    createForRelease: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    createForTeamDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    createForTeamDiscussionInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ],
    deleteForCommitComment: [
      "DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForIssue: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"
    ],
    deleteForIssueComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForPullRequestComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForRelease: [
      "DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussion: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussionComment: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"
    ],
    listForCommitComment: [
      "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
    listForIssueComment: [
      "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    listForPullRequestReviewComment: [
      "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    listForRelease: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    listForTeamDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    listForTeamDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ]
  },
  repos: {
    acceptInvitation: [
      "PATCH /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }
    ],
    acceptInvitationForAuthenticatedUser: [
      "PATCH /user/repository_invitations/{invitation_id}"
    ],
    addAppAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
    addStatusCheckContexts: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    addTeamAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    addUserAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    cancelPagesDeployment: [
      "POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"
    ],
    checkAutomatedSecurityFixes: [
      "GET /repos/{owner}/{repo}/automated-security-fixes"
    ],
    checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
    checkVulnerabilityAlerts: [
      "GET /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
    compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
    compareCommitsWithBasehead: [
      "GET /repos/{owner}/{repo}/compare/{basehead}"
    ],
    createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
    createCommitComment: [
      "POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    createCommitSignatureProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
    createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
    createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
    createDeploymentBranchPolicy: [
      "POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"
    ],
    createDeploymentProtectionRule: [
      "POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"
    ],
    createDeploymentStatus: [
      "POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
    createForAuthenticatedUser: ["POST /user/repos"],
    createFork: ["POST /repos/{owner}/{repo}/forks"],
    createInOrg: ["POST /orgs/{org}/repos"],
    createOrUpdateCustomPropertiesValues: [
      "PATCH /repos/{owner}/{repo}/properties/values"
    ],
    createOrUpdateEnvironment: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
    createOrgRuleset: ["POST /orgs/{org}/rulesets"],
    createPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments"],
    createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
    createRelease: ["POST /repos/{owner}/{repo}/releases"],
    createRepoRuleset: ["POST /repos/{owner}/{repo}/rulesets"],
    createTagProtection: ["POST /repos/{owner}/{repo}/tags/protection"],
    createUsingTemplate: [
      "POST /repos/{template_owner}/{template_repo}/generate"
    ],
    createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
    declineInvitation: [
      "DELETE /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }
    ],
    declineInvitationForAuthenticatedUser: [
      "DELETE /user/repository_invitations/{invitation_id}"
    ],
    delete: ["DELETE /repos/{owner}/{repo}"],
    deleteAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    deleteAdminBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    deleteAnEnvironment: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    deleteBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
    deleteCommitSignatureProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
    deleteDeployment: [
      "DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"
    ],
    deleteDeploymentBranchPolicy: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
    deleteInvitation: [
      "DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    deleteOrgRuleset: ["DELETE /orgs/{org}/rulesets/{ruleset_id}"],
    deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
    deletePullRequestReviewProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
    deleteReleaseAsset: [
      "DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    deleteRepoRuleset: ["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    deleteTagProtection: [
      "DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"
    ],
    deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
    disableAutomatedSecurityFixes: [
      "DELETE /repos/{owner}/{repo}/automated-security-fixes"
    ],
    disableDeploymentProtectionRule: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"
    ],
    disablePrivateVulnerabilityReporting: [
      "DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"
    ],
    disableVulnerabilityAlerts: [
      "DELETE /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    downloadArchive: [
      "GET /repos/{owner}/{repo}/zipball/{ref}",
      {},
      { renamed: ["repos", "downloadZipballArchive"] }
    ],
    downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
    downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
    enableAutomatedSecurityFixes: [
      "PUT /repos/{owner}/{repo}/automated-security-fixes"
    ],
    enablePrivateVulnerabilityReporting: [
      "PUT /repos/{owner}/{repo}/private-vulnerability-reporting"
    ],
    enableVulnerabilityAlerts: [
      "PUT /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    generateReleaseNotes: [
      "POST /repos/{owner}/{repo}/releases/generate-notes"
    ],
    get: ["GET /repos/{owner}/{repo}"],
    getAccessRestrictions: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    getAdminBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    getAllDeploymentProtectionRules: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"
    ],
    getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
    getAllStatusCheckContexts: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
    ],
    getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
    getAppsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"
    ],
    getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
    getBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    getBranchRules: ["GET /repos/{owner}/{repo}/rules/branches/{branch}"],
    getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
    getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
    getCollaboratorPermissionLevel: [
      "GET /repos/{owner}/{repo}/collaborators/{username}/permission"
    ],
    getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
    getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
    getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
    getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
    getCommitSignatureProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
    getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
    getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
    getCustomDeploymentProtectionRule: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"
    ],
    getCustomPropertiesValues: ["GET /repos/{owner}/{repo}/properties/values"],
    getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
    getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
    getDeploymentBranchPolicy: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    getDeploymentStatus: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"
    ],
    getEnvironment: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
    getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
    getOrgRuleSuite: ["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],
    getOrgRuleSuites: ["GET /orgs/{org}/rulesets/rule-suites"],
    getOrgRuleset: ["GET /orgs/{org}/rulesets/{ruleset_id}"],
    getOrgRulesets: ["GET /orgs/{org}/rulesets"],
    getPages: ["GET /repos/{owner}/{repo}/pages"],
    getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
    getPagesDeployment: [
      "GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"
    ],
    getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
    getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
    getPullRequestReviewProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
    getReadme: ["GET /repos/{owner}/{repo}/readme"],
    getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
    getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
    getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
    getRepoRuleSuite: [
      "GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"
    ],
    getRepoRuleSuites: ["GET /repos/{owner}/{repo}/rulesets/rule-suites"],
    getRepoRuleset: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    getRepoRulesets: ["GET /repos/{owner}/{repo}/rulesets"],
    getStatusChecksProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    getTeamsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"
    ],
    getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
    getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
    getUsersWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"
    ],
    getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
    getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
    getWebhookConfigForRepo: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    getWebhookDelivery: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    listActivities: ["GET /repos/{owner}/{repo}/activity"],
    listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
    listBranches: ["GET /repos/{owner}/{repo}/branches"],
    listBranchesForHeadCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"
    ],
    listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
    listCommentsForCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
    listCommitStatusesForRef: [
      "GET /repos/{owner}/{repo}/commits/{ref}/statuses"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/commits"],
    listContributors: ["GET /repos/{owner}/{repo}/contributors"],
    listCustomDeploymentRuleIntegrations: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"
    ],
    listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
    listDeploymentBranchPolicies: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"
    ],
    listDeploymentStatuses: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
    listForAuthenticatedUser: ["GET /user/repos"],
    listForOrg: ["GET /orgs/{org}/repos"],
    listForUser: ["GET /users/{username}/repos"],
    listForks: ["GET /repos/{owner}/{repo}/forks"],
    listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
    listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
    listLanguages: ["GET /repos/{owner}/{repo}/languages"],
    listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
    listPublic: ["GET /repositories"],
    listPullRequestsAssociatedWithCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"
    ],
    listReleaseAssets: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/assets"
    ],
    listReleases: ["GET /repos/{owner}/{repo}/releases"],
    listTagProtection: ["GET /repos/{owner}/{repo}/tags/protection"],
    listTags: ["GET /repos/{owner}/{repo}/tags"],
    listTeams: ["GET /repos/{owner}/{repo}/teams"],
    listWebhookDeliveries: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"
    ],
    listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
    merge: ["POST /repos/{owner}/{repo}/merges"],
    mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
    pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeAppAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    removeCollaborator: [
      "DELETE /repos/{owner}/{repo}/collaborators/{username}"
    ],
    removeStatusCheckContexts: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    removeStatusCheckProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    removeTeamAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    removeUserAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
    replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
    requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
    setAdminBranchProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    setAppAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    setStatusCheckContexts: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    setTeamAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    setUserAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
    transfer: ["POST /repos/{owner}/{repo}/transfer"],
    update: ["PATCH /repos/{owner}/{repo}"],
    updateBranchProtection: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
    updateDeploymentBranchPolicy: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"
    ],
    updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
    updateInvitation: [
      "PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    updateOrgRuleset: ["PUT /orgs/{org}/rulesets/{ruleset_id}"],
    updatePullRequestReviewProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
    updateReleaseAsset: [
      "PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    updateRepoRuleset: ["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
    updateStatusCheckPotection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      {},
      { renamed: ["repos", "updateStatusCheckProtection"] }
    ],
    updateStatusCheckProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
    updateWebhookConfigForRepo: [
      "PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    uploadReleaseAsset: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",
      { baseUrl: "https://uploads.github.com" }
    ]
  },
  search: {
    code: ["GET /search/code"],
    commits: ["GET /search/commits"],
    issuesAndPullRequests: ["GET /search/issues"],
    labels: ["GET /search/labels"],
    repos: ["GET /search/repositories"],
    topics: ["GET /search/topics"],
    users: ["GET /search/users"]
  },
  secretScanning: {
    getAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/secret-scanning/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
    listLocationsForAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ]
  },
  securityAdvisories: {
    createFork: [
      "POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"
    ],
    createPrivateVulnerabilityReport: [
      "POST /repos/{owner}/{repo}/security-advisories/reports"
    ],
    createRepositoryAdvisory: [
      "POST /repos/{owner}/{repo}/security-advisories"
    ],
    createRepositoryAdvisoryCveRequest: [
      "POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"
    ],
    getGlobalAdvisory: ["GET /advisories/{ghsa_id}"],
    getRepositoryAdvisory: [
      "GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"
    ],
    listGlobalAdvisories: ["GET /advisories"],
    listOrgRepositoryAdvisories: ["GET /orgs/{org}/security-advisories"],
    listRepositoryAdvisories: ["GET /repos/{owner}/{repo}/security-advisories"],
    updateRepositoryAdvisory: [
      "PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"
    ]
  },
  teams: {
    addOrUpdateMembershipForUserInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    addOrUpdateProjectPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    addOrUpdateRepoPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    checkPermissionsForProjectInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    checkPermissionsForRepoInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    create: ["POST /orgs/{org}/teams"],
    createDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
    deleteDiscussionCommentInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    deleteDiscussionInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
    getByName: ["GET /orgs/{org}/teams/{team_slug}"],
    getDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    getDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    getMembershipForUserInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    list: ["GET /orgs/{org}/teams"],
    listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
    listDiscussionCommentsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
    listForAuthenticatedUser: ["GET /user/teams"],
    listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
    listPendingInvitationsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/invitations"
    ],
    listProjectsInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects"],
    listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
    removeMembershipForUserInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    removeProjectInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    removeRepoInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    updateDiscussionCommentInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    updateDiscussionInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"]
  },
  users: {
    addEmailForAuthenticated: [
      "POST /user/emails",
      {},
      { renamed: ["users", "addEmailForAuthenticatedUser"] }
    ],
    addEmailForAuthenticatedUser: ["POST /user/emails"],
    addSocialAccountForAuthenticatedUser: ["POST /user/social_accounts"],
    block: ["PUT /user/blocks/{username}"],
    checkBlocked: ["GET /user/blocks/{username}"],
    checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
    checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
    createGpgKeyForAuthenticated: [
      "POST /user/gpg_keys",
      {},
      { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }
    ],
    createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
    createPublicSshKeyForAuthenticated: [
      "POST /user/keys",
      {},
      { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }
    ],
    createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
    createSshSigningKeyForAuthenticatedUser: ["POST /user/ssh_signing_keys"],
    deleteEmailForAuthenticated: [
      "DELETE /user/emails",
      {},
      { renamed: ["users", "deleteEmailForAuthenticatedUser"] }
    ],
    deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
    deleteGpgKeyForAuthenticated: [
      "DELETE /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }
    ],
    deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
    deletePublicSshKeyForAuthenticated: [
      "DELETE /user/keys/{key_id}",
      {},
      { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }
    ],
    deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
    deleteSocialAccountForAuthenticatedUser: ["DELETE /user/social_accounts"],
    deleteSshSigningKeyForAuthenticatedUser: [
      "DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"
    ],
    follow: ["PUT /user/following/{username}"],
    getAuthenticated: ["GET /user"],
    getByUsername: ["GET /users/{username}"],
    getContextForUser: ["GET /users/{username}/hovercard"],
    getGpgKeyForAuthenticated: [
      "GET /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }
    ],
    getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
    getPublicSshKeyForAuthenticated: [
      "GET /user/keys/{key_id}",
      {},
      { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }
    ],
    getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
    getSshSigningKeyForAuthenticatedUser: [
      "GET /user/ssh_signing_keys/{ssh_signing_key_id}"
    ],
    list: ["GET /users"],
    listBlockedByAuthenticated: [
      "GET /user/blocks",
      {},
      { renamed: ["users", "listBlockedByAuthenticatedUser"] }
    ],
    listBlockedByAuthenticatedUser: ["GET /user/blocks"],
    listEmailsForAuthenticated: [
      "GET /user/emails",
      {},
      { renamed: ["users", "listEmailsForAuthenticatedUser"] }
    ],
    listEmailsForAuthenticatedUser: ["GET /user/emails"],
    listFollowedByAuthenticated: [
      "GET /user/following",
      {},
      { renamed: ["users", "listFollowedByAuthenticatedUser"] }
    ],
    listFollowedByAuthenticatedUser: ["GET /user/following"],
    listFollowersForAuthenticatedUser: ["GET /user/followers"],
    listFollowersForUser: ["GET /users/{username}/followers"],
    listFollowingForUser: ["GET /users/{username}/following"],
    listGpgKeysForAuthenticated: [
      "GET /user/gpg_keys",
      {},
      { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }
    ],
    listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
    listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
    listPublicEmailsForAuthenticated: [
      "GET /user/public_emails",
      {},
      { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }
    ],
    listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
    listPublicKeysForUser: ["GET /users/{username}/keys"],
    listPublicSshKeysForAuthenticated: [
      "GET /user/keys",
      {},
      { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }
    ],
    listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
    listSocialAccountsForAuthenticatedUser: ["GET /user/social_accounts"],
    listSocialAccountsForUser: ["GET /users/{username}/social_accounts"],
    listSshSigningKeysForAuthenticatedUser: ["GET /user/ssh_signing_keys"],
    listSshSigningKeysForUser: ["GET /users/{username}/ssh_signing_keys"],
    setPrimaryEmailVisibilityForAuthenticated: [
      "PATCH /user/email/visibility",
      {},
      { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] }
    ],
    setPrimaryEmailVisibilityForAuthenticatedUser: [
      "PATCH /user/email/visibility"
    ],
    unblock: ["DELETE /user/blocks/{username}"],
    unfollow: ["DELETE /user/following/{username}"],
    updateAuthenticated: ["PATCH /user"]
  }
};
var endpoints_default = Endpoints;



/***/ }),

/***/ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   legacyRestEndpointMethods: () => (/* binding */ legacyRestEndpointMethods),
/* harmony export */   restEndpointMethods: () => (/* binding */ restEndpointMethods)
/* harmony export */ });
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version.js */ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js");
/* harmony import */ var _endpoints_to_methods_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./endpoints-to-methods.js */ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/endpoints-to-methods.js");


function restEndpointMethods(octokit) {
  const api = (0,_endpoints_to_methods_js__WEBPACK_IMPORTED_MODULE_0__.endpointsToMethods)(octokit);
  return {
    rest: api
  };
}
restEndpointMethods.VERSION = _version_js__WEBPACK_IMPORTED_MODULE_1__.VERSION;
function legacyRestEndpointMethods(octokit) {
  const api = (0,_endpoints_to_methods_js__WEBPACK_IMPORTED_MODULE_0__.endpointsToMethods)(octokit);
  return {
    ...api,
    rest: api
  };
}
legacyRestEndpointMethods.VERSION = _version_js__WEBPACK_IMPORTED_MODULE_1__.VERSION;



/***/ }),

/***/ "../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@octokit/plugin-rest-endpoint-methods/dist-src/version.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VERSION: () => (/* binding */ VERSION)
/* harmony export */ });
const VERSION = "10.4.1";



/***/ }),

/***/ "../../node_modules/@octokit/request-error/dist-src/index.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@octokit/request-error/dist-src/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RequestError: () => (/* binding */ RequestError)
/* harmony export */ });
/* harmony import */ var deprecation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deprecation */ "../../node_modules/deprecation/dist-web/index.js");
/* harmony import */ var once__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! once */ "../../node_modules/once/once.js");
/* harmony import */ var once__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(once__WEBPACK_IMPORTED_MODULE_0__);


const logOnceCode = once__WEBPACK_IMPORTED_MODULE_0___default()((deprecation) => console.warn(deprecation));
const logOnceHeaders = once__WEBPACK_IMPORTED_MODULE_0___default()((deprecation) => console.warn(deprecation));
class RequestError extends Error {
  constructor(message, statusCode, options) {
    super(message);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
    this.name = "HttpError";
    this.status = statusCode;
    let headers;
    if ("headers" in options && typeof options.headers !== "undefined") {
      headers = options.headers;
    }
    if ("response" in options) {
      this.response = options.response;
      headers = options.response.headers;
    }
    const requestCopy = Object.assign({}, options.request);
    if (options.request.headers.authorization) {
      requestCopy.headers = Object.assign({}, options.request.headers, {
        authorization: options.request.headers.authorization.replace(
          / .*$/,
          " [REDACTED]"
        )
      });
    }
    requestCopy.url = requestCopy.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy;
    Object.defineProperty(this, "code", {
      get() {
        logOnceCode(
          new deprecation__WEBPACK_IMPORTED_MODULE_1__.Deprecation(
            "[@octokit/request-error] `error.code` is deprecated, use `error.status`."
          )
        );
        return statusCode;
      }
    });
    Object.defineProperty(this, "headers", {
      get() {
        logOnceHeaders(
          new deprecation__WEBPACK_IMPORTED_MODULE_1__.Deprecation(
            "[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."
          )
        );
        return headers || {};
      }
    });
  }
}



/***/ }),

/***/ "../../node_modules/@octokit/request/dist-src/fetch-wrapper.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@octokit/request/dist-src/fetch-wrapper.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ fetchWrapper)
/* harmony export */ });
/* harmony import */ var _is_plain_object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-plain-object.js */ "../../node_modules/@octokit/request/dist-src/is-plain-object.js");
/* harmony import */ var _octokit_request_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @octokit/request-error */ "../../node_modules/@octokit/request-error/dist-src/index.js");
/* harmony import */ var _get_buffer_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-buffer-response.js */ "../../node_modules/@octokit/request/dist-src/get-buffer-response.js");



function fetchWrapper(requestOptions) {
  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;
  const parseSuccessResponseBody = requestOptions.request?.parseSuccessResponseBody !== false;
  if ((0,_is_plain_object_js__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(requestOptions.body) || Array.isArray(requestOptions.body)) {
    requestOptions.body = JSON.stringify(requestOptions.body);
  }
  let headers = {};
  let status;
  let url;
  let { fetch } = globalThis;
  if (requestOptions.request?.fetch) {
    fetch = requestOptions.request.fetch;
  }
  if (!fetch) {
    throw new Error(
      "fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing"
    );
  }
  return fetch(requestOptions.url, {
    method: requestOptions.method,
    body: requestOptions.body,
    redirect: requestOptions.request?.redirect,
    headers: requestOptions.headers,
    signal: requestOptions.request?.signal,
    // duplex must be set if request.body is ReadableStream or Async Iterables.
    // See https://fetch.spec.whatwg.org/#dom-requestinit-duplex.
    ...requestOptions.body && { duplex: "half" }
  }).then(async (response) => {
    url = response.url;
    status = response.status;
    for (const keyAndValue of response.headers) {
      headers[keyAndValue[0]] = keyAndValue[1];
    }
    if ("deprecation" in headers) {
      const matches = headers.link && headers.link.match(/<([^>]+)>; rel="deprecation"/);
      const deprecationLink = matches && matches.pop();
      log.warn(
        `[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`
      );
    }
    if (status === 204 || status === 205) {
      return;
    }
    if (requestOptions.method === "HEAD") {
      if (status < 400) {
        return;
      }
      throw new _octokit_request_error__WEBPACK_IMPORTED_MODULE_1__.RequestError(response.statusText, status, {
        response: {
          url,
          status,
          headers,
          data: void 0
        },
        request: requestOptions
      });
    }
    if (status === 304) {
      throw new _octokit_request_error__WEBPACK_IMPORTED_MODULE_1__.RequestError("Not modified", status, {
        response: {
          url,
          status,
          headers,
          data: await getResponseData(response)
        },
        request: requestOptions
      });
    }
    if (status >= 400) {
      const data = await getResponseData(response);
      const error = new _octokit_request_error__WEBPACK_IMPORTED_MODULE_1__.RequestError(toErrorMessage(data), status, {
        response: {
          url,
          status,
          headers,
          data
        },
        request: requestOptions
      });
      throw error;
    }
    return parseSuccessResponseBody ? await getResponseData(response) : response.body;
  }).then((data) => {
    return {
      status,
      url,
      headers,
      data
    };
  }).catch((error) => {
    if (error instanceof _octokit_request_error__WEBPACK_IMPORTED_MODULE_1__.RequestError)
      throw error;
    else if (error.name === "AbortError")
      throw error;
    let message = error.message;
    if (error.name === "TypeError" && "cause" in error) {
      if (error.cause instanceof Error) {
        message = error.cause.message;
      } else if (typeof error.cause === "string") {
        message = error.cause;
      }
    }
    throw new _octokit_request_error__WEBPACK_IMPORTED_MODULE_1__.RequestError(message, 500, {
      request: requestOptions
    });
  });
}
async function getResponseData(response) {
  const contentType = response.headers.get("content-type");
  if (/application\/json/.test(contentType)) {
    return response.json().catch(() => response.text()).catch(() => "");
  }
  if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
    return response.text();
  }
  return (0,_get_buffer_response_js__WEBPACK_IMPORTED_MODULE_2__["default"])(response);
}
function toErrorMessage(data) {
  if (typeof data === "string")
    return data;
  let suffix;
  if ("documentation_url" in data) {
    suffix = ` - ${data.documentation_url}`;
  } else {
    suffix = "";
  }
  if ("message" in data) {
    if (Array.isArray(data.errors)) {
      return `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}${suffix}`;
    }
    return `${data.message}${suffix}`;
  }
  return `Unknown error: ${JSON.stringify(data)}`;
}



/***/ }),

/***/ "../../node_modules/@octokit/request/dist-src/get-buffer-response.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@octokit/request/dist-src/get-buffer-response.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getBufferResponse)
/* harmony export */ });
function getBufferResponse(response) {
  return response.arrayBuffer();
}



/***/ }),

/***/ "../../node_modules/@octokit/request/dist-src/index.js":
/*!*************************************************************!*\
  !*** ../../node_modules/@octokit/request/dist-src/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   request: () => (/* binding */ request)
/* harmony export */ });
/* harmony import */ var _octokit_endpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @octokit/endpoint */ "../../node_modules/@octokit/endpoint/dist-src/index.js");
/* harmony import */ var universal_user_agent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! universal-user-agent */ "../../node_modules/universal-user-agent/dist-web/index.js");
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./version.js */ "../../node_modules/@octokit/request/dist-src/version.js");
/* harmony import */ var _with_defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./with-defaults.js */ "../../node_modules/@octokit/request/dist-src/with-defaults.js");




const request = (0,_with_defaults_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_octokit_endpoint__WEBPACK_IMPORTED_MODULE_1__.endpoint, {
  headers: {
    "user-agent": `octokit-request.js/${_version_js__WEBPACK_IMPORTED_MODULE_2__.VERSION} ${(0,universal_user_agent__WEBPACK_IMPORTED_MODULE_3__.getUserAgent)()}`
  }
});



/***/ }),

/***/ "../../node_modules/@octokit/request/dist-src/is-plain-object.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@octokit/request/dist-src/is-plain-object.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject)
/* harmony export */ });
function isPlainObject(value) {
  if (typeof value !== "object" || value === null)
    return false;
  if (Object.prototype.toString.call(value) !== "[object Object]")
    return false;
  const proto = Object.getPrototypeOf(value);
  if (proto === null)
    return true;
  const Ctor = Object.prototype.hasOwnProperty.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && Ctor instanceof Ctor && Function.prototype.call(Ctor) === Function.prototype.call(value);
}



/***/ }),

/***/ "../../node_modules/@octokit/request/dist-src/version.js":
/*!***************************************************************!*\
  !*** ../../node_modules/@octokit/request/dist-src/version.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VERSION: () => (/* binding */ VERSION)
/* harmony export */ });
const VERSION = "8.4.0";



/***/ }),

/***/ "../../node_modules/@octokit/request/dist-src/with-defaults.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@octokit/request/dist-src/with-defaults.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ withDefaults)
/* harmony export */ });
/* harmony import */ var _fetch_wrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetch-wrapper.js */ "../../node_modules/@octokit/request/dist-src/fetch-wrapper.js");

function withDefaults(oldEndpoint, newDefaults) {
  const endpoint = oldEndpoint.defaults(newDefaults);
  const newApi = function(route, parameters) {
    const endpointOptions = endpoint.merge(route, parameters);
    if (!endpointOptions.request || !endpointOptions.request.hook) {
      return (0,_fetch_wrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"])(endpoint.parse(endpointOptions));
    }
    const request = (route2, parameters2) => {
      return (0,_fetch_wrapper_js__WEBPACK_IMPORTED_MODULE_0__["default"])(
        endpoint.parse(endpoint.merge(route2, parameters2))
      );
    };
    Object.assign(request, {
      endpoint,
      defaults: withDefaults.bind(null, endpoint)
    });
    return endpointOptions.request.hook(request, endpointOptions);
  };
  return Object.assign(newApi, {
    endpoint,
    defaults: withDefaults.bind(null, endpoint)
  });
}



/***/ }),

/***/ "../../node_modules/before-after-hook/index.js":
/*!*****************************************************!*\
  !*** ../../node_modules/before-after-hook/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var register = __webpack_require__(/*! ./lib/register */ "../../node_modules/before-after-hook/lib/register.js");
var addHook = __webpack_require__(/*! ./lib/add */ "../../node_modules/before-after-hook/lib/add.js");
var removeHook = __webpack_require__(/*! ./lib/remove */ "../../node_modules/before-after-hook/lib/remove.js");

// bind with array of arguments: https://stackoverflow.com/a/21792913
var bind = Function.bind;
var bindable = bind.bind(bind);

function bindApi(hook, state, name) {
  var removeHookRef = bindable(removeHook, null).apply(
    null,
    name ? [state, name] : [state]
  );
  hook.api = { remove: removeHookRef };
  hook.remove = removeHookRef;
  ["before", "error", "after", "wrap"].forEach(function (kind) {
    var args = name ? [state, kind, name] : [state, kind];
    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);
  });
}

function HookSingular() {
  var singularHookName = "h";
  var singularHookState = {
    registry: {},
  };
  var singularHook = register.bind(null, singularHookState, singularHookName);
  bindApi(singularHook, singularHookState, singularHookName);
  return singularHook;
}

function HookCollection() {
  var state = {
    registry: {},
  };

  var hook = register.bind(null, state);
  bindApi(hook, state);

  return hook;
}

var collectionHookDeprecationMessageDisplayed = false;
function Hook() {
  if (!collectionHookDeprecationMessageDisplayed) {
    console.warn(
      '[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'
    );
    collectionHookDeprecationMessageDisplayed = true;
  }
  return HookCollection();
}

Hook.Singular = HookSingular.bind();
Hook.Collection = HookCollection.bind();

module.exports = Hook;
// expose constructors as a named property for TypeScript
module.exports.Hook = Hook;
module.exports.Singular = Hook.Singular;
module.exports.Collection = Hook.Collection;


/***/ }),

/***/ "../../node_modules/before-after-hook/lib/add.js":
/*!*******************************************************!*\
  !*** ../../node_modules/before-after-hook/lib/add.js ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = addHook;

function addHook(state, kind, name, hook) {
  var orig = hook;
  if (!state.registry[name]) {
    state.registry[name] = [];
  }

  if (kind === "before") {
    hook = function (method, options) {
      return Promise.resolve()
        .then(orig.bind(null, options))
        .then(method.bind(null, options));
    };
  }

  if (kind === "after") {
    hook = function (method, options) {
      var result;
      return Promise.resolve()
        .then(method.bind(null, options))
        .then(function (result_) {
          result = result_;
          return orig(result, options);
        })
        .then(function () {
          return result;
        });
    };
  }

  if (kind === "error") {
    hook = function (method, options) {
      return Promise.resolve()
        .then(method.bind(null, options))
        .catch(function (error) {
          return orig(error, options);
        });
    };
  }

  state.registry[name].push({
    hook: hook,
    orig: orig,
  });
}


/***/ }),

/***/ "../../node_modules/before-after-hook/lib/register.js":
/*!************************************************************!*\
  !*** ../../node_modules/before-after-hook/lib/register.js ***!
  \************************************************************/
/***/ ((module) => {

module.exports = register;

function register(state, name, method, options) {
  if (typeof method !== "function") {
    throw new Error("method for before hook must be a function");
  }

  if (!options) {
    options = {};
  }

  if (Array.isArray(name)) {
    return name.reverse().reduce(function (callback, name) {
      return register.bind(null, state, name, callback, options);
    }, method)();
  }

  return Promise.resolve().then(function () {
    if (!state.registry[name]) {
      return method(options);
    }

    return state.registry[name].reduce(function (method, registered) {
      return registered.hook.bind(null, method, options);
    }, method)();
  });
}


/***/ }),

/***/ "../../node_modules/before-after-hook/lib/remove.js":
/*!**********************************************************!*\
  !*** ../../node_modules/before-after-hook/lib/remove.js ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = removeHook;

function removeHook(state, name, method) {
  if (!state.registry[name]) {
    return;
  }

  var index = state.registry[name]
    .map(function (registered) {
      return registered.orig;
    })
    .indexOf(method);

  if (index === -1) {
    return;
  }

  state.registry[name].splice(index, 1);
}


/***/ }),

/***/ "../../node_modules/deprecation/dist-web/index.js":
/*!********************************************************!*\
  !*** ../../node_modules/deprecation/dist-web/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Deprecation: () => (/* binding */ Deprecation)
/* harmony export */ });
class Deprecation extends Error {
  constructor(message) {
    super(message); // Maintains proper stack trace (only available on V8)

    /* istanbul ignore next */

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }

    this.name = 'Deprecation';
  }

}




/***/ }),

/***/ "../../node_modules/once/once.js":
/*!***************************************!*\
  !*** ../../node_modules/once/once.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wrappy = __webpack_require__(/*! wrappy */ "../../node_modules/wrappy/wrappy.js")
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}


/***/ }),

/***/ "../../node_modules/tunnel/index.js":
/*!******************************************!*\
  !*** ../../node_modules/tunnel/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./lib/tunnel */ "../../node_modules/tunnel/lib/tunnel.js");


/***/ }),

/***/ "../../node_modules/tunnel/lib/tunnel.js":
/*!***********************************************!*\
  !*** ../../node_modules/tunnel/lib/tunnel.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



var net = __webpack_require__(/*! net */ "net");
var tls = __webpack_require__(/*! tls */ "tls");
var http = __webpack_require__(/*! http */ "http");
var https = __webpack_require__(/*! https */ "https");
var events = __webpack_require__(/*! events */ "events");
var assert = __webpack_require__(/*! assert */ "assert");
var util = __webpack_require__(/*! util */ "util");


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ "../../node_modules/undici/index.js":
/*!******************************************!*\
  !*** ../../node_modules/undici/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const Client = __webpack_require__(/*! ./lib/client */ "../../node_modules/undici/lib/client.js")
const Dispatcher = __webpack_require__(/*! ./lib/dispatcher */ "../../node_modules/undici/lib/dispatcher.js")
const errors = __webpack_require__(/*! ./lib/core/errors */ "../../node_modules/undici/lib/core/errors.js")
const Pool = __webpack_require__(/*! ./lib/pool */ "../../node_modules/undici/lib/pool.js")
const BalancedPool = __webpack_require__(/*! ./lib/balanced-pool */ "../../node_modules/undici/lib/balanced-pool.js")
const Agent = __webpack_require__(/*! ./lib/agent */ "../../node_modules/undici/lib/agent.js")
const util = __webpack_require__(/*! ./lib/core/util */ "../../node_modules/undici/lib/core/util.js")
const { InvalidArgumentError } = errors
const api = __webpack_require__(/*! ./lib/api */ "../../node_modules/undici/lib/api/index.js")
const buildConnector = __webpack_require__(/*! ./lib/core/connect */ "../../node_modules/undici/lib/core/connect.js")
const MockClient = __webpack_require__(/*! ./lib/mock/mock-client */ "../../node_modules/undici/lib/mock/mock-client.js")
const MockAgent = __webpack_require__(/*! ./lib/mock/mock-agent */ "../../node_modules/undici/lib/mock/mock-agent.js")
const MockPool = __webpack_require__(/*! ./lib/mock/mock-pool */ "../../node_modules/undici/lib/mock/mock-pool.js")
const mockErrors = __webpack_require__(/*! ./lib/mock/mock-errors */ "../../node_modules/undici/lib/mock/mock-errors.js")
const ProxyAgent = __webpack_require__(/*! ./lib/proxy-agent */ "../../node_modules/undici/lib/proxy-agent.js")
const RetryHandler = __webpack_require__(/*! ./lib/handler/RetryHandler */ "../../node_modules/undici/lib/handler/RetryHandler.js")
const { getGlobalDispatcher, setGlobalDispatcher } = __webpack_require__(/*! ./lib/global */ "../../node_modules/undici/lib/global.js")
const DecoratorHandler = __webpack_require__(/*! ./lib/handler/DecoratorHandler */ "../../node_modules/undici/lib/handler/DecoratorHandler.js")
const RedirectHandler = __webpack_require__(/*! ./lib/handler/RedirectHandler */ "../../node_modules/undici/lib/handler/RedirectHandler.js")
const createRedirectInterceptor = __webpack_require__(/*! ./lib/interceptor/redirectInterceptor */ "../../node_modules/undici/lib/interceptor/redirectInterceptor.js")

let hasCrypto
try {
  __webpack_require__(/*! crypto */ "crypto")
  hasCrypto = true
} catch {
  hasCrypto = false
}

Object.assign(Dispatcher.prototype, api)

module.exports.Dispatcher = Dispatcher
module.exports.Client = Client
module.exports.Pool = Pool
module.exports.BalancedPool = BalancedPool
module.exports.Agent = Agent
module.exports.ProxyAgent = ProxyAgent
module.exports.RetryHandler = RetryHandler

module.exports.DecoratorHandler = DecoratorHandler
module.exports.RedirectHandler = RedirectHandler
module.exports.createRedirectInterceptor = createRedirectInterceptor

module.exports.buildConnector = buildConnector
module.exports.errors = errors

function makeDispatcher (fn) {
  return (url, opts, handler) => {
    if (typeof opts === 'function') {
      handler = opts
      opts = null
    }

    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {
      throw new InvalidArgumentError('invalid url')
    }

    if (opts != null && typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (opts && opts.path != null) {
      if (typeof opts.path !== 'string') {
        throw new InvalidArgumentError('invalid opts.path')
      }

      let path = opts.path
      if (!opts.path.startsWith('/')) {
        path = `/${path}`
      }

      url = new URL(util.parseOrigin(url).origin + path)
    } else {
      if (!opts) {
        opts = typeof url === 'object' ? url : {}
      }

      url = util.parseURL(url)
    }

    const { agent, dispatcher = getGlobalDispatcher() } = opts

    if (agent) {
      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')
    }

    return fn.call(dispatcher, {
      ...opts,
      origin: url.origin,
      path: url.search ? `${url.pathname}${url.search}` : url.pathname,
      method: opts.method || (opts.body ? 'PUT' : 'GET')
    }, handler)
  }
}

module.exports.setGlobalDispatcher = setGlobalDispatcher
module.exports.getGlobalDispatcher = getGlobalDispatcher

if (util.nodeMajor > 16 || (util.nodeMajor === 16 && util.nodeMinor >= 8)) {
  let fetchImpl = null
  module.exports.fetch = async function fetch (resource) {
    if (!fetchImpl) {
      fetchImpl = (__webpack_require__(/*! ./lib/fetch */ "../../node_modules/undici/lib/fetch/index.js").fetch)
    }

    try {
      return await fetchImpl(...arguments)
    } catch (err) {
      if (typeof err === 'object') {
        Error.captureStackTrace(err, this)
      }

      throw err
    }
  }
  module.exports.Headers = __webpack_require__(/*! ./lib/fetch/headers */ "../../node_modules/undici/lib/fetch/headers.js").Headers
  module.exports.Response = __webpack_require__(/*! ./lib/fetch/response */ "../../node_modules/undici/lib/fetch/response.js").Response
  module.exports.Request = __webpack_require__(/*! ./lib/fetch/request */ "../../node_modules/undici/lib/fetch/request.js").Request
  module.exports.FormData = __webpack_require__(/*! ./lib/fetch/formdata */ "../../node_modules/undici/lib/fetch/formdata.js").FormData
  module.exports.File = __webpack_require__(/*! ./lib/fetch/file */ "../../node_modules/undici/lib/fetch/file.js").File
  module.exports.FileReader = __webpack_require__(/*! ./lib/fileapi/filereader */ "../../node_modules/undici/lib/fileapi/filereader.js").FileReader

  const { setGlobalOrigin, getGlobalOrigin } = __webpack_require__(/*! ./lib/fetch/global */ "../../node_modules/undici/lib/fetch/global.js")

  module.exports.setGlobalOrigin = setGlobalOrigin
  module.exports.getGlobalOrigin = getGlobalOrigin

  const { CacheStorage } = __webpack_require__(/*! ./lib/cache/cachestorage */ "../../node_modules/undici/lib/cache/cachestorage.js")
  const { kConstruct } = __webpack_require__(/*! ./lib/cache/symbols */ "../../node_modules/undici/lib/cache/symbols.js")

  // Cache & CacheStorage are tightly coupled with fetch. Even if it may run
  // in an older version of Node, it doesn't have any use without fetch.
  module.exports.caches = new CacheStorage(kConstruct)
}

if (util.nodeMajor >= 16) {
  const { deleteCookie, getCookies, getSetCookies, setCookie } = __webpack_require__(/*! ./lib/cookies */ "../../node_modules/undici/lib/cookies/index.js")

  module.exports.deleteCookie = deleteCookie
  module.exports.getCookies = getCookies
  module.exports.getSetCookies = getSetCookies
  module.exports.setCookie = setCookie

  const { parseMIMEType, serializeAMimeType } = __webpack_require__(/*! ./lib/fetch/dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")

  module.exports.parseMIMEType = parseMIMEType
  module.exports.serializeAMimeType = serializeAMimeType
}

if (util.nodeMajor >= 18 && hasCrypto) {
  const { WebSocket } = __webpack_require__(/*! ./lib/websocket/websocket */ "../../node_modules/undici/lib/websocket/websocket.js")

  module.exports.WebSocket = WebSocket
}

module.exports.request = makeDispatcher(api.request)
module.exports.stream = makeDispatcher(api.stream)
module.exports.pipeline = makeDispatcher(api.pipeline)
module.exports.connect = makeDispatcher(api.connect)
module.exports.upgrade = makeDispatcher(api.upgrade)

module.exports.MockClient = MockClient
module.exports.MockPool = MockPool
module.exports.MockAgent = MockAgent
module.exports.mockErrors = mockErrors


/***/ }),

/***/ "../../node_modules/undici/lib/agent.js":
/*!**********************************************!*\
  !*** ../../node_modules/undici/lib/agent.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { InvalidArgumentError } = __webpack_require__(/*! ./core/errors */ "../../node_modules/undici/lib/core/errors.js")
const { kClients, kRunning, kClose, kDestroy, kDispatch, kInterceptors } = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const DispatcherBase = __webpack_require__(/*! ./dispatcher-base */ "../../node_modules/undici/lib/dispatcher-base.js")
const Pool = __webpack_require__(/*! ./pool */ "../../node_modules/undici/lib/pool.js")
const Client = __webpack_require__(/*! ./client */ "../../node_modules/undici/lib/client.js")
const util = __webpack_require__(/*! ./core/util */ "../../node_modules/undici/lib/core/util.js")
const createRedirectInterceptor = __webpack_require__(/*! ./interceptor/redirectInterceptor */ "../../node_modules/undici/lib/interceptor/redirectInterceptor.js")
const { WeakRef, FinalizationRegistry } = __webpack_require__(/*! ./compat/dispatcher-weakref */ "../../node_modules/undici/lib/compat/dispatcher-weakref.js")()

const kOnConnect = Symbol('onConnect')
const kOnDisconnect = Symbol('onDisconnect')
const kOnConnectionError = Symbol('onConnectionError')
const kMaxRedirections = Symbol('maxRedirections')
const kOnDrain = Symbol('onDrain')
const kFactory = Symbol('factory')
const kFinalizer = Symbol('finalizer')
const kOptions = Symbol('options')

function defaultFactory (origin, opts) {
  return opts && opts.connections === 1
    ? new Client(origin, opts)
    : new Pool(origin, opts)
}

class Agent extends DispatcherBase {
  constructor ({ factory = defaultFactory, maxRedirections = 0, connect, ...options } = {}) {
    super()

    if (typeof factory !== 'function') {
      throw new InvalidArgumentError('factory must be a function.')
    }

    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {
      throw new InvalidArgumentError('connect must be a function or an object')
    }

    if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {
      throw new InvalidArgumentError('maxRedirections must be a positive number')
    }

    if (connect && typeof connect !== 'function') {
      connect = { ...connect }
    }

    this[kInterceptors] = options.interceptors && options.interceptors.Agent && Array.isArray(options.interceptors.Agent)
      ? options.interceptors.Agent
      : [createRedirectInterceptor({ maxRedirections })]

    this[kOptions] = { ...util.deepClone(options), connect }
    this[kOptions].interceptors = options.interceptors
      ? { ...options.interceptors }
      : undefined
    this[kMaxRedirections] = maxRedirections
    this[kFactory] = factory
    this[kClients] = new Map()
    this[kFinalizer] = new FinalizationRegistry(/* istanbul ignore next: gc is undeterministic */ key => {
      const ref = this[kClients].get(key)
      if (ref !== undefined && ref.deref() === undefined) {
        this[kClients].delete(key)
      }
    })

    const agent = this

    this[kOnDrain] = (origin, targets) => {
      agent.emit('drain', origin, [agent, ...targets])
    }

    this[kOnConnect] = (origin, targets) => {
      agent.emit('connect', origin, [agent, ...targets])
    }

    this[kOnDisconnect] = (origin, targets, err) => {
      agent.emit('disconnect', origin, [agent, ...targets], err)
    }

    this[kOnConnectionError] = (origin, targets, err) => {
      agent.emit('connectionError', origin, [agent, ...targets], err)
    }
  }

  get [kRunning] () {
    let ret = 0
    for (const ref of this[kClients].values()) {
      const client = ref.deref()
      /* istanbul ignore next: gc is undeterministic */
      if (client) {
        ret += client[kRunning]
      }
    }
    return ret
  }

  [kDispatch] (opts, handler) {
    let key
    if (opts.origin && (typeof opts.origin === 'string' || opts.origin instanceof URL)) {
      key = String(opts.origin)
    } else {
      throw new InvalidArgumentError('opts.origin must be a non-empty string or URL.')
    }

    const ref = this[kClients].get(key)

    let dispatcher = ref ? ref.deref() : null
    if (!dispatcher) {
      dispatcher = this[kFactory](opts.origin, this[kOptions])
        .on('drain', this[kOnDrain])
        .on('connect', this[kOnConnect])
        .on('disconnect', this[kOnDisconnect])
        .on('connectionError', this[kOnConnectionError])

      this[kClients].set(key, new WeakRef(dispatcher))
      this[kFinalizer].register(dispatcher, key)
    }

    return dispatcher.dispatch(opts, handler)
  }

  async [kClose] () {
    const closePromises = []
    for (const ref of this[kClients].values()) {
      const client = ref.deref()
      /* istanbul ignore else: gc is undeterministic */
      if (client) {
        closePromises.push(client.close())
      }
    }

    await Promise.all(closePromises)
  }

  async [kDestroy] (err) {
    const destroyPromises = []
    for (const ref of this[kClients].values()) {
      const client = ref.deref()
      /* istanbul ignore else: gc is undeterministic */
      if (client) {
        destroyPromises.push(client.destroy(err))
      }
    }

    await Promise.all(destroyPromises)
  }
}

module.exports = Agent


/***/ }),

/***/ "../../node_modules/undici/lib/api/abort-signal.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/api/abort-signal.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { addAbortListener } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { RequestAbortedError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")

const kListener = Symbol('kListener')
const kSignal = Symbol('kSignal')

function abort (self) {
  if (self.abort) {
    self.abort()
  } else {
    self.onError(new RequestAbortedError())
  }
}

function addSignal (self, signal) {
  self[kSignal] = null
  self[kListener] = null

  if (!signal) {
    return
  }

  if (signal.aborted) {
    abort(self)
    return
  }

  self[kSignal] = signal
  self[kListener] = () => {
    abort(self)
  }

  addAbortListener(self[kSignal], self[kListener])
}

function removeSignal (self) {
  if (!self[kSignal]) {
    return
  }

  if ('removeEventListener' in self[kSignal]) {
    self[kSignal].removeEventListener('abort', self[kListener])
  } else {
    self[kSignal].removeListener('abort', self[kListener])
  }

  self[kSignal] = null
  self[kListener] = null
}

module.exports = {
  addSignal,
  removeSignal
}


/***/ }),

/***/ "../../node_modules/undici/lib/api/api-connect.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/api/api-connect.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { AsyncResource } = __webpack_require__(/*! async_hooks */ "async_hooks")
const { InvalidArgumentError, RequestAbortedError, SocketError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { addSignal, removeSignal } = __webpack_require__(/*! ./abort-signal */ "../../node_modules/undici/lib/api/abort-signal.js")

class ConnectHandler extends AsyncResource {
  constructor (opts, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    const { signal, opaque, responseHeaders } = opts

    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
    }

    super('UNDICI_CONNECT')

    this.opaque = opaque || null
    this.responseHeaders = responseHeaders || null
    this.callback = callback
    this.abort = null

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders () {
    throw new SocketError('bad connect', null)
  }

  onUpgrade (statusCode, rawHeaders, socket) {
    const { callback, opaque, context } = this

    removeSignal(this)

    this.callback = null

    let headers = rawHeaders
    // Indicates is an HTTP2Session
    if (headers != null) {
      headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
    }

    this.runInAsyncScope(callback, null, null, {
      statusCode,
      headers,
      socket,
      opaque,
      context
    })
  }

  onError (err) {
    const { callback, opaque } = this

    removeSignal(this)

    if (callback) {
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }
  }
}

function connect (opts, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      connect.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    const connectHandler = new ConnectHandler(opts, callback)
    this.dispatch({ ...opts, method: 'CONNECT' }, connectHandler)
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = connect


/***/ }),

/***/ "../../node_modules/undici/lib/api/api-pipeline.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/api/api-pipeline.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const {
  Readable,
  Duplex,
  PassThrough
} = __webpack_require__(/*! stream */ "stream")
const {
  InvalidArgumentError,
  InvalidReturnValueError,
  RequestAbortedError
} = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { AsyncResource } = __webpack_require__(/*! async_hooks */ "async_hooks")
const { addSignal, removeSignal } = __webpack_require__(/*! ./abort-signal */ "../../node_modules/undici/lib/api/abort-signal.js")
const assert = __webpack_require__(/*! assert */ "assert")

const kResume = Symbol('resume')

class PipelineRequest extends Readable {
  constructor () {
    super({ autoDestroy: true })

    this[kResume] = null
  }

  _read () {
    const { [kResume]: resume } = this

    if (resume) {
      this[kResume] = null
      resume()
    }
  }

  _destroy (err, callback) {
    this._read()

    callback(err)
  }
}

class PipelineResponse extends Readable {
  constructor (resume) {
    super({ autoDestroy: true })
    this[kResume] = resume
  }

  _read () {
    this[kResume]()
  }

  _destroy (err, callback) {
    if (!err && !this._readableState.endEmitted) {
      err = new RequestAbortedError()
    }

    callback(err)
  }
}

class PipelineHandler extends AsyncResource {
  constructor (opts, handler) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (typeof handler !== 'function') {
      throw new InvalidArgumentError('invalid handler')
    }

    const { signal, method, opaque, onInfo, responseHeaders } = opts

    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
    }

    if (method === 'CONNECT') {
      throw new InvalidArgumentError('invalid method')
    }

    if (onInfo && typeof onInfo !== 'function') {
      throw new InvalidArgumentError('invalid onInfo callback')
    }

    super('UNDICI_PIPELINE')

    this.opaque = opaque || null
    this.responseHeaders = responseHeaders || null
    this.handler = handler
    this.abort = null
    this.context = null
    this.onInfo = onInfo || null

    this.req = new PipelineRequest().on('error', util.nop)

    this.ret = new Duplex({
      readableObjectMode: opts.objectMode,
      autoDestroy: true,
      read: () => {
        const { body } = this

        if (body && body.resume) {
          body.resume()
        }
      },
      write: (chunk, encoding, callback) => {
        const { req } = this

        if (req.push(chunk, encoding) || req._readableState.destroyed) {
          callback()
        } else {
          req[kResume] = callback
        }
      },
      destroy: (err, callback) => {
        const { body, req, res, ret, abort } = this

        if (!err && !ret._readableState.endEmitted) {
          err = new RequestAbortedError()
        }

        if (abort && err) {
          abort()
        }

        util.destroy(body, err)
        util.destroy(req, err)
        util.destroy(res, err)

        removeSignal(this)

        callback(err)
      }
    }).on('prefinish', () => {
      const { req } = this

      // Node < 15 does not call _final in same tick.
      req.push(null)
    })

    this.res = null

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    const { ret, res } = this

    assert(!res, 'pipeline cannot be retried')

    if (ret.destroyed) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders (statusCode, rawHeaders, resume) {
    const { opaque, handler, context } = this

    if (statusCode < 200) {
      if (this.onInfo) {
        const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
        this.onInfo({ statusCode, headers })
      }
      return
    }

    this.res = new PipelineResponse(resume)

    let body
    try {
      this.handler = null
      const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
      body = this.runInAsyncScope(handler, null, {
        statusCode,
        headers,
        opaque,
        body: this.res,
        context
      })
    } catch (err) {
      this.res.on('error', util.nop)
      throw err
    }

    if (!body || typeof body.on !== 'function') {
      throw new InvalidReturnValueError('expected Readable')
    }

    body
      .on('data', (chunk) => {
        const { ret, body } = this

        if (!ret.push(chunk) && body.pause) {
          body.pause()
        }
      })
      .on('error', (err) => {
        const { ret } = this

        util.destroy(ret, err)
      })
      .on('end', () => {
        const { ret } = this

        ret.push(null)
      })
      .on('close', () => {
        const { ret } = this

        if (!ret._readableState.ended) {
          util.destroy(ret, new RequestAbortedError())
        }
      })

    this.body = body
  }

  onData (chunk) {
    const { res } = this
    return res.push(chunk)
  }

  onComplete (trailers) {
    const { res } = this
    res.push(null)
  }

  onError (err) {
    const { ret } = this
    this.handler = null
    util.destroy(ret, err)
  }
}

function pipeline (opts, handler) {
  try {
    const pipelineHandler = new PipelineHandler(opts, handler)
    this.dispatch({ ...opts, body: pipelineHandler.req }, pipelineHandler)
    return pipelineHandler.ret
  } catch (err) {
    return new PassThrough().destroy(err)
  }
}

module.exports = pipeline


/***/ }),

/***/ "../../node_modules/undici/lib/api/api-request.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/api/api-request.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const Readable = __webpack_require__(/*! ./readable */ "../../node_modules/undici/lib/api/readable.js")
const {
  InvalidArgumentError,
  RequestAbortedError
} = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { getResolveErrorBodyCallback } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/api/util.js")
const { AsyncResource } = __webpack_require__(/*! async_hooks */ "async_hooks")
const { addSignal, removeSignal } = __webpack_require__(/*! ./abort-signal */ "../../node_modules/undici/lib/api/abort-signal.js")

class RequestHandler extends AsyncResource {
  constructor (opts, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError, highWaterMark } = opts

    try {
      if (typeof callback !== 'function') {
        throw new InvalidArgumentError('invalid callback')
      }

      if (highWaterMark && (typeof highWaterMark !== 'number' || highWaterMark < 0)) {
        throw new InvalidArgumentError('invalid highWaterMark')
      }

      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
      }

      if (method === 'CONNECT') {
        throw new InvalidArgumentError('invalid method')
      }

      if (onInfo && typeof onInfo !== 'function') {
        throw new InvalidArgumentError('invalid onInfo callback')
      }

      super('UNDICI_REQUEST')
    } catch (err) {
      if (util.isStream(body)) {
        util.destroy(body.on('error', util.nop), err)
      }
      throw err
    }

    this.responseHeaders = responseHeaders || null
    this.opaque = opaque || null
    this.callback = callback
    this.res = null
    this.abort = null
    this.body = body
    this.trailers = {}
    this.context = null
    this.onInfo = onInfo || null
    this.throwOnError = throwOnError
    this.highWaterMark = highWaterMark

    if (util.isStream(body)) {
      body.on('error', (err) => {
        this.onError(err)
      })
    }

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders (statusCode, rawHeaders, resume, statusMessage) {
    const { callback, opaque, abort, context, responseHeaders, highWaterMark } = this

    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)

    if (statusCode < 200) {
      if (this.onInfo) {
        this.onInfo({ statusCode, headers })
      }
      return
    }

    const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers
    const contentType = parsedHeaders['content-type']
    const body = new Readable({ resume, abort, contentType, highWaterMark })

    this.callback = null
    this.res = body
    if (callback !== null) {
      if (this.throwOnError && statusCode >= 400) {
        this.runInAsyncScope(getResolveErrorBodyCallback, null,
          { callback, body, contentType, statusCode, statusMessage, headers }
        )
      } else {
        this.runInAsyncScope(callback, null, null, {
          statusCode,
          headers,
          trailers: this.trailers,
          opaque,
          body,
          context
        })
      }
    }
  }

  onData (chunk) {
    const { res } = this
    return res.push(chunk)
  }

  onComplete (trailers) {
    const { res } = this

    removeSignal(this)

    util.parseHeaders(trailers, this.trailers)

    res.push(null)
  }

  onError (err) {
    const { res, callback, body, opaque } = this

    removeSignal(this)

    if (callback) {
      // TODO: Does this need queueMicrotask?
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }

    if (res) {
      this.res = null
      // Ensure all queued handlers are invoked before destroying res.
      queueMicrotask(() => {
        util.destroy(res, err)
      })
    }

    if (body) {
      this.body = null
      util.destroy(body, err)
    }
  }
}

function request (opts, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      request.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    this.dispatch(opts, new RequestHandler(opts, callback))
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = request
module.exports.RequestHandler = RequestHandler


/***/ }),

/***/ "../../node_modules/undici/lib/api/api-stream.js":
/*!*******************************************************!*\
  !*** ../../node_modules/undici/lib/api/api-stream.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { finished, PassThrough } = __webpack_require__(/*! stream */ "stream")
const {
  InvalidArgumentError,
  InvalidReturnValueError,
  RequestAbortedError
} = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { getResolveErrorBodyCallback } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/api/util.js")
const { AsyncResource } = __webpack_require__(/*! async_hooks */ "async_hooks")
const { addSignal, removeSignal } = __webpack_require__(/*! ./abort-signal */ "../../node_modules/undici/lib/api/abort-signal.js")

class StreamHandler extends AsyncResource {
  constructor (opts, factory, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    const { signal, method, opaque, body, onInfo, responseHeaders, throwOnError } = opts

    try {
      if (typeof callback !== 'function') {
        throw new InvalidArgumentError('invalid callback')
      }

      if (typeof factory !== 'function') {
        throw new InvalidArgumentError('invalid factory')
      }

      if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
        throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
      }

      if (method === 'CONNECT') {
        throw new InvalidArgumentError('invalid method')
      }

      if (onInfo && typeof onInfo !== 'function') {
        throw new InvalidArgumentError('invalid onInfo callback')
      }

      super('UNDICI_STREAM')
    } catch (err) {
      if (util.isStream(body)) {
        util.destroy(body.on('error', util.nop), err)
      }
      throw err
    }

    this.responseHeaders = responseHeaders || null
    this.opaque = opaque || null
    this.factory = factory
    this.callback = callback
    this.res = null
    this.abort = null
    this.context = null
    this.trailers = null
    this.body = body
    this.onInfo = onInfo || null
    this.throwOnError = throwOnError || false

    if (util.isStream(body)) {
      body.on('error', (err) => {
        this.onError(err)
      })
    }

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = context
  }

  onHeaders (statusCode, rawHeaders, resume, statusMessage) {
    const { factory, opaque, context, callback, responseHeaders } = this

    const headers = responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)

    if (statusCode < 200) {
      if (this.onInfo) {
        this.onInfo({ statusCode, headers })
      }
      return
    }

    this.factory = null

    let res

    if (this.throwOnError && statusCode >= 400) {
      const parsedHeaders = responseHeaders === 'raw' ? util.parseHeaders(rawHeaders) : headers
      const contentType = parsedHeaders['content-type']
      res = new PassThrough()

      this.callback = null
      this.runInAsyncScope(getResolveErrorBodyCallback, null,
        { callback, body: res, contentType, statusCode, statusMessage, headers }
      )
    } else {
      if (factory === null) {
        return
      }

      res = this.runInAsyncScope(factory, null, {
        statusCode,
        headers,
        opaque,
        context
      })

      if (
        !res ||
        typeof res.write !== 'function' ||
        typeof res.end !== 'function' ||
        typeof res.on !== 'function'
      ) {
        throw new InvalidReturnValueError('expected Writable')
      }

      // TODO: Avoid finished. It registers an unnecessary amount of listeners.
      finished(res, { readable: false }, (err) => {
        const { callback, res, opaque, trailers, abort } = this

        this.res = null
        if (err || !res.readable) {
          util.destroy(res, err)
        }

        this.callback = null
        this.runInAsyncScope(callback, null, err || null, { opaque, trailers })

        if (err) {
          abort()
        }
      })
    }

    res.on('drain', resume)

    this.res = res

    const needDrain = res.writableNeedDrain !== undefined
      ? res.writableNeedDrain
      : res._writableState && res._writableState.needDrain

    return needDrain !== true
  }

  onData (chunk) {
    const { res } = this

    return res ? res.write(chunk) : true
  }

  onComplete (trailers) {
    const { res } = this

    removeSignal(this)

    if (!res) {
      return
    }

    this.trailers = util.parseHeaders(trailers)

    res.end()
  }

  onError (err) {
    const { res, callback, opaque, body } = this

    removeSignal(this)

    this.factory = null

    if (res) {
      this.res = null
      util.destroy(res, err)
    } else if (callback) {
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }

    if (body) {
      this.body = null
      util.destroy(body, err)
    }
  }
}

function stream (opts, factory, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      stream.call(this, opts, factory, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    this.dispatch(opts, new StreamHandler(opts, factory, callback))
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = stream


/***/ }),

/***/ "../../node_modules/undici/lib/api/api-upgrade.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/api/api-upgrade.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { InvalidArgumentError, RequestAbortedError, SocketError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const { AsyncResource } = __webpack_require__(/*! async_hooks */ "async_hooks")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { addSignal, removeSignal } = __webpack_require__(/*! ./abort-signal */ "../../node_modules/undici/lib/api/abort-signal.js")
const assert = __webpack_require__(/*! assert */ "assert")

class UpgradeHandler extends AsyncResource {
  constructor (opts, callback) {
    if (!opts || typeof opts !== 'object') {
      throw new InvalidArgumentError('invalid opts')
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    const { signal, opaque, responseHeaders } = opts

    if (signal && typeof signal.on !== 'function' && typeof signal.addEventListener !== 'function') {
      throw new InvalidArgumentError('signal must be an EventEmitter or EventTarget')
    }

    super('UNDICI_UPGRADE')

    this.responseHeaders = responseHeaders || null
    this.opaque = opaque || null
    this.callback = callback
    this.abort = null
    this.context = null

    addSignal(this, signal)
  }

  onConnect (abort, context) {
    if (!this.callback) {
      throw new RequestAbortedError()
    }

    this.abort = abort
    this.context = null
  }

  onHeaders () {
    throw new SocketError('bad upgrade', null)
  }

  onUpgrade (statusCode, rawHeaders, socket) {
    const { callback, opaque, context } = this

    assert.strictEqual(statusCode, 101)

    removeSignal(this)

    this.callback = null
    const headers = this.responseHeaders === 'raw' ? util.parseRawHeaders(rawHeaders) : util.parseHeaders(rawHeaders)
    this.runInAsyncScope(callback, null, null, {
      headers,
      socket,
      opaque,
      context
    })
  }

  onError (err) {
    const { callback, opaque } = this

    removeSignal(this)

    if (callback) {
      this.callback = null
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque })
      })
    }
  }
}

function upgrade (opts, callback) {
  if (callback === undefined) {
    return new Promise((resolve, reject) => {
      upgrade.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data)
      })
    })
  }

  try {
    const upgradeHandler = new UpgradeHandler(opts, callback)
    this.dispatch({
      ...opts,
      method: opts.method || 'GET',
      upgrade: opts.protocol || 'Websocket'
    }, upgradeHandler)
  } catch (err) {
    if (typeof callback !== 'function') {
      throw err
    }
    const opaque = opts && opts.opaque
    queueMicrotask(() => callback(err, { opaque }))
  }
}

module.exports = upgrade


/***/ }),

/***/ "../../node_modules/undici/lib/api/index.js":
/*!**************************************************!*\
  !*** ../../node_modules/undici/lib/api/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



module.exports.request = __webpack_require__(/*! ./api-request */ "../../node_modules/undici/lib/api/api-request.js")
module.exports.stream = __webpack_require__(/*! ./api-stream */ "../../node_modules/undici/lib/api/api-stream.js")
module.exports.pipeline = __webpack_require__(/*! ./api-pipeline */ "../../node_modules/undici/lib/api/api-pipeline.js")
module.exports.upgrade = __webpack_require__(/*! ./api-upgrade */ "../../node_modules/undici/lib/api/api-upgrade.js")
module.exports.connect = __webpack_require__(/*! ./api-connect */ "../../node_modules/undici/lib/api/api-connect.js")


/***/ }),

/***/ "../../node_modules/undici/lib/api/readable.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/api/readable.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Ported from https://github.com/nodejs/undici/pull/907



const assert = __webpack_require__(/*! assert */ "assert")
const { Readable } = __webpack_require__(/*! stream */ "stream")
const { RequestAbortedError, NotSupportedError, InvalidArgumentError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { ReadableStreamFrom, toUSVString } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")

let Blob

const kConsume = Symbol('kConsume')
const kReading = Symbol('kReading')
const kBody = Symbol('kBody')
const kAbort = Symbol('abort')
const kContentType = Symbol('kContentType')

const noop = () => {}

module.exports = class BodyReadable extends Readable {
  constructor ({
    resume,
    abort,
    contentType = '',
    highWaterMark = 64 * 1024 // Same as nodejs fs streams.
  }) {
    super({
      autoDestroy: true,
      read: resume,
      highWaterMark
    })

    this._readableState.dataEmitted = false

    this[kAbort] = abort
    this[kConsume] = null
    this[kBody] = null
    this[kContentType] = contentType

    // Is stream being consumed through Readable API?
    // This is an optimization so that we avoid checking
    // for 'data' and 'readable' listeners in the hot path
    // inside push().
    this[kReading] = false
  }

  destroy (err) {
    if (this.destroyed) {
      // Node < 16
      return this
    }

    if (!err && !this._readableState.endEmitted) {
      err = new RequestAbortedError()
    }

    if (err) {
      this[kAbort]()
    }

    return super.destroy(err)
  }

  emit (ev, ...args) {
    if (ev === 'data') {
      // Node < 16.7
      this._readableState.dataEmitted = true
    } else if (ev === 'error') {
      // Node < 16
      this._readableState.errorEmitted = true
    }
    return super.emit(ev, ...args)
  }

  on (ev, ...args) {
    if (ev === 'data' || ev === 'readable') {
      this[kReading] = true
    }
    return super.on(ev, ...args)
  }

  addListener (ev, ...args) {
    return this.on(ev, ...args)
  }

  off (ev, ...args) {
    const ret = super.off(ev, ...args)
    if (ev === 'data' || ev === 'readable') {
      this[kReading] = (
        this.listenerCount('data') > 0 ||
        this.listenerCount('readable') > 0
      )
    }
    return ret
  }

  removeListener (ev, ...args) {
    return this.off(ev, ...args)
  }

  push (chunk) {
    if (this[kConsume] && chunk !== null && this.readableLength === 0) {
      consumePush(this[kConsume], chunk)
      return this[kReading] ? super.push(chunk) : true
    }
    return super.push(chunk)
  }

  // https://fetch.spec.whatwg.org/#dom-body-text
  async text () {
    return consume(this, 'text')
  }

  // https://fetch.spec.whatwg.org/#dom-body-json
  async json () {
    return consume(this, 'json')
  }

  // https://fetch.spec.whatwg.org/#dom-body-blob
  async blob () {
    return consume(this, 'blob')
  }

  // https://fetch.spec.whatwg.org/#dom-body-arraybuffer
  async arrayBuffer () {
    return consume(this, 'arrayBuffer')
  }

  // https://fetch.spec.whatwg.org/#dom-body-formdata
  async formData () {
    // TODO: Implement.
    throw new NotSupportedError()
  }

  // https://fetch.spec.whatwg.org/#dom-body-bodyused
  get bodyUsed () {
    return util.isDisturbed(this)
  }

  // https://fetch.spec.whatwg.org/#dom-body-body
  get body () {
    if (!this[kBody]) {
      this[kBody] = ReadableStreamFrom(this)
      if (this[kConsume]) {
        // TODO: Is this the best way to force a lock?
        this[kBody].getReader() // Ensure stream is locked.
        assert(this[kBody].locked)
      }
    }
    return this[kBody]
  }

  dump (opts) {
    let limit = opts && Number.isFinite(opts.limit) ? opts.limit : 262144
    const signal = opts && opts.signal

    if (signal) {
      try {
        if (typeof signal !== 'object' || !('aborted' in signal)) {
          throw new InvalidArgumentError('signal must be an AbortSignal')
        }
        util.throwIfAborted(signal)
      } catch (err) {
        return Promise.reject(err)
      }
    }

    if (this.closed) {
      return Promise.resolve(null)
    }

    return new Promise((resolve, reject) => {
      const signalListenerCleanup = signal
        ? util.addAbortListener(signal, () => {
          this.destroy()
        })
        : noop

      this
        .on('close', function () {
          signalListenerCleanup()
          if (signal && signal.aborted) {
            reject(signal.reason || Object.assign(new Error('The operation was aborted'), { name: 'AbortError' }))
          } else {
            resolve(null)
          }
        })
        .on('error', noop)
        .on('data', function (chunk) {
          limit -= chunk.length
          if (limit <= 0) {
            this.destroy()
          }
        })
        .resume()
    })
  }
}

// https://streams.spec.whatwg.org/#readablestream-locked
function isLocked (self) {
  // Consume is an implicit lock.
  return (self[kBody] && self[kBody].locked === true) || self[kConsume]
}

// https://fetch.spec.whatwg.org/#body-unusable
function isUnusable (self) {
  return util.isDisturbed(self) || isLocked(self)
}

async function consume (stream, type) {
  if (isUnusable(stream)) {
    throw new TypeError('unusable')
  }

  assert(!stream[kConsume])

  return new Promise((resolve, reject) => {
    stream[kConsume] = {
      type,
      stream,
      resolve,
      reject,
      length: 0,
      body: []
    }

    stream
      .on('error', function (err) {
        consumeFinish(this[kConsume], err)
      })
      .on('close', function () {
        if (this[kConsume].body !== null) {
          consumeFinish(this[kConsume], new RequestAbortedError())
        }
      })

    process.nextTick(consumeStart, stream[kConsume])
  })
}

function consumeStart (consume) {
  if (consume.body === null) {
    return
  }

  const { _readableState: state } = consume.stream

  for (const chunk of state.buffer) {
    consumePush(consume, chunk)
  }

  if (state.endEmitted) {
    consumeEnd(this[kConsume])
  } else {
    consume.stream.on('end', function () {
      consumeEnd(this[kConsume])
    })
  }

  consume.stream.resume()

  while (consume.stream.read() != null) {
    // Loop
  }
}

function consumeEnd (consume) {
  const { type, body, resolve, stream, length } = consume

  try {
    if (type === 'text') {
      resolve(toUSVString(Buffer.concat(body)))
    } else if (type === 'json') {
      resolve(JSON.parse(Buffer.concat(body)))
    } else if (type === 'arrayBuffer') {
      const dst = new Uint8Array(length)

      let pos = 0
      for (const buf of body) {
        dst.set(buf, pos)
        pos += buf.byteLength
      }

      resolve(dst.buffer)
    } else if (type === 'blob') {
      if (!Blob) {
        Blob = (__webpack_require__(/*! buffer */ "buffer").Blob)
      }
      resolve(new Blob(body, { type: stream[kContentType] }))
    }

    consumeFinish(consume)
  } catch (err) {
    stream.destroy(err)
  }
}

function consumePush (consume, chunk) {
  consume.length += chunk.length
  consume.body.push(chunk)
}

function consumeFinish (consume, err) {
  if (consume.body === null) {
    return
  }

  if (err) {
    consume.reject(err)
  } else {
    consume.resolve()
  }

  consume.type = null
  consume.stream = null
  consume.resolve = null
  consume.reject = null
  consume.length = 0
  consume.body = null
}


/***/ }),

/***/ "../../node_modules/undici/lib/api/util.js":
/*!*************************************************!*\
  !*** ../../node_modules/undici/lib/api/util.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const assert = __webpack_require__(/*! assert */ "assert")
const {
  ResponseStatusCodeError
} = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const { toUSVString } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")

async function getResolveErrorBodyCallback ({ callback, body, contentType, statusCode, statusMessage, headers }) {
  assert(body)

  let chunks = []
  let limit = 0

  for await (const chunk of body) {
    chunks.push(chunk)
    limit += chunk.length
    if (limit > 128 * 1024) {
      chunks = null
      break
    }
  }

  if (statusCode === 204 || !contentType || !chunks) {
    process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))
    return
  }

  try {
    if (contentType.startsWith('application/json')) {
      const payload = JSON.parse(toUSVString(Buffer.concat(chunks)))
      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))
      return
    }

    if (contentType.startsWith('text/')) {
      const payload = toUSVString(Buffer.concat(chunks))
      process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers, payload))
      return
    }
  } catch (err) {
    // Process in a fallback if error
  }

  process.nextTick(callback, new ResponseStatusCodeError(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ''}`, statusCode, headers))
}

module.exports = { getResolveErrorBodyCallback }


/***/ }),

/***/ "../../node_modules/undici/lib/balanced-pool.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/balanced-pool.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const {
  BalancedPoolMissingUpstreamError,
  InvalidArgumentError
} = __webpack_require__(/*! ./core/errors */ "../../node_modules/undici/lib/core/errors.js")
const {
  PoolBase,
  kClients,
  kNeedDrain,
  kAddClient,
  kRemoveClient,
  kGetDispatcher
} = __webpack_require__(/*! ./pool-base */ "../../node_modules/undici/lib/pool-base.js")
const Pool = __webpack_require__(/*! ./pool */ "../../node_modules/undici/lib/pool.js")
const { kUrl, kInterceptors } = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { parseOrigin } = __webpack_require__(/*! ./core/util */ "../../node_modules/undici/lib/core/util.js")
const kFactory = Symbol('factory')

const kOptions = Symbol('options')
const kGreatestCommonDivisor = Symbol('kGreatestCommonDivisor')
const kCurrentWeight = Symbol('kCurrentWeight')
const kIndex = Symbol('kIndex')
const kWeight = Symbol('kWeight')
const kMaxWeightPerServer = Symbol('kMaxWeightPerServer')
const kErrorPenalty = Symbol('kErrorPenalty')

function getGreatestCommonDivisor (a, b) {
  if (b === 0) return a
  return getGreatestCommonDivisor(b, a % b)
}

function defaultFactory (origin, opts) {
  return new Pool(origin, opts)
}

class BalancedPool extends PoolBase {
  constructor (upstreams = [], { factory = defaultFactory, ...opts } = {}) {
    super()

    this[kOptions] = opts
    this[kIndex] = -1
    this[kCurrentWeight] = 0

    this[kMaxWeightPerServer] = this[kOptions].maxWeightPerServer || 100
    this[kErrorPenalty] = this[kOptions].errorPenalty || 15

    if (!Array.isArray(upstreams)) {
      upstreams = [upstreams]
    }

    if (typeof factory !== 'function') {
      throw new InvalidArgumentError('factory must be a function.')
    }

    this[kInterceptors] = opts.interceptors && opts.interceptors.BalancedPool && Array.isArray(opts.interceptors.BalancedPool)
      ? opts.interceptors.BalancedPool
      : []
    this[kFactory] = factory

    for (const upstream of upstreams) {
      this.addUpstream(upstream)
    }
    this._updateBalancedPoolStats()
  }

  addUpstream (upstream) {
    const upstreamOrigin = parseOrigin(upstream).origin

    if (this[kClients].find((pool) => (
      pool[kUrl].origin === upstreamOrigin &&
      pool.closed !== true &&
      pool.destroyed !== true
    ))) {
      return this
    }
    const pool = this[kFactory](upstreamOrigin, Object.assign({}, this[kOptions]))

    this[kAddClient](pool)
    pool.on('connect', () => {
      pool[kWeight] = Math.min(this[kMaxWeightPerServer], pool[kWeight] + this[kErrorPenalty])
    })

    pool.on('connectionError', () => {
      pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])
      this._updateBalancedPoolStats()
    })

    pool.on('disconnect', (...args) => {
      const err = args[2]
      if (err && err.code === 'UND_ERR_SOCKET') {
        // decrease the weight of the pool.
        pool[kWeight] = Math.max(1, pool[kWeight] - this[kErrorPenalty])
        this._updateBalancedPoolStats()
      }
    })

    for (const client of this[kClients]) {
      client[kWeight] = this[kMaxWeightPerServer]
    }

    this._updateBalancedPoolStats()

    return this
  }

  _updateBalancedPoolStats () {
    this[kGreatestCommonDivisor] = this[kClients].map(p => p[kWeight]).reduce(getGreatestCommonDivisor, 0)
  }

  removeUpstream (upstream) {
    const upstreamOrigin = parseOrigin(upstream).origin

    const pool = this[kClients].find((pool) => (
      pool[kUrl].origin === upstreamOrigin &&
      pool.closed !== true &&
      pool.destroyed !== true
    ))

    if (pool) {
      this[kRemoveClient](pool)
    }

    return this
  }

  get upstreams () {
    return this[kClients]
      .filter(dispatcher => dispatcher.closed !== true && dispatcher.destroyed !== true)
      .map((p) => p[kUrl].origin)
  }

  [kGetDispatcher] () {
    // We validate that pools is greater than 0,
    // otherwise we would have to wait until an upstream
    // is added, which might never happen.
    if (this[kClients].length === 0) {
      throw new BalancedPoolMissingUpstreamError()
    }

    const dispatcher = this[kClients].find(dispatcher => (
      !dispatcher[kNeedDrain] &&
      dispatcher.closed !== true &&
      dispatcher.destroyed !== true
    ))

    if (!dispatcher) {
      return
    }

    const allClientsBusy = this[kClients].map(pool => pool[kNeedDrain]).reduce((a, b) => a && b, true)

    if (allClientsBusy) {
      return
    }

    let counter = 0

    let maxWeightIndex = this[kClients].findIndex(pool => !pool[kNeedDrain])

    while (counter++ < this[kClients].length) {
      this[kIndex] = (this[kIndex] + 1) % this[kClients].length
      const pool = this[kClients][this[kIndex]]

      // find pool index with the largest weight
      if (pool[kWeight] > this[kClients][maxWeightIndex][kWeight] && !pool[kNeedDrain]) {
        maxWeightIndex = this[kIndex]
      }

      // decrease the current weight every `this[kClients].length`.
      if (this[kIndex] === 0) {
        // Set the current weight to the next lower weight.
        this[kCurrentWeight] = this[kCurrentWeight] - this[kGreatestCommonDivisor]

        if (this[kCurrentWeight] <= 0) {
          this[kCurrentWeight] = this[kMaxWeightPerServer]
        }
      }
      if (pool[kWeight] >= this[kCurrentWeight] && (!pool[kNeedDrain])) {
        return pool
      }
    }

    this[kCurrentWeight] = this[kClients][maxWeightIndex][kWeight]
    this[kIndex] = maxWeightIndex
    return this[kClients][maxWeightIndex]
  }
}

module.exports = BalancedPool


/***/ }),

/***/ "../../node_modules/undici/lib/cache/cache.js":
/*!****************************************************!*\
  !*** ../../node_modules/undici/lib/cache/cache.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { kConstruct } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/cache/symbols.js")
const { urlEquals, fieldValues: getFieldValues } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/cache/util.js")
const { kEnumerableProperty, isDisturbed } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { kHeadersList } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { webidl } = __webpack_require__(/*! ../fetch/webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { Response, cloneResponse } = __webpack_require__(/*! ../fetch/response */ "../../node_modules/undici/lib/fetch/response.js")
const { Request } = __webpack_require__(/*! ../fetch/request */ "../../node_modules/undici/lib/fetch/request.js")
const { kState, kHeaders, kGuard, kRealm } = __webpack_require__(/*! ../fetch/symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const { fetching } = __webpack_require__(/*! ../fetch/index */ "../../node_modules/undici/lib/fetch/index.js")
const { urlIsHttpHttpsScheme, createDeferredPromise, readAllBytes } = __webpack_require__(/*! ../fetch/util */ "../../node_modules/undici/lib/fetch/util.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { getGlobalDispatcher } = __webpack_require__(/*! ../global */ "../../node_modules/undici/lib/global.js")

/**
 * @see https://w3c.github.io/ServiceWorker/#dfn-cache-batch-operation
 * @typedef {Object} CacheBatchOperation
 * @property {'delete' | 'put'} type
 * @property {any} request
 * @property {any} response
 * @property {import('../../types/cache').CacheQueryOptions} options
 */

/**
 * @see https://w3c.github.io/ServiceWorker/#dfn-request-response-list
 * @typedef {[any, any][]} requestResponseList
 */

class Cache {
  /**
   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-request-response-list
   * @type {requestResponseList}
   */
  #relevantRequestResponseList

  constructor () {
    if (arguments[0] !== kConstruct) {
      webidl.illegalConstructor()
    }

    this.#relevantRequestResponseList = arguments[1]
  }

  async match (request, options = {}) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.match' })

    request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    const p = await this.matchAll(request, options)

    if (p.length === 0) {
      return
    }

    return p[0]
  }

  async matchAll (request = undefined, options = {}) {
    webidl.brandCheck(this, Cache)

    if (request !== undefined) request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    // 1.
    let r = null

    // 2.
    if (request !== undefined) {
      if (request instanceof Request) {
        // 2.1.1
        r = request[kState]

        // 2.1.2
        if (r.method !== 'GET' && !options.ignoreMethod) {
          return []
        }
      } else if (typeof request === 'string') {
        // 2.2.1
        r = new Request(request)[kState]
      }
    }

    // 5.
    // 5.1
    const responses = []

    // 5.2
    if (request === undefined) {
      // 5.2.1
      for (const requestResponse of this.#relevantRequestResponseList) {
        responses.push(requestResponse[1])
      }
    } else { // 5.3
      // 5.3.1
      const requestResponses = this.#queryCache(r, options)

      // 5.3.2
      for (const requestResponse of requestResponses) {
        responses.push(requestResponse[1])
      }
    }

    // 5.4
    // We don't implement CORs so we don't need to loop over the responses, yay!

    // 5.5.1
    const responseList = []

    // 5.5.2
    for (const response of responses) {
      // 5.5.2.1
      const responseObject = new Response(response.body?.source ?? null)
      const body = responseObject[kState].body
      responseObject[kState] = response
      responseObject[kState].body = body
      responseObject[kHeaders][kHeadersList] = response.headersList
      responseObject[kHeaders][kGuard] = 'immutable'

      responseList.push(responseObject)
    }

    // 6.
    return Object.freeze(responseList)
  }

  async add (request) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.add' })

    request = webidl.converters.RequestInfo(request)

    // 1.
    const requests = [request]

    // 2.
    const responseArrayPromise = this.addAll(requests)

    // 3.
    return await responseArrayPromise
  }

  async addAll (requests) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.addAll' })

    requests = webidl.converters['sequence<RequestInfo>'](requests)

    // 1.
    const responsePromises = []

    // 2.
    const requestList = []

    // 3.
    for (const request of requests) {
      if (typeof request === 'string') {
        continue
      }

      // 3.1
      const r = request[kState]

      // 3.2
      if (!urlIsHttpHttpsScheme(r.url) || r.method !== 'GET') {
        throw webidl.errors.exception({
          header: 'Cache.addAll',
          message: 'Expected http/s scheme when method is not GET.'
        })
      }
    }

    // 4.
    /** @type {ReturnType<typeof fetching>[]} */
    const fetchControllers = []

    // 5.
    for (const request of requests) {
      // 5.1
      const r = new Request(request)[kState]

      // 5.2
      if (!urlIsHttpHttpsScheme(r.url)) {
        throw webidl.errors.exception({
          header: 'Cache.addAll',
          message: 'Expected http/s scheme.'
        })
      }

      // 5.4
      r.initiator = 'fetch'
      r.destination = 'subresource'

      // 5.5
      requestList.push(r)

      // 5.6
      const responsePromise = createDeferredPromise()

      // 5.7
      fetchControllers.push(fetching({
        request: r,
        dispatcher: getGlobalDispatcher(),
        processResponse (response) {
          // 1.
          if (response.type === 'error' || response.status === 206 || response.status < 200 || response.status > 299) {
            responsePromise.reject(webidl.errors.exception({
              header: 'Cache.addAll',
              message: 'Received an invalid status code or the request failed.'
            }))
          } else if (response.headersList.contains('vary')) { // 2.
            // 2.1
            const fieldValues = getFieldValues(response.headersList.get('vary'))

            // 2.2
            for (const fieldValue of fieldValues) {
              // 2.2.1
              if (fieldValue === '*') {
                responsePromise.reject(webidl.errors.exception({
                  header: 'Cache.addAll',
                  message: 'invalid vary field value'
                }))

                for (const controller of fetchControllers) {
                  controller.abort()
                }

                return
              }
            }
          }
        },
        processResponseEndOfBody (response) {
          // 1.
          if (response.aborted) {
            responsePromise.reject(new DOMException('aborted', 'AbortError'))
            return
          }

          // 2.
          responsePromise.resolve(response)
        }
      }))

      // 5.8
      responsePromises.push(responsePromise.promise)
    }

    // 6.
    const p = Promise.all(responsePromises)

    // 7.
    const responses = await p

    // 7.1
    const operations = []

    // 7.2
    let index = 0

    // 7.3
    for (const response of responses) {
      // 7.3.1
      /** @type {CacheBatchOperation} */
      const operation = {
        type: 'put', // 7.3.2
        request: requestList[index], // 7.3.3
        response // 7.3.4
      }

      operations.push(operation) // 7.3.5

      index++ // 7.3.6
    }

    // 7.5
    const cacheJobPromise = createDeferredPromise()

    // 7.6.1
    let errorData = null

    // 7.6.2
    try {
      this.#batchCacheOperations(operations)
    } catch (e) {
      errorData = e
    }

    // 7.6.3
    queueMicrotask(() => {
      // 7.6.3.1
      if (errorData === null) {
        cacheJobPromise.resolve(undefined)
      } else {
        // 7.6.3.2
        cacheJobPromise.reject(errorData)
      }
    })

    // 7.7
    return cacheJobPromise.promise
  }

  async put (request, response) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 2, { header: 'Cache.put' })

    request = webidl.converters.RequestInfo(request)
    response = webidl.converters.Response(response)

    // 1.
    let innerRequest = null

    // 2.
    if (request instanceof Request) {
      innerRequest = request[kState]
    } else { // 3.
      innerRequest = new Request(request)[kState]
    }

    // 4.
    if (!urlIsHttpHttpsScheme(innerRequest.url) || innerRequest.method !== 'GET') {
      throw webidl.errors.exception({
        header: 'Cache.put',
        message: 'Expected an http/s scheme when method is not GET'
      })
    }

    // 5.
    const innerResponse = response[kState]

    // 6.
    if (innerResponse.status === 206) {
      throw webidl.errors.exception({
        header: 'Cache.put',
        message: 'Got 206 status'
      })
    }

    // 7.
    if (innerResponse.headersList.contains('vary')) {
      // 7.1.
      const fieldValues = getFieldValues(innerResponse.headersList.get('vary'))

      // 7.2.
      for (const fieldValue of fieldValues) {
        // 7.2.1
        if (fieldValue === '*') {
          throw webidl.errors.exception({
            header: 'Cache.put',
            message: 'Got * vary field value'
          })
        }
      }
    }

    // 8.
    if (innerResponse.body && (isDisturbed(innerResponse.body.stream) || innerResponse.body.stream.locked)) {
      throw webidl.errors.exception({
        header: 'Cache.put',
        message: 'Response body is locked or disturbed'
      })
    }

    // 9.
    const clonedResponse = cloneResponse(innerResponse)

    // 10.
    const bodyReadPromise = createDeferredPromise()

    // 11.
    if (innerResponse.body != null) {
      // 11.1
      const stream = innerResponse.body.stream

      // 11.2
      const reader = stream.getReader()

      // 11.3
      readAllBytes(reader).then(bodyReadPromise.resolve, bodyReadPromise.reject)
    } else {
      bodyReadPromise.resolve(undefined)
    }

    // 12.
    /** @type {CacheBatchOperation[]} */
    const operations = []

    // 13.
    /** @type {CacheBatchOperation} */
    const operation = {
      type: 'put', // 14.
      request: innerRequest, // 15.
      response: clonedResponse // 16.
    }

    // 17.
    operations.push(operation)

    // 19.
    const bytes = await bodyReadPromise.promise

    if (clonedResponse.body != null) {
      clonedResponse.body.source = bytes
    }

    // 19.1
    const cacheJobPromise = createDeferredPromise()

    // 19.2.1
    let errorData = null

    // 19.2.2
    try {
      this.#batchCacheOperations(operations)
    } catch (e) {
      errorData = e
    }

    // 19.2.3
    queueMicrotask(() => {
      // 19.2.3.1
      if (errorData === null) {
        cacheJobPromise.resolve()
      } else { // 19.2.3.2
        cacheJobPromise.reject(errorData)
      }
    })

    return cacheJobPromise.promise
  }

  async delete (request, options = {}) {
    webidl.brandCheck(this, Cache)
    webidl.argumentLengthCheck(arguments, 1, { header: 'Cache.delete' })

    request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    /**
     * @type {Request}
     */
    let r = null

    if (request instanceof Request) {
      r = request[kState]

      if (r.method !== 'GET' && !options.ignoreMethod) {
        return false
      }
    } else {
      assert(typeof request === 'string')

      r = new Request(request)[kState]
    }

    /** @type {CacheBatchOperation[]} */
    const operations = []

    /** @type {CacheBatchOperation} */
    const operation = {
      type: 'delete',
      request: r,
      options
    }

    operations.push(operation)

    const cacheJobPromise = createDeferredPromise()

    let errorData = null
    let requestResponses

    try {
      requestResponses = this.#batchCacheOperations(operations)
    } catch (e) {
      errorData = e
    }

    queueMicrotask(() => {
      if (errorData === null) {
        cacheJobPromise.resolve(!!requestResponses?.length)
      } else {
        cacheJobPromise.reject(errorData)
      }
    })

    return cacheJobPromise.promise
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#dom-cache-keys
   * @param {any} request
   * @param {import('../../types/cache').CacheQueryOptions} options
   * @returns {readonly Request[]}
   */
  async keys (request = undefined, options = {}) {
    webidl.brandCheck(this, Cache)

    if (request !== undefined) request = webidl.converters.RequestInfo(request)
    options = webidl.converters.CacheQueryOptions(options)

    // 1.
    let r = null

    // 2.
    if (request !== undefined) {
      // 2.1
      if (request instanceof Request) {
        // 2.1.1
        r = request[kState]

        // 2.1.2
        if (r.method !== 'GET' && !options.ignoreMethod) {
          return []
        }
      } else if (typeof request === 'string') { // 2.2
        r = new Request(request)[kState]
      }
    }

    // 4.
    const promise = createDeferredPromise()

    // 5.
    // 5.1
    const requests = []

    // 5.2
    if (request === undefined) {
      // 5.2.1
      for (const requestResponse of this.#relevantRequestResponseList) {
        // 5.2.1.1
        requests.push(requestResponse[0])
      }
    } else { // 5.3
      // 5.3.1
      const requestResponses = this.#queryCache(r, options)

      // 5.3.2
      for (const requestResponse of requestResponses) {
        // 5.3.2.1
        requests.push(requestResponse[0])
      }
    }

    // 5.4
    queueMicrotask(() => {
      // 5.4.1
      const requestList = []

      // 5.4.2
      for (const request of requests) {
        const requestObject = new Request('https://a')
        requestObject[kState] = request
        requestObject[kHeaders][kHeadersList] = request.headersList
        requestObject[kHeaders][kGuard] = 'immutable'
        requestObject[kRealm] = request.client

        // 5.4.2.1
        requestList.push(requestObject)
      }

      // 5.4.3
      promise.resolve(Object.freeze(requestList))
    })

    return promise.promise
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#batch-cache-operations-algorithm
   * @param {CacheBatchOperation[]} operations
   * @returns {requestResponseList}
   */
  #batchCacheOperations (operations) {
    // 1.
    const cache = this.#relevantRequestResponseList

    // 2.
    const backupCache = [...cache]

    // 3.
    const addedItems = []

    // 4.1
    const resultList = []

    try {
      // 4.2
      for (const operation of operations) {
        // 4.2.1
        if (operation.type !== 'delete' && operation.type !== 'put') {
          throw webidl.errors.exception({
            header: 'Cache.#batchCacheOperations',
            message: 'operation type does not match "delete" or "put"'
          })
        }

        // 4.2.2
        if (operation.type === 'delete' && operation.response != null) {
          throw webidl.errors.exception({
            header: 'Cache.#batchCacheOperations',
            message: 'delete operation should not have an associated response'
          })
        }

        // 4.2.3
        if (this.#queryCache(operation.request, operation.options, addedItems).length) {
          throw new DOMException('???', 'InvalidStateError')
        }

        // 4.2.4
        let requestResponses

        // 4.2.5
        if (operation.type === 'delete') {
          // 4.2.5.1
          requestResponses = this.#queryCache(operation.request, operation.options)

          // TODO: the spec is wrong, this is needed to pass WPTs
          if (requestResponses.length === 0) {
            return []
          }

          // 4.2.5.2
          for (const requestResponse of requestResponses) {
            const idx = cache.indexOf(requestResponse)
            assert(idx !== -1)

            // 4.2.5.2.1
            cache.splice(idx, 1)
          }
        } else if (operation.type === 'put') { // 4.2.6
          // 4.2.6.1
          if (operation.response == null) {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'put operation should have an associated response'
            })
          }

          // 4.2.6.2
          const r = operation.request

          // 4.2.6.3
          if (!urlIsHttpHttpsScheme(r.url)) {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'expected http or https scheme'
            })
          }

          // 4.2.6.4
          if (r.method !== 'GET') {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'not get method'
            })
          }

          // 4.2.6.5
          if (operation.options != null) {
            throw webidl.errors.exception({
              header: 'Cache.#batchCacheOperations',
              message: 'options must not be defined'
            })
          }

          // 4.2.6.6
          requestResponses = this.#queryCache(operation.request)

          // 4.2.6.7
          for (const requestResponse of requestResponses) {
            const idx = cache.indexOf(requestResponse)
            assert(idx !== -1)

            // 4.2.6.7.1
            cache.splice(idx, 1)
          }

          // 4.2.6.8
          cache.push([operation.request, operation.response])

          // 4.2.6.10
          addedItems.push([operation.request, operation.response])
        }

        // 4.2.7
        resultList.push([operation.request, operation.response])
      }

      // 4.3
      return resultList
    } catch (e) { // 5.
      // 5.1
      this.#relevantRequestResponseList.length = 0

      // 5.2
      this.#relevantRequestResponseList = backupCache

      // 5.3
      throw e
    }
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#query-cache
   * @param {any} requestQuery
   * @param {import('../../types/cache').CacheQueryOptions} options
   * @param {requestResponseList} targetStorage
   * @returns {requestResponseList}
   */
  #queryCache (requestQuery, options, targetStorage) {
    /** @type {requestResponseList} */
    const resultList = []

    const storage = targetStorage ?? this.#relevantRequestResponseList

    for (const requestResponse of storage) {
      const [cachedRequest, cachedResponse] = requestResponse
      if (this.#requestMatchesCachedItem(requestQuery, cachedRequest, cachedResponse, options)) {
        resultList.push(requestResponse)
      }
    }

    return resultList
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#request-matches-cached-item-algorithm
   * @param {any} requestQuery
   * @param {any} request
   * @param {any | null} response
   * @param {import('../../types/cache').CacheQueryOptions | undefined} options
   * @returns {boolean}
   */
  #requestMatchesCachedItem (requestQuery, request, response = null, options) {
    // if (options?.ignoreMethod === false && request.method === 'GET') {
    //   return false
    // }

    const queryURL = new URL(requestQuery.url)

    const cachedURL = new URL(request.url)

    if (options?.ignoreSearch) {
      cachedURL.search = ''

      queryURL.search = ''
    }

    if (!urlEquals(queryURL, cachedURL, true)) {
      return false
    }

    if (
      response == null ||
      options?.ignoreVary ||
      !response.headersList.contains('vary')
    ) {
      return true
    }

    const fieldValues = getFieldValues(response.headersList.get('vary'))

    for (const fieldValue of fieldValues) {
      if (fieldValue === '*') {
        return false
      }

      const requestValue = request.headersList.get(fieldValue)
      const queryValue = requestQuery.headersList.get(fieldValue)

      // If one has the header and the other doesn't, or one has
      // a different value than the other, return false
      if (requestValue !== queryValue) {
        return false
      }
    }

    return true
  }
}

Object.defineProperties(Cache.prototype, {
  [Symbol.toStringTag]: {
    value: 'Cache',
    configurable: true
  },
  match: kEnumerableProperty,
  matchAll: kEnumerableProperty,
  add: kEnumerableProperty,
  addAll: kEnumerableProperty,
  put: kEnumerableProperty,
  delete: kEnumerableProperty,
  keys: kEnumerableProperty
})

const cacheQueryOptionConverters = [
  {
    key: 'ignoreSearch',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'ignoreMethod',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'ignoreVary',
    converter: webidl.converters.boolean,
    defaultValue: false
  }
]

webidl.converters.CacheQueryOptions = webidl.dictionaryConverter(cacheQueryOptionConverters)

webidl.converters.MultiCacheQueryOptions = webidl.dictionaryConverter([
  ...cacheQueryOptionConverters,
  {
    key: 'cacheName',
    converter: webidl.converters.DOMString
  }
])

webidl.converters.Response = webidl.interfaceConverter(Response)

webidl.converters['sequence<RequestInfo>'] = webidl.sequenceConverter(
  webidl.converters.RequestInfo
)

module.exports = {
  Cache
}


/***/ }),

/***/ "../../node_modules/undici/lib/cache/cachestorage.js":
/*!***********************************************************!*\
  !*** ../../node_modules/undici/lib/cache/cachestorage.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { kConstruct } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/cache/symbols.js")
const { Cache } = __webpack_require__(/*! ./cache */ "../../node_modules/undici/lib/cache/cache.js")
const { webidl } = __webpack_require__(/*! ../fetch/webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { kEnumerableProperty } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")

class CacheStorage {
  /**
   * @see https://w3c.github.io/ServiceWorker/#dfn-relevant-name-to-cache-map
   * @type {Map<string, import('./cache').requestResponseList}
   */
  #caches = new Map()

  constructor () {
    if (arguments[0] !== kConstruct) {
      webidl.illegalConstructor()
    }
  }

  async match (request, options = {}) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.match' })

    request = webidl.converters.RequestInfo(request)
    options = webidl.converters.MultiCacheQueryOptions(options)

    // 1.
    if (options.cacheName != null) {
      // 1.1.1.1
      if (this.#caches.has(options.cacheName)) {
        // 1.1.1.1.1
        const cacheList = this.#caches.get(options.cacheName)
        const cache = new Cache(kConstruct, cacheList)

        return await cache.match(request, options)
      }
    } else { // 2.
      // 2.2
      for (const cacheList of this.#caches.values()) {
        const cache = new Cache(kConstruct, cacheList)

        // 2.2.1.2
        const response = await cache.match(request, options)

        if (response !== undefined) {
          return response
        }
      }
    }
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#cache-storage-has
   * @param {string} cacheName
   * @returns {Promise<boolean>}
   */
  async has (cacheName) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.has' })

    cacheName = webidl.converters.DOMString(cacheName)

    // 2.1.1
    // 2.2
    return this.#caches.has(cacheName)
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#dom-cachestorage-open
   * @param {string} cacheName
   * @returns {Promise<Cache>}
   */
  async open (cacheName) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.open' })

    cacheName = webidl.converters.DOMString(cacheName)

    // 2.1
    if (this.#caches.has(cacheName)) {
      // await caches.open('v1') !== await caches.open('v1')

      // 2.1.1
      const cache = this.#caches.get(cacheName)

      // 2.1.1.1
      return new Cache(kConstruct, cache)
    }

    // 2.2
    const cache = []

    // 2.3
    this.#caches.set(cacheName, cache)

    // 2.4
    return new Cache(kConstruct, cache)
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#cache-storage-delete
   * @param {string} cacheName
   * @returns {Promise<boolean>}
   */
  async delete (cacheName) {
    webidl.brandCheck(this, CacheStorage)
    webidl.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.delete' })

    cacheName = webidl.converters.DOMString(cacheName)

    return this.#caches.delete(cacheName)
  }

  /**
   * @see https://w3c.github.io/ServiceWorker/#cache-storage-keys
   * @returns {string[]}
   */
  async keys () {
    webidl.brandCheck(this, CacheStorage)

    // 2.1
    const keys = this.#caches.keys()

    // 2.2
    return [...keys]
  }
}

Object.defineProperties(CacheStorage.prototype, {
  [Symbol.toStringTag]: {
    value: 'CacheStorage',
    configurable: true
  },
  match: kEnumerableProperty,
  has: kEnumerableProperty,
  open: kEnumerableProperty,
  delete: kEnumerableProperty,
  keys: kEnumerableProperty
})

module.exports = {
  CacheStorage
}


/***/ }),

/***/ "../../node_modules/undici/lib/cache/symbols.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/cache/symbols.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



module.exports = {
  kConstruct: (__webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js").kConstruct)
}


/***/ }),

/***/ "../../node_modules/undici/lib/cache/util.js":
/*!***************************************************!*\
  !*** ../../node_modules/undici/lib/cache/util.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const assert = __webpack_require__(/*! assert */ "assert")
const { URLSerializer } = __webpack_require__(/*! ../fetch/dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const { isValidHeaderName } = __webpack_require__(/*! ../fetch/util */ "../../node_modules/undici/lib/fetch/util.js")

/**
 * @see https://url.spec.whatwg.org/#concept-url-equals
 * @param {URL} A
 * @param {URL} B
 * @param {boolean | undefined} excludeFragment
 * @returns {boolean}
 */
function urlEquals (A, B, excludeFragment = false) {
  const serializedA = URLSerializer(A, excludeFragment)

  const serializedB = URLSerializer(B, excludeFragment)

  return serializedA === serializedB
}

/**
 * @see https://github.com/chromium/chromium/blob/694d20d134cb553d8d89e5500b9148012b1ba299/content/browser/cache_storage/cache_storage_cache.cc#L260-L262
 * @param {string} header
 */
function fieldValues (header) {
  assert(header !== null)

  const values = []

  for (let value of header.split(',')) {
    value = value.trim()

    if (!value.length) {
      continue
    } else if (!isValidHeaderName(value)) {
      continue
    }

    values.push(value)
  }

  return values
}

module.exports = {
  urlEquals,
  fieldValues
}


/***/ }),

/***/ "../../node_modules/undici/lib/client.js":
/*!***********************************************!*\
  !*** ../../node_modules/undici/lib/client.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// @ts-check



/* global WebAssembly */

const assert = __webpack_require__(/*! assert */ "assert")
const net = __webpack_require__(/*! net */ "net")
const http = __webpack_require__(/*! http */ "http")
const { pipeline } = __webpack_require__(/*! stream */ "stream")
const util = __webpack_require__(/*! ./core/util */ "../../node_modules/undici/lib/core/util.js")
const timers = __webpack_require__(/*! ./timers */ "../../node_modules/undici/lib/timers.js")
const Request = __webpack_require__(/*! ./core/request */ "../../node_modules/undici/lib/core/request.js")
const DispatcherBase = __webpack_require__(/*! ./dispatcher-base */ "../../node_modules/undici/lib/dispatcher-base.js")
const {
  RequestContentLengthMismatchError,
  ResponseContentLengthMismatchError,
  InvalidArgumentError,
  RequestAbortedError,
  HeadersTimeoutError,
  HeadersOverflowError,
  SocketError,
  InformationalError,
  BodyTimeoutError,
  HTTPParserError,
  ResponseExceededMaxSizeError,
  ClientDestroyedError
} = __webpack_require__(/*! ./core/errors */ "../../node_modules/undici/lib/core/errors.js")
const buildConnector = __webpack_require__(/*! ./core/connect */ "../../node_modules/undici/lib/core/connect.js")
const {
  kUrl,
  kReset,
  kServerName,
  kClient,
  kBusy,
  kParser,
  kConnect,
  kBlocking,
  kResuming,
  kRunning,
  kPending,
  kSize,
  kWriting,
  kQueue,
  kConnected,
  kConnecting,
  kNeedDrain,
  kNoRef,
  kKeepAliveDefaultTimeout,
  kHostHeader,
  kPendingIdx,
  kRunningIdx,
  kError,
  kPipelining,
  kSocket,
  kKeepAliveTimeoutValue,
  kMaxHeadersSize,
  kKeepAliveMaxTimeout,
  kKeepAliveTimeoutThreshold,
  kHeadersTimeout,
  kBodyTimeout,
  kStrictContentLength,
  kConnector,
  kMaxRedirections,
  kMaxRequests,
  kCounter,
  kClose,
  kDestroy,
  kDispatch,
  kInterceptors,
  kLocalAddress,
  kMaxResponseSize,
  kHTTPConnVersion,
  // HTTP2
  kHost,
  kHTTP2Session,
  kHTTP2SessionState,
  kHTTP2BuildRequest,
  kHTTP2CopyHeaders,
  kHTTP1BuildRequest
} = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")

/** @type {import('http2')} */
let http2
try {
  http2 = __webpack_require__(/*! http2 */ "http2")
} catch {
  // @ts-ignore
  http2 = { constants: {} }
}

const {
  constants: {
    HTTP2_HEADER_AUTHORITY,
    HTTP2_HEADER_METHOD,
    HTTP2_HEADER_PATH,
    HTTP2_HEADER_SCHEME,
    HTTP2_HEADER_CONTENT_LENGTH,
    HTTP2_HEADER_EXPECT,
    HTTP2_HEADER_STATUS
  }
} = http2

// Experimental
let h2ExperimentalWarned = false

const FastBuffer = Buffer[Symbol.species]

const kClosedResolve = Symbol('kClosedResolve')

const channels = {}

try {
  const diagnosticsChannel = __webpack_require__(/*! diagnostics_channel */ "diagnostics_channel")
  channels.sendHeaders = diagnosticsChannel.channel('undici:client:sendHeaders')
  channels.beforeConnect = diagnosticsChannel.channel('undici:client:beforeConnect')
  channels.connectError = diagnosticsChannel.channel('undici:client:connectError')
  channels.connected = diagnosticsChannel.channel('undici:client:connected')
} catch {
  channels.sendHeaders = { hasSubscribers: false }
  channels.beforeConnect = { hasSubscribers: false }
  channels.connectError = { hasSubscribers: false }
  channels.connected = { hasSubscribers: false }
}

/**
 * @type {import('../types/client').default}
 */
class Client extends DispatcherBase {
  /**
   *
   * @param {string|URL} url
   * @param {import('../types/client').Client.Options} options
   */
  constructor (url, {
    interceptors,
    maxHeaderSize,
    headersTimeout,
    socketTimeout,
    requestTimeout,
    connectTimeout,
    bodyTimeout,
    idleTimeout,
    keepAlive,
    keepAliveTimeout,
    maxKeepAliveTimeout,
    keepAliveMaxTimeout,
    keepAliveTimeoutThreshold,
    socketPath,
    pipelining,
    tls,
    strictContentLength,
    maxCachedSessions,
    maxRedirections,
    connect,
    maxRequestsPerClient,
    localAddress,
    maxResponseSize,
    autoSelectFamily,
    autoSelectFamilyAttemptTimeout,
    // h2
    allowH2,
    maxConcurrentStreams
  } = {}) {
    super()

    if (keepAlive !== undefined) {
      throw new InvalidArgumentError('unsupported keepAlive, use pipelining=0 instead')
    }

    if (socketTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported socketTimeout, use headersTimeout & bodyTimeout instead')
    }

    if (requestTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported requestTimeout, use headersTimeout & bodyTimeout instead')
    }

    if (idleTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported idleTimeout, use keepAliveTimeout instead')
    }

    if (maxKeepAliveTimeout !== undefined) {
      throw new InvalidArgumentError('unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead')
    }

    if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {
      throw new InvalidArgumentError('invalid maxHeaderSize')
    }

    if (socketPath != null && typeof socketPath !== 'string') {
      throw new InvalidArgumentError('invalid socketPath')
    }

    if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {
      throw new InvalidArgumentError('invalid connectTimeout')
    }

    if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {
      throw new InvalidArgumentError('invalid keepAliveTimeout')
    }

    if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {
      throw new InvalidArgumentError('invalid keepAliveMaxTimeout')
    }

    if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {
      throw new InvalidArgumentError('invalid keepAliveTimeoutThreshold')
    }

    if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {
      throw new InvalidArgumentError('headersTimeout must be a positive integer or zero')
    }

    if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {
      throw new InvalidArgumentError('bodyTimeout must be a positive integer or zero')
    }

    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {
      throw new InvalidArgumentError('connect must be a function or an object')
    }

    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
      throw new InvalidArgumentError('maxRedirections must be a positive number')
    }

    if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {
      throw new InvalidArgumentError('maxRequestsPerClient must be a positive number')
    }

    if (localAddress != null && (typeof localAddress !== 'string' || net.isIP(localAddress) === 0)) {
      throw new InvalidArgumentError('localAddress must be valid string IP address')
    }

    if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {
      throw new InvalidArgumentError('maxResponseSize must be a positive number')
    }

    if (
      autoSelectFamilyAttemptTimeout != null &&
      (!Number.isInteger(autoSelectFamilyAttemptTimeout) || autoSelectFamilyAttemptTimeout < -1)
    ) {
      throw new InvalidArgumentError('autoSelectFamilyAttemptTimeout must be a positive number')
    }

    // h2
    if (allowH2 != null && typeof allowH2 !== 'boolean') {
      throw new InvalidArgumentError('allowH2 must be a valid boolean value')
    }

    if (maxConcurrentStreams != null && (typeof maxConcurrentStreams !== 'number' || maxConcurrentStreams < 1)) {
      throw new InvalidArgumentError('maxConcurrentStreams must be a possitive integer, greater than 0')
    }

    if (typeof connect !== 'function') {
      connect = buildConnector({
        ...tls,
        maxCachedSessions,
        allowH2,
        socketPath,
        timeout: connectTimeout,
        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),
        ...connect
      })
    }

    this[kInterceptors] = interceptors && interceptors.Client && Array.isArray(interceptors.Client)
      ? interceptors.Client
      : [createRedirectInterceptor({ maxRedirections })]
    this[kUrl] = util.parseOrigin(url)
    this[kConnector] = connect
    this[kSocket] = null
    this[kPipelining] = pipelining != null ? pipelining : 1
    this[kMaxHeadersSize] = maxHeaderSize || http.maxHeaderSize
    this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout
    this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 600e3 : keepAliveMaxTimeout
    this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold
    this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout]
    this[kServerName] = null
    this[kLocalAddress] = localAddress != null ? localAddress : null
    this[kResuming] = 0 // 0, idle, 1, scheduled, 2 resuming
    this[kNeedDrain] = 0 // 0, idle, 1, scheduled, 2 resuming
    this[kHostHeader] = `host: ${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}\r\n`
    this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 300e3
    this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 300e3
    this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength
    this[kMaxRedirections] = maxRedirections
    this[kMaxRequests] = maxRequestsPerClient
    this[kClosedResolve] = null
    this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1
    this[kHTTPConnVersion] = 'h1'

    // HTTP/2
    this[kHTTP2Session] = null
    this[kHTTP2SessionState] = !allowH2
      ? null
      : {
        // streams: null, // Fixed queue of streams - For future support of `push`
          openStreams: 0, // Keep track of them to decide wether or not unref the session
          maxConcurrentStreams: maxConcurrentStreams != null ? maxConcurrentStreams : 100 // Max peerConcurrentStreams for a Node h2 server
        }
    this[kHost] = `${this[kUrl].hostname}${this[kUrl].port ? `:${this[kUrl].port}` : ''}`

    // kQueue is built up of 3 sections separated by
    // the kRunningIdx and kPendingIdx indices.
    // |   complete   |   running   |   pending   |
    //                ^ kRunningIdx ^ kPendingIdx ^ kQueue.length
    // kRunningIdx points to the first running element.
    // kPendingIdx points to the first pending element.
    // This implements a fast queue with an amortized
    // time of O(1).

    this[kQueue] = []
    this[kRunningIdx] = 0
    this[kPendingIdx] = 0
  }

  get pipelining () {
    return this[kPipelining]
  }

  set pipelining (value) {
    this[kPipelining] = value
    resume(this, true)
  }

  get [kPending] () {
    return this[kQueue].length - this[kPendingIdx]
  }

  get [kRunning] () {
    return this[kPendingIdx] - this[kRunningIdx]
  }

  get [kSize] () {
    return this[kQueue].length - this[kRunningIdx]
  }

  get [kConnected] () {
    return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed
  }

  get [kBusy] () {
    const socket = this[kSocket]
    return (
      (socket && (socket[kReset] || socket[kWriting] || socket[kBlocking])) ||
      (this[kSize] >= (this[kPipelining] || 1)) ||
      this[kPending] > 0
    )
  }

  /* istanbul ignore: only used for test */
  [kConnect] (cb) {
    connect(this)
    this.once('connect', cb)
  }

  [kDispatch] (opts, handler) {
    const origin = opts.origin || this[kUrl].origin

    const request = this[kHTTPConnVersion] === 'h2'
      ? Request[kHTTP2BuildRequest](origin, opts, handler)
      : Request[kHTTP1BuildRequest](origin, opts, handler)

    this[kQueue].push(request)
    if (this[kResuming]) {
      // Do nothing.
    } else if (util.bodyLength(request.body) == null && util.isIterable(request.body)) {
      // Wait a tick in case stream/iterator is ended in the same tick.
      this[kResuming] = 1
      process.nextTick(resume, this)
    } else {
      resume(this, true)
    }

    if (this[kResuming] && this[kNeedDrain] !== 2 && this[kBusy]) {
      this[kNeedDrain] = 2
    }

    return this[kNeedDrain] < 2
  }

  async [kClose] () {
    // TODO: for H2 we need to gracefully flush the remaining enqueued
    // request and close each stream.
    return new Promise((resolve) => {
      if (!this[kSize]) {
        resolve(null)
      } else {
        this[kClosedResolve] = resolve
      }
    })
  }

  async [kDestroy] (err) {
    return new Promise((resolve) => {
      const requests = this[kQueue].splice(this[kPendingIdx])
      for (let i = 0; i < requests.length; i++) {
        const request = requests[i]
        errorRequest(this, request, err)
      }

      const callback = () => {
        if (this[kClosedResolve]) {
          // TODO (fix): Should we error here with ClientDestroyedError?
          this[kClosedResolve]()
          this[kClosedResolve] = null
        }
        resolve()
      }

      if (this[kHTTP2Session] != null) {
        util.destroy(this[kHTTP2Session], err)
        this[kHTTP2Session] = null
        this[kHTTP2SessionState] = null
      }

      if (!this[kSocket]) {
        queueMicrotask(callback)
      } else {
        util.destroy(this[kSocket].on('close', callback), err)
      }

      resume(this)
    })
  }
}

function onHttp2SessionError (err) {
  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')

  this[kSocket][kError] = err

  onError(this[kClient], err)
}

function onHttp2FrameError (type, code, id) {
  const err = new InformationalError(`HTTP/2: "frameError" received - type ${type}, code ${code}`)

  if (id === 0) {
    this[kSocket][kError] = err
    onError(this[kClient], err)
  }
}

function onHttp2SessionEnd () {
  util.destroy(this, new SocketError('other side closed'))
  util.destroy(this[kSocket], new SocketError('other side closed'))
}

function onHTTP2GoAway (code) {
  const client = this[kClient]
  const err = new InformationalError(`HTTP/2: "GOAWAY" frame received with code ${code}`)
  client[kSocket] = null
  client[kHTTP2Session] = null

  if (client.destroyed) {
    assert(this[kPending] === 0)

    // Fail entire queue.
    const requests = client[kQueue].splice(client[kRunningIdx])
    for (let i = 0; i < requests.length; i++) {
      const request = requests[i]
      errorRequest(this, request, err)
    }
  } else if (client[kRunning] > 0) {
    // Fail head of pipeline.
    const request = client[kQueue][client[kRunningIdx]]
    client[kQueue][client[kRunningIdx]++] = null

    errorRequest(client, request, err)
  }

  client[kPendingIdx] = client[kRunningIdx]

  assert(client[kRunning] === 0)

  client.emit('disconnect',
    client[kUrl],
    [client],
    err
  )

  resume(client)
}

const constants = __webpack_require__(/*! ./llhttp/constants */ "../../node_modules/undici/lib/llhttp/constants.js")
const createRedirectInterceptor = __webpack_require__(/*! ./interceptor/redirectInterceptor */ "../../node_modules/undici/lib/interceptor/redirectInterceptor.js")
const EMPTY_BUF = Buffer.alloc(0)

async function lazyllhttp () {
  const llhttpWasmData = process.env.JEST_WORKER_ID ? __webpack_require__(/*! ./llhttp/llhttp-wasm.js */ "../../node_modules/undici/lib/llhttp/llhttp-wasm.js") : undefined

  let mod
  try {
    mod = await WebAssembly.compile(Buffer.from(__webpack_require__(/*! ./llhttp/llhttp_simd-wasm.js */ "../../node_modules/undici/lib/llhttp/llhttp_simd-wasm.js"), 'base64'))
  } catch (e) {
    /* istanbul ignore next */

    // We could check if the error was caused by the simd option not
    // being enabled, but the occurring of this other error
    // * https://github.com/emscripten-core/emscripten/issues/11495
    // got me to remove that check to avoid breaking Node 12.
    mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || __webpack_require__(/*! ./llhttp/llhttp-wasm.js */ "../../node_modules/undici/lib/llhttp/llhttp-wasm.js"), 'base64'))
  }

  return await WebAssembly.instantiate(mod, {
    env: {
      /* eslint-disable camelcase */

      wasm_on_url: (p, at, len) => {
        /* istanbul ignore next */
        return 0
      },
      wasm_on_status: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onStatus(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_message_begin: (p) => {
        assert.strictEqual(currentParser.ptr, p)
        return currentParser.onMessageBegin() || 0
      },
      wasm_on_header_field: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onHeaderField(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_header_value: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onHeaderValue(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_headers_complete: (p, statusCode, upgrade, shouldKeepAlive) => {
        assert.strictEqual(currentParser.ptr, p)
        return currentParser.onHeadersComplete(statusCode, Boolean(upgrade), Boolean(shouldKeepAlive)) || 0
      },
      wasm_on_body: (p, at, len) => {
        assert.strictEqual(currentParser.ptr, p)
        const start = at - currentBufferPtr + currentBufferRef.byteOffset
        return currentParser.onBody(new FastBuffer(currentBufferRef.buffer, start, len)) || 0
      },
      wasm_on_message_complete: (p) => {
        assert.strictEqual(currentParser.ptr, p)
        return currentParser.onMessageComplete() || 0
      }

      /* eslint-enable camelcase */
    }
  })
}

let llhttpInstance = null
let llhttpPromise = lazyllhttp()
llhttpPromise.catch()

let currentParser = null
let currentBufferRef = null
let currentBufferSize = 0
let currentBufferPtr = null

const TIMEOUT_HEADERS = 1
const TIMEOUT_BODY = 2
const TIMEOUT_IDLE = 3

class Parser {
  constructor (client, socket, { exports }) {
    assert(Number.isFinite(client[kMaxHeadersSize]) && client[kMaxHeadersSize] > 0)

    this.llhttp = exports
    this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE)
    this.client = client
    this.socket = socket
    this.timeout = null
    this.timeoutValue = null
    this.timeoutType = null
    this.statusCode = null
    this.statusText = ''
    this.upgrade = false
    this.headers = []
    this.headersSize = 0
    this.headersMaxSize = client[kMaxHeadersSize]
    this.shouldKeepAlive = false
    this.paused = false
    this.resume = this.resume.bind(this)

    this.bytesRead = 0

    this.keepAlive = ''
    this.contentLength = ''
    this.connection = ''
    this.maxResponseSize = client[kMaxResponseSize]
  }

  setTimeout (value, type) {
    this.timeoutType = type
    if (value !== this.timeoutValue) {
      timers.clearTimeout(this.timeout)
      if (value) {
        this.timeout = timers.setTimeout(onParserTimeout, value, this)
        // istanbul ignore else: only for jest
        if (this.timeout.unref) {
          this.timeout.unref()
        }
      } else {
        this.timeout = null
      }
      this.timeoutValue = value
    } else if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }
  }

  resume () {
    if (this.socket.destroyed || !this.paused) {
      return
    }

    assert(this.ptr != null)
    assert(currentParser == null)

    this.llhttp.llhttp_resume(this.ptr)

    assert(this.timeoutType === TIMEOUT_BODY)
    if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }

    this.paused = false
    this.execute(this.socket.read() || EMPTY_BUF) // Flush parser.
    this.readMore()
  }

  readMore () {
    while (!this.paused && this.ptr) {
      const chunk = this.socket.read()
      if (chunk === null) {
        break
      }
      this.execute(chunk)
    }
  }

  execute (data) {
    assert(this.ptr != null)
    assert(currentParser == null)
    assert(!this.paused)

    const { socket, llhttp } = this

    if (data.length > currentBufferSize) {
      if (currentBufferPtr) {
        llhttp.free(currentBufferPtr)
      }
      currentBufferSize = Math.ceil(data.length / 4096) * 4096
      currentBufferPtr = llhttp.malloc(currentBufferSize)
    }

    new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data)

    // Call `execute` on the wasm parser.
    // We pass the `llhttp_parser` pointer address, the pointer address of buffer view data,
    // and finally the length of bytes to parse.
    // The return value is an error code or `constants.ERROR.OK`.
    try {
      let ret

      try {
        currentBufferRef = data
        currentParser = this
        ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length)
        /* eslint-disable-next-line no-useless-catch */
      } catch (err) {
        /* istanbul ignore next: difficult to make a test case for */
        throw err
      } finally {
        currentParser = null
        currentBufferRef = null
      }

      const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr

      if (ret === constants.ERROR.PAUSED_UPGRADE) {
        this.onUpgrade(data.slice(offset))
      } else if (ret === constants.ERROR.PAUSED) {
        this.paused = true
        socket.unshift(data.slice(offset))
      } else if (ret !== constants.ERROR.OK) {
        const ptr = llhttp.llhttp_get_error_reason(this.ptr)
        let message = ''
        /* istanbul ignore else: difficult to make a test case for */
        if (ptr) {
          const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0)
          message =
            'Response does not match the HTTP/1.1 protocol (' +
            Buffer.from(llhttp.memory.buffer, ptr, len).toString() +
            ')'
        }
        throw new HTTPParserError(message, constants.ERROR[ret], data.slice(offset))
      }
    } catch (err) {
      util.destroy(socket, err)
    }
  }

  destroy () {
    assert(this.ptr != null)
    assert(currentParser == null)

    this.llhttp.llhttp_free(this.ptr)
    this.ptr = null

    timers.clearTimeout(this.timeout)
    this.timeout = null
    this.timeoutValue = null
    this.timeoutType = null

    this.paused = false
  }

  onStatus (buf) {
    this.statusText = buf.toString()
  }

  onMessageBegin () {
    const { socket, client } = this

    /* istanbul ignore next: difficult to make a test case for */
    if (socket.destroyed) {
      return -1
    }

    const request = client[kQueue][client[kRunningIdx]]
    if (!request) {
      return -1
    }
  }

  onHeaderField (buf) {
    const len = this.headers.length

    if ((len & 1) === 0) {
      this.headers.push(buf)
    } else {
      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])
    }

    this.trackHeader(buf.length)
  }

  onHeaderValue (buf) {
    let len = this.headers.length

    if ((len & 1) === 1) {
      this.headers.push(buf)
      len += 1
    } else {
      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf])
    }

    const key = this.headers[len - 2]
    if (key.length === 10 && key.toString().toLowerCase() === 'keep-alive') {
      this.keepAlive += buf.toString()
    } else if (key.length === 10 && key.toString().toLowerCase() === 'connection') {
      this.connection += buf.toString()
    } else if (key.length === 14 && key.toString().toLowerCase() === 'content-length') {
      this.contentLength += buf.toString()
    }

    this.trackHeader(buf.length)
  }

  trackHeader (len) {
    this.headersSize += len
    if (this.headersSize >= this.headersMaxSize) {
      util.destroy(this.socket, new HeadersOverflowError())
    }
  }

  onUpgrade (head) {
    const { upgrade, client, socket, headers, statusCode } = this

    assert(upgrade)

    const request = client[kQueue][client[kRunningIdx]]
    assert(request)

    assert(!socket.destroyed)
    assert(socket === client[kSocket])
    assert(!this.paused)
    assert(request.upgrade || request.method === 'CONNECT')

    this.statusCode = null
    this.statusText = ''
    this.shouldKeepAlive = null

    assert(this.headers.length % 2 === 0)
    this.headers = []
    this.headersSize = 0

    socket.unshift(head)

    socket[kParser].destroy()
    socket[kParser] = null

    socket[kClient] = null
    socket[kError] = null
    socket
      .removeListener('error', onSocketError)
      .removeListener('readable', onSocketReadable)
      .removeListener('end', onSocketEnd)
      .removeListener('close', onSocketClose)

    client[kSocket] = null
    client[kQueue][client[kRunningIdx]++] = null
    client.emit('disconnect', client[kUrl], [client], new InformationalError('upgrade'))

    try {
      request.onUpgrade(statusCode, headers, socket)
    } catch (err) {
      util.destroy(socket, err)
    }

    resume(client)
  }

  onHeadersComplete (statusCode, upgrade, shouldKeepAlive) {
    const { client, socket, headers, statusText } = this

    /* istanbul ignore next: difficult to make a test case for */
    if (socket.destroyed) {
      return -1
    }

    const request = client[kQueue][client[kRunningIdx]]

    /* istanbul ignore next: difficult to make a test case for */
    if (!request) {
      return -1
    }

    assert(!this.upgrade)
    assert(this.statusCode < 200)

    if (statusCode === 100) {
      util.destroy(socket, new SocketError('bad response', util.getSocketInfo(socket)))
      return -1
    }

    /* this can only happen if server is misbehaving */
    if (upgrade && !request.upgrade) {
      util.destroy(socket, new SocketError('bad upgrade', util.getSocketInfo(socket)))
      return -1
    }

    assert.strictEqual(this.timeoutType, TIMEOUT_HEADERS)

    this.statusCode = statusCode
    this.shouldKeepAlive = (
      shouldKeepAlive ||
      // Override llhttp value which does not allow keepAlive for HEAD.
      (request.method === 'HEAD' && !socket[kReset] && this.connection.toLowerCase() === 'keep-alive')
    )

    if (this.statusCode >= 200) {
      const bodyTimeout = request.bodyTimeout != null
        ? request.bodyTimeout
        : client[kBodyTimeout]
      this.setTimeout(bodyTimeout, TIMEOUT_BODY)
    } else if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }

    if (request.method === 'CONNECT') {
      assert(client[kRunning] === 1)
      this.upgrade = true
      return 2
    }

    if (upgrade) {
      assert(client[kRunning] === 1)
      this.upgrade = true
      return 2
    }

    assert(this.headers.length % 2 === 0)
    this.headers = []
    this.headersSize = 0

    if (this.shouldKeepAlive && client[kPipelining]) {
      const keepAliveTimeout = this.keepAlive ? util.parseKeepAliveTimeout(this.keepAlive) : null

      if (keepAliveTimeout != null) {
        const timeout = Math.min(
          keepAliveTimeout - client[kKeepAliveTimeoutThreshold],
          client[kKeepAliveMaxTimeout]
        )
        if (timeout <= 0) {
          socket[kReset] = true
        } else {
          client[kKeepAliveTimeoutValue] = timeout
        }
      } else {
        client[kKeepAliveTimeoutValue] = client[kKeepAliveDefaultTimeout]
      }
    } else {
      // Stop more requests from being dispatched.
      socket[kReset] = true
    }

    const pause = request.onHeaders(statusCode, headers, this.resume, statusText) === false

    if (request.aborted) {
      return -1
    }

    if (request.method === 'HEAD') {
      return 1
    }

    if (statusCode < 200) {
      return 1
    }

    if (socket[kBlocking]) {
      socket[kBlocking] = false
      resume(client)
    }

    return pause ? constants.ERROR.PAUSED : 0
  }

  onBody (buf) {
    const { client, socket, statusCode, maxResponseSize } = this

    if (socket.destroyed) {
      return -1
    }

    const request = client[kQueue][client[kRunningIdx]]
    assert(request)

    assert.strictEqual(this.timeoutType, TIMEOUT_BODY)
    if (this.timeout) {
      // istanbul ignore else: only for jest
      if (this.timeout.refresh) {
        this.timeout.refresh()
      }
    }

    assert(statusCode >= 200)

    if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {
      util.destroy(socket, new ResponseExceededMaxSizeError())
      return -1
    }

    this.bytesRead += buf.length

    if (request.onData(buf) === false) {
      return constants.ERROR.PAUSED
    }
  }

  onMessageComplete () {
    const { client, socket, statusCode, upgrade, headers, contentLength, bytesRead, shouldKeepAlive } = this

    if (socket.destroyed && (!statusCode || shouldKeepAlive)) {
      return -1
    }

    if (upgrade) {
      return
    }

    const request = client[kQueue][client[kRunningIdx]]
    assert(request)

    assert(statusCode >= 100)

    this.statusCode = null
    this.statusText = ''
    this.bytesRead = 0
    this.contentLength = ''
    this.keepAlive = ''
    this.connection = ''

    assert(this.headers.length % 2 === 0)
    this.headers = []
    this.headersSize = 0

    if (statusCode < 200) {
      return
    }

    /* istanbul ignore next: should be handled by llhttp? */
    if (request.method !== 'HEAD' && contentLength && bytesRead !== parseInt(contentLength, 10)) {
      util.destroy(socket, new ResponseContentLengthMismatchError())
      return -1
    }

    request.onComplete(headers)

    client[kQueue][client[kRunningIdx]++] = null

    if (socket[kWriting]) {
      assert.strictEqual(client[kRunning], 0)
      // Response completed before request.
      util.destroy(socket, new InformationalError('reset'))
      return constants.ERROR.PAUSED
    } else if (!shouldKeepAlive) {
      util.destroy(socket, new InformationalError('reset'))
      return constants.ERROR.PAUSED
    } else if (socket[kReset] && client[kRunning] === 0) {
      // Destroy socket once all requests have completed.
      // The request at the tail of the pipeline is the one
      // that requested reset and no further requests should
      // have been queued since then.
      util.destroy(socket, new InformationalError('reset'))
      return constants.ERROR.PAUSED
    } else if (client[kPipelining] === 1) {
      // We must wait a full event loop cycle to reuse this socket to make sure
      // that non-spec compliant servers are not closing the connection even if they
      // said they won't.
      setImmediate(resume, client)
    } else {
      resume(client)
    }
  }
}

function onParserTimeout (parser) {
  const { socket, timeoutType, client } = parser

  /* istanbul ignore else */
  if (timeoutType === TIMEOUT_HEADERS) {
    if (!socket[kWriting] || socket.writableNeedDrain || client[kRunning] > 1) {
      assert(!parser.paused, 'cannot be paused while waiting for headers')
      util.destroy(socket, new HeadersTimeoutError())
    }
  } else if (timeoutType === TIMEOUT_BODY) {
    if (!parser.paused) {
      util.destroy(socket, new BodyTimeoutError())
    }
  } else if (timeoutType === TIMEOUT_IDLE) {
    assert(client[kRunning] === 0 && client[kKeepAliveTimeoutValue])
    util.destroy(socket, new InformationalError('socket idle timeout'))
  }
}

function onSocketReadable () {
  const { [kParser]: parser } = this
  if (parser) {
    parser.readMore()
  }
}

function onSocketError (err) {
  const { [kClient]: client, [kParser]: parser } = this

  assert(err.code !== 'ERR_TLS_CERT_ALTNAME_INVALID')

  if (client[kHTTPConnVersion] !== 'h2') {
    // On Mac OS, we get an ECONNRESET even if there is a full body to be forwarded
    // to the user.
    if (err.code === 'ECONNRESET' && parser.statusCode && !parser.shouldKeepAlive) {
      // We treat all incoming data so for as a valid response.
      parser.onMessageComplete()
      return
    }
  }

  this[kError] = err

  onError(this[kClient], err)
}

function onError (client, err) {
  if (
    client[kRunning] === 0 &&
    err.code !== 'UND_ERR_INFO' &&
    err.code !== 'UND_ERR_SOCKET'
  ) {
    // Error is not caused by running request and not a recoverable
    // socket error.

    assert(client[kPendingIdx] === client[kRunningIdx])

    const requests = client[kQueue].splice(client[kRunningIdx])
    for (let i = 0; i < requests.length; i++) {
      const request = requests[i]
      errorRequest(client, request, err)
    }
    assert(client[kSize] === 0)
  }
}

function onSocketEnd () {
  const { [kParser]: parser, [kClient]: client } = this

  if (client[kHTTPConnVersion] !== 'h2') {
    if (parser.statusCode && !parser.shouldKeepAlive) {
      // We treat all incoming data so far as a valid response.
      parser.onMessageComplete()
      return
    }
  }

  util.destroy(this, new SocketError('other side closed', util.getSocketInfo(this)))
}

function onSocketClose () {
  const { [kClient]: client, [kParser]: parser } = this

  if (client[kHTTPConnVersion] === 'h1' && parser) {
    if (!this[kError] && parser.statusCode && !parser.shouldKeepAlive) {
      // We treat all incoming data so far as a valid response.
      parser.onMessageComplete()
    }

    this[kParser].destroy()
    this[kParser] = null
  }

  const err = this[kError] || new SocketError('closed', util.getSocketInfo(this))

  client[kSocket] = null

  if (client.destroyed) {
    assert(client[kPending] === 0)

    // Fail entire queue.
    const requests = client[kQueue].splice(client[kRunningIdx])
    for (let i = 0; i < requests.length; i++) {
      const request = requests[i]
      errorRequest(client, request, err)
    }
  } else if (client[kRunning] > 0 && err.code !== 'UND_ERR_INFO') {
    // Fail head of pipeline.
    const request = client[kQueue][client[kRunningIdx]]
    client[kQueue][client[kRunningIdx]++] = null

    errorRequest(client, request, err)
  }

  client[kPendingIdx] = client[kRunningIdx]

  assert(client[kRunning] === 0)

  client.emit('disconnect', client[kUrl], [client], err)

  resume(client)
}

async function connect (client) {
  assert(!client[kConnecting])
  assert(!client[kSocket])

  let { host, hostname, protocol, port } = client[kUrl]

  // Resolve ipv6
  if (hostname[0] === '[') {
    const idx = hostname.indexOf(']')

    assert(idx !== -1)
    const ip = hostname.substring(1, idx)

    assert(net.isIP(ip))
    hostname = ip
  }

  client[kConnecting] = true

  if (channels.beforeConnect.hasSubscribers) {
    channels.beforeConnect.publish({
      connectParams: {
        host,
        hostname,
        protocol,
        port,
        servername: client[kServerName],
        localAddress: client[kLocalAddress]
      },
      connector: client[kConnector]
    })
  }

  try {
    const socket = await new Promise((resolve, reject) => {
      client[kConnector]({
        host,
        hostname,
        protocol,
        port,
        servername: client[kServerName],
        localAddress: client[kLocalAddress]
      }, (err, socket) => {
        if (err) {
          reject(err)
        } else {
          resolve(socket)
        }
      })
    })

    if (client.destroyed) {
      util.destroy(socket.on('error', () => {}), new ClientDestroyedError())
      return
    }

    client[kConnecting] = false

    assert(socket)

    const isH2 = socket.alpnProtocol === 'h2'
    if (isH2) {
      if (!h2ExperimentalWarned) {
        h2ExperimentalWarned = true
        process.emitWarning('H2 support is experimental, expect them to change at any time.', {
          code: 'UNDICI-H2'
        })
      }

      const session = http2.connect(client[kUrl], {
        createConnection: () => socket,
        peerMaxConcurrentStreams: client[kHTTP2SessionState].maxConcurrentStreams
      })

      client[kHTTPConnVersion] = 'h2'
      session[kClient] = client
      session[kSocket] = socket
      session.on('error', onHttp2SessionError)
      session.on('frameError', onHttp2FrameError)
      session.on('end', onHttp2SessionEnd)
      session.on('goaway', onHTTP2GoAway)
      session.on('close', onSocketClose)
      session.unref()

      client[kHTTP2Session] = session
      socket[kHTTP2Session] = session
    } else {
      if (!llhttpInstance) {
        llhttpInstance = await llhttpPromise
        llhttpPromise = null
      }

      socket[kNoRef] = false
      socket[kWriting] = false
      socket[kReset] = false
      socket[kBlocking] = false
      socket[kParser] = new Parser(client, socket, llhttpInstance)
    }

    socket[kCounter] = 0
    socket[kMaxRequests] = client[kMaxRequests]
    socket[kClient] = client
    socket[kError] = null

    socket
      .on('error', onSocketError)
      .on('readable', onSocketReadable)
      .on('end', onSocketEnd)
      .on('close', onSocketClose)

    client[kSocket] = socket

    if (channels.connected.hasSubscribers) {
      channels.connected.publish({
        connectParams: {
          host,
          hostname,
          protocol,
          port,
          servername: client[kServerName],
          localAddress: client[kLocalAddress]
        },
        connector: client[kConnector],
        socket
      })
    }
    client.emit('connect', client[kUrl], [client])
  } catch (err) {
    if (client.destroyed) {
      return
    }

    client[kConnecting] = false

    if (channels.connectError.hasSubscribers) {
      channels.connectError.publish({
        connectParams: {
          host,
          hostname,
          protocol,
          port,
          servername: client[kServerName],
          localAddress: client[kLocalAddress]
        },
        connector: client[kConnector],
        error: err
      })
    }

    if (err.code === 'ERR_TLS_CERT_ALTNAME_INVALID') {
      assert(client[kRunning] === 0)
      while (client[kPending] > 0 && client[kQueue][client[kPendingIdx]].servername === client[kServerName]) {
        const request = client[kQueue][client[kPendingIdx]++]
        errorRequest(client, request, err)
      }
    } else {
      onError(client, err)
    }

    client.emit('connectionError', client[kUrl], [client], err)
  }

  resume(client)
}

function emitDrain (client) {
  client[kNeedDrain] = 0
  client.emit('drain', client[kUrl], [client])
}

function resume (client, sync) {
  if (client[kResuming] === 2) {
    return
  }

  client[kResuming] = 2

  _resume(client, sync)
  client[kResuming] = 0

  if (client[kRunningIdx] > 256) {
    client[kQueue].splice(0, client[kRunningIdx])
    client[kPendingIdx] -= client[kRunningIdx]
    client[kRunningIdx] = 0
  }
}

function _resume (client, sync) {
  while (true) {
    if (client.destroyed) {
      assert(client[kPending] === 0)
      return
    }

    if (client[kClosedResolve] && !client[kSize]) {
      client[kClosedResolve]()
      client[kClosedResolve] = null
      return
    }

    const socket = client[kSocket]

    if (socket && !socket.destroyed && socket.alpnProtocol !== 'h2') {
      if (client[kSize] === 0) {
        if (!socket[kNoRef] && socket.unref) {
          socket.unref()
          socket[kNoRef] = true
        }
      } else if (socket[kNoRef] && socket.ref) {
        socket.ref()
        socket[kNoRef] = false
      }

      if (client[kSize] === 0) {
        if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {
          socket[kParser].setTimeout(client[kKeepAliveTimeoutValue], TIMEOUT_IDLE)
        }
      } else if (client[kRunning] > 0 && socket[kParser].statusCode < 200) {
        if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {
          const request = client[kQueue][client[kRunningIdx]]
          const headersTimeout = request.headersTimeout != null
            ? request.headersTimeout
            : client[kHeadersTimeout]
          socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS)
        }
      }
    }

    if (client[kBusy]) {
      client[kNeedDrain] = 2
    } else if (client[kNeedDrain] === 2) {
      if (sync) {
        client[kNeedDrain] = 1
        process.nextTick(emitDrain, client)
      } else {
        emitDrain(client)
      }
      continue
    }

    if (client[kPending] === 0) {
      return
    }

    if (client[kRunning] >= (client[kPipelining] || 1)) {
      return
    }

    const request = client[kQueue][client[kPendingIdx]]

    if (client[kUrl].protocol === 'https:' && client[kServerName] !== request.servername) {
      if (client[kRunning] > 0) {
        return
      }

      client[kServerName] = request.servername

      if (socket && socket.servername !== request.servername) {
        util.destroy(socket, new InformationalError('servername changed'))
        return
      }
    }

    if (client[kConnecting]) {
      return
    }

    if (!socket && !client[kHTTP2Session]) {
      connect(client)
      return
    }

    if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {
      return
    }

    if (client[kRunning] > 0 && !request.idempotent) {
      // Non-idempotent request cannot be retried.
      // Ensure that no other requests are inflight and
      // could cause failure.
      return
    }

    if (client[kRunning] > 0 && (request.upgrade || request.method === 'CONNECT')) {
      // Don't dispatch an upgrade until all preceding requests have completed.
      // A misbehaving server might upgrade the connection before all pipelined
      // request has completed.
      return
    }

    if (client[kRunning] > 0 && util.bodyLength(request.body) !== 0 &&
      (util.isStream(request.body) || util.isAsyncIterable(request.body))) {
      // Request with stream or iterator body can error while other requests
      // are inflight and indirectly error those as well.
      // Ensure this doesn't happen by waiting for inflight
      // to complete before dispatching.

      // Request with stream or iterator body cannot be retried.
      // Ensure that no other requests are inflight and
      // could cause failure.
      return
    }

    if (!request.aborted && write(client, request)) {
      client[kPendingIdx]++
    } else {
      client[kQueue].splice(client[kPendingIdx], 1)
    }
  }
}

// https://www.rfc-editor.org/rfc/rfc7230#section-3.3.2
function shouldSendContentLength (method) {
  return method !== 'GET' && method !== 'HEAD' && method !== 'OPTIONS' && method !== 'TRACE' && method !== 'CONNECT'
}

function write (client, request) {
  if (client[kHTTPConnVersion] === 'h2') {
    writeH2(client, client[kHTTP2Session], request)
    return
  }

  const { body, method, path, host, upgrade, headers, blocking, reset } = request

  // https://tools.ietf.org/html/rfc7231#section-4.3.1
  // https://tools.ietf.org/html/rfc7231#section-4.3.2
  // https://tools.ietf.org/html/rfc7231#section-4.3.5

  // Sending a payload body on a request that does not
  // expect it can cause undefined behavior on some
  // servers and corrupt connection state. Do not
  // re-use the connection for further requests.

  const expectsPayload = (
    method === 'PUT' ||
    method === 'POST' ||
    method === 'PATCH'
  )

  if (body && typeof body.read === 'function') {
    // Try to read EOF in order to get length.
    body.read(0)
  }

  const bodyLength = util.bodyLength(body)

  let contentLength = bodyLength

  if (contentLength === null) {
    contentLength = request.contentLength
  }

  if (contentLength === 0 && !expectsPayload) {
    // https://tools.ietf.org/html/rfc7230#section-3.3.2
    // A user agent SHOULD NOT send a Content-Length header field when
    // the request message does not contain a payload body and the method
    // semantics do not anticipate such a body.

    contentLength = null
  }

  // https://github.com/nodejs/undici/issues/2046
  // A user agent may send a Content-Length header with 0 value, this should be allowed.
  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength !== null && request.contentLength !== contentLength) {
    if (client[kStrictContentLength]) {
      errorRequest(client, request, new RequestContentLengthMismatchError())
      return false
    }

    process.emitWarning(new RequestContentLengthMismatchError())
  }

  const socket = client[kSocket]

  try {
    request.onConnect((err) => {
      if (request.aborted || request.completed) {
        return
      }

      errorRequest(client, request, err || new RequestAbortedError())

      util.destroy(socket, new InformationalError('aborted'))
    })
  } catch (err) {
    errorRequest(client, request, err)
  }

  if (request.aborted) {
    return false
  }

  if (method === 'HEAD') {
    // https://github.com/mcollina/undici/issues/258
    // Close after a HEAD request to interop with misbehaving servers
    // that may send a body in the response.

    socket[kReset] = true
  }

  if (upgrade || method === 'CONNECT') {
    // On CONNECT or upgrade, block pipeline from dispatching further
    // requests on this connection.

    socket[kReset] = true
  }

  if (reset != null) {
    socket[kReset] = reset
  }

  if (client[kMaxRequests] && socket[kCounter]++ >= client[kMaxRequests]) {
    socket[kReset] = true
  }

  if (blocking) {
    socket[kBlocking] = true
  }

  let header = `${method} ${path} HTTP/1.1\r\n`

  if (typeof host === 'string') {
    header += `host: ${host}\r\n`
  } else {
    header += client[kHostHeader]
  }

  if (upgrade) {
    header += `connection: upgrade\r\nupgrade: ${upgrade}\r\n`
  } else if (client[kPipelining] && !socket[kReset]) {
    header += 'connection: keep-alive\r\n'
  } else {
    header += 'connection: close\r\n'
  }

  if (headers) {
    header += headers
  }

  if (channels.sendHeaders.hasSubscribers) {
    channels.sendHeaders.publish({ request, headers: header, socket })
  }

  /* istanbul ignore else: assertion */
  if (!body || bodyLength === 0) {
    if (contentLength === 0) {
      socket.write(`${header}content-length: 0\r\n\r\n`, 'latin1')
    } else {
      assert(contentLength === null, 'no body must not have content length')
      socket.write(`${header}\r\n`, 'latin1')
    }
    request.onRequestSent()
  } else if (util.isBuffer(body)) {
    assert(contentLength === body.byteLength, 'buffer body must have content length')

    socket.cork()
    socket.write(`${header}content-length: ${contentLength}\r\n\r\n`, 'latin1')
    socket.write(body)
    socket.uncork()
    request.onBodySent(body)
    request.onRequestSent()
    if (!expectsPayload) {
      socket[kReset] = true
    }
  } else if (util.isBlobLike(body)) {
    if (typeof body.stream === 'function') {
      writeIterable({ body: body.stream(), client, request, socket, contentLength, header, expectsPayload })
    } else {
      writeBlob({ body, client, request, socket, contentLength, header, expectsPayload })
    }
  } else if (util.isStream(body)) {
    writeStream({ body, client, request, socket, contentLength, header, expectsPayload })
  } else if (util.isIterable(body)) {
    writeIterable({ body, client, request, socket, contentLength, header, expectsPayload })
  } else {
    assert(false)
  }

  return true
}

function writeH2 (client, session, request) {
  const { body, method, path, host, upgrade, expectContinue, signal, headers: reqHeaders } = request

  let headers
  if (typeof reqHeaders === 'string') headers = Request[kHTTP2CopyHeaders](reqHeaders.trim())
  else headers = reqHeaders

  if (upgrade) {
    errorRequest(client, request, new Error('Upgrade not supported for H2'))
    return false
  }

  try {
    // TODO(HTTP/2): Should we call onConnect immediately or on stream ready event?
    request.onConnect((err) => {
      if (request.aborted || request.completed) {
        return
      }

      errorRequest(client, request, err || new RequestAbortedError())
    })
  } catch (err) {
    errorRequest(client, request, err)
  }

  if (request.aborted) {
    return false
  }

  /** @type {import('node:http2').ClientHttp2Stream} */
  let stream
  const h2State = client[kHTTP2SessionState]

  headers[HTTP2_HEADER_AUTHORITY] = host || client[kHost]
  headers[HTTP2_HEADER_METHOD] = method

  if (method === 'CONNECT') {
    session.ref()
    // we are already connected, streams are pending, first request
    // will create a new stream. We trigger a request to create the stream and wait until
    // `ready` event is triggered
    // We disabled endStream to allow the user to write to the stream
    stream = session.request(headers, { endStream: false, signal })

    if (stream.id && !stream.pending) {
      request.onUpgrade(null, null, stream)
      ++h2State.openStreams
    } else {
      stream.once('ready', () => {
        request.onUpgrade(null, null, stream)
        ++h2State.openStreams
      })
    }

    stream.once('close', () => {
      h2State.openStreams -= 1
      // TODO(HTTP/2): unref only if current streams count is 0
      if (h2State.openStreams === 0) session.unref()
    })

    return true
  }

  // https://tools.ietf.org/html/rfc7540#section-8.3
  // :path and :scheme headers must be omited when sending CONNECT

  headers[HTTP2_HEADER_PATH] = path
  headers[HTTP2_HEADER_SCHEME] = 'https'

  // https://tools.ietf.org/html/rfc7231#section-4.3.1
  // https://tools.ietf.org/html/rfc7231#section-4.3.2
  // https://tools.ietf.org/html/rfc7231#section-4.3.5

  // Sending a payload body on a request that does not
  // expect it can cause undefined behavior on some
  // servers and corrupt connection state. Do not
  // re-use the connection for further requests.

  const expectsPayload = (
    method === 'PUT' ||
    method === 'POST' ||
    method === 'PATCH'
  )

  if (body && typeof body.read === 'function') {
    // Try to read EOF in order to get length.
    body.read(0)
  }

  let contentLength = util.bodyLength(body)

  if (contentLength == null) {
    contentLength = request.contentLength
  }

  if (contentLength === 0 || !expectsPayload) {
    // https://tools.ietf.org/html/rfc7230#section-3.3.2
    // A user agent SHOULD NOT send a Content-Length header field when
    // the request message does not contain a payload body and the method
    // semantics do not anticipate such a body.

    contentLength = null
  }

  // https://github.com/nodejs/undici/issues/2046
  // A user agent may send a Content-Length header with 0 value, this should be allowed.
  if (shouldSendContentLength(method) && contentLength > 0 && request.contentLength != null && request.contentLength !== contentLength) {
    if (client[kStrictContentLength]) {
      errorRequest(client, request, new RequestContentLengthMismatchError())
      return false
    }

    process.emitWarning(new RequestContentLengthMismatchError())
  }

  if (contentLength != null) {
    assert(body, 'no body must not have content length')
    headers[HTTP2_HEADER_CONTENT_LENGTH] = `${contentLength}`
  }

  session.ref()

  const shouldEndStream = method === 'GET' || method === 'HEAD'
  if (expectContinue) {
    headers[HTTP2_HEADER_EXPECT] = '100-continue'
    stream = session.request(headers, { endStream: shouldEndStream, signal })

    stream.once('continue', writeBodyH2)
  } else {
    stream = session.request(headers, {
      endStream: shouldEndStream,
      signal
    })
    writeBodyH2()
  }

  // Increment counter as we have new several streams open
  ++h2State.openStreams

  stream.once('response', headers => {
    const { [HTTP2_HEADER_STATUS]: statusCode, ...realHeaders } = headers

    if (request.onHeaders(Number(statusCode), realHeaders, stream.resume.bind(stream), '') === false) {
      stream.pause()
    }
  })

  stream.once('end', () => {
    request.onComplete([])
  })

  stream.on('data', (chunk) => {
    if (request.onData(chunk) === false) {
      stream.pause()
    }
  })

  stream.once('close', () => {
    h2State.openStreams -= 1
    // TODO(HTTP/2): unref only if current streams count is 0
    if (h2State.openStreams === 0) {
      session.unref()
    }
  })

  stream.once('error', function (err) {
    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {
      h2State.streams -= 1
      util.destroy(stream, err)
    }
  })

  stream.once('frameError', (type, code) => {
    const err = new InformationalError(`HTTP/2: "frameError" received - type ${type}, code ${code}`)
    errorRequest(client, request, err)

    if (client[kHTTP2Session] && !client[kHTTP2Session].destroyed && !this.closed && !this.destroyed) {
      h2State.streams -= 1
      util.destroy(stream, err)
    }
  })

  // stream.on('aborted', () => {
  //   // TODO(HTTP/2): Support aborted
  // })

  // stream.on('timeout', () => {
  //   // TODO(HTTP/2): Support timeout
  // })

  // stream.on('push', headers => {
  //   // TODO(HTTP/2): Suppor push
  // })

  // stream.on('trailers', headers => {
  //   // TODO(HTTP/2): Support trailers
  // })

  return true

  function writeBodyH2 () {
    /* istanbul ignore else: assertion */
    if (!body) {
      request.onRequestSent()
    } else if (util.isBuffer(body)) {
      assert(contentLength === body.byteLength, 'buffer body must have content length')
      stream.cork()
      stream.write(body)
      stream.uncork()
      stream.end()
      request.onBodySent(body)
      request.onRequestSent()
    } else if (util.isBlobLike(body)) {
      if (typeof body.stream === 'function') {
        writeIterable({
          client,
          request,
          contentLength,
          h2stream: stream,
          expectsPayload,
          body: body.stream(),
          socket: client[kSocket],
          header: ''
        })
      } else {
        writeBlob({
          body,
          client,
          request,
          contentLength,
          expectsPayload,
          h2stream: stream,
          header: '',
          socket: client[kSocket]
        })
      }
    } else if (util.isStream(body)) {
      writeStream({
        body,
        client,
        request,
        contentLength,
        expectsPayload,
        socket: client[kSocket],
        h2stream: stream,
        header: ''
      })
    } else if (util.isIterable(body)) {
      writeIterable({
        body,
        client,
        request,
        contentLength,
        expectsPayload,
        header: '',
        h2stream: stream,
        socket: client[kSocket]
      })
    } else {
      assert(false)
    }
  }
}

function writeStream ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {
  assert(contentLength !== 0 || client[kRunning] === 0, 'stream body cannot be pipelined')

  if (client[kHTTPConnVersion] === 'h2') {
    // For HTTP/2, is enough to pipe the stream
    const pipe = pipeline(
      body,
      h2stream,
      (err) => {
        if (err) {
          util.destroy(body, err)
          util.destroy(h2stream, err)
        } else {
          request.onRequestSent()
        }
      }
    )

    pipe.on('data', onPipeData)
    pipe.once('end', () => {
      pipe.removeListener('data', onPipeData)
      util.destroy(pipe)
    })

    function onPipeData (chunk) {
      request.onBodySent(chunk)
    }

    return
  }

  let finished = false

  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })

  const onData = function (chunk) {
    if (finished) {
      return
    }

    try {
      if (!writer.write(chunk) && this.pause) {
        this.pause()
      }
    } catch (err) {
      util.destroy(this, err)
    }
  }
  const onDrain = function () {
    if (finished) {
      return
    }

    if (body.resume) {
      body.resume()
    }
  }
  const onAbort = function () {
    if (finished) {
      return
    }
    const err = new RequestAbortedError()
    queueMicrotask(() => onFinished(err))
  }
  const onFinished = function (err) {
    if (finished) {
      return
    }

    finished = true

    assert(socket.destroyed || (socket[kWriting] && client[kRunning] <= 1))

    socket
      .off('drain', onDrain)
      .off('error', onFinished)

    body
      .removeListener('data', onData)
      .removeListener('end', onFinished)
      .removeListener('error', onFinished)
      .removeListener('close', onAbort)

    if (!err) {
      try {
        writer.end()
      } catch (er) {
        err = er
      }
    }

    writer.destroy(err)

    if (err && (err.code !== 'UND_ERR_INFO' || err.message !== 'reset')) {
      util.destroy(body, err)
    } else {
      util.destroy(body)
    }
  }

  body
    .on('data', onData)
    .on('end', onFinished)
    .on('error', onFinished)
    .on('close', onAbort)

  if (body.resume) {
    body.resume()
  }

  socket
    .on('drain', onDrain)
    .on('error', onFinished)
}

async function writeBlob ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {
  assert(contentLength === body.size, 'blob body must have content length')

  const isH2 = client[kHTTPConnVersion] === 'h2'
  try {
    if (contentLength != null && contentLength !== body.size) {
      throw new RequestContentLengthMismatchError()
    }

    const buffer = Buffer.from(await body.arrayBuffer())

    if (isH2) {
      h2stream.cork()
      h2stream.write(buffer)
      h2stream.uncork()
    } else {
      socket.cork()
      socket.write(`${header}content-length: ${contentLength}\r\n\r\n`, 'latin1')
      socket.write(buffer)
      socket.uncork()
    }

    request.onBodySent(buffer)
    request.onRequestSent()

    if (!expectsPayload) {
      socket[kReset] = true
    }

    resume(client)
  } catch (err) {
    util.destroy(isH2 ? h2stream : socket, err)
  }
}

async function writeIterable ({ h2stream, body, client, request, socket, contentLength, header, expectsPayload }) {
  assert(contentLength !== 0 || client[kRunning] === 0, 'iterator body cannot be pipelined')

  let callback = null
  function onDrain () {
    if (callback) {
      const cb = callback
      callback = null
      cb()
    }
  }

  const waitForDrain = () => new Promise((resolve, reject) => {
    assert(callback === null)

    if (socket[kError]) {
      reject(socket[kError])
    } else {
      callback = resolve
    }
  })

  if (client[kHTTPConnVersion] === 'h2') {
    h2stream
      .on('close', onDrain)
      .on('drain', onDrain)

    try {
      // It's up to the user to somehow abort the async iterable.
      for await (const chunk of body) {
        if (socket[kError]) {
          throw socket[kError]
        }

        const res = h2stream.write(chunk)
        request.onBodySent(chunk)
        if (!res) {
          await waitForDrain()
        }
      }
    } catch (err) {
      h2stream.destroy(err)
    } finally {
      request.onRequestSent()
      h2stream.end()
      h2stream
        .off('close', onDrain)
        .off('drain', onDrain)
    }

    return
  }

  socket
    .on('close', onDrain)
    .on('drain', onDrain)

  const writer = new AsyncWriter({ socket, request, contentLength, client, expectsPayload, header })
  try {
    // It's up to the user to somehow abort the async iterable.
    for await (const chunk of body) {
      if (socket[kError]) {
        throw socket[kError]
      }

      if (!writer.write(chunk)) {
        await waitForDrain()
      }
    }

    writer.end()
  } catch (err) {
    writer.destroy(err)
  } finally {
    socket
      .off('close', onDrain)
      .off('drain', onDrain)
  }
}

class AsyncWriter {
  constructor ({ socket, request, contentLength, client, expectsPayload, header }) {
    this.socket = socket
    this.request = request
    this.contentLength = contentLength
    this.client = client
    this.bytesWritten = 0
    this.expectsPayload = expectsPayload
    this.header = header

    socket[kWriting] = true
  }

  write (chunk) {
    const { socket, request, contentLength, client, bytesWritten, expectsPayload, header } = this

    if (socket[kError]) {
      throw socket[kError]
    }

    if (socket.destroyed) {
      return false
    }

    const len = Buffer.byteLength(chunk)
    if (!len) {
      return true
    }

    // We should defer writing chunks.
    if (contentLength !== null && bytesWritten + len > contentLength) {
      if (client[kStrictContentLength]) {
        throw new RequestContentLengthMismatchError()
      }

      process.emitWarning(new RequestContentLengthMismatchError())
    }

    socket.cork()

    if (bytesWritten === 0) {
      if (!expectsPayload) {
        socket[kReset] = true
      }

      if (contentLength === null) {
        socket.write(`${header}transfer-encoding: chunked\r\n`, 'latin1')
      } else {
        socket.write(`${header}content-length: ${contentLength}\r\n\r\n`, 'latin1')
      }
    }

    if (contentLength === null) {
      socket.write(`\r\n${len.toString(16)}\r\n`, 'latin1')
    }

    this.bytesWritten += len

    const ret = socket.write(chunk)

    socket.uncork()

    request.onBodySent(chunk)

    if (!ret) {
      if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
        // istanbul ignore else: only for jest
        if (socket[kParser].timeout.refresh) {
          socket[kParser].timeout.refresh()
        }
      }
    }

    return ret
  }

  end () {
    const { socket, contentLength, client, bytesWritten, expectsPayload, header, request } = this
    request.onRequestSent()

    socket[kWriting] = false

    if (socket[kError]) {
      throw socket[kError]
    }

    if (socket.destroyed) {
      return
    }

    if (bytesWritten === 0) {
      if (expectsPayload) {
        // https://tools.ietf.org/html/rfc7230#section-3.3.2
        // A user agent SHOULD send a Content-Length in a request message when
        // no Transfer-Encoding is sent and the request method defines a meaning
        // for an enclosed payload body.

        socket.write(`${header}content-length: 0\r\n\r\n`, 'latin1')
      } else {
        socket.write(`${header}\r\n`, 'latin1')
      }
    } else if (contentLength === null) {
      socket.write('\r\n0\r\n\r\n', 'latin1')
    }

    if (contentLength !== null && bytesWritten !== contentLength) {
      if (client[kStrictContentLength]) {
        throw new RequestContentLengthMismatchError()
      } else {
        process.emitWarning(new RequestContentLengthMismatchError())
      }
    }

    if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
      // istanbul ignore else: only for jest
      if (socket[kParser].timeout.refresh) {
        socket[kParser].timeout.refresh()
      }
    }

    resume(client)
  }

  destroy (err) {
    const { socket, client } = this

    socket[kWriting] = false

    if (err) {
      assert(client[kRunning] <= 1, 'pipeline should only contain this request')
      util.destroy(socket, err)
    }
  }
}

function errorRequest (client, request, err) {
  try {
    request.onError(err)
    assert(request.aborted)
  } catch (err) {
    client.emit('error', err)
  }
}

module.exports = Client


/***/ }),

/***/ "../../node_modules/undici/lib/compat/dispatcher-weakref.js":
/*!******************************************************************!*\
  !*** ../../node_modules/undici/lib/compat/dispatcher-weakref.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/* istanbul ignore file: only for Node 12 */

const { kConnected, kSize } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")

class CompatWeakRef {
  constructor (value) {
    this.value = value
  }

  deref () {
    return this.value[kConnected] === 0 && this.value[kSize] === 0
      ? undefined
      : this.value
  }
}

class CompatFinalizer {
  constructor (finalizer) {
    this.finalizer = finalizer
  }

  register (dispatcher, key) {
    if (dispatcher.on) {
      dispatcher.on('disconnect', () => {
        if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {
          this.finalizer(key)
        }
      })
    }
  }
}

module.exports = function () {
  // FIXME: remove workaround when the Node bug is fixed
  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308
  if (process.env.NODE_V8_COVERAGE) {
    return {
      WeakRef: CompatWeakRef,
      FinalizationRegistry: CompatFinalizer
    }
  }
  return {
    WeakRef: __webpack_require__.g.WeakRef || CompatWeakRef,
    FinalizationRegistry: __webpack_require__.g.FinalizationRegistry || CompatFinalizer
  }
}


/***/ }),

/***/ "../../node_modules/undici/lib/cookies/constants.js":
/*!**********************************************************!*\
  !*** ../../node_modules/undici/lib/cookies/constants.js ***!
  \**********************************************************/
/***/ ((module) => {



// https://wicg.github.io/cookie-store/#cookie-maximum-attribute-value-size
const maxAttributeValueSize = 1024

// https://wicg.github.io/cookie-store/#cookie-maximum-name-value-pair-size
const maxNameValuePairSize = 4096

module.exports = {
  maxAttributeValueSize,
  maxNameValuePairSize
}


/***/ }),

/***/ "../../node_modules/undici/lib/cookies/index.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/cookies/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { parseSetCookie } = __webpack_require__(/*! ./parse */ "../../node_modules/undici/lib/cookies/parse.js")
const { stringify, getHeadersList } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/cookies/util.js")
const { webidl } = __webpack_require__(/*! ../fetch/webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { Headers } = __webpack_require__(/*! ../fetch/headers */ "../../node_modules/undici/lib/fetch/headers.js")

/**
 * @typedef {Object} Cookie
 * @property {string} name
 * @property {string} value
 * @property {Date|number|undefined} expires
 * @property {number|undefined} maxAge
 * @property {string|undefined} domain
 * @property {string|undefined} path
 * @property {boolean|undefined} secure
 * @property {boolean|undefined} httpOnly
 * @property {'Strict'|'Lax'|'None'} sameSite
 * @property {string[]} unparsed
 */

/**
 * @param {Headers} headers
 * @returns {Record<string, string>}
 */
function getCookies (headers) {
  webidl.argumentLengthCheck(arguments, 1, { header: 'getCookies' })

  webidl.brandCheck(headers, Headers, { strict: false })

  const cookie = headers.get('cookie')
  const out = {}

  if (!cookie) {
    return out
  }

  for (const piece of cookie.split(';')) {
    const [name, ...value] = piece.split('=')

    out[name.trim()] = value.join('=')
  }

  return out
}

/**
 * @param {Headers} headers
 * @param {string} name
 * @param {{ path?: string, domain?: string }|undefined} attributes
 * @returns {void}
 */
function deleteCookie (headers, name, attributes) {
  webidl.argumentLengthCheck(arguments, 2, { header: 'deleteCookie' })

  webidl.brandCheck(headers, Headers, { strict: false })

  name = webidl.converters.DOMString(name)
  attributes = webidl.converters.DeleteCookieAttributes(attributes)

  // Matches behavior of
  // https://github.com/denoland/deno_std/blob/63827b16330b82489a04614027c33b7904e08be5/http/cookie.ts#L278
  setCookie(headers, {
    name,
    value: '',
    expires: new Date(0),
    ...attributes
  })
}

/**
 * @param {Headers} headers
 * @returns {Cookie[]}
 */
function getSetCookies (headers) {
  webidl.argumentLengthCheck(arguments, 1, { header: 'getSetCookies' })

  webidl.brandCheck(headers, Headers, { strict: false })

  const cookies = getHeadersList(headers).cookies

  if (!cookies) {
    return []
  }

  // In older versions of undici, cookies is a list of name:value.
  return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair))
}

/**
 * @param {Headers} headers
 * @param {Cookie} cookie
 * @returns {void}
 */
function setCookie (headers, cookie) {
  webidl.argumentLengthCheck(arguments, 2, { header: 'setCookie' })

  webidl.brandCheck(headers, Headers, { strict: false })

  cookie = webidl.converters.Cookie(cookie)

  const str = stringify(cookie)

  if (str) {
    headers.append('Set-Cookie', stringify(cookie))
  }
}

webidl.converters.DeleteCookieAttributes = webidl.dictionaryConverter([
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'path',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'domain',
    defaultValue: null
  }
])

webidl.converters.Cookie = webidl.dictionaryConverter([
  {
    converter: webidl.converters.DOMString,
    key: 'name'
  },
  {
    converter: webidl.converters.DOMString,
    key: 'value'
  },
  {
    converter: webidl.nullableConverter((value) => {
      if (typeof value === 'number') {
        return webidl.converters['unsigned long long'](value)
      }

      return new Date(value)
    }),
    key: 'expires',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters['long long']),
    key: 'maxAge',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'domain',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.DOMString),
    key: 'path',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.boolean),
    key: 'secure',
    defaultValue: null
  },
  {
    converter: webidl.nullableConverter(webidl.converters.boolean),
    key: 'httpOnly',
    defaultValue: null
  },
  {
    converter: webidl.converters.USVString,
    key: 'sameSite',
    allowedValues: ['Strict', 'Lax', 'None']
  },
  {
    converter: webidl.sequenceConverter(webidl.converters.DOMString),
    key: 'unparsed',
    defaultValue: []
  }
])

module.exports = {
  getCookies,
  deleteCookie,
  getSetCookies,
  setCookie
}


/***/ }),

/***/ "../../node_modules/undici/lib/cookies/parse.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/cookies/parse.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { maxNameValuePairSize, maxAttributeValueSize } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/cookies/constants.js")
const { isCTLExcludingHtab } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/cookies/util.js")
const { collectASequenceOfCodePointsFast } = __webpack_require__(/*! ../fetch/dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const assert = __webpack_require__(/*! assert */ "assert")

/**
 * @description Parses the field-value attributes of a set-cookie header string.
 * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4
 * @param {string} header
 * @returns if the header is invalid, null will be returned
 */
function parseSetCookie (header) {
  // 1. If the set-cookie-string contains a %x00-08 / %x0A-1F / %x7F
  //    character (CTL characters excluding HTAB): Abort these steps and
  //    ignore the set-cookie-string entirely.
  if (isCTLExcludingHtab(header)) {
    return null
  }

  let nameValuePair = ''
  let unparsedAttributes = ''
  let name = ''
  let value = ''

  // 2. If the set-cookie-string contains a %x3B (";") character:
  if (header.includes(';')) {
    // 1. The name-value-pair string consists of the characters up to,
    //    but not including, the first %x3B (";"), and the unparsed-
    //    attributes consist of the remainder of the set-cookie-string
    //    (including the %x3B (";") in question).
    const position = { position: 0 }

    nameValuePair = collectASequenceOfCodePointsFast(';', header, position)
    unparsedAttributes = header.slice(position.position)
  } else {
    // Otherwise:

    // 1. The name-value-pair string consists of all the characters
    //    contained in the set-cookie-string, and the unparsed-
    //    attributes is the empty string.
    nameValuePair = header
  }

  // 3. If the name-value-pair string lacks a %x3D ("=") character, then
  //    the name string is empty, and the value string is the value of
  //    name-value-pair.
  if (!nameValuePair.includes('=')) {
    value = nameValuePair
  } else {
    //    Otherwise, the name string consists of the characters up to, but
    //    not including, the first %x3D ("=") character, and the (possibly
    //    empty) value string consists of the characters after the first
    //    %x3D ("=") character.
    const position = { position: 0 }
    name = collectASequenceOfCodePointsFast(
      '=',
      nameValuePair,
      position
    )
    value = nameValuePair.slice(position.position + 1)
  }

  // 4. Remove any leading or trailing WSP characters from the name
  //    string and the value string.
  name = name.trim()
  value = value.trim()

  // 5. If the sum of the lengths of the name string and the value string
  //    is more than 4096 octets, abort these steps and ignore the set-
  //    cookie-string entirely.
  if (name.length + value.length > maxNameValuePairSize) {
    return null
  }

  // 6. The cookie-name is the name string, and the cookie-value is the
  //    value string.
  return {
    name, value, ...parseUnparsedAttributes(unparsedAttributes)
  }
}

/**
 * Parses the remaining attributes of a set-cookie header
 * @see https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4
 * @param {string} unparsedAttributes
 * @param {[Object.<string, unknown>]={}} cookieAttributeList
 */
function parseUnparsedAttributes (unparsedAttributes, cookieAttributeList = {}) {
  // 1. If the unparsed-attributes string is empty, skip the rest of
  //    these steps.
  if (unparsedAttributes.length === 0) {
    return cookieAttributeList
  }

  // 2. Discard the first character of the unparsed-attributes (which
  //    will be a %x3B (";") character).
  assert(unparsedAttributes[0] === ';')
  unparsedAttributes = unparsedAttributes.slice(1)

  let cookieAv = ''

  // 3. If the remaining unparsed-attributes contains a %x3B (";")
  //    character:
  if (unparsedAttributes.includes(';')) {
    // 1. Consume the characters of the unparsed-attributes up to, but
    //    not including, the first %x3B (";") character.
    cookieAv = collectASequenceOfCodePointsFast(
      ';',
      unparsedAttributes,
      { position: 0 }
    )
    unparsedAttributes = unparsedAttributes.slice(cookieAv.length)
  } else {
    // Otherwise:

    // 1. Consume the remainder of the unparsed-attributes.
    cookieAv = unparsedAttributes
    unparsedAttributes = ''
  }

  // Let the cookie-av string be the characters consumed in this step.

  let attributeName = ''
  let attributeValue = ''

  // 4. If the cookie-av string contains a %x3D ("=") character:
  if (cookieAv.includes('=')) {
    // 1. The (possibly empty) attribute-name string consists of the
    //    characters up to, but not including, the first %x3D ("=")
    //    character, and the (possibly empty) attribute-value string
    //    consists of the characters after the first %x3D ("=")
    //    character.
    const position = { position: 0 }

    attributeName = collectASequenceOfCodePointsFast(
      '=',
      cookieAv,
      position
    )
    attributeValue = cookieAv.slice(position.position + 1)
  } else {
    // Otherwise:

    // 1. The attribute-name string consists of the entire cookie-av
    //    string, and the attribute-value string is empty.
    attributeName = cookieAv
  }

  // 5. Remove any leading or trailing WSP characters from the attribute-
  //    name string and the attribute-value string.
  attributeName = attributeName.trim()
  attributeValue = attributeValue.trim()

  // 6. If the attribute-value is longer than 1024 octets, ignore the
  //    cookie-av string and return to Step 1 of this algorithm.
  if (attributeValue.length > maxAttributeValueSize) {
    return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
  }

  // 7. Process the attribute-name and attribute-value according to the
  //    requirements in the following subsections.  (Notice that
  //    attributes with unrecognized attribute-names are ignored.)
  const attributeNameLowercase = attributeName.toLowerCase()

  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.1
  // If the attribute-name case-insensitively matches the string
  // "Expires", the user agent MUST process the cookie-av as follows.
  if (attributeNameLowercase === 'expires') {
    // 1. Let the expiry-time be the result of parsing the attribute-value
    //    as cookie-date (see Section 5.1.1).
    const expiryTime = new Date(attributeValue)

    // 2. If the attribute-value failed to parse as a cookie date, ignore
    //    the cookie-av.

    cookieAttributeList.expires = expiryTime
  } else if (attributeNameLowercase === 'max-age') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.2
    // If the attribute-name case-insensitively matches the string "Max-
    // Age", the user agent MUST process the cookie-av as follows.

    // 1. If the first character of the attribute-value is not a DIGIT or a
    //    "-" character, ignore the cookie-av.
    const charCode = attributeValue.charCodeAt(0)

    if ((charCode < 48 || charCode > 57) && attributeValue[0] !== '-') {
      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
    }

    // 2. If the remainder of attribute-value contains a non-DIGIT
    //    character, ignore the cookie-av.
    if (!/^\d+$/.test(attributeValue)) {
      return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
    }

    // 3. Let delta-seconds be the attribute-value converted to an integer.
    const deltaSeconds = Number(attributeValue)

    // 4. Let cookie-age-limit be the maximum age of the cookie (which
    //    SHOULD be 400 days or less, see Section 4.1.2.2).

    // 5. Set delta-seconds to the smaller of its present value and cookie-
    //    age-limit.
    // deltaSeconds = Math.min(deltaSeconds * 1000, maxExpiresMs)

    // 6. If delta-seconds is less than or equal to zero (0), let expiry-
    //    time be the earliest representable date and time.  Otherwise, let
    //    the expiry-time be the current date and time plus delta-seconds
    //    seconds.
    // const expiryTime = deltaSeconds <= 0 ? Date.now() : Date.now() + deltaSeconds

    // 7. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of Max-Age and an attribute-value of expiry-time.
    cookieAttributeList.maxAge = deltaSeconds
  } else if (attributeNameLowercase === 'domain') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.3
    // If the attribute-name case-insensitively matches the string "Domain",
    // the user agent MUST process the cookie-av as follows.

    // 1. Let cookie-domain be the attribute-value.
    let cookieDomain = attributeValue

    // 2. If cookie-domain starts with %x2E ("."), let cookie-domain be
    //    cookie-domain without its leading %x2E (".").
    if (cookieDomain[0] === '.') {
      cookieDomain = cookieDomain.slice(1)
    }

    // 3. Convert the cookie-domain to lower case.
    cookieDomain = cookieDomain.toLowerCase()

    // 4. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of Domain and an attribute-value of cookie-domain.
    cookieAttributeList.domain = cookieDomain
  } else if (attributeNameLowercase === 'path') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.4
    // If the attribute-name case-insensitively matches the string "Path",
    // the user agent MUST process the cookie-av as follows.

    // 1. If the attribute-value is empty or if the first character of the
    //    attribute-value is not %x2F ("/"):
    let cookiePath = ''
    if (attributeValue.length === 0 || attributeValue[0] !== '/') {
      // 1. Let cookie-path be the default-path.
      cookiePath = '/'
    } else {
      // Otherwise:

      // 1. Let cookie-path be the attribute-value.
      cookiePath = attributeValue
    }

    // 2. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of Path and an attribute-value of cookie-path.
    cookieAttributeList.path = cookiePath
  } else if (attributeNameLowercase === 'secure') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.5
    // If the attribute-name case-insensitively matches the string "Secure",
    // the user agent MUST append an attribute to the cookie-attribute-list
    // with an attribute-name of Secure and an empty attribute-value.

    cookieAttributeList.secure = true
  } else if (attributeNameLowercase === 'httponly') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.6
    // If the attribute-name case-insensitively matches the string
    // "HttpOnly", the user agent MUST append an attribute to the cookie-
    // attribute-list with an attribute-name of HttpOnly and an empty
    // attribute-value.

    cookieAttributeList.httpOnly = true
  } else if (attributeNameLowercase === 'samesite') {
    // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-rfc6265bis#section-5.4.7
    // If the attribute-name case-insensitively matches the string
    // "SameSite", the user agent MUST process the cookie-av as follows:

    // 1. Let enforcement be "Default".
    let enforcement = 'Default'

    const attributeValueLowercase = attributeValue.toLowerCase()
    // 2. If cookie-av's attribute-value is a case-insensitive match for
    //    "None", set enforcement to "None".
    if (attributeValueLowercase.includes('none')) {
      enforcement = 'None'
    }

    // 3. If cookie-av's attribute-value is a case-insensitive match for
    //    "Strict", set enforcement to "Strict".
    if (attributeValueLowercase.includes('strict')) {
      enforcement = 'Strict'
    }

    // 4. If cookie-av's attribute-value is a case-insensitive match for
    //    "Lax", set enforcement to "Lax".
    if (attributeValueLowercase.includes('lax')) {
      enforcement = 'Lax'
    }

    // 5. Append an attribute to the cookie-attribute-list with an
    //    attribute-name of "SameSite" and an attribute-value of
    //    enforcement.
    cookieAttributeList.sameSite = enforcement
  } else {
    cookieAttributeList.unparsed ??= []

    cookieAttributeList.unparsed.push(`${attributeName}=${attributeValue}`)
  }

  // 8. Return to Step 1 of this algorithm.
  return parseUnparsedAttributes(unparsedAttributes, cookieAttributeList)
}

module.exports = {
  parseSetCookie,
  parseUnparsedAttributes
}


/***/ }),

/***/ "../../node_modules/undici/lib/cookies/util.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/cookies/util.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const assert = __webpack_require__(/*! assert */ "assert")
const { kHeadersList } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")

function isCTLExcludingHtab (value) {
  if (value.length === 0) {
    return false
  }

  for (const char of value) {
    const code = char.charCodeAt(0)

    if (
      (code >= 0x00 || code <= 0x08) ||
      (code >= 0x0A || code <= 0x1F) ||
      code === 0x7F
    ) {
      return false
    }
  }
}

/**
 CHAR           = <any US-ASCII character (octets 0 - 127)>
 token          = 1*<any CHAR except CTLs or separators>
 separators     = "(" | ")" | "<" | ">" | "@"
                | "," | ";" | ":" | "\" | <">
                | "/" | "[" | "]" | "?" | "="
                | "{" | "}" | SP | HT
 * @param {string} name
 */
function validateCookieName (name) {
  for (const char of name) {
    const code = char.charCodeAt(0)

    if (
      (code <= 0x20 || code > 0x7F) ||
      char === '(' ||
      char === ')' ||
      char === '>' ||
      char === '<' ||
      char === '@' ||
      char === ',' ||
      char === ';' ||
      char === ':' ||
      char === '\\' ||
      char === '"' ||
      char === '/' ||
      char === '[' ||
      char === ']' ||
      char === '?' ||
      char === '=' ||
      char === '{' ||
      char === '}'
    ) {
      throw new Error('Invalid cookie name')
    }
  }
}

/**
 cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
 cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
                       ; US-ASCII characters excluding CTLs,
                       ; whitespace DQUOTE, comma, semicolon,
                       ; and backslash
 * @param {string} value
 */
function validateCookieValue (value) {
  for (const char of value) {
    const code = char.charCodeAt(0)

    if (
      code < 0x21 || // exclude CTLs (0-31)
      code === 0x22 ||
      code === 0x2C ||
      code === 0x3B ||
      code === 0x5C ||
      code > 0x7E // non-ascii
    ) {
      throw new Error('Invalid header value')
    }
  }
}

/**
 * path-value        = <any CHAR except CTLs or ";">
 * @param {string} path
 */
function validateCookiePath (path) {
  for (const char of path) {
    const code = char.charCodeAt(0)

    if (code < 0x21 || char === ';') {
      throw new Error('Invalid cookie path')
    }
  }
}

/**
 * I have no idea why these values aren't allowed to be honest,
 * but Deno tests these. - Khafra
 * @param {string} domain
 */
function validateCookieDomain (domain) {
  if (
    domain.startsWith('-') ||
    domain.endsWith('.') ||
    domain.endsWith('-')
  ) {
    throw new Error('Invalid cookie domain')
  }
}

/**
 * @see https://www.rfc-editor.org/rfc/rfc7231#section-7.1.1.1
 * @param {number|Date} date
  IMF-fixdate  = day-name "," SP date1 SP time-of-day SP GMT
  ; fixed length/zone/capitalization subset of the format
  ; see Section 3.3 of [RFC5322]

  day-name     = %x4D.6F.6E ; "Mon", case-sensitive
              / %x54.75.65 ; "Tue", case-sensitive
              / %x57.65.64 ; "Wed", case-sensitive
              / %x54.68.75 ; "Thu", case-sensitive
              / %x46.72.69 ; "Fri", case-sensitive
              / %x53.61.74 ; "Sat", case-sensitive
              / %x53.75.6E ; "Sun", case-sensitive
  date1        = day SP month SP year
                  ; e.g., 02 Jun 1982

  day          = 2DIGIT
  month        = %x4A.61.6E ; "Jan", case-sensitive
              / %x46.65.62 ; "Feb", case-sensitive
              / %x4D.61.72 ; "Mar", case-sensitive
              / %x41.70.72 ; "Apr", case-sensitive
              / %x4D.61.79 ; "May", case-sensitive
              / %x4A.75.6E ; "Jun", case-sensitive
              / %x4A.75.6C ; "Jul", case-sensitive
              / %x41.75.67 ; "Aug", case-sensitive
              / %x53.65.70 ; "Sep", case-sensitive
              / %x4F.63.74 ; "Oct", case-sensitive
              / %x4E.6F.76 ; "Nov", case-sensitive
              / %x44.65.63 ; "Dec", case-sensitive
  year         = 4DIGIT

  GMT          = %x47.4D.54 ; "GMT", case-sensitive

  time-of-day  = hour ":" minute ":" second
              ; 00:00:00 - 23:59:60 (leap second)

  hour         = 2DIGIT
  minute       = 2DIGIT
  second       = 2DIGIT
 */
function toIMFDate (date) {
  if (typeof date === 'number') {
    date = new Date(date)
  }

  const days = [
    'Sun', 'Mon', 'Tue', 'Wed',
    'Thu', 'Fri', 'Sat'
  ]

  const months = [
    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
  ]

  const dayName = days[date.getUTCDay()]
  const day = date.getUTCDate().toString().padStart(2, '0')
  const month = months[date.getUTCMonth()]
  const year = date.getUTCFullYear()
  const hour = date.getUTCHours().toString().padStart(2, '0')
  const minute = date.getUTCMinutes().toString().padStart(2, '0')
  const second = date.getUTCSeconds().toString().padStart(2, '0')

  return `${dayName}, ${day} ${month} ${year} ${hour}:${minute}:${second} GMT`
}

/**
 max-age-av        = "Max-Age=" non-zero-digit *DIGIT
                       ; In practice, both expires-av and max-age-av
                       ; are limited to dates representable by the
                       ; user agent.
 * @param {number} maxAge
 */
function validateCookieMaxAge (maxAge) {
  if (maxAge < 0) {
    throw new Error('Invalid cookie max-age')
  }
}

/**
 * @see https://www.rfc-editor.org/rfc/rfc6265#section-4.1.1
 * @param {import('./index').Cookie} cookie
 */
function stringify (cookie) {
  if (cookie.name.length === 0) {
    return null
  }

  validateCookieName(cookie.name)
  validateCookieValue(cookie.value)

  const out = [`${cookie.name}=${cookie.value}`]

  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.1
  // https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-cookie-prefixes-00#section-3.2
  if (cookie.name.startsWith('__Secure-')) {
    cookie.secure = true
  }

  if (cookie.name.startsWith('__Host-')) {
    cookie.secure = true
    cookie.domain = null
    cookie.path = '/'
  }

  if (cookie.secure) {
    out.push('Secure')
  }

  if (cookie.httpOnly) {
    out.push('HttpOnly')
  }

  if (typeof cookie.maxAge === 'number') {
    validateCookieMaxAge(cookie.maxAge)
    out.push(`Max-Age=${cookie.maxAge}`)
  }

  if (cookie.domain) {
    validateCookieDomain(cookie.domain)
    out.push(`Domain=${cookie.domain}`)
  }

  if (cookie.path) {
    validateCookiePath(cookie.path)
    out.push(`Path=${cookie.path}`)
  }

  if (cookie.expires && cookie.expires.toString() !== 'Invalid Date') {
    out.push(`Expires=${toIMFDate(cookie.expires)}`)
  }

  if (cookie.sameSite) {
    out.push(`SameSite=${cookie.sameSite}`)
  }

  for (const part of cookie.unparsed) {
    if (!part.includes('=')) {
      throw new Error('Invalid unparsed')
    }

    const [key, ...value] = part.split('=')

    out.push(`${key.trim()}=${value.join('=')}`)
  }

  return out.join('; ')
}

let kHeadersListNode

function getHeadersList (headers) {
  if (headers[kHeadersList]) {
    return headers[kHeadersList]
  }

  if (!kHeadersListNode) {
    kHeadersListNode = Object.getOwnPropertySymbols(headers).find(
      (symbol) => symbol.description === 'headers list'
    )

    assert(kHeadersListNode, 'Headers cannot be parsed')
  }

  const headersList = headers[kHeadersListNode]
  assert(headersList)

  return headersList
}

module.exports = {
  isCTLExcludingHtab,
  stringify,
  getHeadersList
}


/***/ }),

/***/ "../../node_modules/undici/lib/core/connect.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/core/connect.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const net = __webpack_require__(/*! net */ "net")
const assert = __webpack_require__(/*! assert */ "assert")
const util = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/core/util.js")
const { InvalidArgumentError, ConnectTimeoutError } = __webpack_require__(/*! ./errors */ "../../node_modules/undici/lib/core/errors.js")

let tls // include tls conditionally since it is not always available

// TODO: session re-use does not wait for the first
// connection to resolve the session and might therefore
// resolve the same servername multiple times even when
// re-use is enabled.

let SessionCache
// FIXME: remove workaround when the Node bug is fixed
// https://github.com/nodejs/node/issues/49344#issuecomment-1741776308
if (__webpack_require__.g.FinalizationRegistry && !process.env.NODE_V8_COVERAGE) {
  SessionCache = class WeakSessionCache {
    constructor (maxCachedSessions) {
      this._maxCachedSessions = maxCachedSessions
      this._sessionCache = new Map()
      this._sessionRegistry = new __webpack_require__.g.FinalizationRegistry((key) => {
        if (this._sessionCache.size < this._maxCachedSessions) {
          return
        }

        const ref = this._sessionCache.get(key)
        if (ref !== undefined && ref.deref() === undefined) {
          this._sessionCache.delete(key)
        }
      })
    }

    get (sessionKey) {
      const ref = this._sessionCache.get(sessionKey)
      return ref ? ref.deref() : null
    }

    set (sessionKey, session) {
      if (this._maxCachedSessions === 0) {
        return
      }

      this._sessionCache.set(sessionKey, new WeakRef(session))
      this._sessionRegistry.register(session, sessionKey)
    }
  }
} else {
  SessionCache = class SimpleSessionCache {
    constructor (maxCachedSessions) {
      this._maxCachedSessions = maxCachedSessions
      this._sessionCache = new Map()
    }

    get (sessionKey) {
      return this._sessionCache.get(sessionKey)
    }

    set (sessionKey, session) {
      if (this._maxCachedSessions === 0) {
        return
      }

      if (this._sessionCache.size >= this._maxCachedSessions) {
        // remove the oldest session
        const { value: oldestKey } = this._sessionCache.keys().next()
        this._sessionCache.delete(oldestKey)
      }

      this._sessionCache.set(sessionKey, session)
    }
  }
}

function buildConnector ({ allowH2, maxCachedSessions, socketPath, timeout, ...opts }) {
  if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {
    throw new InvalidArgumentError('maxCachedSessions must be a positive integer or zero')
  }

  const options = { path: socketPath, ...opts }
  const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions)
  timeout = timeout == null ? 10e3 : timeout
  allowH2 = allowH2 != null ? allowH2 : false
  return function connect ({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {
    let socket
    if (protocol === 'https:') {
      if (!tls) {
        tls = __webpack_require__(/*! tls */ "tls")
      }
      servername = servername || options.servername || util.getServerName(host) || null

      const sessionKey = servername || hostname
      const session = sessionCache.get(sessionKey) || null

      assert(sessionKey)

      socket = tls.connect({
        highWaterMark: 16384, // TLS in node can't have bigger HWM anyway...
        ...options,
        servername,
        session,
        localAddress,
        // TODO(HTTP/2): Add support for h2c
        ALPNProtocols: allowH2 ? ['http/1.1', 'h2'] : ['http/1.1'],
        socket: httpSocket, // upgrade socket connection
        port: port || 443,
        host: hostname
      })

      socket
        .on('session', function (session) {
          // TODO (fix): Can a session become invalid once established? Don't think so?
          sessionCache.set(sessionKey, session)
        })
    } else {
      assert(!httpSocket, 'httpSocket can only be sent on TLS update')
      socket = net.connect({
        highWaterMark: 64 * 1024, // Same as nodejs fs streams.
        ...options,
        localAddress,
        port: port || 80,
        host: hostname
      })
    }

    // Set TCP keep alive options on the socket here instead of in connect() for the case of assigning the socket
    if (options.keepAlive == null || options.keepAlive) {
      const keepAliveInitialDelay = options.keepAliveInitialDelay === undefined ? 60e3 : options.keepAliveInitialDelay
      socket.setKeepAlive(true, keepAliveInitialDelay)
    }

    const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout)

    socket
      .setNoDelay(true)
      .once(protocol === 'https:' ? 'secureConnect' : 'connect', function () {
        cancelTimeout()

        if (callback) {
          const cb = callback
          callback = null
          cb(null, this)
        }
      })
      .on('error', function (err) {
        cancelTimeout()

        if (callback) {
          const cb = callback
          callback = null
          cb(err)
        }
      })

    return socket
  }
}

function setupTimeout (onConnectTimeout, timeout) {
  if (!timeout) {
    return () => {}
  }

  let s1 = null
  let s2 = null
  const timeoutId = setTimeout(() => {
    // setImmediate is added to make sure that we priotorise socket error events over timeouts
    s1 = setImmediate(() => {
      if (process.platform === 'win32') {
        // Windows needs an extra setImmediate probably due to implementation differences in the socket logic
        s2 = setImmediate(() => onConnectTimeout())
      } else {
        onConnectTimeout()
      }
    })
  }, timeout)
  return () => {
    clearTimeout(timeoutId)
    clearImmediate(s1)
    clearImmediate(s2)
  }
}

function onConnectTimeout (socket) {
  util.destroy(socket, new ConnectTimeoutError())
}

module.exports = buildConnector


/***/ }),

/***/ "../../node_modules/undici/lib/core/constants.js":
/*!*******************************************************!*\
  !*** ../../node_modules/undici/lib/core/constants.js ***!
  \*******************************************************/
/***/ ((module) => {



/** @type {Record<string, string | undefined>} */
const headerNameLowerCasedRecord = {}

// https://developer.mozilla.org/docs/Web/HTTP/Headers
const wellknownHeaderNames = [
  'Accept',
  'Accept-Encoding',
  'Accept-Language',
  'Accept-Ranges',
  'Access-Control-Allow-Credentials',
  'Access-Control-Allow-Headers',
  'Access-Control-Allow-Methods',
  'Access-Control-Allow-Origin',
  'Access-Control-Expose-Headers',
  'Access-Control-Max-Age',
  'Access-Control-Request-Headers',
  'Access-Control-Request-Method',
  'Age',
  'Allow',
  'Alt-Svc',
  'Alt-Used',
  'Authorization',
  'Cache-Control',
  'Clear-Site-Data',
  'Connection',
  'Content-Disposition',
  'Content-Encoding',
  'Content-Language',
  'Content-Length',
  'Content-Location',
  'Content-Range',
  'Content-Security-Policy',
  'Content-Security-Policy-Report-Only',
  'Content-Type',
  'Cookie',
  'Cross-Origin-Embedder-Policy',
  'Cross-Origin-Opener-Policy',
  'Cross-Origin-Resource-Policy',
  'Date',
  'Device-Memory',
  'Downlink',
  'ECT',
  'ETag',
  'Expect',
  'Expect-CT',
  'Expires',
  'Forwarded',
  'From',
  'Host',
  'If-Match',
  'If-Modified-Since',
  'If-None-Match',
  'If-Range',
  'If-Unmodified-Since',
  'Keep-Alive',
  'Last-Modified',
  'Link',
  'Location',
  'Max-Forwards',
  'Origin',
  'Permissions-Policy',
  'Pragma',
  'Proxy-Authenticate',
  'Proxy-Authorization',
  'RTT',
  'Range',
  'Referer',
  'Referrer-Policy',
  'Refresh',
  'Retry-After',
  'Sec-WebSocket-Accept',
  'Sec-WebSocket-Extensions',
  'Sec-WebSocket-Key',
  'Sec-WebSocket-Protocol',
  'Sec-WebSocket-Version',
  'Server',
  'Server-Timing',
  'Service-Worker-Allowed',
  'Service-Worker-Navigation-Preload',
  'Set-Cookie',
  'SourceMap',
  'Strict-Transport-Security',
  'Supports-Loading-Mode',
  'TE',
  'Timing-Allow-Origin',
  'Trailer',
  'Transfer-Encoding',
  'Upgrade',
  'Upgrade-Insecure-Requests',
  'User-Agent',
  'Vary',
  'Via',
  'WWW-Authenticate',
  'X-Content-Type-Options',
  'X-DNS-Prefetch-Control',
  'X-Frame-Options',
  'X-Permitted-Cross-Domain-Policies',
  'X-Powered-By',
  'X-Requested-With',
  'X-XSS-Protection'
]

for (let i = 0; i < wellknownHeaderNames.length; ++i) {
  const key = wellknownHeaderNames[i]
  const lowerCasedKey = key.toLowerCase()
  headerNameLowerCasedRecord[key] = headerNameLowerCasedRecord[lowerCasedKey] =
    lowerCasedKey
}

// Note: object prototypes should not be able to be referenced. e.g. `Object#hasOwnProperty`.
Object.setPrototypeOf(headerNameLowerCasedRecord, null)

module.exports = {
  wellknownHeaderNames,
  headerNameLowerCasedRecord
}


/***/ }),

/***/ "../../node_modules/undici/lib/core/errors.js":
/*!****************************************************!*\
  !*** ../../node_modules/undici/lib/core/errors.js ***!
  \****************************************************/
/***/ ((module) => {



class UndiciError extends Error {
  constructor (message) {
    super(message)
    this.name = 'UndiciError'
    this.code = 'UND_ERR'
  }
}

class ConnectTimeoutError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ConnectTimeoutError)
    this.name = 'ConnectTimeoutError'
    this.message = message || 'Connect Timeout Error'
    this.code = 'UND_ERR_CONNECT_TIMEOUT'
  }
}

class HeadersTimeoutError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, HeadersTimeoutError)
    this.name = 'HeadersTimeoutError'
    this.message = message || 'Headers Timeout Error'
    this.code = 'UND_ERR_HEADERS_TIMEOUT'
  }
}

class HeadersOverflowError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, HeadersOverflowError)
    this.name = 'HeadersOverflowError'
    this.message = message || 'Headers Overflow Error'
    this.code = 'UND_ERR_HEADERS_OVERFLOW'
  }
}

class BodyTimeoutError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, BodyTimeoutError)
    this.name = 'BodyTimeoutError'
    this.message = message || 'Body Timeout Error'
    this.code = 'UND_ERR_BODY_TIMEOUT'
  }
}

class ResponseStatusCodeError extends UndiciError {
  constructor (message, statusCode, headers, body) {
    super(message)
    Error.captureStackTrace(this, ResponseStatusCodeError)
    this.name = 'ResponseStatusCodeError'
    this.message = message || 'Response Status Code Error'
    this.code = 'UND_ERR_RESPONSE_STATUS_CODE'
    this.body = body
    this.status = statusCode
    this.statusCode = statusCode
    this.headers = headers
  }
}

class InvalidArgumentError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, InvalidArgumentError)
    this.name = 'InvalidArgumentError'
    this.message = message || 'Invalid Argument Error'
    this.code = 'UND_ERR_INVALID_ARG'
  }
}

class InvalidReturnValueError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, InvalidReturnValueError)
    this.name = 'InvalidReturnValueError'
    this.message = message || 'Invalid Return Value Error'
    this.code = 'UND_ERR_INVALID_RETURN_VALUE'
  }
}

class RequestAbortedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, RequestAbortedError)
    this.name = 'AbortError'
    this.message = message || 'Request aborted'
    this.code = 'UND_ERR_ABORTED'
  }
}

class InformationalError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, InformationalError)
    this.name = 'InformationalError'
    this.message = message || 'Request information'
    this.code = 'UND_ERR_INFO'
  }
}

class RequestContentLengthMismatchError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, RequestContentLengthMismatchError)
    this.name = 'RequestContentLengthMismatchError'
    this.message = message || 'Request body length does not match content-length header'
    this.code = 'UND_ERR_REQ_CONTENT_LENGTH_MISMATCH'
  }
}

class ResponseContentLengthMismatchError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ResponseContentLengthMismatchError)
    this.name = 'ResponseContentLengthMismatchError'
    this.message = message || 'Response body length does not match content-length header'
    this.code = 'UND_ERR_RES_CONTENT_LENGTH_MISMATCH'
  }
}

class ClientDestroyedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ClientDestroyedError)
    this.name = 'ClientDestroyedError'
    this.message = message || 'The client is destroyed'
    this.code = 'UND_ERR_DESTROYED'
  }
}

class ClientClosedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ClientClosedError)
    this.name = 'ClientClosedError'
    this.message = message || 'The client is closed'
    this.code = 'UND_ERR_CLOSED'
  }
}

class SocketError extends UndiciError {
  constructor (message, socket) {
    super(message)
    Error.captureStackTrace(this, SocketError)
    this.name = 'SocketError'
    this.message = message || 'Socket error'
    this.code = 'UND_ERR_SOCKET'
    this.socket = socket
  }
}

class NotSupportedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, NotSupportedError)
    this.name = 'NotSupportedError'
    this.message = message || 'Not supported error'
    this.code = 'UND_ERR_NOT_SUPPORTED'
  }
}

class BalancedPoolMissingUpstreamError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, NotSupportedError)
    this.name = 'MissingUpstreamError'
    this.message = message || 'No upstream has been added to the BalancedPool'
    this.code = 'UND_ERR_BPL_MISSING_UPSTREAM'
  }
}

class HTTPParserError extends Error {
  constructor (message, code, data) {
    super(message)
    Error.captureStackTrace(this, HTTPParserError)
    this.name = 'HTTPParserError'
    this.code = code ? `HPE_${code}` : undefined
    this.data = data ? data.toString() : undefined
  }
}

class ResponseExceededMaxSizeError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, ResponseExceededMaxSizeError)
    this.name = 'ResponseExceededMaxSizeError'
    this.message = message || 'Response content exceeded max size'
    this.code = 'UND_ERR_RES_EXCEEDED_MAX_SIZE'
  }
}

class RequestRetryError extends UndiciError {
  constructor (message, code, { headers, data }) {
    super(message)
    Error.captureStackTrace(this, RequestRetryError)
    this.name = 'RequestRetryError'
    this.message = message || 'Request retry error'
    this.code = 'UND_ERR_REQ_RETRY'
    this.statusCode = code
    this.data = data
    this.headers = headers
  }
}

module.exports = {
  HTTPParserError,
  UndiciError,
  HeadersTimeoutError,
  HeadersOverflowError,
  BodyTimeoutError,
  RequestContentLengthMismatchError,
  ConnectTimeoutError,
  ResponseStatusCodeError,
  InvalidArgumentError,
  InvalidReturnValueError,
  RequestAbortedError,
  ClientDestroyedError,
  ClientClosedError,
  InformationalError,
  SocketError,
  NotSupportedError,
  ResponseContentLengthMismatchError,
  BalancedPoolMissingUpstreamError,
  ResponseExceededMaxSizeError,
  RequestRetryError
}


/***/ }),

/***/ "../../node_modules/undici/lib/core/request.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/core/request.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const {
  InvalidArgumentError,
  NotSupportedError
} = __webpack_require__(/*! ./errors */ "../../node_modules/undici/lib/core/errors.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { kHTTP2BuildRequest, kHTTP2CopyHeaders, kHTTP1BuildRequest } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/core/symbols.js")
const util = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/core/util.js")

// tokenRegExp and headerCharRegex have been lifted from
// https://github.com/nodejs/node/blob/main/lib/_http_common.js

/**
 * Verifies that the given val is a valid HTTP token
 * per the rules defined in RFC 7230
 * See https://tools.ietf.org/html/rfc7230#section-3.2.6
 */
const tokenRegExp = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/

/**
 * Matches if val contains an invalid field-vchar
 *  field-value    = *( field-content / obs-fold )
 *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 *  field-vchar    = VCHAR / obs-text
 */
const headerCharRegex = /[^\t\x20-\x7e\x80-\xff]/

// Verifies that a given path is valid does not contain control chars \x00 to \x20
const invalidPathRegex = /[^\u0021-\u00ff]/

const kHandler = Symbol('handler')

const channels = {}

let extractBody

try {
  const diagnosticsChannel = __webpack_require__(/*! diagnostics_channel */ "diagnostics_channel")
  channels.create = diagnosticsChannel.channel('undici:request:create')
  channels.bodySent = diagnosticsChannel.channel('undici:request:bodySent')
  channels.headers = diagnosticsChannel.channel('undici:request:headers')
  channels.trailers = diagnosticsChannel.channel('undici:request:trailers')
  channels.error = diagnosticsChannel.channel('undici:request:error')
} catch {
  channels.create = { hasSubscribers: false }
  channels.bodySent = { hasSubscribers: false }
  channels.headers = { hasSubscribers: false }
  channels.trailers = { hasSubscribers: false }
  channels.error = { hasSubscribers: false }
}

class Request {
  constructor (origin, {
    path,
    method,
    body,
    headers,
    query,
    idempotent,
    blocking,
    upgrade,
    headersTimeout,
    bodyTimeout,
    reset,
    throwOnError,
    expectContinue
  }, handler) {
    if (typeof path !== 'string') {
      throw new InvalidArgumentError('path must be a string')
    } else if (
      path[0] !== '/' &&
      !(path.startsWith('http://') || path.startsWith('https://')) &&
      method !== 'CONNECT'
    ) {
      throw new InvalidArgumentError('path must be an absolute URL or start with a slash')
    } else if (invalidPathRegex.exec(path) !== null) {
      throw new InvalidArgumentError('invalid request path')
    }

    if (typeof method !== 'string') {
      throw new InvalidArgumentError('method must be a string')
    } else if (tokenRegExp.exec(method) === null) {
      throw new InvalidArgumentError('invalid request method')
    }

    if (upgrade && typeof upgrade !== 'string') {
      throw new InvalidArgumentError('upgrade must be a string')
    }

    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {
      throw new InvalidArgumentError('invalid headersTimeout')
    }

    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {
      throw new InvalidArgumentError('invalid bodyTimeout')
    }

    if (reset != null && typeof reset !== 'boolean') {
      throw new InvalidArgumentError('invalid reset')
    }

    if (expectContinue != null && typeof expectContinue !== 'boolean') {
      throw new InvalidArgumentError('invalid expectContinue')
    }

    this.headersTimeout = headersTimeout

    this.bodyTimeout = bodyTimeout

    this.throwOnError = throwOnError === true

    this.method = method

    this.abort = null

    if (body == null) {
      this.body = null
    } else if (util.isStream(body)) {
      this.body = body

      const rState = this.body._readableState
      if (!rState || !rState.autoDestroy) {
        this.endHandler = function autoDestroy () {
          util.destroy(this)
        }
        this.body.on('end', this.endHandler)
      }

      this.errorHandler = err => {
        if (this.abort) {
          this.abort(err)
        } else {
          this.error = err
        }
      }
      this.body.on('error', this.errorHandler)
    } else if (util.isBuffer(body)) {
      this.body = body.byteLength ? body : null
    } else if (ArrayBuffer.isView(body)) {
      this.body = body.buffer.byteLength ? Buffer.from(body.buffer, body.byteOffset, body.byteLength) : null
    } else if (body instanceof ArrayBuffer) {
      this.body = body.byteLength ? Buffer.from(body) : null
    } else if (typeof body === 'string') {
      this.body = body.length ? Buffer.from(body) : null
    } else if (util.isFormDataLike(body) || util.isIterable(body) || util.isBlobLike(body)) {
      this.body = body
    } else {
      throw new InvalidArgumentError('body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable')
    }

    this.completed = false

    this.aborted = false

    this.upgrade = upgrade || null

    this.path = query ? util.buildURL(path, query) : path

    this.origin = origin

    this.idempotent = idempotent == null
      ? method === 'HEAD' || method === 'GET'
      : idempotent

    this.blocking = blocking == null ? false : blocking

    this.reset = reset == null ? null : reset

    this.host = null

    this.contentLength = null

    this.contentType = null

    this.headers = ''

    // Only for H2
    this.expectContinue = expectContinue != null ? expectContinue : false

    if (Array.isArray(headers)) {
      if (headers.length % 2 !== 0) {
        throw new InvalidArgumentError('headers array must be even')
      }
      for (let i = 0; i < headers.length; i += 2) {
        processHeader(this, headers[i], headers[i + 1])
      }
    } else if (headers && typeof headers === 'object') {
      const keys = Object.keys(headers)
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i]
        processHeader(this, key, headers[key])
      }
    } else if (headers != null) {
      throw new InvalidArgumentError('headers must be an object or an array')
    }

    if (util.isFormDataLike(this.body)) {
      if (util.nodeMajor < 16 || (util.nodeMajor === 16 && util.nodeMinor < 8)) {
        throw new InvalidArgumentError('Form-Data bodies are only supported in node v16.8 and newer.')
      }

      if (!extractBody) {
        extractBody = (__webpack_require__(/*! ../fetch/body.js */ "../../node_modules/undici/lib/fetch/body.js").extractBody)
      }

      const [bodyStream, contentType] = extractBody(body)
      if (this.contentType == null) {
        this.contentType = contentType
        this.headers += `content-type: ${contentType}\r\n`
      }
      this.body = bodyStream.stream
      this.contentLength = bodyStream.length
    } else if (util.isBlobLike(body) && this.contentType == null && body.type) {
      this.contentType = body.type
      this.headers += `content-type: ${body.type}\r\n`
    }

    util.validateHandler(handler, method, upgrade)

    this.servername = util.getServerName(this.host)

    this[kHandler] = handler

    if (channels.create.hasSubscribers) {
      channels.create.publish({ request: this })
    }
  }

  onBodySent (chunk) {
    if (this[kHandler].onBodySent) {
      try {
        return this[kHandler].onBodySent(chunk)
      } catch (err) {
        this.abort(err)
      }
    }
  }

  onRequestSent () {
    if (channels.bodySent.hasSubscribers) {
      channels.bodySent.publish({ request: this })
    }

    if (this[kHandler].onRequestSent) {
      try {
        return this[kHandler].onRequestSent()
      } catch (err) {
        this.abort(err)
      }
    }
  }

  onConnect (abort) {
    assert(!this.aborted)
    assert(!this.completed)

    if (this.error) {
      abort(this.error)
    } else {
      this.abort = abort
      return this[kHandler].onConnect(abort)
    }
  }

  onHeaders (statusCode, headers, resume, statusText) {
    assert(!this.aborted)
    assert(!this.completed)

    if (channels.headers.hasSubscribers) {
      channels.headers.publish({ request: this, response: { statusCode, headers, statusText } })
    }

    try {
      return this[kHandler].onHeaders(statusCode, headers, resume, statusText)
    } catch (err) {
      this.abort(err)
    }
  }

  onData (chunk) {
    assert(!this.aborted)
    assert(!this.completed)

    try {
      return this[kHandler].onData(chunk)
    } catch (err) {
      this.abort(err)
      return false
    }
  }

  onUpgrade (statusCode, headers, socket) {
    assert(!this.aborted)
    assert(!this.completed)

    return this[kHandler].onUpgrade(statusCode, headers, socket)
  }

  onComplete (trailers) {
    this.onFinally()

    assert(!this.aborted)

    this.completed = true
    if (channels.trailers.hasSubscribers) {
      channels.trailers.publish({ request: this, trailers })
    }

    try {
      return this[kHandler].onComplete(trailers)
    } catch (err) {
      // TODO (fix): This might be a bad idea?
      this.onError(err)
    }
  }

  onError (error) {
    this.onFinally()

    if (channels.error.hasSubscribers) {
      channels.error.publish({ request: this, error })
    }

    if (this.aborted) {
      return
    }
    this.aborted = true

    return this[kHandler].onError(error)
  }

  onFinally () {
    if (this.errorHandler) {
      this.body.off('error', this.errorHandler)
      this.errorHandler = null
    }

    if (this.endHandler) {
      this.body.off('end', this.endHandler)
      this.endHandler = null
    }
  }

  // TODO: adjust to support H2
  addHeader (key, value) {
    processHeader(this, key, value)
    return this
  }

  static [kHTTP1BuildRequest] (origin, opts, handler) {
    // TODO: Migrate header parsing here, to make Requests
    // HTTP agnostic
    return new Request(origin, opts, handler)
  }

  static [kHTTP2BuildRequest] (origin, opts, handler) {
    const headers = opts.headers
    opts = { ...opts, headers: null }

    const request = new Request(origin, opts, handler)

    request.headers = {}

    if (Array.isArray(headers)) {
      if (headers.length % 2 !== 0) {
        throw new InvalidArgumentError('headers array must be even')
      }
      for (let i = 0; i < headers.length; i += 2) {
        processHeader(request, headers[i], headers[i + 1], true)
      }
    } else if (headers && typeof headers === 'object') {
      const keys = Object.keys(headers)
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i]
        processHeader(request, key, headers[key], true)
      }
    } else if (headers != null) {
      throw new InvalidArgumentError('headers must be an object or an array')
    }

    return request
  }

  static [kHTTP2CopyHeaders] (raw) {
    const rawHeaders = raw.split('\r\n')
    const headers = {}

    for (const header of rawHeaders) {
      const [key, value] = header.split(': ')

      if (value == null || value.length === 0) continue

      if (headers[key]) headers[key] += `,${value}`
      else headers[key] = value
    }

    return headers
  }
}

function processHeaderValue (key, val, skipAppend) {
  if (val && typeof val === 'object') {
    throw new InvalidArgumentError(`invalid ${key} header`)
  }

  val = val != null ? `${val}` : ''

  if (headerCharRegex.exec(val) !== null) {
    throw new InvalidArgumentError(`invalid ${key} header`)
  }

  return skipAppend ? val : `${key}: ${val}\r\n`
}

function processHeader (request, key, val, skipAppend = false) {
  if (val && (typeof val === 'object' && !Array.isArray(val))) {
    throw new InvalidArgumentError(`invalid ${key} header`)
  } else if (val === undefined) {
    return
  }

  if (
    request.host === null &&
    key.length === 4 &&
    key.toLowerCase() === 'host'
  ) {
    if (headerCharRegex.exec(val) !== null) {
      throw new InvalidArgumentError(`invalid ${key} header`)
    }
    // Consumed by Client
    request.host = val
  } else if (
    request.contentLength === null &&
    key.length === 14 &&
    key.toLowerCase() === 'content-length'
  ) {
    request.contentLength = parseInt(val, 10)
    if (!Number.isFinite(request.contentLength)) {
      throw new InvalidArgumentError('invalid content-length header')
    }
  } else if (
    request.contentType === null &&
    key.length === 12 &&
    key.toLowerCase() === 'content-type'
  ) {
    request.contentType = val
    if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)
    else request.headers += processHeaderValue(key, val)
  } else if (
    key.length === 17 &&
    key.toLowerCase() === 'transfer-encoding'
  ) {
    throw new InvalidArgumentError('invalid transfer-encoding header')
  } else if (
    key.length === 10 &&
    key.toLowerCase() === 'connection'
  ) {
    const value = typeof val === 'string' ? val.toLowerCase() : null
    if (value !== 'close' && value !== 'keep-alive') {
      throw new InvalidArgumentError('invalid connection header')
    } else if (value === 'close') {
      request.reset = true
    }
  } else if (
    key.length === 10 &&
    key.toLowerCase() === 'keep-alive'
  ) {
    throw new InvalidArgumentError('invalid keep-alive header')
  } else if (
    key.length === 7 &&
    key.toLowerCase() === 'upgrade'
  ) {
    throw new InvalidArgumentError('invalid upgrade header')
  } else if (
    key.length === 6 &&
    key.toLowerCase() === 'expect'
  ) {
    throw new NotSupportedError('expect header not supported')
  } else if (tokenRegExp.exec(key) === null) {
    throw new InvalidArgumentError('invalid header key')
  } else {
    if (Array.isArray(val)) {
      for (let i = 0; i < val.length; i++) {
        if (skipAppend) {
          if (request.headers[key]) request.headers[key] += `,${processHeaderValue(key, val[i], skipAppend)}`
          else request.headers[key] = processHeaderValue(key, val[i], skipAppend)
        } else {
          request.headers += processHeaderValue(key, val[i])
        }
      }
    } else {
      if (skipAppend) request.headers[key] = processHeaderValue(key, val, skipAppend)
      else request.headers += processHeaderValue(key, val)
    }
  }
}

module.exports = Request


/***/ }),

/***/ "../../node_modules/undici/lib/core/symbols.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/core/symbols.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = {
  kClose: Symbol('close'),
  kDestroy: Symbol('destroy'),
  kDispatch: Symbol('dispatch'),
  kUrl: Symbol('url'),
  kWriting: Symbol('writing'),
  kResuming: Symbol('resuming'),
  kQueue: Symbol('queue'),
  kConnect: Symbol('connect'),
  kConnecting: Symbol('connecting'),
  kHeadersList: Symbol('headers list'),
  kKeepAliveDefaultTimeout: Symbol('default keep alive timeout'),
  kKeepAliveMaxTimeout: Symbol('max keep alive timeout'),
  kKeepAliveTimeoutThreshold: Symbol('keep alive timeout threshold'),
  kKeepAliveTimeoutValue: Symbol('keep alive timeout'),
  kKeepAlive: Symbol('keep alive'),
  kHeadersTimeout: Symbol('headers timeout'),
  kBodyTimeout: Symbol('body timeout'),
  kServerName: Symbol('server name'),
  kLocalAddress: Symbol('local address'),
  kHost: Symbol('host'),
  kNoRef: Symbol('no ref'),
  kBodyUsed: Symbol('used'),
  kRunning: Symbol('running'),
  kBlocking: Symbol('blocking'),
  kPending: Symbol('pending'),
  kSize: Symbol('size'),
  kBusy: Symbol('busy'),
  kQueued: Symbol('queued'),
  kFree: Symbol('free'),
  kConnected: Symbol('connected'),
  kClosed: Symbol('closed'),
  kNeedDrain: Symbol('need drain'),
  kReset: Symbol('reset'),
  kDestroyed: Symbol.for('nodejs.stream.destroyed'),
  kMaxHeadersSize: Symbol('max headers size'),
  kRunningIdx: Symbol('running index'),
  kPendingIdx: Symbol('pending index'),
  kError: Symbol('error'),
  kClients: Symbol('clients'),
  kClient: Symbol('client'),
  kParser: Symbol('parser'),
  kOnDestroyed: Symbol('destroy callbacks'),
  kPipelining: Symbol('pipelining'),
  kSocket: Symbol('socket'),
  kHostHeader: Symbol('host header'),
  kConnector: Symbol('connector'),
  kStrictContentLength: Symbol('strict content length'),
  kMaxRedirections: Symbol('maxRedirections'),
  kMaxRequests: Symbol('maxRequestsPerClient'),
  kProxy: Symbol('proxy agent options'),
  kCounter: Symbol('socket request counter'),
  kInterceptors: Symbol('dispatch interceptors'),
  kMaxResponseSize: Symbol('max response size'),
  kHTTP2Session: Symbol('http2Session'),
  kHTTP2SessionState: Symbol('http2Session state'),
  kHTTP2BuildRequest: Symbol('http2 build request'),
  kHTTP1BuildRequest: Symbol('http1 build request'),
  kHTTP2CopyHeaders: Symbol('http2 copy headers'),
  kHTTPConnVersion: Symbol('http connection version'),
  kRetryHandlerDefaultRetry: Symbol('retry agent default retry'),
  kConstruct: Symbol('constructable')
}


/***/ }),

/***/ "../../node_modules/undici/lib/core/util.js":
/*!**************************************************!*\
  !*** ../../node_modules/undici/lib/core/util.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const assert = __webpack_require__(/*! assert */ "assert")
const { kDestroyed, kBodyUsed } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { IncomingMessage } = __webpack_require__(/*! http */ "http")
const stream = __webpack_require__(/*! stream */ "stream")
const net = __webpack_require__(/*! net */ "net")
const { InvalidArgumentError } = __webpack_require__(/*! ./errors */ "../../node_modules/undici/lib/core/errors.js")
const { Blob } = __webpack_require__(/*! buffer */ "buffer")
const nodeUtil = __webpack_require__(/*! util */ "util")
const { stringify } = __webpack_require__(/*! querystring */ "querystring")
const { headerNameLowerCasedRecord } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/core/constants.js")

const [nodeMajor, nodeMinor] = process.versions.node.split('.').map(v => Number(v))

function nop () {}

function isStream (obj) {
  return obj && typeof obj === 'object' && typeof obj.pipe === 'function' && typeof obj.on === 'function'
}

// based on https://github.com/node-fetch/fetch-blob/blob/8ab587d34080de94140b54f07168451e7d0b655e/index.js#L229-L241 (MIT License)
function isBlobLike (object) {
  return (Blob && object instanceof Blob) || (
    object &&
    typeof object === 'object' &&
    (typeof object.stream === 'function' ||
      typeof object.arrayBuffer === 'function') &&
    /^(Blob|File)$/.test(object[Symbol.toStringTag])
  )
}

function buildURL (url, queryParams) {
  if (url.includes('?') || url.includes('#')) {
    throw new Error('Query params cannot be passed when url already contains "?" or "#".')
  }

  const stringified = stringify(queryParams)

  if (stringified) {
    url += '?' + stringified
  }

  return url
}

function parseURL (url) {
  if (typeof url === 'string') {
    url = new URL(url)

    if (!/^https?:/.test(url.origin || url.protocol)) {
      throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')
    }

    return url
  }

  if (!url || typeof url !== 'object') {
    throw new InvalidArgumentError('Invalid URL: The URL argument must be a non-null object.')
  }

  if (!/^https?:/.test(url.origin || url.protocol)) {
    throw new InvalidArgumentError('Invalid URL protocol: the URL must start with `http:` or `https:`.')
  }

  if (!(url instanceof URL)) {
    if (url.port != null && url.port !== '' && !Number.isFinite(parseInt(url.port))) {
      throw new InvalidArgumentError('Invalid URL: port must be a valid integer or a string representation of an integer.')
    }

    if (url.path != null && typeof url.path !== 'string') {
      throw new InvalidArgumentError('Invalid URL path: the path must be a string or null/undefined.')
    }

    if (url.pathname != null && typeof url.pathname !== 'string') {
      throw new InvalidArgumentError('Invalid URL pathname: the pathname must be a string or null/undefined.')
    }

    if (url.hostname != null && typeof url.hostname !== 'string') {
      throw new InvalidArgumentError('Invalid URL hostname: the hostname must be a string or null/undefined.')
    }

    if (url.origin != null && typeof url.origin !== 'string') {
      throw new InvalidArgumentError('Invalid URL origin: the origin must be a string or null/undefined.')
    }

    const port = url.port != null
      ? url.port
      : (url.protocol === 'https:' ? 443 : 80)
    let origin = url.origin != null
      ? url.origin
      : `${url.protocol}//${url.hostname}:${port}`
    let path = url.path != null
      ? url.path
      : `${url.pathname || ''}${url.search || ''}`

    if (origin.endsWith('/')) {
      origin = origin.substring(0, origin.length - 1)
    }

    if (path && !path.startsWith('/')) {
      path = `/${path}`
    }
    // new URL(path, origin) is unsafe when `path` contains an absolute URL
    // From https://developer.mozilla.org/en-US/docs/Web/API/URL/URL:
    // If first parameter is a relative URL, second param is required, and will be used as the base URL.
    // If first parameter is an absolute URL, a given second param will be ignored.
    url = new URL(origin + path)
  }

  return url
}

function parseOrigin (url) {
  url = parseURL(url)

  if (url.pathname !== '/' || url.search || url.hash) {
    throw new InvalidArgumentError('invalid url')
  }

  return url
}

function getHostname (host) {
  if (host[0] === '[') {
    const idx = host.indexOf(']')

    assert(idx !== -1)
    return host.substring(1, idx)
  }

  const idx = host.indexOf(':')
  if (idx === -1) return host

  return host.substring(0, idx)
}

// IP addresses are not valid server names per RFC6066
// > Currently, the only server names supported are DNS hostnames
function getServerName (host) {
  if (!host) {
    return null
  }

  assert.strictEqual(typeof host, 'string')

  const servername = getHostname(host)
  if (net.isIP(servername)) {
    return ''
  }

  return servername
}

function deepClone (obj) {
  return JSON.parse(JSON.stringify(obj))
}

function isAsyncIterable (obj) {
  return !!(obj != null && typeof obj[Symbol.asyncIterator] === 'function')
}

function isIterable (obj) {
  return !!(obj != null && (typeof obj[Symbol.iterator] === 'function' || typeof obj[Symbol.asyncIterator] === 'function'))
}

function bodyLength (body) {
  if (body == null) {
    return 0
  } else if (isStream(body)) {
    const state = body._readableState
    return state && state.objectMode === false && state.ended === true && Number.isFinite(state.length)
      ? state.length
      : null
  } else if (isBlobLike(body)) {
    return body.size != null ? body.size : null
  } else if (isBuffer(body)) {
    return body.byteLength
  }

  return null
}

function isDestroyed (stream) {
  return !stream || !!(stream.destroyed || stream[kDestroyed])
}

function isReadableAborted (stream) {
  const state = stream && stream._readableState
  return isDestroyed(stream) && state && !state.endEmitted
}

function destroy (stream, err) {
  if (stream == null || !isStream(stream) || isDestroyed(stream)) {
    return
  }

  if (typeof stream.destroy === 'function') {
    if (Object.getPrototypeOf(stream).constructor === IncomingMessage) {
      // See: https://github.com/nodejs/node/pull/38505/files
      stream.socket = null
    }

    stream.destroy(err)
  } else if (err) {
    process.nextTick((stream, err) => {
      stream.emit('error', err)
    }, stream, err)
  }

  if (stream.destroyed !== true) {
    stream[kDestroyed] = true
  }
}

const KEEPALIVE_TIMEOUT_EXPR = /timeout=(\d+)/
function parseKeepAliveTimeout (val) {
  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR)
  return m ? parseInt(m[1], 10) * 1000 : null
}

/**
 * Retrieves a header name and returns its lowercase value.
 * @param {string | Buffer} value Header name
 * @returns {string}
 */
function headerNameToString (value) {
  return headerNameLowerCasedRecord[value] || value.toLowerCase()
}

function parseHeaders (headers, obj = {}) {
  // For H2 support
  if (!Array.isArray(headers)) return headers

  for (let i = 0; i < headers.length; i += 2) {
    const key = headers[i].toString().toLowerCase()
    let val = obj[key]

    if (!val) {
      if (Array.isArray(headers[i + 1])) {
        obj[key] = headers[i + 1].map(x => x.toString('utf8'))
      } else {
        obj[key] = headers[i + 1].toString('utf8')
      }
    } else {
      if (!Array.isArray(val)) {
        val = [val]
        obj[key] = val
      }
      val.push(headers[i + 1].toString('utf8'))
    }
  }

  // See https://github.com/nodejs/node/pull/46528
  if ('content-length' in obj && 'content-disposition' in obj) {
    obj['content-disposition'] = Buffer.from(obj['content-disposition']).toString('latin1')
  }

  return obj
}

function parseRawHeaders (headers) {
  const ret = []
  let hasContentLength = false
  let contentDispositionIdx = -1

  for (let n = 0; n < headers.length; n += 2) {
    const key = headers[n + 0].toString()
    const val = headers[n + 1].toString('utf8')

    if (key.length === 14 && (key === 'content-length' || key.toLowerCase() === 'content-length')) {
      ret.push(key, val)
      hasContentLength = true
    } else if (key.length === 19 && (key === 'content-disposition' || key.toLowerCase() === 'content-disposition')) {
      contentDispositionIdx = ret.push(key, val) - 1
    } else {
      ret.push(key, val)
    }
  }

  // See https://github.com/nodejs/node/pull/46528
  if (hasContentLength && contentDispositionIdx !== -1) {
    ret[contentDispositionIdx] = Buffer.from(ret[contentDispositionIdx]).toString('latin1')
  }

  return ret
}

function isBuffer (buffer) {
  // See, https://github.com/mcollina/undici/pull/319
  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer)
}

function validateHandler (handler, method, upgrade) {
  if (!handler || typeof handler !== 'object') {
    throw new InvalidArgumentError('handler must be an object')
  }

  if (typeof handler.onConnect !== 'function') {
    throw new InvalidArgumentError('invalid onConnect method')
  }

  if (typeof handler.onError !== 'function') {
    throw new InvalidArgumentError('invalid onError method')
  }

  if (typeof handler.onBodySent !== 'function' && handler.onBodySent !== undefined) {
    throw new InvalidArgumentError('invalid onBodySent method')
  }

  if (upgrade || method === 'CONNECT') {
    if (typeof handler.onUpgrade !== 'function') {
      throw new InvalidArgumentError('invalid onUpgrade method')
    }
  } else {
    if (typeof handler.onHeaders !== 'function') {
      throw new InvalidArgumentError('invalid onHeaders method')
    }

    if (typeof handler.onData !== 'function') {
      throw new InvalidArgumentError('invalid onData method')
    }

    if (typeof handler.onComplete !== 'function') {
      throw new InvalidArgumentError('invalid onComplete method')
    }
  }
}

// A body is disturbed if it has been read from and it cannot
// be re-used without losing state or data.
function isDisturbed (body) {
  return !!(body && (
    stream.isDisturbed
      ? stream.isDisturbed(body) || body[kBodyUsed] // TODO (fix): Why is body[kBodyUsed] needed?
      : body[kBodyUsed] ||
        body.readableDidRead ||
        (body._readableState && body._readableState.dataEmitted) ||
        isReadableAborted(body)
  ))
}

function isErrored (body) {
  return !!(body && (
    stream.isErrored
      ? stream.isErrored(body)
      : /state: 'errored'/.test(nodeUtil.inspect(body)
      )))
}

function isReadable (body) {
  return !!(body && (
    stream.isReadable
      ? stream.isReadable(body)
      : /state: 'readable'/.test(nodeUtil.inspect(body)
      )))
}

function getSocketInfo (socket) {
  return {
    localAddress: socket.localAddress,
    localPort: socket.localPort,
    remoteAddress: socket.remoteAddress,
    remotePort: socket.remotePort,
    remoteFamily: socket.remoteFamily,
    timeout: socket.timeout,
    bytesWritten: socket.bytesWritten,
    bytesRead: socket.bytesRead
  }
}

async function * convertIterableToBuffer (iterable) {
  for await (const chunk of iterable) {
    yield Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk)
  }
}

let ReadableStream
function ReadableStreamFrom (iterable) {
  if (!ReadableStream) {
    ReadableStream = (__webpack_require__(/*! stream/web */ "stream/web").ReadableStream)
  }

  if (ReadableStream.from) {
    return ReadableStream.from(convertIterableToBuffer(iterable))
  }

  let iterator
  return new ReadableStream(
    {
      async start () {
        iterator = iterable[Symbol.asyncIterator]()
      },
      async pull (controller) {
        const { done, value } = await iterator.next()
        if (done) {
          queueMicrotask(() => {
            controller.close()
          })
        } else {
          const buf = Buffer.isBuffer(value) ? value : Buffer.from(value)
          controller.enqueue(new Uint8Array(buf))
        }
        return controller.desiredSize > 0
      },
      async cancel (reason) {
        await iterator.return()
      }
    },
    0
  )
}

// The chunk should be a FormData instance and contains
// all the required methods.
function isFormDataLike (object) {
  return (
    object &&
    typeof object === 'object' &&
    typeof object.append === 'function' &&
    typeof object.delete === 'function' &&
    typeof object.get === 'function' &&
    typeof object.getAll === 'function' &&
    typeof object.has === 'function' &&
    typeof object.set === 'function' &&
    object[Symbol.toStringTag] === 'FormData'
  )
}

function throwIfAborted (signal) {
  if (!signal) { return }
  if (typeof signal.throwIfAborted === 'function') {
    signal.throwIfAborted()
  } else {
    if (signal.aborted) {
      // DOMException not available < v17.0.0
      const err = new Error('The operation was aborted')
      err.name = 'AbortError'
      throw err
    }
  }
}

function addAbortListener (signal, listener) {
  if ('addEventListener' in signal) {
    signal.addEventListener('abort', listener, { once: true })
    return () => signal.removeEventListener('abort', listener)
  }
  signal.addListener('abort', listener)
  return () => signal.removeListener('abort', listener)
}

const hasToWellFormed = !!String.prototype.toWellFormed

/**
 * @param {string} val
 */
function toUSVString (val) {
  if (hasToWellFormed) {
    return `${val}`.toWellFormed()
  } else if (nodeUtil.toUSVString) {
    return nodeUtil.toUSVString(val)
  }

  return `${val}`
}

// Parsed accordingly to RFC 9110
// https://www.rfc-editor.org/rfc/rfc9110#field.content-range
function parseRangeHeader (range) {
  if (range == null || range === '') return { start: 0, end: null, size: null }

  const m = range ? range.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null
  return m
    ? {
        start: parseInt(m[1]),
        end: m[2] ? parseInt(m[2]) : null,
        size: m[3] ? parseInt(m[3]) : null
      }
    : null
}

const kEnumerableProperty = Object.create(null)
kEnumerableProperty.enumerable = true

module.exports = {
  kEnumerableProperty,
  nop,
  isDisturbed,
  isErrored,
  isReadable,
  toUSVString,
  isReadableAborted,
  isBlobLike,
  parseOrigin,
  parseURL,
  getServerName,
  isStream,
  isIterable,
  isAsyncIterable,
  isDestroyed,
  headerNameToString,
  parseRawHeaders,
  parseHeaders,
  parseKeepAliveTimeout,
  destroy,
  bodyLength,
  deepClone,
  ReadableStreamFrom,
  isBuffer,
  validateHandler,
  getSocketInfo,
  isFormDataLike,
  buildURL,
  throwIfAborted,
  addAbortListener,
  parseRangeHeader,
  nodeMajor,
  nodeMinor,
  nodeHasAutoSelectFamily: nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 13),
  safeHTTPMethods: ['GET', 'HEAD', 'OPTIONS', 'TRACE']
}


/***/ }),

/***/ "../../node_modules/undici/lib/dispatcher-base.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/dispatcher-base.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const Dispatcher = __webpack_require__(/*! ./dispatcher */ "../../node_modules/undici/lib/dispatcher.js")
const {
  ClientDestroyedError,
  ClientClosedError,
  InvalidArgumentError
} = __webpack_require__(/*! ./core/errors */ "../../node_modules/undici/lib/core/errors.js")
const { kDestroy, kClose, kDispatch, kInterceptors } = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")

const kDestroyed = Symbol('destroyed')
const kClosed = Symbol('closed')
const kOnDestroyed = Symbol('onDestroyed')
const kOnClosed = Symbol('onClosed')
const kInterceptedDispatch = Symbol('Intercepted Dispatch')

class DispatcherBase extends Dispatcher {
  constructor () {
    super()

    this[kDestroyed] = false
    this[kOnDestroyed] = null
    this[kClosed] = false
    this[kOnClosed] = []
  }

  get destroyed () {
    return this[kDestroyed]
  }

  get closed () {
    return this[kClosed]
  }

  get interceptors () {
    return this[kInterceptors]
  }

  set interceptors (newInterceptors) {
    if (newInterceptors) {
      for (let i = newInterceptors.length - 1; i >= 0; i--) {
        const interceptor = this[kInterceptors][i]
        if (typeof interceptor !== 'function') {
          throw new InvalidArgumentError('interceptor must be an function')
        }
      }
    }

    this[kInterceptors] = newInterceptors
  }

  close (callback) {
    if (callback === undefined) {
      return new Promise((resolve, reject) => {
        this.close((err, data) => {
          return err ? reject(err) : resolve(data)
        })
      })
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    if (this[kDestroyed]) {
      queueMicrotask(() => callback(new ClientDestroyedError(), null))
      return
    }

    if (this[kClosed]) {
      if (this[kOnClosed]) {
        this[kOnClosed].push(callback)
      } else {
        queueMicrotask(() => callback(null, null))
      }
      return
    }

    this[kClosed] = true
    this[kOnClosed].push(callback)

    const onClosed = () => {
      const callbacks = this[kOnClosed]
      this[kOnClosed] = null
      for (let i = 0; i < callbacks.length; i++) {
        callbacks[i](null, null)
      }
    }

    // Should not error.
    this[kClose]()
      .then(() => this.destroy())
      .then(() => {
        queueMicrotask(onClosed)
      })
  }

  destroy (err, callback) {
    if (typeof err === 'function') {
      callback = err
      err = null
    }

    if (callback === undefined) {
      return new Promise((resolve, reject) => {
        this.destroy(err, (err, data) => {
          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)
        })
      })
    }

    if (typeof callback !== 'function') {
      throw new InvalidArgumentError('invalid callback')
    }

    if (this[kDestroyed]) {
      if (this[kOnDestroyed]) {
        this[kOnDestroyed].push(callback)
      } else {
        queueMicrotask(() => callback(null, null))
      }
      return
    }

    if (!err) {
      err = new ClientDestroyedError()
    }

    this[kDestroyed] = true
    this[kOnDestroyed] = this[kOnDestroyed] || []
    this[kOnDestroyed].push(callback)

    const onDestroyed = () => {
      const callbacks = this[kOnDestroyed]
      this[kOnDestroyed] = null
      for (let i = 0; i < callbacks.length; i++) {
        callbacks[i](null, null)
      }
    }

    // Should not error.
    this[kDestroy](err).then(() => {
      queueMicrotask(onDestroyed)
    })
  }

  [kInterceptedDispatch] (opts, handler) {
    if (!this[kInterceptors] || this[kInterceptors].length === 0) {
      this[kInterceptedDispatch] = this[kDispatch]
      return this[kDispatch](opts, handler)
    }

    let dispatch = this[kDispatch].bind(this)
    for (let i = this[kInterceptors].length - 1; i >= 0; i--) {
      dispatch = this[kInterceptors][i](dispatch)
    }
    this[kInterceptedDispatch] = dispatch
    return dispatch(opts, handler)
  }

  dispatch (opts, handler) {
    if (!handler || typeof handler !== 'object') {
      throw new InvalidArgumentError('handler must be an object')
    }

    try {
      if (!opts || typeof opts !== 'object') {
        throw new InvalidArgumentError('opts must be an object.')
      }

      if (this[kDestroyed] || this[kOnDestroyed]) {
        throw new ClientDestroyedError()
      }

      if (this[kClosed]) {
        throw new ClientClosedError()
      }

      return this[kInterceptedDispatch](opts, handler)
    } catch (err) {
      if (typeof handler.onError !== 'function') {
        throw new InvalidArgumentError('invalid onError method')
      }

      handler.onError(err)

      return false
    }
  }
}

module.exports = DispatcherBase


/***/ }),

/***/ "../../node_modules/undici/lib/dispatcher.js":
/*!***************************************************!*\
  !*** ../../node_modules/undici/lib/dispatcher.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const EventEmitter = __webpack_require__(/*! events */ "events")

class Dispatcher extends EventEmitter {
  dispatch () {
    throw new Error('not implemented')
  }

  close () {
    throw new Error('not implemented')
  }

  destroy () {
    throw new Error('not implemented')
  }
}

module.exports = Dispatcher


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/body.js":
/*!***************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/body.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const Busboy = __webpack_require__(/*! @fastify/busboy */ "../../node_modules/@fastify/busboy/lib/main.js")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const {
  ReadableStreamFrom,
  isBlobLike,
  isReadableStreamLike,
  readableStreamClose,
  createDeferredPromise,
  fullyReadBody
} = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")
const { FormData } = __webpack_require__(/*! ./formdata */ "../../node_modules/undici/lib/fetch/formdata.js")
const { kState } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const { webidl } = __webpack_require__(/*! ./webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { DOMException, structuredClone } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/fetch/constants.js")
const { Blob, File: NativeFile } = __webpack_require__(/*! buffer */ "buffer")
const { kBodyUsed } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { isErrored } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { isUint8Array, isArrayBuffer } = __webpack_require__(/*! util/types */ "util/types")
const { File: UndiciFile } = __webpack_require__(/*! ./file */ "../../node_modules/undici/lib/fetch/file.js")
const { parseMIMEType, serializeAMimeType } = __webpack_require__(/*! ./dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")

let ReadableStream = globalThis.ReadableStream

/** @type {globalThis['File']} */
const File = NativeFile ?? UndiciFile
const textEncoder = new TextEncoder()
const textDecoder = new TextDecoder()

// https://fetch.spec.whatwg.org/#concept-bodyinit-extract
function extractBody (object, keepalive = false) {
  if (!ReadableStream) {
    ReadableStream = (__webpack_require__(/*! stream/web */ "stream/web").ReadableStream)
  }

  // 1. Let stream be null.
  let stream = null

  // 2. If object is a ReadableStream object, then set stream to object.
  if (object instanceof ReadableStream) {
    stream = object
  } else if (isBlobLike(object)) {
    // 3. Otherwise, if object is a Blob object, set stream to the
    //    result of running object’s get stream.
    stream = object.stream()
  } else {
    // 4. Otherwise, set stream to a new ReadableStream object, and set
    //    up stream.
    stream = new ReadableStream({
      async pull (controller) {
        controller.enqueue(
          typeof source === 'string' ? textEncoder.encode(source) : source
        )
        queueMicrotask(() => readableStreamClose(controller))
      },
      start () {},
      type: undefined
    })
  }

  // 5. Assert: stream is a ReadableStream object.
  assert(isReadableStreamLike(stream))

  // 6. Let action be null.
  let action = null

  // 7. Let source be null.
  let source = null

  // 8. Let length be null.
  let length = null

  // 9. Let type be null.
  let type = null

  // 10. Switch on object:
  if (typeof object === 'string') {
    // Set source to the UTF-8 encoding of object.
    // Note: setting source to a Uint8Array here breaks some mocking assumptions.
    source = object

    // Set type to `text/plain;charset=UTF-8`.
    type = 'text/plain;charset=UTF-8'
  } else if (object instanceof URLSearchParams) {
    // URLSearchParams

    // spec says to run application/x-www-form-urlencoded on body.list
    // this is implemented in Node.js as apart of an URLSearchParams instance toString method
    // See: https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L490
    // and https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/internal/url.js#L1100

    // Set source to the result of running the application/x-www-form-urlencoded serializer with object’s list.
    source = object.toString()

    // Set type to `application/x-www-form-urlencoded;charset=UTF-8`.
    type = 'application/x-www-form-urlencoded;charset=UTF-8'
  } else if (isArrayBuffer(object)) {
    // BufferSource/ArrayBuffer

    // Set source to a copy of the bytes held by object.
    source = new Uint8Array(object.slice())
  } else if (ArrayBuffer.isView(object)) {
    // BufferSource/ArrayBufferView

    // Set source to a copy of the bytes held by object.
    source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength))
  } else if (util.isFormDataLike(object)) {
    const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, '0')}`
    const prefix = `--${boundary}\r\nContent-Disposition: form-data`

    /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
    const escape = (str) =>
      str.replace(/\n/g, '%0A').replace(/\r/g, '%0D').replace(/"/g, '%22')
    const normalizeLinefeeds = (value) => value.replace(/\r?\n|\r/g, '\r\n')

    // Set action to this step: run the multipart/form-data
    // encoding algorithm, with object’s entry list and UTF-8.
    // - This ensures that the body is immutable and can't be changed afterwords
    // - That the content-length is calculated in advance.
    // - And that all parts are pre-encoded and ready to be sent.

    const blobParts = []
    const rn = new Uint8Array([13, 10]) // '\r\n'
    length = 0
    let hasUnknownSizeValue = false

    for (const [name, value] of object) {
      if (typeof value === 'string') {
        const chunk = textEncoder.encode(prefix +
          `; name="${escape(normalizeLinefeeds(name))}"` +
          `\r\n\r\n${normalizeLinefeeds(value)}\r\n`)
        blobParts.push(chunk)
        length += chunk.byteLength
      } else {
        const chunk = textEncoder.encode(`${prefix}; name="${escape(normalizeLinefeeds(name))}"` +
          (value.name ? `; filename="${escape(value.name)}"` : '') + '\r\n' +
          `Content-Type: ${
            value.type || 'application/octet-stream'
          }\r\n\r\n`)
        blobParts.push(chunk, value, rn)
        if (typeof value.size === 'number') {
          length += chunk.byteLength + value.size + rn.byteLength
        } else {
          hasUnknownSizeValue = true
        }
      }
    }

    const chunk = textEncoder.encode(`--${boundary}--`)
    blobParts.push(chunk)
    length += chunk.byteLength
    if (hasUnknownSizeValue) {
      length = null
    }

    // Set source to object.
    source = object

    action = async function * () {
      for (const part of blobParts) {
        if (part.stream) {
          yield * part.stream()
        } else {
          yield part
        }
      }
    }

    // Set type to `multipart/form-data; boundary=`,
    // followed by the multipart/form-data boundary string generated
    // by the multipart/form-data encoding algorithm.
    type = 'multipart/form-data; boundary=' + boundary
  } else if (isBlobLike(object)) {
    // Blob

    // Set source to object.
    source = object

    // Set length to object’s size.
    length = object.size

    // If object’s type attribute is not the empty byte sequence, set
    // type to its value.
    if (object.type) {
      type = object.type
    }
  } else if (typeof object[Symbol.asyncIterator] === 'function') {
    // If keepalive is true, then throw a TypeError.
    if (keepalive) {
      throw new TypeError('keepalive')
    }

    // If object is disturbed or locked, then throw a TypeError.
    if (util.isDisturbed(object) || object.locked) {
      throw new TypeError(
        'Response body object should not be disturbed or locked'
      )
    }

    stream =
      object instanceof ReadableStream ? object : ReadableStreamFrom(object)
  }

  // 11. If source is a byte sequence, then set action to a
  // step that returns source and length to source’s length.
  if (typeof source === 'string' || util.isBuffer(source)) {
    length = Buffer.byteLength(source)
  }

  // 12. If action is non-null, then run these steps in in parallel:
  if (action != null) {
    // Run action.
    let iterator
    stream = new ReadableStream({
      async start () {
        iterator = action(object)[Symbol.asyncIterator]()
      },
      async pull (controller) {
        const { value, done } = await iterator.next()
        if (done) {
          // When running action is done, close stream.
          queueMicrotask(() => {
            controller.close()
          })
        } else {
          // Whenever one or more bytes are available and stream is not errored,
          // enqueue a Uint8Array wrapping an ArrayBuffer containing the available
          // bytes into stream.
          if (!isErrored(stream)) {
            controller.enqueue(new Uint8Array(value))
          }
        }
        return controller.desiredSize > 0
      },
      async cancel (reason) {
        await iterator.return()
      },
      type: undefined
    })
  }

  // 13. Let body be a body whose stream is stream, source is source,
  // and length is length.
  const body = { stream, source, length }

  // 14. Return (body, type).
  return [body, type]
}

// https://fetch.spec.whatwg.org/#bodyinit-safely-extract
function safelyExtractBody (object, keepalive = false) {
  if (!ReadableStream) {
    // istanbul ignore next
    ReadableStream = (__webpack_require__(/*! stream/web */ "stream/web").ReadableStream)
  }

  // To safely extract a body and a `Content-Type` value from
  // a byte sequence or BodyInit object object, run these steps:

  // 1. If object is a ReadableStream object, then:
  if (object instanceof ReadableStream) {
    // Assert: object is neither disturbed nor locked.
    // istanbul ignore next
    assert(!util.isDisturbed(object), 'The body has already been consumed.')
    // istanbul ignore next
    assert(!object.locked, 'The stream is locked.')
  }

  // 2. Return the results of extracting object.
  return extractBody(object, keepalive)
}

function cloneBody (body) {
  // To clone a body body, run these steps:

  // https://fetch.spec.whatwg.org/#concept-body-clone

  // 1. Let « out1, out2 » be the result of teeing body’s stream.
  const [out1, out2] = body.stream.tee()
  const out2Clone = structuredClone(out2, { transfer: [out2] })
  // This, for whatever reasons, unrefs out2Clone which allows
  // the process to exit by itself.
  const [, finalClone] = out2Clone.tee()

  // 2. Set body’s stream to out1.
  body.stream = out1

  // 3. Return a body whose stream is out2 and other members are copied from body.
  return {
    stream: finalClone,
    length: body.length,
    source: body.source
  }
}

async function * consumeBody (body) {
  if (body) {
    if (isUint8Array(body)) {
      yield body
    } else {
      const stream = body.stream

      if (util.isDisturbed(stream)) {
        throw new TypeError('The body has already been consumed.')
      }

      if (stream.locked) {
        throw new TypeError('The stream is locked.')
      }

      // Compat.
      stream[kBodyUsed] = true

      yield * stream
    }
  }
}

function throwIfAborted (state) {
  if (state.aborted) {
    throw new DOMException('The operation was aborted.', 'AbortError')
  }
}

function bodyMixinMethods (instance) {
  const methods = {
    blob () {
      // The blob() method steps are to return the result of
      // running consume body with this and the following step
      // given a byte sequence bytes: return a Blob whose
      // contents are bytes and whose type attribute is this’s
      // MIME type.
      return specConsumeBody(this, (bytes) => {
        let mimeType = bodyMimeType(this)

        if (mimeType === 'failure') {
          mimeType = ''
        } else if (mimeType) {
          mimeType = serializeAMimeType(mimeType)
        }

        // Return a Blob whose contents are bytes and type attribute
        // is mimeType.
        return new Blob([bytes], { type: mimeType })
      }, instance)
    },

    arrayBuffer () {
      // The arrayBuffer() method steps are to return the result
      // of running consume body with this and the following step
      // given a byte sequence bytes: return a new ArrayBuffer
      // whose contents are bytes.
      return specConsumeBody(this, (bytes) => {
        return new Uint8Array(bytes).buffer
      }, instance)
    },

    text () {
      // The text() method steps are to return the result of running
      // consume body with this and UTF-8 decode.
      return specConsumeBody(this, utf8DecodeBytes, instance)
    },

    json () {
      // The json() method steps are to return the result of running
      // consume body with this and parse JSON from bytes.
      return specConsumeBody(this, parseJSONFromBytes, instance)
    },

    async formData () {
      webidl.brandCheck(this, instance)

      throwIfAborted(this[kState])

      const contentType = this.headers.get('Content-Type')

      // If mimeType’s essence is "multipart/form-data", then:
      if (/multipart\/form-data/.test(contentType)) {
        const headers = {}
        for (const [key, value] of this.headers) headers[key.toLowerCase()] = value

        const responseFormData = new FormData()

        let busboy

        try {
          busboy = new Busboy({
            headers,
            preservePath: true
          })
        } catch (err) {
          throw new DOMException(`${err}`, 'AbortError')
        }

        busboy.on('field', (name, value) => {
          responseFormData.append(name, value)
        })
        busboy.on('file', (name, value, filename, encoding, mimeType) => {
          const chunks = []

          if (encoding === 'base64' || encoding.toLowerCase() === 'base64') {
            let base64chunk = ''

            value.on('data', (chunk) => {
              base64chunk += chunk.toString().replace(/[\r\n]/gm, '')

              const end = base64chunk.length - base64chunk.length % 4
              chunks.push(Buffer.from(base64chunk.slice(0, end), 'base64'))

              base64chunk = base64chunk.slice(end)
            })
            value.on('end', () => {
              chunks.push(Buffer.from(base64chunk, 'base64'))
              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))
            })
          } else {
            value.on('data', (chunk) => {
              chunks.push(chunk)
            })
            value.on('end', () => {
              responseFormData.append(name, new File(chunks, filename, { type: mimeType }))
            })
          }
        })

        const busboyResolve = new Promise((resolve, reject) => {
          busboy.on('finish', resolve)
          busboy.on('error', (err) => reject(new TypeError(err)))
        })

        if (this.body !== null) for await (const chunk of consumeBody(this[kState].body)) busboy.write(chunk)
        busboy.end()
        await busboyResolve

        return responseFormData
      } else if (/application\/x-www-form-urlencoded/.test(contentType)) {
        // Otherwise, if mimeType’s essence is "application/x-www-form-urlencoded", then:

        // 1. Let entries be the result of parsing bytes.
        let entries
        try {
          let text = ''
          // application/x-www-form-urlencoded parser will keep the BOM.
          // https://url.spec.whatwg.org/#concept-urlencoded-parser
          // Note that streaming decoder is stateful and cannot be reused
          const streamingDecoder = new TextDecoder('utf-8', { ignoreBOM: true })

          for await (const chunk of consumeBody(this[kState].body)) {
            if (!isUint8Array(chunk)) {
              throw new TypeError('Expected Uint8Array chunk')
            }
            text += streamingDecoder.decode(chunk, { stream: true })
          }
          text += streamingDecoder.decode()
          entries = new URLSearchParams(text)
        } catch (err) {
          // istanbul ignore next: Unclear when new URLSearchParams can fail on a string.
          // 2. If entries is failure, then throw a TypeError.
          throw Object.assign(new TypeError(), { cause: err })
        }

        // 3. Return a new FormData object whose entries are entries.
        const formData = new FormData()
        for (const [name, value] of entries) {
          formData.append(name, value)
        }
        return formData
      } else {
        // Wait a tick before checking if the request has been aborted.
        // Otherwise, a TypeError can be thrown when an AbortError should.
        await Promise.resolve()

        throwIfAborted(this[kState])

        // Otherwise, throw a TypeError.
        throw webidl.errors.exception({
          header: `${instance.name}.formData`,
          message: 'Could not parse content as FormData.'
        })
      }
    }
  }

  return methods
}

function mixinBody (prototype) {
  Object.assign(prototype.prototype, bodyMixinMethods(prototype))
}

/**
 * @see https://fetch.spec.whatwg.org/#concept-body-consume-body
 * @param {Response|Request} object
 * @param {(value: unknown) => unknown} convertBytesToJSValue
 * @param {Response|Request} instance
 */
async function specConsumeBody (object, convertBytesToJSValue, instance) {
  webidl.brandCheck(object, instance)

  throwIfAborted(object[kState])

  // 1. If object is unusable, then return a promise rejected
  //    with a TypeError.
  if (bodyUnusable(object[kState].body)) {
    throw new TypeError('Body is unusable')
  }

  // 2. Let promise be a new promise.
  const promise = createDeferredPromise()

  // 3. Let errorSteps given error be to reject promise with error.
  const errorSteps = (error) => promise.reject(error)

  // 4. Let successSteps given a byte sequence data be to resolve
  //    promise with the result of running convertBytesToJSValue
  //    with data. If that threw an exception, then run errorSteps
  //    with that exception.
  const successSteps = (data) => {
    try {
      promise.resolve(convertBytesToJSValue(data))
    } catch (e) {
      errorSteps(e)
    }
  }

  // 5. If object’s body is null, then run successSteps with an
  //    empty byte sequence.
  if (object[kState].body == null) {
    successSteps(new Uint8Array())
    return promise.promise
  }

  // 6. Otherwise, fully read object’s body given successSteps,
  //    errorSteps, and object’s relevant global object.
  await fullyReadBody(object[kState].body, successSteps, errorSteps)

  // 7. Return promise.
  return promise.promise
}

// https://fetch.spec.whatwg.org/#body-unusable
function bodyUnusable (body) {
  // An object including the Body interface mixin is
  // said to be unusable if its body is non-null and
  // its body’s stream is disturbed or locked.
  return body != null && (body.stream.locked || util.isDisturbed(body.stream))
}

/**
 * @see https://encoding.spec.whatwg.org/#utf-8-decode
 * @param {Buffer} buffer
 */
function utf8DecodeBytes (buffer) {
  if (buffer.length === 0) {
    return ''
  }

  // 1. Let buffer be the result of peeking three bytes from
  //    ioQueue, converted to a byte sequence.

  // 2. If buffer is 0xEF 0xBB 0xBF, then read three
  //    bytes from ioQueue. (Do nothing with those bytes.)
  if (buffer[0] === 0xEF && buffer[1] === 0xBB && buffer[2] === 0xBF) {
    buffer = buffer.subarray(3)
  }

  // 3. Process a queue with an instance of UTF-8’s
  //    decoder, ioQueue, output, and "replacement".
  const output = textDecoder.decode(buffer)

  // 4. Return output.
  return output
}

/**
 * @see https://infra.spec.whatwg.org/#parse-json-bytes-to-a-javascript-value
 * @param {Uint8Array} bytes
 */
function parseJSONFromBytes (bytes) {
  return JSON.parse(utf8DecodeBytes(bytes))
}

/**
 * @see https://fetch.spec.whatwg.org/#concept-body-mime-type
 * @param {import('./response').Response|import('./request').Request} object
 */
function bodyMimeType (object) {
  const { headersList } = object[kState]
  const contentType = headersList.get('content-type')

  if (contentType === null) {
    return 'failure'
  }

  return parseMIMEType(contentType)
}

module.exports = {
  extractBody,
  safelyExtractBody,
  cloneBody,
  mixinBody
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/constants.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/constants.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { MessageChannel, receiveMessageOnPort } = __webpack_require__(/*! worker_threads */ "worker_threads")

const corsSafeListedMethods = ['GET', 'HEAD', 'POST']
const corsSafeListedMethodsSet = new Set(corsSafeListedMethods)

const nullBodyStatus = [101, 204, 205, 304]

const redirectStatus = [301, 302, 303, 307, 308]
const redirectStatusSet = new Set(redirectStatus)

// https://fetch.spec.whatwg.org/#block-bad-port
const badPorts = [
  '1', '7', '9', '11', '13', '15', '17', '19', '20', '21', '22', '23', '25', '37', '42', '43', '53', '69', '77', '79',
  '87', '95', '101', '102', '103', '104', '109', '110', '111', '113', '115', '117', '119', '123', '135', '137',
  '139', '143', '161', '179', '389', '427', '465', '512', '513', '514', '515', '526', '530', '531', '532',
  '540', '548', '554', '556', '563', '587', '601', '636', '989', '990', '993', '995', '1719', '1720', '1723',
  '2049', '3659', '4045', '5060', '5061', '6000', '6566', '6665', '6666', '6667', '6668', '6669', '6697',
  '10080'
]

const badPortsSet = new Set(badPorts)

// https://w3c.github.io/webappsec-referrer-policy/#referrer-policies
const referrerPolicy = [
  '',
  'no-referrer',
  'no-referrer-when-downgrade',
  'same-origin',
  'origin',
  'strict-origin',
  'origin-when-cross-origin',
  'strict-origin-when-cross-origin',
  'unsafe-url'
]
const referrerPolicySet = new Set(referrerPolicy)

const requestRedirect = ['follow', 'manual', 'error']

const safeMethods = ['GET', 'HEAD', 'OPTIONS', 'TRACE']
const safeMethodsSet = new Set(safeMethods)

const requestMode = ['navigate', 'same-origin', 'no-cors', 'cors']

const requestCredentials = ['omit', 'same-origin', 'include']

const requestCache = [
  'default',
  'no-store',
  'reload',
  'no-cache',
  'force-cache',
  'only-if-cached'
]

// https://fetch.spec.whatwg.org/#request-body-header-name
const requestBodyHeader = [
  'content-encoding',
  'content-language',
  'content-location',
  'content-type',
  // See https://github.com/nodejs/undici/issues/2021
  // 'Content-Length' is a forbidden header name, which is typically
  // removed in the Headers implementation. However, undici doesn't
  // filter out headers, so we add it here.
  'content-length'
]

// https://fetch.spec.whatwg.org/#enumdef-requestduplex
const requestDuplex = [
  'half'
]

// http://fetch.spec.whatwg.org/#forbidden-method
const forbiddenMethods = ['CONNECT', 'TRACE', 'TRACK']
const forbiddenMethodsSet = new Set(forbiddenMethods)

const subresource = [
  'audio',
  'audioworklet',
  'font',
  'image',
  'manifest',
  'paintworklet',
  'script',
  'style',
  'track',
  'video',
  'xslt',
  ''
]
const subresourceSet = new Set(subresource)

/** @type {globalThis['DOMException']} */
const DOMException = globalThis.DOMException ?? (() => {
  // DOMException was only made a global in Node v17.0.0,
  // but fetch supports >= v16.8.
  try {
    atob('~')
  } catch (err) {
    return Object.getPrototypeOf(err).constructor
  }
})()

let channel

/** @type {globalThis['structuredClone']} */
const structuredClone =
  globalThis.structuredClone ??
  // https://github.com/nodejs/node/blob/b27ae24dcc4251bad726d9d84baf678d1f707fed/lib/internal/structured_clone.js
  // structuredClone was added in v17.0.0, but fetch supports v16.8
  function structuredClone (value, options = undefined) {
    if (arguments.length === 0) {
      throw new TypeError('missing argument')
    }

    if (!channel) {
      channel = new MessageChannel()
    }
    channel.port1.unref()
    channel.port2.unref()
    channel.port1.postMessage(value, options?.transfer)
    return receiveMessageOnPort(channel.port2).message
  }

module.exports = {
  DOMException,
  structuredClone,
  subresource,
  forbiddenMethods,
  requestBodyHeader,
  referrerPolicy,
  requestRedirect,
  requestMode,
  requestCredentials,
  requestCache,
  redirectStatus,
  corsSafeListedMethods,
  nullBodyStatus,
  safeMethods,
  badPorts,
  requestDuplex,
  subresourceSet,
  badPortsSet,
  redirectStatusSet,
  corsSafeListedMethodsSet,
  safeMethodsSet,
  forbiddenMethodsSet,
  referrerPolicySet
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/dataURL.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/dataURL.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const assert = __webpack_require__(/*! assert */ "assert")
const { atob } = __webpack_require__(/*! buffer */ "buffer")
const { isomorphicDecode } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")

const encoder = new TextEncoder()

/**
 * @see https://mimesniff.spec.whatwg.org/#http-token-code-point
 */
const HTTP_TOKEN_CODEPOINTS = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/
const HTTP_WHITESPACE_REGEX = /(\u000A|\u000D|\u0009|\u0020)/ // eslint-disable-line
/**
 * @see https://mimesniff.spec.whatwg.org/#http-quoted-string-token-code-point
 */
const HTTP_QUOTED_STRING_TOKENS = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/ // eslint-disable-line

// https://fetch.spec.whatwg.org/#data-url-processor
/** @param {URL} dataURL */
function dataURLProcessor (dataURL) {
  // 1. Assert: dataURL’s scheme is "data".
  assert(dataURL.protocol === 'data:')

  // 2. Let input be the result of running the URL
  // serializer on dataURL with exclude fragment
  // set to true.
  let input = URLSerializer(dataURL, true)

  // 3. Remove the leading "data:" string from input.
  input = input.slice(5)

  // 4. Let position point at the start of input.
  const position = { position: 0 }

  // 5. Let mimeType be the result of collecting a
  // sequence of code points that are not equal
  // to U+002C (,), given position.
  let mimeType = collectASequenceOfCodePointsFast(
    ',',
    input,
    position
  )

  // 6. Strip leading and trailing ASCII whitespace
  // from mimeType.
  // Undici implementation note: we need to store the
  // length because if the mimetype has spaces removed,
  // the wrong amount will be sliced from the input in
  // step #9
  const mimeTypeLength = mimeType.length
  mimeType = removeASCIIWhitespace(mimeType, true, true)

  // 7. If position is past the end of input, then
  // return failure
  if (position.position >= input.length) {
    return 'failure'
  }

  // 8. Advance position by 1.
  position.position++

  // 9. Let encodedBody be the remainder of input.
  const encodedBody = input.slice(mimeTypeLength + 1)

  // 10. Let body be the percent-decoding of encodedBody.
  let body = stringPercentDecode(encodedBody)

  // 11. If mimeType ends with U+003B (;), followed by
  // zero or more U+0020 SPACE, followed by an ASCII
  // case-insensitive match for "base64", then:
  if (/;(\u0020){0,}base64$/i.test(mimeType)) {
    // 1. Let stringBody be the isomorphic decode of body.
    const stringBody = isomorphicDecode(body)

    // 2. Set body to the forgiving-base64 decode of
    // stringBody.
    body = forgivingBase64(stringBody)

    // 3. If body is failure, then return failure.
    if (body === 'failure') {
      return 'failure'
    }

    // 4. Remove the last 6 code points from mimeType.
    mimeType = mimeType.slice(0, -6)

    // 5. Remove trailing U+0020 SPACE code points from mimeType,
    // if any.
    mimeType = mimeType.replace(/(\u0020)+$/, '')

    // 6. Remove the last U+003B (;) code point from mimeType.
    mimeType = mimeType.slice(0, -1)
  }

  // 12. If mimeType starts with U+003B (;), then prepend
  // "text/plain" to mimeType.
  if (mimeType.startsWith(';')) {
    mimeType = 'text/plain' + mimeType
  }

  // 13. Let mimeTypeRecord be the result of parsing
  // mimeType.
  let mimeTypeRecord = parseMIMEType(mimeType)

  // 14. If mimeTypeRecord is failure, then set
  // mimeTypeRecord to text/plain;charset=US-ASCII.
  if (mimeTypeRecord === 'failure') {
    mimeTypeRecord = parseMIMEType('text/plain;charset=US-ASCII')
  }

  // 15. Return a new data: URL struct whose MIME
  // type is mimeTypeRecord and body is body.
  // https://fetch.spec.whatwg.org/#data-url-struct
  return { mimeType: mimeTypeRecord, body }
}

// https://url.spec.whatwg.org/#concept-url-serializer
/**
 * @param {URL} url
 * @param {boolean} excludeFragment
 */
function URLSerializer (url, excludeFragment = false) {
  if (!excludeFragment) {
    return url.href
  }

  const href = url.href
  const hashLength = url.hash.length

  return hashLength === 0 ? href : href.substring(0, href.length - hashLength)
}

// https://infra.spec.whatwg.org/#collect-a-sequence-of-code-points
/**
 * @param {(char: string) => boolean} condition
 * @param {string} input
 * @param {{ position: number }} position
 */
function collectASequenceOfCodePoints (condition, input, position) {
  // 1. Let result be the empty string.
  let result = ''

  // 2. While position doesn’t point past the end of input and the
  // code point at position within input meets the condition condition:
  while (position.position < input.length && condition(input[position.position])) {
    // 1. Append that code point to the end of result.
    result += input[position.position]

    // 2. Advance position by 1.
    position.position++
  }

  // 3. Return result.
  return result
}

/**
 * A faster collectASequenceOfCodePoints that only works when comparing a single character.
 * @param {string} char
 * @param {string} input
 * @param {{ position: number }} position
 */
function collectASequenceOfCodePointsFast (char, input, position) {
  const idx = input.indexOf(char, position.position)
  const start = position.position

  if (idx === -1) {
    position.position = input.length
    return input.slice(start)
  }

  position.position = idx
  return input.slice(start, position.position)
}

// https://url.spec.whatwg.org/#string-percent-decode
/** @param {string} input */
function stringPercentDecode (input) {
  // 1. Let bytes be the UTF-8 encoding of input.
  const bytes = encoder.encode(input)

  // 2. Return the percent-decoding of bytes.
  return percentDecode(bytes)
}

// https://url.spec.whatwg.org/#percent-decode
/** @param {Uint8Array} input */
function percentDecode (input) {
  // 1. Let output be an empty byte sequence.
  /** @type {number[]} */
  const output = []

  // 2. For each byte byte in input:
  for (let i = 0; i < input.length; i++) {
    const byte = input[i]

    // 1. If byte is not 0x25 (%), then append byte to output.
    if (byte !== 0x25) {
      output.push(byte)

    // 2. Otherwise, if byte is 0x25 (%) and the next two bytes
    // after byte in input are not in the ranges
    // 0x30 (0) to 0x39 (9), 0x41 (A) to 0x46 (F),
    // and 0x61 (a) to 0x66 (f), all inclusive, append byte
    // to output.
    } else if (
      byte === 0x25 &&
      !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))
    ) {
      output.push(0x25)

    // 3. Otherwise:
    } else {
      // 1. Let bytePoint be the two bytes after byte in input,
      // decoded, and then interpreted as hexadecimal number.
      const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2])
      const bytePoint = Number.parseInt(nextTwoBytes, 16)

      // 2. Append a byte whose value is bytePoint to output.
      output.push(bytePoint)

      // 3. Skip the next two bytes in input.
      i += 2
    }
  }

  // 3. Return output.
  return Uint8Array.from(output)
}

// https://mimesniff.spec.whatwg.org/#parse-a-mime-type
/** @param {string} input */
function parseMIMEType (input) {
  // 1. Remove any leading and trailing HTTP whitespace
  // from input.
  input = removeHTTPWhitespace(input, true, true)

  // 2. Let position be a position variable for input,
  // initially pointing at the start of input.
  const position = { position: 0 }

  // 3. Let type be the result of collecting a sequence
  // of code points that are not U+002F (/) from
  // input, given position.
  const type = collectASequenceOfCodePointsFast(
    '/',
    input,
    position
  )

  // 4. If type is the empty string or does not solely
  // contain HTTP token code points, then return failure.
  // https://mimesniff.spec.whatwg.org/#http-token-code-point
  if (type.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(type)) {
    return 'failure'
  }

  // 5. If position is past the end of input, then return
  // failure
  if (position.position > input.length) {
    return 'failure'
  }

  // 6. Advance position by 1. (This skips past U+002F (/).)
  position.position++

  // 7. Let subtype be the result of collecting a sequence of
  // code points that are not U+003B (;) from input, given
  // position.
  let subtype = collectASequenceOfCodePointsFast(
    ';',
    input,
    position
  )

  // 8. Remove any trailing HTTP whitespace from subtype.
  subtype = removeHTTPWhitespace(subtype, false, true)

  // 9. If subtype is the empty string or does not solely
  // contain HTTP token code points, then return failure.
  if (subtype.length === 0 || !HTTP_TOKEN_CODEPOINTS.test(subtype)) {
    return 'failure'
  }

  const typeLowercase = type.toLowerCase()
  const subtypeLowercase = subtype.toLowerCase()

  // 10. Let mimeType be a new MIME type record whose type
  // is type, in ASCII lowercase, and subtype is subtype,
  // in ASCII lowercase.
  // https://mimesniff.spec.whatwg.org/#mime-type
  const mimeType = {
    type: typeLowercase,
    subtype: subtypeLowercase,
    /** @type {Map<string, string>} */
    parameters: new Map(),
    // https://mimesniff.spec.whatwg.org/#mime-type-essence
    essence: `${typeLowercase}/${subtypeLowercase}`
  }

  // 11. While position is not past the end of input:
  while (position.position < input.length) {
    // 1. Advance position by 1. (This skips past U+003B (;).)
    position.position++

    // 2. Collect a sequence of code points that are HTTP
    // whitespace from input given position.
    collectASequenceOfCodePoints(
      // https://fetch.spec.whatwg.org/#http-whitespace
      char => HTTP_WHITESPACE_REGEX.test(char),
      input,
      position
    )

    // 3. Let parameterName be the result of collecting a
    // sequence of code points that are not U+003B (;)
    // or U+003D (=) from input, given position.
    let parameterName = collectASequenceOfCodePoints(
      (char) => char !== ';' && char !== '=',
      input,
      position
    )

    // 4. Set parameterName to parameterName, in ASCII
    // lowercase.
    parameterName = parameterName.toLowerCase()

    // 5. If position is not past the end of input, then:
    if (position.position < input.length) {
      // 1. If the code point at position within input is
      // U+003B (;), then continue.
      if (input[position.position] === ';') {
        continue
      }

      // 2. Advance position by 1. (This skips past U+003D (=).)
      position.position++
    }

    // 6. If position is past the end of input, then break.
    if (position.position > input.length) {
      break
    }

    // 7. Let parameterValue be null.
    let parameterValue = null

    // 8. If the code point at position within input is
    // U+0022 ("), then:
    if (input[position.position] === '"') {
      // 1. Set parameterValue to the result of collecting
      // an HTTP quoted string from input, given position
      // and the extract-value flag.
      parameterValue = collectAnHTTPQuotedString(input, position, true)

      // 2. Collect a sequence of code points that are not
      // U+003B (;) from input, given position.
      collectASequenceOfCodePointsFast(
        ';',
        input,
        position
      )

    // 9. Otherwise:
    } else {
      // 1. Set parameterValue to the result of collecting
      // a sequence of code points that are not U+003B (;)
      // from input, given position.
      parameterValue = collectASequenceOfCodePointsFast(
        ';',
        input,
        position
      )

      // 2. Remove any trailing HTTP whitespace from parameterValue.
      parameterValue = removeHTTPWhitespace(parameterValue, false, true)

      // 3. If parameterValue is the empty string, then continue.
      if (parameterValue.length === 0) {
        continue
      }
    }

    // 10. If all of the following are true
    // - parameterName is not the empty string
    // - parameterName solely contains HTTP token code points
    // - parameterValue solely contains HTTP quoted-string token code points
    // - mimeType’s parameters[parameterName] does not exist
    // then set mimeType’s parameters[parameterName] to parameterValue.
    if (
      parameterName.length !== 0 &&
      HTTP_TOKEN_CODEPOINTS.test(parameterName) &&
      (parameterValue.length === 0 || HTTP_QUOTED_STRING_TOKENS.test(parameterValue)) &&
      !mimeType.parameters.has(parameterName)
    ) {
      mimeType.parameters.set(parameterName, parameterValue)
    }
  }

  // 12. Return mimeType.
  return mimeType
}

// https://infra.spec.whatwg.org/#forgiving-base64-decode
/** @param {string} data */
function forgivingBase64 (data) {
  // 1. Remove all ASCII whitespace from data.
  data = data.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, '')  // eslint-disable-line

  // 2. If data’s code point length divides by 4 leaving
  // no remainder, then:
  if (data.length % 4 === 0) {
    // 1. If data ends with one or two U+003D (=) code points,
    // then remove them from data.
    data = data.replace(/=?=$/, '')
  }

  // 3. If data’s code point length divides by 4 leaving
  // a remainder of 1, then return failure.
  if (data.length % 4 === 1) {
    return 'failure'
  }

  // 4. If data contains a code point that is not one of
  //  U+002B (+)
  //  U+002F (/)
  //  ASCII alphanumeric
  // then return failure.
  if (/[^+/0-9A-Za-z]/.test(data)) {
    return 'failure'
  }

  const binary = atob(data)
  const bytes = new Uint8Array(binary.length)

  for (let byte = 0; byte < binary.length; byte++) {
    bytes[byte] = binary.charCodeAt(byte)
  }

  return bytes
}

// https://fetch.spec.whatwg.org/#collect-an-http-quoted-string
// tests: https://fetch.spec.whatwg.org/#example-http-quoted-string
/**
 * @param {string} input
 * @param {{ position: number }} position
 * @param {boolean?} extractValue
 */
function collectAnHTTPQuotedString (input, position, extractValue) {
  // 1. Let positionStart be position.
  const positionStart = position.position

  // 2. Let value be the empty string.
  let value = ''

  // 3. Assert: the code point at position within input
  // is U+0022 (").
  assert(input[position.position] === '"')

  // 4. Advance position by 1.
  position.position++

  // 5. While true:
  while (true) {
    // 1. Append the result of collecting a sequence of code points
    // that are not U+0022 (") or U+005C (\) from input, given
    // position, to value.
    value += collectASequenceOfCodePoints(
      (char) => char !== '"' && char !== '\\',
      input,
      position
    )

    // 2. If position is past the end of input, then break.
    if (position.position >= input.length) {
      break
    }

    // 3. Let quoteOrBackslash be the code point at position within
    // input.
    const quoteOrBackslash = input[position.position]

    // 4. Advance position by 1.
    position.position++

    // 5. If quoteOrBackslash is U+005C (\), then:
    if (quoteOrBackslash === '\\') {
      // 1. If position is past the end of input, then append
      // U+005C (\) to value and break.
      if (position.position >= input.length) {
        value += '\\'
        break
      }

      // 2. Append the code point at position within input to value.
      value += input[position.position]

      // 3. Advance position by 1.
      position.position++

    // 6. Otherwise:
    } else {
      // 1. Assert: quoteOrBackslash is U+0022 (").
      assert(quoteOrBackslash === '"')

      // 2. Break.
      break
    }
  }

  // 6. If the extract-value flag is set, then return value.
  if (extractValue) {
    return value
  }

  // 7. Return the code points from positionStart to position,
  // inclusive, within input.
  return input.slice(positionStart, position.position)
}

/**
 * @see https://mimesniff.spec.whatwg.org/#serialize-a-mime-type
 */
function serializeAMimeType (mimeType) {
  assert(mimeType !== 'failure')
  const { parameters, essence } = mimeType

  // 1. Let serialization be the concatenation of mimeType’s
  //    type, U+002F (/), and mimeType’s subtype.
  let serialization = essence

  // 2. For each name → value of mimeType’s parameters:
  for (let [name, value] of parameters.entries()) {
    // 1. Append U+003B (;) to serialization.
    serialization += ';'

    // 2. Append name to serialization.
    serialization += name

    // 3. Append U+003D (=) to serialization.
    serialization += '='

    // 4. If value does not solely contain HTTP token code
    //    points or value is the empty string, then:
    if (!HTTP_TOKEN_CODEPOINTS.test(value)) {
      // 1. Precede each occurence of U+0022 (") or
      //    U+005C (\) in value with U+005C (\).
      value = value.replace(/(\\|")/g, '\\$1')

      // 2. Prepend U+0022 (") to value.
      value = '"' + value

      // 3. Append U+0022 (") to value.
      value += '"'
    }

    // 5. Append value to serialization.
    serialization += value
  }

  // 3. Return serialization.
  return serialization
}

/**
 * @see https://fetch.spec.whatwg.org/#http-whitespace
 * @param {string} char
 */
function isHTTPWhiteSpace (char) {
  return char === '\r' || char === '\n' || char === '\t' || char === ' '
}

/**
 * @see https://fetch.spec.whatwg.org/#http-whitespace
 * @param {string} str
 */
function removeHTTPWhitespace (str, leading = true, trailing = true) {
  let lead = 0
  let trail = str.length - 1

  if (leading) {
    for (; lead < str.length && isHTTPWhiteSpace(str[lead]); lead++);
  }

  if (trailing) {
    for (; trail > 0 && isHTTPWhiteSpace(str[trail]); trail--);
  }

  return str.slice(lead, trail + 1)
}

/**
 * @see https://infra.spec.whatwg.org/#ascii-whitespace
 * @param {string} char
 */
function isASCIIWhitespace (char) {
  return char === '\r' || char === '\n' || char === '\t' || char === '\f' || char === ' '
}

/**
 * @see https://infra.spec.whatwg.org/#strip-leading-and-trailing-ascii-whitespace
 */
function removeASCIIWhitespace (str, leading = true, trailing = true) {
  let lead = 0
  let trail = str.length - 1

  if (leading) {
    for (; lead < str.length && isASCIIWhitespace(str[lead]); lead++);
  }

  if (trailing) {
    for (; trail > 0 && isASCIIWhitespace(str[trail]); trail--);
  }

  return str.slice(lead, trail + 1)
}

module.exports = {
  dataURLProcessor,
  URLSerializer,
  collectASequenceOfCodePoints,
  collectASequenceOfCodePointsFast,
  stringPercentDecode,
  parseMIMEType,
  collectAnHTTPQuotedString,
  serializeAMimeType
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/file.js":
/*!***************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/file.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { Blob, File: NativeFile } = __webpack_require__(/*! buffer */ "buffer")
const { types } = __webpack_require__(/*! util */ "util")
const { kState } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const { isBlobLike } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")
const { webidl } = __webpack_require__(/*! ./webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { parseMIMEType, serializeAMimeType } = __webpack_require__(/*! ./dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const { kEnumerableProperty } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const encoder = new TextEncoder()

class File extends Blob {
  constructor (fileBits, fileName, options = {}) {
    // The File constructor is invoked with two or three parameters, depending
    // on whether the optional dictionary parameter is used. When the File()
    // constructor is invoked, user agents must run the following steps:
    webidl.argumentLengthCheck(arguments, 2, { header: 'File constructor' })

    fileBits = webidl.converters['sequence<BlobPart>'](fileBits)
    fileName = webidl.converters.USVString(fileName)
    options = webidl.converters.FilePropertyBag(options)

    // 1. Let bytes be the result of processing blob parts given fileBits and
    // options.
    // Note: Blob handles this for us

    // 2. Let n be the fileName argument to the constructor.
    const n = fileName

    // 3. Process FilePropertyBag dictionary argument by running the following
    // substeps:

    //    1. If the type member is provided and is not the empty string, let t
    //    be set to the type dictionary member. If t contains any characters
    //    outside the range U+0020 to U+007E, then set t to the empty string
    //    and return from these substeps.
    //    2. Convert every character in t to ASCII lowercase.
    let t = options.type
    let d

    // eslint-disable-next-line no-labels
    substep: {
      if (t) {
        t = parseMIMEType(t)

        if (t === 'failure') {
          t = ''
          // eslint-disable-next-line no-labels
          break substep
        }

        t = serializeAMimeType(t).toLowerCase()
      }

      //    3. If the lastModified member is provided, let d be set to the
      //    lastModified dictionary member. If it is not provided, set d to the
      //    current date and time represented as the number of milliseconds since
      //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).
      d = options.lastModified
    }

    // 4. Return a new File object F such that:
    // F refers to the bytes byte sequence.
    // F.size is set to the number of total bytes in bytes.
    // F.name is set to n.
    // F.type is set to t.
    // F.lastModified is set to d.

    super(processBlobParts(fileBits, options), { type: t })
    this[kState] = {
      name: n,
      lastModified: d,
      type: t
    }
  }

  get name () {
    webidl.brandCheck(this, File)

    return this[kState].name
  }

  get lastModified () {
    webidl.brandCheck(this, File)

    return this[kState].lastModified
  }

  get type () {
    webidl.brandCheck(this, File)

    return this[kState].type
  }
}

class FileLike {
  constructor (blobLike, fileName, options = {}) {
    // TODO: argument idl type check

    // The File constructor is invoked with two or three parameters, depending
    // on whether the optional dictionary parameter is used. When the File()
    // constructor is invoked, user agents must run the following steps:

    // 1. Let bytes be the result of processing blob parts given fileBits and
    // options.

    // 2. Let n be the fileName argument to the constructor.
    const n = fileName

    // 3. Process FilePropertyBag dictionary argument by running the following
    // substeps:

    //    1. If the type member is provided and is not the empty string, let t
    //    be set to the type dictionary member. If t contains any characters
    //    outside the range U+0020 to U+007E, then set t to the empty string
    //    and return from these substeps.
    //    TODO
    const t = options.type

    //    2. Convert every character in t to ASCII lowercase.
    //    TODO

    //    3. If the lastModified member is provided, let d be set to the
    //    lastModified dictionary member. If it is not provided, set d to the
    //    current date and time represented as the number of milliseconds since
    //    the Unix Epoch (which is the equivalent of Date.now() [ECMA-262]).
    const d = options.lastModified ?? Date.now()

    // 4. Return a new File object F such that:
    // F refers to the bytes byte sequence.
    // F.size is set to the number of total bytes in bytes.
    // F.name is set to n.
    // F.type is set to t.
    // F.lastModified is set to d.

    this[kState] = {
      blobLike,
      name: n,
      type: t,
      lastModified: d
    }
  }

  stream (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.stream(...args)
  }

  arrayBuffer (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.arrayBuffer(...args)
  }

  slice (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.slice(...args)
  }

  text (...args) {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.text(...args)
  }

  get size () {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.size
  }

  get type () {
    webidl.brandCheck(this, FileLike)

    return this[kState].blobLike.type
  }

  get name () {
    webidl.brandCheck(this, FileLike)

    return this[kState].name
  }

  get lastModified () {
    webidl.brandCheck(this, FileLike)

    return this[kState].lastModified
  }

  get [Symbol.toStringTag] () {
    return 'File'
  }
}

Object.defineProperties(File.prototype, {
  [Symbol.toStringTag]: {
    value: 'File',
    configurable: true
  },
  name: kEnumerableProperty,
  lastModified: kEnumerableProperty
})

webidl.converters.Blob = webidl.interfaceConverter(Blob)

webidl.converters.BlobPart = function (V, opts) {
  if (webidl.util.Type(V) === 'Object') {
    if (isBlobLike(V)) {
      return webidl.converters.Blob(V, { strict: false })
    }

    if (
      ArrayBuffer.isView(V) ||
      types.isAnyArrayBuffer(V)
    ) {
      return webidl.converters.BufferSource(V, opts)
    }
  }

  return webidl.converters.USVString(V, opts)
}

webidl.converters['sequence<BlobPart>'] = webidl.sequenceConverter(
  webidl.converters.BlobPart
)

// https://www.w3.org/TR/FileAPI/#dfn-FilePropertyBag
webidl.converters.FilePropertyBag = webidl.dictionaryConverter([
  {
    key: 'lastModified',
    converter: webidl.converters['long long'],
    get defaultValue () {
      return Date.now()
    }
  },
  {
    key: 'type',
    converter: webidl.converters.DOMString,
    defaultValue: ''
  },
  {
    key: 'endings',
    converter: (value) => {
      value = webidl.converters.DOMString(value)
      value = value.toLowerCase()

      if (value !== 'native') {
        value = 'transparent'
      }

      return value
    },
    defaultValue: 'transparent'
  }
])

/**
 * @see https://www.w3.org/TR/FileAPI/#process-blob-parts
 * @param {(NodeJS.TypedArray|Blob|string)[]} parts
 * @param {{ type: string, endings: string }} options
 */
function processBlobParts (parts, options) {
  // 1. Let bytes be an empty sequence of bytes.
  /** @type {NodeJS.TypedArray[]} */
  const bytes = []

  // 2. For each element in parts:
  for (const element of parts) {
    // 1. If element is a USVString, run the following substeps:
    if (typeof element === 'string') {
      // 1. Let s be element.
      let s = element

      // 2. If the endings member of options is "native", set s
      //    to the result of converting line endings to native
      //    of element.
      if (options.endings === 'native') {
        s = convertLineEndingsNative(s)
      }

      // 3. Append the result of UTF-8 encoding s to bytes.
      bytes.push(encoder.encode(s))
    } else if (
      types.isAnyArrayBuffer(element) ||
      types.isTypedArray(element)
    ) {
      // 2. If element is a BufferSource, get a copy of the
      //    bytes held by the buffer source, and append those
      //    bytes to bytes.
      if (!element.buffer) { // ArrayBuffer
        bytes.push(new Uint8Array(element))
      } else {
        bytes.push(
          new Uint8Array(element.buffer, element.byteOffset, element.byteLength)
        )
      }
    } else if (isBlobLike(element)) {
      // 3. If element is a Blob, append the bytes it represents
      //    to bytes.
      bytes.push(element)
    }
  }

  // 3. Return bytes.
  return bytes
}

/**
 * @see https://www.w3.org/TR/FileAPI/#convert-line-endings-to-native
 * @param {string} s
 */
function convertLineEndingsNative (s) {
  // 1. Let native line ending be be the code point U+000A LF.
  let nativeLineEnding = '\n'

  // 2. If the underlying platform’s conventions are to
  //    represent newlines as a carriage return and line feed
  //    sequence, set native line ending to the code point
  //    U+000D CR followed by the code point U+000A LF.
  if (process.platform === 'win32') {
    nativeLineEnding = '\r\n'
  }

  return s.replace(/\r?\n/g, nativeLineEnding)
}

// If this function is moved to ./util.js, some tools (such as
// rollup) will warn about circular dependencies. See:
// https://github.com/nodejs/undici/issues/1629
function isFileLike (object) {
  return (
    (NativeFile && object instanceof NativeFile) ||
    object instanceof File || (
      object &&
      (typeof object.stream === 'function' ||
      typeof object.arrayBuffer === 'function') &&
      object[Symbol.toStringTag] === 'File'
    )
  )
}

module.exports = { File, FileLike, isFileLike }


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/formdata.js":
/*!*******************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/formdata.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { isBlobLike, toUSVString, makeIterator } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")
const { kState } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const { File: UndiciFile, FileLike, isFileLike } = __webpack_require__(/*! ./file */ "../../node_modules/undici/lib/fetch/file.js")
const { webidl } = __webpack_require__(/*! ./webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { Blob, File: NativeFile } = __webpack_require__(/*! buffer */ "buffer")

/** @type {globalThis['File']} */
const File = NativeFile ?? UndiciFile

// https://xhr.spec.whatwg.org/#formdata
class FormData {
  constructor (form) {
    if (form !== undefined) {
      throw webidl.errors.conversionFailed({
        prefix: 'FormData constructor',
        argument: 'Argument 1',
        types: ['undefined']
      })
    }

    this[kState] = []
  }

  append (name, value, filename = undefined) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.append' })

    if (arguments.length === 3 && !isBlobLike(value)) {
      throw new TypeError(
        "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'"
      )
    }

    // 1. Let value be value if given; otherwise blobValue.

    name = webidl.converters.USVString(name)
    value = isBlobLike(value)
      ? webidl.converters.Blob(value, { strict: false })
      : webidl.converters.USVString(value)
    filename = arguments.length === 3
      ? webidl.converters.USVString(filename)
      : undefined

    // 2. Let entry be the result of creating an entry with
    // name, value, and filename if given.
    const entry = makeEntry(name, value, filename)

    // 3. Append entry to this’s entry list.
    this[kState].push(entry)
  }

  delete (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.delete' })

    name = webidl.converters.USVString(name)

    // The delete(name) method steps are to remove all entries whose name
    // is name from this’s entry list.
    this[kState] = this[kState].filter(entry => entry.name !== name)
  }

  get (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.get' })

    name = webidl.converters.USVString(name)

    // 1. If there is no entry whose name is name in this’s entry list,
    // then return null.
    const idx = this[kState].findIndex((entry) => entry.name === name)
    if (idx === -1) {
      return null
    }

    // 2. Return the value of the first entry whose name is name from
    // this’s entry list.
    return this[kState][idx].value
  }

  getAll (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.getAll' })

    name = webidl.converters.USVString(name)

    // 1. If there is no entry whose name is name in this’s entry list,
    // then return the empty list.
    // 2. Return the values of all entries whose name is name, in order,
    // from this’s entry list.
    return this[kState]
      .filter((entry) => entry.name === name)
      .map((entry) => entry.value)
  }

  has (name) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.has' })

    name = webidl.converters.USVString(name)

    // The has(name) method steps are to return true if there is an entry
    // whose name is name in this’s entry list; otherwise false.
    return this[kState].findIndex((entry) => entry.name === name) !== -1
  }

  set (name, value, filename = undefined) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 2, { header: 'FormData.set' })

    if (arguments.length === 3 && !isBlobLike(value)) {
      throw new TypeError(
        "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'"
      )
    }

    // The set(name, value) and set(name, blobValue, filename) method steps
    // are:

    // 1. Let value be value if given; otherwise blobValue.

    name = webidl.converters.USVString(name)
    value = isBlobLike(value)
      ? webidl.converters.Blob(value, { strict: false })
      : webidl.converters.USVString(value)
    filename = arguments.length === 3
      ? toUSVString(filename)
      : undefined

    // 2. Let entry be the result of creating an entry with name, value, and
    // filename if given.
    const entry = makeEntry(name, value, filename)

    // 3. If there are entries in this’s entry list whose name is name, then
    // replace the first such entry with entry and remove the others.
    const idx = this[kState].findIndex((entry) => entry.name === name)
    if (idx !== -1) {
      this[kState] = [
        ...this[kState].slice(0, idx),
        entry,
        ...this[kState].slice(idx + 1).filter((entry) => entry.name !== name)
      ]
    } else {
      // 4. Otherwise, append entry to this’s entry list.
      this[kState].push(entry)
    }
  }

  entries () {
    webidl.brandCheck(this, FormData)

    return makeIterator(
      () => this[kState].map(pair => [pair.name, pair.value]),
      'FormData',
      'key+value'
    )
  }

  keys () {
    webidl.brandCheck(this, FormData)

    return makeIterator(
      () => this[kState].map(pair => [pair.name, pair.value]),
      'FormData',
      'key'
    )
  }

  values () {
    webidl.brandCheck(this, FormData)

    return makeIterator(
      () => this[kState].map(pair => [pair.name, pair.value]),
      'FormData',
      'value'
    )
  }

  /**
   * @param {(value: string, key: string, self: FormData) => void} callbackFn
   * @param {unknown} thisArg
   */
  forEach (callbackFn, thisArg = globalThis) {
    webidl.brandCheck(this, FormData)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FormData.forEach' })

    if (typeof callbackFn !== 'function') {
      throw new TypeError(
        "Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'."
      )
    }

    for (const [key, value] of this) {
      callbackFn.apply(thisArg, [value, key, this])
    }
  }
}

FormData.prototype[Symbol.iterator] = FormData.prototype.entries

Object.defineProperties(FormData.prototype, {
  [Symbol.toStringTag]: {
    value: 'FormData',
    configurable: true
  }
})

/**
 * @see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#create-an-entry
 * @param {string} name
 * @param {string|Blob} value
 * @param {?string} filename
 * @returns
 */
function makeEntry (name, value, filename) {
  // 1. Set name to the result of converting name into a scalar value string.
  // "To convert a string into a scalar value string, replace any surrogates
  //  with U+FFFD."
  // see: https://nodejs.org/dist/latest-v18.x/docs/api/buffer.html#buftostringencoding-start-end
  name = Buffer.from(name).toString('utf8')

  // 2. If value is a string, then set value to the result of converting
  //    value into a scalar value string.
  if (typeof value === 'string') {
    value = Buffer.from(value).toString('utf8')
  } else {
    // 3. Otherwise:

    // 1. If value is not a File object, then set value to a new File object,
    //    representing the same bytes, whose name attribute value is "blob"
    if (!isFileLike(value)) {
      value = value instanceof Blob
        ? new File([value], 'blob', { type: value.type })
        : new FileLike(value, 'blob', { type: value.type })
    }

    // 2. If filename is given, then set value to a new File object,
    //    representing the same bytes, whose name attribute is filename.
    if (filename !== undefined) {
      /** @type {FilePropertyBag} */
      const options = {
        type: value.type,
        lastModified: value.lastModified
      }

      value = (NativeFile && value instanceof NativeFile) || value instanceof UndiciFile
        ? new File([value], filename, options)
        : new FileLike(value, filename, options)
    }
  }

  // 4. Return an entry whose name is name and whose value is value.
  return { name, value }
}

module.exports = { FormData }


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/global.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/global.js ***!
  \*****************************************************/
/***/ ((module) => {



// In case of breaking changes, increase the version
// number to avoid conflicts.
const globalOrigin = Symbol.for('undici.globalOrigin.1')

function getGlobalOrigin () {
  return globalThis[globalOrigin]
}

function setGlobalOrigin (newOrigin) {
  if (newOrigin === undefined) {
    Object.defineProperty(globalThis, globalOrigin, {
      value: undefined,
      writable: true,
      enumerable: false,
      configurable: false
    })

    return
  }

  const parsedURL = new URL(newOrigin)

  if (parsedURL.protocol !== 'http:' && parsedURL.protocol !== 'https:') {
    throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`)
  }

  Object.defineProperty(globalThis, globalOrigin, {
    value: parsedURL,
    writable: true,
    enumerable: false,
    configurable: false
  })
}

module.exports = {
  getGlobalOrigin,
  setGlobalOrigin
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/headers.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/headers.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/Ethan-Arrowood/undici-fetch



const { kHeadersList, kConstruct } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { kGuard } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const { kEnumerableProperty } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const {
  makeIterator,
  isValidHeaderName,
  isValidHeaderValue
} = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")
const { webidl } = __webpack_require__(/*! ./webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const assert = __webpack_require__(/*! assert */ "assert")

const kHeadersMap = Symbol('headers map')
const kHeadersSortedMap = Symbol('headers map sorted')

/**
 * @param {number} code
 */
function isHTTPWhiteSpaceCharCode (code) {
  return code === 0x00a || code === 0x00d || code === 0x009 || code === 0x020
}

/**
 * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize
 * @param {string} potentialValue
 */
function headerValueNormalize (potentialValue) {
  //  To normalize a byte sequence potentialValue, remove
  //  any leading and trailing HTTP whitespace bytes from
  //  potentialValue.
  let i = 0; let j = potentialValue.length

  while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(j - 1))) --j
  while (j > i && isHTTPWhiteSpaceCharCode(potentialValue.charCodeAt(i))) ++i

  return i === 0 && j === potentialValue.length ? potentialValue : potentialValue.substring(i, j)
}

function fill (headers, object) {
  // To fill a Headers object headers with a given object object, run these steps:

  // 1. If object is a sequence, then for each header in object:
  // Note: webidl conversion to array has already been done.
  if (Array.isArray(object)) {
    for (let i = 0; i < object.length; ++i) {
      const header = object[i]
      // 1. If header does not contain exactly two items, then throw a TypeError.
      if (header.length !== 2) {
        throw webidl.errors.exception({
          header: 'Headers constructor',
          message: `expected name/value pair to be length 2, found ${header.length}.`
        })
      }

      // 2. Append (header’s first item, header’s second item) to headers.
      appendHeader(headers, header[0], header[1])
    }
  } else if (typeof object === 'object' && object !== null) {
    // Note: null should throw

    // 2. Otherwise, object is a record, then for each key → value in object,
    //    append (key, value) to headers
    const keys = Object.keys(object)
    for (let i = 0; i < keys.length; ++i) {
      appendHeader(headers, keys[i], object[keys[i]])
    }
  } else {
    throw webidl.errors.conversionFailed({
      prefix: 'Headers constructor',
      argument: 'Argument 1',
      types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']
    })
  }
}

/**
 * @see https://fetch.spec.whatwg.org/#concept-headers-append
 */
function appendHeader (headers, name, value) {
  // 1. Normalize value.
  value = headerValueNormalize(value)

  // 2. If name is not a header name or value is not a
  //    header value, then throw a TypeError.
  if (!isValidHeaderName(name)) {
    throw webidl.errors.invalidArgument({
      prefix: 'Headers.append',
      value: name,
      type: 'header name'
    })
  } else if (!isValidHeaderValue(value)) {
    throw webidl.errors.invalidArgument({
      prefix: 'Headers.append',
      value,
      type: 'header value'
    })
  }

  // 3. If headers’s guard is "immutable", then throw a TypeError.
  // 4. Otherwise, if headers’s guard is "request" and name is a
  //    forbidden header name, return.
  // Note: undici does not implement forbidden header names
  if (headers[kGuard] === 'immutable') {
    throw new TypeError('immutable')
  } else if (headers[kGuard] === 'request-no-cors') {
    // 5. Otherwise, if headers’s guard is "request-no-cors":
    // TODO
  }

  // 6. Otherwise, if headers’s guard is "response" and name is a
  //    forbidden response-header name, return.

  // 7. Append (name, value) to headers’s header list.
  return headers[kHeadersList].append(name, value)

  // 8. If headers’s guard is "request-no-cors", then remove
  //    privileged no-CORS request headers from headers
}

class HeadersList {
  /** @type {[string, string][]|null} */
  cookies = null

  constructor (init) {
    if (init instanceof HeadersList) {
      this[kHeadersMap] = new Map(init[kHeadersMap])
      this[kHeadersSortedMap] = init[kHeadersSortedMap]
      this.cookies = init.cookies === null ? null : [...init.cookies]
    } else {
      this[kHeadersMap] = new Map(init)
      this[kHeadersSortedMap] = null
    }
  }

  // https://fetch.spec.whatwg.org/#header-list-contains
  contains (name) {
    // A header list list contains a header name name if list
    // contains a header whose name is a byte-case-insensitive
    // match for name.
    name = name.toLowerCase()

    return this[kHeadersMap].has(name)
  }

  clear () {
    this[kHeadersMap].clear()
    this[kHeadersSortedMap] = null
    this.cookies = null
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-append
  append (name, value) {
    this[kHeadersSortedMap] = null

    // 1. If list contains name, then set name to the first such
    //    header’s name.
    const lowercaseName = name.toLowerCase()
    const exists = this[kHeadersMap].get(lowercaseName)

    // 2. Append (name, value) to list.
    if (exists) {
      const delimiter = lowercaseName === 'cookie' ? '; ' : ', '
      this[kHeadersMap].set(lowercaseName, {
        name: exists.name,
        value: `${exists.value}${delimiter}${value}`
      })
    } else {
      this[kHeadersMap].set(lowercaseName, { name, value })
    }

    if (lowercaseName === 'set-cookie') {
      this.cookies ??= []
      this.cookies.push(value)
    }
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-set
  set (name, value) {
    this[kHeadersSortedMap] = null
    const lowercaseName = name.toLowerCase()

    if (lowercaseName === 'set-cookie') {
      this.cookies = [value]
    }

    // 1. If list contains name, then set the value of
    //    the first such header to value and remove the
    //    others.
    // 2. Otherwise, append header (name, value) to list.
    this[kHeadersMap].set(lowercaseName, { name, value })
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-delete
  delete (name) {
    this[kHeadersSortedMap] = null

    name = name.toLowerCase()

    if (name === 'set-cookie') {
      this.cookies = null
    }

    this[kHeadersMap].delete(name)
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-get
  get (name) {
    const value = this[kHeadersMap].get(name.toLowerCase())

    // 1. If list does not contain name, then return null.
    // 2. Return the values of all headers in list whose name
    //    is a byte-case-insensitive match for name,
    //    separated from each other by 0x2C 0x20, in order.
    return value === undefined ? null : value.value
  }

  * [Symbol.iterator] () {
    // use the lowercased name
    for (const [name, { value }] of this[kHeadersMap]) {
      yield [name, value]
    }
  }

  get entries () {
    const headers = {}

    if (this[kHeadersMap].size) {
      for (const { name, value } of this[kHeadersMap].values()) {
        headers[name] = value
      }
    }

    return headers
  }
}

// https://fetch.spec.whatwg.org/#headers-class
class Headers {
  constructor (init = undefined) {
    if (init === kConstruct) {
      return
    }
    this[kHeadersList] = new HeadersList()

    // The new Headers(init) constructor steps are:

    // 1. Set this’s guard to "none".
    this[kGuard] = 'none'

    // 2. If init is given, then fill this with init.
    if (init !== undefined) {
      init = webidl.converters.HeadersInit(init)
      fill(this, init)
    }
  }

  // https://fetch.spec.whatwg.org/#dom-headers-append
  append (name, value) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.append' })

    name = webidl.converters.ByteString(name)
    value = webidl.converters.ByteString(value)

    return appendHeader(this, name, value)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-delete
  delete (name) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.delete' })

    name = webidl.converters.ByteString(name)

    // 1. If name is not a header name, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.delete',
        value: name,
        type: 'header name'
      })
    }

    // 2. If this’s guard is "immutable", then throw a TypeError.
    // 3. Otherwise, if this’s guard is "request" and name is a
    //    forbidden header name, return.
    // 4. Otherwise, if this’s guard is "request-no-cors", name
    //    is not a no-CORS-safelisted request-header name, and
    //    name is not a privileged no-CORS request-header name,
    //    return.
    // 5. Otherwise, if this’s guard is "response" and name is
    //    a forbidden response-header name, return.
    // Note: undici does not implement forbidden header names
    if (this[kGuard] === 'immutable') {
      throw new TypeError('immutable')
    } else if (this[kGuard] === 'request-no-cors') {
      // TODO
    }

    // 6. If this’s header list does not contain name, then
    //    return.
    if (!this[kHeadersList].contains(name)) {
      return
    }

    // 7. Delete name from this’s header list.
    // 8. If this’s guard is "request-no-cors", then remove
    //    privileged no-CORS request headers from this.
    this[kHeadersList].delete(name)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-get
  get (name) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.get' })

    name = webidl.converters.ByteString(name)

    // 1. If name is not a header name, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.get',
        value: name,
        type: 'header name'
      })
    }

    // 2. Return the result of getting name from this’s header
    //    list.
    return this[kHeadersList].get(name)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-has
  has (name) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.has' })

    name = webidl.converters.ByteString(name)

    // 1. If name is not a header name, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.has',
        value: name,
        type: 'header name'
      })
    }

    // 2. Return true if this’s header list contains name;
    //    otherwise false.
    return this[kHeadersList].contains(name)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-set
  set (name, value) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 2, { header: 'Headers.set' })

    name = webidl.converters.ByteString(name)
    value = webidl.converters.ByteString(value)

    // 1. Normalize value.
    value = headerValueNormalize(value)

    // 2. If name is not a header name or value is not a
    //    header value, then throw a TypeError.
    if (!isValidHeaderName(name)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.set',
        value: name,
        type: 'header name'
      })
    } else if (!isValidHeaderValue(value)) {
      throw webidl.errors.invalidArgument({
        prefix: 'Headers.set',
        value,
        type: 'header value'
      })
    }

    // 3. If this’s guard is "immutable", then throw a TypeError.
    // 4. Otherwise, if this’s guard is "request" and name is a
    //    forbidden header name, return.
    // 5. Otherwise, if this’s guard is "request-no-cors" and
    //    name/value is not a no-CORS-safelisted request-header,
    //    return.
    // 6. Otherwise, if this’s guard is "response" and name is a
    //    forbidden response-header name, return.
    // Note: undici does not implement forbidden header names
    if (this[kGuard] === 'immutable') {
      throw new TypeError('immutable')
    } else if (this[kGuard] === 'request-no-cors') {
      // TODO
    }

    // 7. Set (name, value) in this’s header list.
    // 8. If this’s guard is "request-no-cors", then remove
    //    privileged no-CORS request headers from this
    this[kHeadersList].set(name, value)
  }

  // https://fetch.spec.whatwg.org/#dom-headers-getsetcookie
  getSetCookie () {
    webidl.brandCheck(this, Headers)

    // 1. If this’s header list does not contain `Set-Cookie`, then return « ».
    // 2. Return the values of all headers in this’s header list whose name is
    //    a byte-case-insensitive match for `Set-Cookie`, in order.

    const list = this[kHeadersList].cookies

    if (list) {
      return [...list]
    }

    return []
  }

  // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine
  get [kHeadersSortedMap] () {
    if (this[kHeadersList][kHeadersSortedMap]) {
      return this[kHeadersList][kHeadersSortedMap]
    }

    // 1. Let headers be an empty list of headers with the key being the name
    //    and value the value.
    const headers = []

    // 2. Let names be the result of convert header names to a sorted-lowercase
    //    set with all the names of the headers in list.
    const names = [...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1)
    const cookies = this[kHeadersList].cookies

    // 3. For each name of names:
    for (let i = 0; i < names.length; ++i) {
      const [name, value] = names[i]
      // 1. If name is `set-cookie`, then:
      if (name === 'set-cookie') {
        // 1. Let values be a list of all values of headers in list whose name
        //    is a byte-case-insensitive match for name, in order.

        // 2. For each value of values:
        // 1. Append (name, value) to headers.
        for (let j = 0; j < cookies.length; ++j) {
          headers.push([name, cookies[j]])
        }
      } else {
        // 2. Otherwise:

        // 1. Let value be the result of getting name from list.

        // 2. Assert: value is non-null.
        assert(value !== null)

        // 3. Append (name, value) to headers.
        headers.push([name, value])
      }
    }

    this[kHeadersList][kHeadersSortedMap] = headers

    // 4. Return headers.
    return headers
  }

  keys () {
    webidl.brandCheck(this, Headers)

    if (this[kGuard] === 'immutable') {
      const value = this[kHeadersSortedMap]
      return makeIterator(() => value, 'Headers',
        'key')
    }

    return makeIterator(
      () => [...this[kHeadersSortedMap].values()],
      'Headers',
      'key'
    )
  }

  values () {
    webidl.brandCheck(this, Headers)

    if (this[kGuard] === 'immutable') {
      const value = this[kHeadersSortedMap]
      return makeIterator(() => value, 'Headers',
        'value')
    }

    return makeIterator(
      () => [...this[kHeadersSortedMap].values()],
      'Headers',
      'value'
    )
  }

  entries () {
    webidl.brandCheck(this, Headers)

    if (this[kGuard] === 'immutable') {
      const value = this[kHeadersSortedMap]
      return makeIterator(() => value, 'Headers',
        'key+value')
    }

    return makeIterator(
      () => [...this[kHeadersSortedMap].values()],
      'Headers',
      'key+value'
    )
  }

  /**
   * @param {(value: string, key: string, self: Headers) => void} callbackFn
   * @param {unknown} thisArg
   */
  forEach (callbackFn, thisArg = globalThis) {
    webidl.brandCheck(this, Headers)

    webidl.argumentLengthCheck(arguments, 1, { header: 'Headers.forEach' })

    if (typeof callbackFn !== 'function') {
      throw new TypeError(
        "Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'."
      )
    }

    for (const [key, value] of this) {
      callbackFn.apply(thisArg, [value, key, this])
    }
  }

  [Symbol.for('nodejs.util.inspect.custom')] () {
    webidl.brandCheck(this, Headers)

    return this[kHeadersList]
  }
}

Headers.prototype[Symbol.iterator] = Headers.prototype.entries

Object.defineProperties(Headers.prototype, {
  append: kEnumerableProperty,
  delete: kEnumerableProperty,
  get: kEnumerableProperty,
  has: kEnumerableProperty,
  set: kEnumerableProperty,
  getSetCookie: kEnumerableProperty,
  keys: kEnumerableProperty,
  values: kEnumerableProperty,
  entries: kEnumerableProperty,
  forEach: kEnumerableProperty,
  [Symbol.iterator]: { enumerable: false },
  [Symbol.toStringTag]: {
    value: 'Headers',
    configurable: true
  }
})

webidl.converters.HeadersInit = function (V) {
  if (webidl.util.Type(V) === 'Object') {
    if (V[Symbol.iterator]) {
      return webidl.converters['sequence<sequence<ByteString>>'](V)
    }

    return webidl.converters['record<ByteString, ByteString>'](V)
  }

  throw webidl.errors.conversionFailed({
    prefix: 'Headers constructor',
    argument: 'Argument 1',
    types: ['sequence<sequence<ByteString>>', 'record<ByteString, ByteString>']
  })
}

module.exports = {
  fill,
  Headers,
  HeadersList
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/index.js":
/*!****************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/Ethan-Arrowood/undici-fetch



const {
  Response,
  makeNetworkError,
  makeAppropriateNetworkError,
  filterResponse,
  makeResponse
} = __webpack_require__(/*! ./response */ "../../node_modules/undici/lib/fetch/response.js")
const { Headers } = __webpack_require__(/*! ./headers */ "../../node_modules/undici/lib/fetch/headers.js")
const { Request, makeRequest } = __webpack_require__(/*! ./request */ "../../node_modules/undici/lib/fetch/request.js")
const zlib = __webpack_require__(/*! zlib */ "zlib")
const {
  bytesMatch,
  makePolicyContainer,
  clonePolicyContainer,
  requestBadPort,
  TAOCheck,
  appendRequestOriginHeader,
  responseLocationURL,
  requestCurrentURL,
  setRequestReferrerPolicyOnRedirect,
  tryUpgradeRequestToAPotentiallyTrustworthyURL,
  createOpaqueTimingInfo,
  appendFetchMetadata,
  corsCheck,
  crossOriginResourcePolicyCheck,
  determineRequestsReferrer,
  coarsenedSharedCurrentTime,
  createDeferredPromise,
  isBlobLike,
  sameOrigin,
  isCancelled,
  isAborted,
  isErrorLike,
  fullyReadBody,
  readableStreamClose,
  isomorphicEncode,
  urlIsLocal,
  urlIsHttpHttpsScheme,
  urlHasHttpsScheme
} = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")
const { kState, kHeaders, kGuard, kRealm } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { safelyExtractBody } = __webpack_require__(/*! ./body */ "../../node_modules/undici/lib/fetch/body.js")
const {
  redirectStatusSet,
  nullBodyStatus,
  safeMethodsSet,
  requestBodyHeader,
  subresourceSet,
  DOMException
} = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/fetch/constants.js")
const { kHeadersList } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const EE = __webpack_require__(/*! events */ "events")
const { Readable, pipeline } = __webpack_require__(/*! stream */ "stream")
const { addAbortListener, isErrored, isReadable, nodeMajor, nodeMinor } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { dataURLProcessor, serializeAMimeType } = __webpack_require__(/*! ./dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const { TransformStream } = __webpack_require__(/*! stream/web */ "stream/web")
const { getGlobalDispatcher } = __webpack_require__(/*! ../global */ "../../node_modules/undici/lib/global.js")
const { webidl } = __webpack_require__(/*! ./webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { STATUS_CODES } = __webpack_require__(/*! http */ "http")
const GET_OR_HEAD = ['GET', 'HEAD']

/** @type {import('buffer').resolveObjectURL} */
let resolveObjectURL
let ReadableStream = globalThis.ReadableStream

class Fetch extends EE {
  constructor (dispatcher) {
    super()

    this.dispatcher = dispatcher
    this.connection = null
    this.dump = false
    this.state = 'ongoing'
    // 2 terminated listeners get added per request,
    // but only 1 gets removed. If there are 20 redirects,
    // 21 listeners will be added.
    // See https://github.com/nodejs/undici/issues/1711
    // TODO (fix): Find and fix root cause for leaked listener.
    this.setMaxListeners(21)
  }

  terminate (reason) {
    if (this.state !== 'ongoing') {
      return
    }

    this.state = 'terminated'
    this.connection?.destroy(reason)
    this.emit('terminated', reason)
  }

  // https://fetch.spec.whatwg.org/#fetch-controller-abort
  abort (error) {
    if (this.state !== 'ongoing') {
      return
    }

    // 1. Set controller’s state to "aborted".
    this.state = 'aborted'

    // 2. Let fallbackError be an "AbortError" DOMException.
    // 3. Set error to fallbackError if it is not given.
    if (!error) {
      error = new DOMException('The operation was aborted.', 'AbortError')
    }

    // 4. Let serializedError be StructuredSerialize(error).
    //    If that threw an exception, catch it, and let
    //    serializedError be StructuredSerialize(fallbackError).

    // 5. Set controller’s serialized abort reason to serializedError.
    this.serializedAbortReason = error

    this.connection?.destroy(error)
    this.emit('terminated', error)
  }
}

// https://fetch.spec.whatwg.org/#fetch-method
function fetch (input, init = {}) {
  webidl.argumentLengthCheck(arguments, 1, { header: 'globalThis.fetch' })

  // 1. Let p be a new promise.
  const p = createDeferredPromise()

  // 2. Let requestObject be the result of invoking the initial value of
  // Request as constructor with input and init as arguments. If this throws
  // an exception, reject p with it and return p.
  let requestObject

  try {
    requestObject = new Request(input, init)
  } catch (e) {
    p.reject(e)
    return p.promise
  }

  // 3. Let request be requestObject’s request.
  const request = requestObject[kState]

  // 4. If requestObject’s signal’s aborted flag is set, then:
  if (requestObject.signal.aborted) {
    // 1. Abort the fetch() call with p, request, null, and
    //    requestObject’s signal’s abort reason.
    abortFetch(p, request, null, requestObject.signal.reason)

    // 2. Return p.
    return p.promise
  }

  // 5. Let globalObject be request’s client’s global object.
  const globalObject = request.client.globalObject

  // 6. If globalObject is a ServiceWorkerGlobalScope object, then set
  // request’s service-workers mode to "none".
  if (globalObject?.constructor?.name === 'ServiceWorkerGlobalScope') {
    request.serviceWorkers = 'none'
  }

  // 7. Let responseObject be null.
  let responseObject = null

  // 8. Let relevantRealm be this’s relevant Realm.
  const relevantRealm = null

  // 9. Let locallyAborted be false.
  let locallyAborted = false

  // 10. Let controller be null.
  let controller = null

  // 11. Add the following abort steps to requestObject’s signal:
  addAbortListener(
    requestObject.signal,
    () => {
      // 1. Set locallyAborted to true.
      locallyAborted = true

      // 2. Assert: controller is non-null.
      assert(controller != null)

      // 3. Abort controller with requestObject’s signal’s abort reason.
      controller.abort(requestObject.signal.reason)

      // 4. Abort the fetch() call with p, request, responseObject,
      //    and requestObject’s signal’s abort reason.
      abortFetch(p, request, responseObject, requestObject.signal.reason)
    }
  )

  // 12. Let handleFetchDone given response response be to finalize and
  // report timing with response, globalObject, and "fetch".
  const handleFetchDone = (response) =>
    finalizeAndReportTiming(response, 'fetch')

  // 13. Set controller to the result of calling fetch given request,
  // with processResponseEndOfBody set to handleFetchDone, and processResponse
  // given response being these substeps:

  const processResponse = (response) => {
    // 1. If locallyAborted is true, terminate these substeps.
    if (locallyAborted) {
      return Promise.resolve()
    }

    // 2. If response’s aborted flag is set, then:
    if (response.aborted) {
      // 1. Let deserializedError be the result of deserialize a serialized
      //    abort reason given controller’s serialized abort reason and
      //    relevantRealm.

      // 2. Abort the fetch() call with p, request, responseObject, and
      //    deserializedError.

      abortFetch(p, request, responseObject, controller.serializedAbortReason)
      return Promise.resolve()
    }

    // 3. If response is a network error, then reject p with a TypeError
    // and terminate these substeps.
    if (response.type === 'error') {
      p.reject(
        Object.assign(new TypeError('fetch failed'), { cause: response.error })
      )
      return Promise.resolve()
    }

    // 4. Set responseObject to the result of creating a Response object,
    // given response, "immutable", and relevantRealm.
    responseObject = new Response()
    responseObject[kState] = response
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kHeadersList] = response.headersList
    responseObject[kHeaders][kGuard] = 'immutable'
    responseObject[kHeaders][kRealm] = relevantRealm

    // 5. Resolve p with responseObject.
    p.resolve(responseObject)
  }

  controller = fetching({
    request,
    processResponseEndOfBody: handleFetchDone,
    processResponse,
    dispatcher: init.dispatcher ?? getGlobalDispatcher() // undici
  })

  // 14. Return p.
  return p.promise
}

// https://fetch.spec.whatwg.org/#finalize-and-report-timing
function finalizeAndReportTiming (response, initiatorType = 'other') {
  // 1. If response is an aborted network error, then return.
  if (response.type === 'error' && response.aborted) {
    return
  }

  // 2. If response’s URL list is null or empty, then return.
  if (!response.urlList?.length) {
    return
  }

  // 3. Let originalURL be response’s URL list[0].
  const originalURL = response.urlList[0]

  // 4. Let timingInfo be response’s timing info.
  let timingInfo = response.timingInfo

  // 5. Let cacheState be response’s cache state.
  let cacheState = response.cacheState

  // 6. If originalURL’s scheme is not an HTTP(S) scheme, then return.
  if (!urlIsHttpHttpsScheme(originalURL)) {
    return
  }

  // 7. If timingInfo is null, then return.
  if (timingInfo === null) {
    return
  }

  // 8. If response’s timing allow passed flag is not set, then:
  if (!response.timingAllowPassed) {
    //  1. Set timingInfo to a the result of creating an opaque timing info for timingInfo.
    timingInfo = createOpaqueTimingInfo({
      startTime: timingInfo.startTime
    })

    //  2. Set cacheState to the empty string.
    cacheState = ''
  }

  // 9. Set timingInfo’s end time to the coarsened shared current time
  // given global’s relevant settings object’s cross-origin isolated
  // capability.
  // TODO: given global’s relevant settings object’s cross-origin isolated
  // capability?
  timingInfo.endTime = coarsenedSharedCurrentTime()

  // 10. Set response’s timing info to timingInfo.
  response.timingInfo = timingInfo

  // 11. Mark resource timing for timingInfo, originalURL, initiatorType,
  // global, and cacheState.
  markResourceTiming(
    timingInfo,
    originalURL,
    initiatorType,
    globalThis,
    cacheState
  )
}

// https://w3c.github.io/resource-timing/#dfn-mark-resource-timing
function markResourceTiming (timingInfo, originalURL, initiatorType, globalThis, cacheState) {
  if (nodeMajor > 18 || (nodeMajor === 18 && nodeMinor >= 2)) {
    performance.markResourceTiming(timingInfo, originalURL.href, initiatorType, globalThis, cacheState)
  }
}

// https://fetch.spec.whatwg.org/#abort-fetch
function abortFetch (p, request, responseObject, error) {
  // Note: AbortSignal.reason was added in node v17.2.0
  // which would give us an undefined error to reject with.
  // Remove this once node v16 is no longer supported.
  if (!error) {
    error = new DOMException('The operation was aborted.', 'AbortError')
  }

  // 1. Reject promise with error.
  p.reject(error)

  // 2. If request’s body is not null and is readable, then cancel request’s
  // body with error.
  if (request.body != null && isReadable(request.body?.stream)) {
    request.body.stream.cancel(error).catch((err) => {
      if (err.code === 'ERR_INVALID_STATE') {
        // Node bug?
        return
      }
      throw err
    })
  }

  // 3. If responseObject is null, then return.
  if (responseObject == null) {
    return
  }

  // 4. Let response be responseObject’s response.
  const response = responseObject[kState]

  // 5. If response’s body is not null and is readable, then error response’s
  // body with error.
  if (response.body != null && isReadable(response.body?.stream)) {
    response.body.stream.cancel(error).catch((err) => {
      if (err.code === 'ERR_INVALID_STATE') {
        // Node bug?
        return
      }
      throw err
    })
  }
}

// https://fetch.spec.whatwg.org/#fetching
function fetching ({
  request,
  processRequestBodyChunkLength,
  processRequestEndOfBody,
  processResponse,
  processResponseEndOfBody,
  processResponseConsumeBody,
  useParallelQueue = false,
  dispatcher // undici
}) {
  // 1. Let taskDestination be null.
  let taskDestination = null

  // 2. Let crossOriginIsolatedCapability be false.
  let crossOriginIsolatedCapability = false

  // 3. If request’s client is non-null, then:
  if (request.client != null) {
    // 1. Set taskDestination to request’s client’s global object.
    taskDestination = request.client.globalObject

    // 2. Set crossOriginIsolatedCapability to request’s client’s cross-origin
    // isolated capability.
    crossOriginIsolatedCapability =
      request.client.crossOriginIsolatedCapability
  }

  // 4. If useParallelQueue is true, then set taskDestination to the result of
  // starting a new parallel queue.
  // TODO

  // 5. Let timingInfo be a new fetch timing info whose start time and
  // post-redirect start time are the coarsened shared current time given
  // crossOriginIsolatedCapability.
  const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability)
  const timingInfo = createOpaqueTimingInfo({
    startTime: currenTime
  })

  // 6. Let fetchParams be a new fetch params whose
  // request is request,
  // timing info is timingInfo,
  // process request body chunk length is processRequestBodyChunkLength,
  // process request end-of-body is processRequestEndOfBody,
  // process response is processResponse,
  // process response consume body is processResponseConsumeBody,
  // process response end-of-body is processResponseEndOfBody,
  // task destination is taskDestination,
  // and cross-origin isolated capability is crossOriginIsolatedCapability.
  const fetchParams = {
    controller: new Fetch(dispatcher),
    request,
    timingInfo,
    processRequestBodyChunkLength,
    processRequestEndOfBody,
    processResponse,
    processResponseConsumeBody,
    processResponseEndOfBody,
    taskDestination,
    crossOriginIsolatedCapability
  }

  // 7. If request’s body is a byte sequence, then set request’s body to
  //    request’s body as a body.
  // NOTE: Since fetching is only called from fetch, body should already be
  // extracted.
  assert(!request.body || request.body.stream)

  // 8. If request’s window is "client", then set request’s window to request’s
  // client, if request’s client’s global object is a Window object; otherwise
  // "no-window".
  if (request.window === 'client') {
    // TODO: What if request.client is null?
    request.window =
      request.client?.globalObject?.constructor?.name === 'Window'
        ? request.client
        : 'no-window'
  }

  // 9. If request’s origin is "client", then set request’s origin to request’s
  // client’s origin.
  if (request.origin === 'client') {
    // TODO: What if request.client is null?
    request.origin = request.client?.origin
  }

  // 10. If all of the following conditions are true:
  // TODO

  // 11. If request’s policy container is "client", then:
  if (request.policyContainer === 'client') {
    // 1. If request’s client is non-null, then set request’s policy
    // container to a clone of request’s client’s policy container. [HTML]
    if (request.client != null) {
      request.policyContainer = clonePolicyContainer(
        request.client.policyContainer
      )
    } else {
      // 2. Otherwise, set request’s policy container to a new policy
      // container.
      request.policyContainer = makePolicyContainer()
    }
  }

  // 12. If request’s header list does not contain `Accept`, then:
  if (!request.headersList.contains('accept')) {
    // 1. Let value be `*/*`.
    const value = '*/*'

    // 2. A user agent should set value to the first matching statement, if
    // any, switching on request’s destination:
    // "document"
    // "frame"
    // "iframe"
    // `text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8`
    // "image"
    // `image/png,image/svg+xml,image/*;q=0.8,*/*;q=0.5`
    // "style"
    // `text/css,*/*;q=0.1`
    // TODO

    // 3. Append `Accept`/value to request’s header list.
    request.headersList.append('accept', value)
  }

  // 13. If request’s header list does not contain `Accept-Language`, then
  // user agents should append `Accept-Language`/an appropriate value to
  // request’s header list.
  if (!request.headersList.contains('accept-language')) {
    request.headersList.append('accept-language', '*')
  }

  // 14. If request’s priority is null, then use request’s initiator and
  // destination appropriately in setting request’s priority to a
  // user-agent-defined object.
  if (request.priority === null) {
    // TODO
  }

  // 15. If request is a subresource request, then:
  if (subresourceSet.has(request.destination)) {
    // TODO
  }

  // 16. Run main fetch given fetchParams.
  mainFetch(fetchParams)
    .catch(err => {
      fetchParams.controller.terminate(err)
    })

  // 17. Return fetchParam's controller
  return fetchParams.controller
}

// https://fetch.spec.whatwg.org/#concept-main-fetch
async function mainFetch (fetchParams, recursive = false) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let response be null.
  let response = null

  // 3. If request’s local-URLs-only flag is set and request’s current URL is
  // not local, then set response to a network error.
  if (request.localURLsOnly && !urlIsLocal(requestCurrentURL(request))) {
    response = makeNetworkError('local URLs only')
  }

  // 4. Run report Content Security Policy violations for request.
  // TODO

  // 5. Upgrade request to a potentially trustworthy URL, if appropriate.
  tryUpgradeRequestToAPotentiallyTrustworthyURL(request)

  // 6. If should request be blocked due to a bad port, should fetching request
  // be blocked as mixed content, or should request be blocked by Content
  // Security Policy returns blocked, then set response to a network error.
  if (requestBadPort(request) === 'blocked') {
    response = makeNetworkError('bad port')
  }
  // TODO: should fetching request be blocked as mixed content?
  // TODO: should request be blocked by Content Security Policy?

  // 7. If request’s referrer policy is the empty string, then set request’s
  // referrer policy to request’s policy container’s referrer policy.
  if (request.referrerPolicy === '') {
    request.referrerPolicy = request.policyContainer.referrerPolicy
  }

  // 8. If request’s referrer is not "no-referrer", then set request’s
  // referrer to the result of invoking determine request’s referrer.
  if (request.referrer !== 'no-referrer') {
    request.referrer = determineRequestsReferrer(request)
  }

  // 9. Set request’s current URL’s scheme to "https" if all of the following
  // conditions are true:
  // - request’s current URL’s scheme is "http"
  // - request’s current URL’s host is a domain
  // - Matching request’s current URL’s host per Known HSTS Host Domain Name
  //   Matching results in either a superdomain match with an asserted
  //   includeSubDomains directive or a congruent match (with or without an
  //   asserted includeSubDomains directive). [HSTS]
  // TODO

  // 10. If recursive is false, then run the remaining steps in parallel.
  // TODO

  // 11. If response is null, then set response to the result of running
  // the steps corresponding to the first matching statement:
  if (response === null) {
    response = await (async () => {
      const currentURL = requestCurrentURL(request)

      if (
        // - request’s current URL’s origin is same origin with request’s origin,
        //   and request’s response tainting is "basic"
        (sameOrigin(currentURL, request.url) && request.responseTainting === 'basic') ||
        // request’s current URL’s scheme is "data"
        (currentURL.protocol === 'data:') ||
        // - request’s mode is "navigate" or "websocket"
        (request.mode === 'navigate' || request.mode === 'websocket')
      ) {
        // 1. Set request’s response tainting to "basic".
        request.responseTainting = 'basic'

        // 2. Return the result of running scheme fetch given fetchParams.
        return await schemeFetch(fetchParams)
      }

      // request’s mode is "same-origin"
      if (request.mode === 'same-origin') {
        // 1. Return a network error.
        return makeNetworkError('request mode cannot be "same-origin"')
      }

      // request’s mode is "no-cors"
      if (request.mode === 'no-cors') {
        // 1. If request’s redirect mode is not "follow", then return a network
        // error.
        if (request.redirect !== 'follow') {
          return makeNetworkError(
            'redirect mode cannot be "follow" for "no-cors" request'
          )
        }

        // 2. Set request’s response tainting to "opaque".
        request.responseTainting = 'opaque'

        // 3. Return the result of running scheme fetch given fetchParams.
        return await schemeFetch(fetchParams)
      }

      // request’s current URL’s scheme is not an HTTP(S) scheme
      if (!urlIsHttpHttpsScheme(requestCurrentURL(request))) {
        // Return a network error.
        return makeNetworkError('URL scheme must be a HTTP(S) scheme')
      }

      // - request’s use-CORS-preflight flag is set
      // - request’s unsafe-request flag is set and either request’s method is
      //   not a CORS-safelisted method or CORS-unsafe request-header names with
      //   request’s header list is not empty
      //    1. Set request’s response tainting to "cors".
      //    2. Let corsWithPreflightResponse be the result of running HTTP fetch
      //    given fetchParams and true.
      //    3. If corsWithPreflightResponse is a network error, then clear cache
      //    entries using request.
      //    4. Return corsWithPreflightResponse.
      // TODO

      // Otherwise
      //    1. Set request’s response tainting to "cors".
      request.responseTainting = 'cors'

      //    2. Return the result of running HTTP fetch given fetchParams.
      return await httpFetch(fetchParams)
    })()
  }

  // 12. If recursive is true, then return response.
  if (recursive) {
    return response
  }

  // 13. If response is not a network error and response is not a filtered
  // response, then:
  if (response.status !== 0 && !response.internalResponse) {
    // If request’s response tainting is "cors", then:
    if (request.responseTainting === 'cors') {
      // 1. Let headerNames be the result of extracting header list values
      // given `Access-Control-Expose-Headers` and response’s header list.
      // TODO
      // 2. If request’s credentials mode is not "include" and headerNames
      // contains `*`, then set response’s CORS-exposed header-name list to
      // all unique header names in response’s header list.
      // TODO
      // 3. Otherwise, if headerNames is not null or failure, then set
      // response’s CORS-exposed header-name list to headerNames.
      // TODO
    }

    // Set response to the following filtered response with response as its
    // internal response, depending on request’s response tainting:
    if (request.responseTainting === 'basic') {
      response = filterResponse(response, 'basic')
    } else if (request.responseTainting === 'cors') {
      response = filterResponse(response, 'cors')
    } else if (request.responseTainting === 'opaque') {
      response = filterResponse(response, 'opaque')
    } else {
      assert(false)
    }
  }

  // 14. Let internalResponse be response, if response is a network error,
  // and response’s internal response otherwise.
  let internalResponse =
    response.status === 0 ? response : response.internalResponse

  // 15. If internalResponse’s URL list is empty, then set it to a clone of
  // request’s URL list.
  if (internalResponse.urlList.length === 0) {
    internalResponse.urlList.push(...request.urlList)
  }

  // 16. If request’s timing allow failed flag is unset, then set
  // internalResponse’s timing allow passed flag.
  if (!request.timingAllowFailed) {
    response.timingAllowPassed = true
  }

  // 17. If response is not a network error and any of the following returns
  // blocked
  // - should internalResponse to request be blocked as mixed content
  // - should internalResponse to request be blocked by Content Security Policy
  // - should internalResponse to request be blocked due to its MIME type
  // - should internalResponse to request be blocked due to nosniff
  // TODO

  // 18. If response’s type is "opaque", internalResponse’s status is 206,
  // internalResponse’s range-requested flag is set, and request’s header
  // list does not contain `Range`, then set response and internalResponse
  // to a network error.
  if (
    response.type === 'opaque' &&
    internalResponse.status === 206 &&
    internalResponse.rangeRequested &&
    !request.headers.contains('range')
  ) {
    response = internalResponse = makeNetworkError()
  }

  // 19. If response is not a network error and either request’s method is
  // `HEAD` or `CONNECT`, or internalResponse’s status is a null body status,
  // set internalResponse’s body to null and disregard any enqueuing toward
  // it (if any).
  if (
    response.status !== 0 &&
    (request.method === 'HEAD' ||
      request.method === 'CONNECT' ||
      nullBodyStatus.includes(internalResponse.status))
  ) {
    internalResponse.body = null
    fetchParams.controller.dump = true
  }

  // 20. If request’s integrity metadata is not the empty string, then:
  if (request.integrity) {
    // 1. Let processBodyError be this step: run fetch finale given fetchParams
    // and a network error.
    const processBodyError = (reason) =>
      fetchFinale(fetchParams, makeNetworkError(reason))

    // 2. If request’s response tainting is "opaque", or response’s body is null,
    // then run processBodyError and abort these steps.
    if (request.responseTainting === 'opaque' || response.body == null) {
      processBodyError(response.error)
      return
    }

    // 3. Let processBody given bytes be these steps:
    const processBody = (bytes) => {
      // 1. If bytes do not match request’s integrity metadata,
      // then run processBodyError and abort these steps. [SRI]
      if (!bytesMatch(bytes, request.integrity)) {
        processBodyError('integrity mismatch')
        return
      }

      // 2. Set response’s body to bytes as a body.
      response.body = safelyExtractBody(bytes)[0]

      // 3. Run fetch finale given fetchParams and response.
      fetchFinale(fetchParams, response)
    }

    // 4. Fully read response’s body given processBody and processBodyError.
    await fullyReadBody(response.body, processBody, processBodyError)
  } else {
    // 21. Otherwise, run fetch finale given fetchParams and response.
    fetchFinale(fetchParams, response)
  }
}

// https://fetch.spec.whatwg.org/#concept-scheme-fetch
// given a fetch params fetchParams
function schemeFetch (fetchParams) {
  // Note: since the connection is destroyed on redirect, which sets fetchParams to a
  // cancelled state, we do not want this condition to trigger *unless* there have been
  // no redirects. See https://github.com/nodejs/undici/issues/1776
  // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.
  if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {
    return Promise.resolve(makeAppropriateNetworkError(fetchParams))
  }

  // 2. Let request be fetchParams’s request.
  const { request } = fetchParams

  const { protocol: scheme } = requestCurrentURL(request)

  // 3. Switch on request’s current URL’s scheme and run the associated steps:
  switch (scheme) {
    case 'about:': {
      // If request’s current URL’s path is the string "blank", then return a new response
      // whose status message is `OK`, header list is « (`Content-Type`, `text/html;charset=utf-8`) »,
      // and body is the empty byte sequence as a body.

      // Otherwise, return a network error.
      return Promise.resolve(makeNetworkError('about scheme is not supported'))
    }
    case 'blob:': {
      if (!resolveObjectURL) {
        resolveObjectURL = (__webpack_require__(/*! buffer */ "buffer").resolveObjectURL)
      }

      // 1. Let blobURLEntry be request’s current URL’s blob URL entry.
      const blobURLEntry = requestCurrentURL(request)

      // https://github.com/web-platform-tests/wpt/blob/7b0ebaccc62b566a1965396e5be7bb2bc06f841f/FileAPI/url/resources/fetch-tests.js#L52-L56
      // Buffer.resolveObjectURL does not ignore URL queries.
      if (blobURLEntry.search.length !== 0) {
        return Promise.resolve(makeNetworkError('NetworkError when attempting to fetch resource.'))
      }

      const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString())

      // 2. If request’s method is not `GET`, blobURLEntry is null, or blobURLEntry’s
      //    object is not a Blob object, then return a network error.
      if (request.method !== 'GET' || !isBlobLike(blobURLEntryObject)) {
        return Promise.resolve(makeNetworkError('invalid method'))
      }

      // 3. Let bodyWithType be the result of safely extracting blobURLEntry’s object.
      const bodyWithType = safelyExtractBody(blobURLEntryObject)

      // 4. Let body be bodyWithType’s body.
      const body = bodyWithType[0]

      // 5. Let length be body’s length, serialized and isomorphic encoded.
      const length = isomorphicEncode(`${body.length}`)

      // 6. Let type be bodyWithType’s type if it is non-null; otherwise the empty byte sequence.
      const type = bodyWithType[1] ?? ''

      // 7. Return a new response whose status message is `OK`, header list is
      //    « (`Content-Length`, length), (`Content-Type`, type) », and body is body.
      const response = makeResponse({
        statusText: 'OK',
        headersList: [
          ['content-length', { name: 'Content-Length', value: length }],
          ['content-type', { name: 'Content-Type', value: type }]
        ]
      })

      response.body = body

      return Promise.resolve(response)
    }
    case 'data:': {
      // 1. Let dataURLStruct be the result of running the
      //    data: URL processor on request’s current URL.
      const currentURL = requestCurrentURL(request)
      const dataURLStruct = dataURLProcessor(currentURL)

      // 2. If dataURLStruct is failure, then return a
      //    network error.
      if (dataURLStruct === 'failure') {
        return Promise.resolve(makeNetworkError('failed to fetch the data URL'))
      }

      // 3. Let mimeType be dataURLStruct’s MIME type, serialized.
      const mimeType = serializeAMimeType(dataURLStruct.mimeType)

      // 4. Return a response whose status message is `OK`,
      //    header list is « (`Content-Type`, mimeType) »,
      //    and body is dataURLStruct’s body as a body.
      return Promise.resolve(makeResponse({
        statusText: 'OK',
        headersList: [
          ['content-type', { name: 'Content-Type', value: mimeType }]
        ],
        body: safelyExtractBody(dataURLStruct.body)[0]
      }))
    }
    case 'file:': {
      // For now, unfortunate as it is, file URLs are left as an exercise for the reader.
      // When in doubt, return a network error.
      return Promise.resolve(makeNetworkError('not implemented... yet...'))
    }
    case 'http:':
    case 'https:': {
      // Return the result of running HTTP fetch given fetchParams.

      return httpFetch(fetchParams)
        .catch((err) => makeNetworkError(err))
    }
    default: {
      return Promise.resolve(makeNetworkError('unknown scheme'))
    }
  }
}

// https://fetch.spec.whatwg.org/#finalize-response
function finalizeResponse (fetchParams, response) {
  // 1. Set fetchParams’s request’s done flag.
  fetchParams.request.done = true

  // 2, If fetchParams’s process response done is not null, then queue a fetch
  // task to run fetchParams’s process response done given response, with
  // fetchParams’s task destination.
  if (fetchParams.processResponseDone != null) {
    queueMicrotask(() => fetchParams.processResponseDone(response))
  }
}

// https://fetch.spec.whatwg.org/#fetch-finale
function fetchFinale (fetchParams, response) {
  // 1. If response is a network error, then:
  if (response.type === 'error') {
    // 1. Set response’s URL list to « fetchParams’s request’s URL list[0] ».
    response.urlList = [fetchParams.request.urlList[0]]

    // 2. Set response’s timing info to the result of creating an opaque timing
    // info for fetchParams’s timing info.
    response.timingInfo = createOpaqueTimingInfo({
      startTime: fetchParams.timingInfo.startTime
    })
  }

  // 2. Let processResponseEndOfBody be the following steps:
  const processResponseEndOfBody = () => {
    // 1. Set fetchParams’s request’s done flag.
    fetchParams.request.done = true

    // If fetchParams’s process response end-of-body is not null,
    // then queue a fetch task to run fetchParams’s process response
    // end-of-body given response with fetchParams’s task destination.
    if (fetchParams.processResponseEndOfBody != null) {
      queueMicrotask(() => fetchParams.processResponseEndOfBody(response))
    }
  }

  // 3. If fetchParams’s process response is non-null, then queue a fetch task
  // to run fetchParams’s process response given response, with fetchParams’s
  // task destination.
  if (fetchParams.processResponse != null) {
    queueMicrotask(() => fetchParams.processResponse(response))
  }

  // 4. If response’s body is null, then run processResponseEndOfBody.
  if (response.body == null) {
    processResponseEndOfBody()
  } else {
  // 5. Otherwise:

    // 1. Let transformStream be a new a TransformStream.

    // 2. Let identityTransformAlgorithm be an algorithm which, given chunk,
    // enqueues chunk in transformStream.
    const identityTransformAlgorithm = (chunk, controller) => {
      controller.enqueue(chunk)
    }

    // 3. Set up transformStream with transformAlgorithm set to identityTransformAlgorithm
    // and flushAlgorithm set to processResponseEndOfBody.
    const transformStream = new TransformStream({
      start () {},
      transform: identityTransformAlgorithm,
      flush: processResponseEndOfBody
    }, {
      size () {
        return 1
      }
    }, {
      size () {
        return 1
      }
    })

    // 4. Set response’s body to the result of piping response’s body through transformStream.
    response.body = { stream: response.body.stream.pipeThrough(transformStream) }
  }

  // 6. If fetchParams’s process response consume body is non-null, then:
  if (fetchParams.processResponseConsumeBody != null) {
    // 1. Let processBody given nullOrBytes be this step: run fetchParams’s
    // process response consume body given response and nullOrBytes.
    const processBody = (nullOrBytes) => fetchParams.processResponseConsumeBody(response, nullOrBytes)

    // 2. Let processBodyError be this step: run fetchParams’s process
    // response consume body given response and failure.
    const processBodyError = (failure) => fetchParams.processResponseConsumeBody(response, failure)

    // 3. If response’s body is null, then queue a fetch task to run processBody
    // given null, with fetchParams’s task destination.
    if (response.body == null) {
      queueMicrotask(() => processBody(null))
    } else {
      // 4. Otherwise, fully read response’s body given processBody, processBodyError,
      // and fetchParams’s task destination.
      return fullyReadBody(response.body, processBody, processBodyError)
    }
    return Promise.resolve()
  }
}

// https://fetch.spec.whatwg.org/#http-fetch
async function httpFetch (fetchParams) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let response be null.
  let response = null

  // 3. Let actualResponse be null.
  let actualResponse = null

  // 4. Let timingInfo be fetchParams’s timing info.
  const timingInfo = fetchParams.timingInfo

  // 5. If request’s service-workers mode is "all", then:
  if (request.serviceWorkers === 'all') {
    // TODO
  }

  // 6. If response is null, then:
  if (response === null) {
    // 1. If makeCORSPreflight is true and one of these conditions is true:
    // TODO

    // 2. If request’s redirect mode is "follow", then set request’s
    // service-workers mode to "none".
    if (request.redirect === 'follow') {
      request.serviceWorkers = 'none'
    }

    // 3. Set response and actualResponse to the result of running
    // HTTP-network-or-cache fetch given fetchParams.
    actualResponse = response = await httpNetworkOrCacheFetch(fetchParams)

    // 4. If request’s response tainting is "cors" and a CORS check
    // for request and response returns failure, then return a network error.
    if (
      request.responseTainting === 'cors' &&
      corsCheck(request, response) === 'failure'
    ) {
      return makeNetworkError('cors failure')
    }

    // 5. If the TAO check for request and response returns failure, then set
    // request’s timing allow failed flag.
    if (TAOCheck(request, response) === 'failure') {
      request.timingAllowFailed = true
    }
  }

  // 7. If either request’s response tainting or response’s type
  // is "opaque", and the cross-origin resource policy check with
  // request’s origin, request’s client, request’s destination,
  // and actualResponse returns blocked, then return a network error.
  if (
    (request.responseTainting === 'opaque' || response.type === 'opaque') &&
    crossOriginResourcePolicyCheck(
      request.origin,
      request.client,
      request.destination,
      actualResponse
    ) === 'blocked'
  ) {
    return makeNetworkError('blocked')
  }

  // 8. If actualResponse’s status is a redirect status, then:
  if (redirectStatusSet.has(actualResponse.status)) {
    // 1. If actualResponse’s status is not 303, request’s body is not null,
    // and the connection uses HTTP/2, then user agents may, and are even
    // encouraged to, transmit an RST_STREAM frame.
    // See, https://github.com/whatwg/fetch/issues/1288
    if (request.redirect !== 'manual') {
      fetchParams.controller.connection.destroy()
    }

    // 2. Switch on request’s redirect mode:
    if (request.redirect === 'error') {
      // Set response to a network error.
      response = makeNetworkError('unexpected redirect')
    } else if (request.redirect === 'manual') {
      // Set response to an opaque-redirect filtered response whose internal
      // response is actualResponse.
      // NOTE(spec): On the web this would return an `opaqueredirect` response,
      // but that doesn't make sense server side.
      // See https://github.com/nodejs/undici/issues/1193.
      response = actualResponse
    } else if (request.redirect === 'follow') {
      // Set response to the result of running HTTP-redirect fetch given
      // fetchParams and response.
      response = await httpRedirectFetch(fetchParams, response)
    } else {
      assert(false)
    }
  }

  // 9. Set response’s timing info to timingInfo.
  response.timingInfo = timingInfo

  // 10. Return response.
  return response
}

// https://fetch.spec.whatwg.org/#http-redirect-fetch
function httpRedirectFetch (fetchParams, response) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let actualResponse be response, if response is not a filtered response,
  // and response’s internal response otherwise.
  const actualResponse = response.internalResponse
    ? response.internalResponse
    : response

  // 3. Let locationURL be actualResponse’s location URL given request’s current
  // URL’s fragment.
  let locationURL

  try {
    locationURL = responseLocationURL(
      actualResponse,
      requestCurrentURL(request).hash
    )

    // 4. If locationURL is null, then return response.
    if (locationURL == null) {
      return response
    }
  } catch (err) {
    // 5. If locationURL is failure, then return a network error.
    return Promise.resolve(makeNetworkError(err))
  }

  // 6. If locationURL’s scheme is not an HTTP(S) scheme, then return a network
  // error.
  if (!urlIsHttpHttpsScheme(locationURL)) {
    return Promise.resolve(makeNetworkError('URL scheme must be a HTTP(S) scheme'))
  }

  // 7. If request’s redirect count is 20, then return a network error.
  if (request.redirectCount === 20) {
    return Promise.resolve(makeNetworkError('redirect count exceeded'))
  }

  // 8. Increase request’s redirect count by 1.
  request.redirectCount += 1

  // 9. If request’s mode is "cors", locationURL includes credentials, and
  // request’s origin is not same origin with locationURL’s origin, then return
  //  a network error.
  if (
    request.mode === 'cors' &&
    (locationURL.username || locationURL.password) &&
    !sameOrigin(request, locationURL)
  ) {
    return Promise.resolve(makeNetworkError('cross origin not allowed for request mode "cors"'))
  }

  // 10. If request’s response tainting is "cors" and locationURL includes
  // credentials, then return a network error.
  if (
    request.responseTainting === 'cors' &&
    (locationURL.username || locationURL.password)
  ) {
    return Promise.resolve(makeNetworkError(
      'URL cannot contain credentials for request mode "cors"'
    ))
  }

  // 11. If actualResponse’s status is not 303, request’s body is non-null,
  // and request’s body’s source is null, then return a network error.
  if (
    actualResponse.status !== 303 &&
    request.body != null &&
    request.body.source == null
  ) {
    return Promise.resolve(makeNetworkError())
  }

  // 12. If one of the following is true
  // - actualResponse’s status is 301 or 302 and request’s method is `POST`
  // - actualResponse’s status is 303 and request’s method is not `GET` or `HEAD`
  if (
    ([301, 302].includes(actualResponse.status) && request.method === 'POST') ||
    (actualResponse.status === 303 &&
      !GET_OR_HEAD.includes(request.method))
  ) {
    // then:
    // 1. Set request’s method to `GET` and request’s body to null.
    request.method = 'GET'
    request.body = null

    // 2. For each headerName of request-body-header name, delete headerName from
    // request’s header list.
    for (const headerName of requestBodyHeader) {
      request.headersList.delete(headerName)
    }
  }

  // 13. If request’s current URL’s origin is not same origin with locationURL’s
  //     origin, then for each headerName of CORS non-wildcard request-header name,
  //     delete headerName from request’s header list.
  if (!sameOrigin(requestCurrentURL(request), locationURL)) {
    // https://fetch.spec.whatwg.org/#cors-non-wildcard-request-header-name
    request.headersList.delete('authorization')

    // https://fetch.spec.whatwg.org/#authentication-entries
    request.headersList.delete('proxy-authorization', true)

    // "Cookie" and "Host" are forbidden request-headers, which undici doesn't implement.
    request.headersList.delete('cookie')
    request.headersList.delete('host')
  }

  // 14. If request’s body is non-null, then set request’s body to the first return
  // value of safely extracting request’s body’s source.
  if (request.body != null) {
    assert(request.body.source != null)
    request.body = safelyExtractBody(request.body.source)[0]
  }

  // 15. Let timingInfo be fetchParams’s timing info.
  const timingInfo = fetchParams.timingInfo

  // 16. Set timingInfo’s redirect end time and post-redirect start time to the
  // coarsened shared current time given fetchParams’s cross-origin isolated
  // capability.
  timingInfo.redirectEndTime = timingInfo.postRedirectStartTime =
    coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability)

  // 17. If timingInfo’s redirect start time is 0, then set timingInfo’s
  //  redirect start time to timingInfo’s start time.
  if (timingInfo.redirectStartTime === 0) {
    timingInfo.redirectStartTime = timingInfo.startTime
  }

  // 18. Append locationURL to request’s URL list.
  request.urlList.push(locationURL)

  // 19. Invoke set request’s referrer policy on redirect on request and
  // actualResponse.
  setRequestReferrerPolicyOnRedirect(request, actualResponse)

  // 20. Return the result of running main fetch given fetchParams and true.
  return mainFetch(fetchParams, true)
}

// https://fetch.spec.whatwg.org/#http-network-or-cache-fetch
async function httpNetworkOrCacheFetch (
  fetchParams,
  isAuthenticationFetch = false,
  isNewConnectionFetch = false
) {
  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let httpFetchParams be null.
  let httpFetchParams = null

  // 3. Let httpRequest be null.
  let httpRequest = null

  // 4. Let response be null.
  let response = null

  // 5. Let storedResponse be null.
  // TODO: cache

  // 6. Let httpCache be null.
  const httpCache = null

  // 7. Let the revalidatingFlag be unset.
  const revalidatingFlag = false

  // 8. Run these steps, but abort when the ongoing fetch is terminated:

  //    1. If request’s window is "no-window" and request’s redirect mode is
  //    "error", then set httpFetchParams to fetchParams and httpRequest to
  //    request.
  if (request.window === 'no-window' && request.redirect === 'error') {
    httpFetchParams = fetchParams
    httpRequest = request
  } else {
    // Otherwise:

    // 1. Set httpRequest to a clone of request.
    httpRequest = makeRequest(request)

    // 2. Set httpFetchParams to a copy of fetchParams.
    httpFetchParams = { ...fetchParams }

    // 3. Set httpFetchParams’s request to httpRequest.
    httpFetchParams.request = httpRequest
  }

  //    3. Let includeCredentials be true if one of
  const includeCredentials =
    request.credentials === 'include' ||
    (request.credentials === 'same-origin' &&
      request.responseTainting === 'basic')

  //    4. Let contentLength be httpRequest’s body’s length, if httpRequest’s
  //    body is non-null; otherwise null.
  const contentLength = httpRequest.body ? httpRequest.body.length : null

  //    5. Let contentLengthHeaderValue be null.
  let contentLengthHeaderValue = null

  //    6. If httpRequest’s body is null and httpRequest’s method is `POST` or
  //    `PUT`, then set contentLengthHeaderValue to `0`.
  if (
    httpRequest.body == null &&
    ['POST', 'PUT'].includes(httpRequest.method)
  ) {
    contentLengthHeaderValue = '0'
  }

  //    7. If contentLength is non-null, then set contentLengthHeaderValue to
  //    contentLength, serialized and isomorphic encoded.
  if (contentLength != null) {
    contentLengthHeaderValue = isomorphicEncode(`${contentLength}`)
  }

  //    8. If contentLengthHeaderValue is non-null, then append
  //    `Content-Length`/contentLengthHeaderValue to httpRequest’s header
  //    list.
  if (contentLengthHeaderValue != null) {
    httpRequest.headersList.append('content-length', contentLengthHeaderValue)
  }

  //    9. If contentLengthHeaderValue is non-null, then append (`Content-Length`,
  //    contentLengthHeaderValue) to httpRequest’s header list.

  //    10. If contentLength is non-null and httpRequest’s keepalive is true,
  //    then:
  if (contentLength != null && httpRequest.keepalive) {
    // NOTE: keepalive is a noop outside of browser context.
  }

  //    11. If httpRequest’s referrer is a URL, then append
  //    `Referer`/httpRequest’s referrer, serialized and isomorphic encoded,
  //     to httpRequest’s header list.
  if (httpRequest.referrer instanceof URL) {
    httpRequest.headersList.append('referer', isomorphicEncode(httpRequest.referrer.href))
  }

  //    12. Append a request `Origin` header for httpRequest.
  appendRequestOriginHeader(httpRequest)

  //    13. Append the Fetch metadata headers for httpRequest. [FETCH-METADATA]
  appendFetchMetadata(httpRequest)

  //    14. If httpRequest’s header list does not contain `User-Agent`, then
  //    user agents should append `User-Agent`/default `User-Agent` value to
  //    httpRequest’s header list.
  if (!httpRequest.headersList.contains('user-agent')) {
    httpRequest.headersList.append('user-agent', typeof esbuildDetection === 'undefined' ? 'undici' : 'node')
  }

  //    15. If httpRequest’s cache mode is "default" and httpRequest’s header
  //    list contains `If-Modified-Since`, `If-None-Match`,
  //    `If-Unmodified-Since`, `If-Match`, or `If-Range`, then set
  //    httpRequest’s cache mode to "no-store".
  if (
    httpRequest.cache === 'default' &&
    (httpRequest.headersList.contains('if-modified-since') ||
      httpRequest.headersList.contains('if-none-match') ||
      httpRequest.headersList.contains('if-unmodified-since') ||
      httpRequest.headersList.contains('if-match') ||
      httpRequest.headersList.contains('if-range'))
  ) {
    httpRequest.cache = 'no-store'
  }

  //    16. If httpRequest’s cache mode is "no-cache", httpRequest’s prevent
  //    no-cache cache-control header modification flag is unset, and
  //    httpRequest’s header list does not contain `Cache-Control`, then append
  //    `Cache-Control`/`max-age=0` to httpRequest’s header list.
  if (
    httpRequest.cache === 'no-cache' &&
    !httpRequest.preventNoCacheCacheControlHeaderModification &&
    !httpRequest.headersList.contains('cache-control')
  ) {
    httpRequest.headersList.append('cache-control', 'max-age=0')
  }

  //    17. If httpRequest’s cache mode is "no-store" or "reload", then:
  if (httpRequest.cache === 'no-store' || httpRequest.cache === 'reload') {
    // 1. If httpRequest’s header list does not contain `Pragma`, then append
    // `Pragma`/`no-cache` to httpRequest’s header list.
    if (!httpRequest.headersList.contains('pragma')) {
      httpRequest.headersList.append('pragma', 'no-cache')
    }

    // 2. If httpRequest’s header list does not contain `Cache-Control`,
    // then append `Cache-Control`/`no-cache` to httpRequest’s header list.
    if (!httpRequest.headersList.contains('cache-control')) {
      httpRequest.headersList.append('cache-control', 'no-cache')
    }
  }

  //    18. If httpRequest’s header list contains `Range`, then append
  //    `Accept-Encoding`/`identity` to httpRequest’s header list.
  if (httpRequest.headersList.contains('range')) {
    httpRequest.headersList.append('accept-encoding', 'identity')
  }

  //    19. Modify httpRequest’s header list per HTTP. Do not append a given
  //    header if httpRequest’s header list contains that header’s name.
  //    TODO: https://github.com/whatwg/fetch/issues/1285#issuecomment-896560129
  if (!httpRequest.headersList.contains('accept-encoding')) {
    if (urlHasHttpsScheme(requestCurrentURL(httpRequest))) {
      httpRequest.headersList.append('accept-encoding', 'br, gzip, deflate')
    } else {
      httpRequest.headersList.append('accept-encoding', 'gzip, deflate')
    }
  }

  httpRequest.headersList.delete('host')

  //    20. If includeCredentials is true, then:
  if (includeCredentials) {
    // 1. If the user agent is not configured to block cookies for httpRequest
    // (see section 7 of [COOKIES]), then:
    // TODO: credentials
    // 2. If httpRequest’s header list does not contain `Authorization`, then:
    // TODO: credentials
  }

  //    21. If there’s a proxy-authentication entry, use it as appropriate.
  //    TODO: proxy-authentication

  //    22. Set httpCache to the result of determining the HTTP cache
  //    partition, given httpRequest.
  //    TODO: cache

  //    23. If httpCache is null, then set httpRequest’s cache mode to
  //    "no-store".
  if (httpCache == null) {
    httpRequest.cache = 'no-store'
  }

  //    24. If httpRequest’s cache mode is neither "no-store" nor "reload",
  //    then:
  if (httpRequest.mode !== 'no-store' && httpRequest.mode !== 'reload') {
    // TODO: cache
  }

  // 9. If aborted, then return the appropriate network error for fetchParams.
  // TODO

  // 10. If response is null, then:
  if (response == null) {
    // 1. If httpRequest’s cache mode is "only-if-cached", then return a
    // network error.
    if (httpRequest.mode === 'only-if-cached') {
      return makeNetworkError('only if cached')
    }

    // 2. Let forwardResponse be the result of running HTTP-network fetch
    // given httpFetchParams, includeCredentials, and isNewConnectionFetch.
    const forwardResponse = await httpNetworkFetch(
      httpFetchParams,
      includeCredentials,
      isNewConnectionFetch
    )

    // 3. If httpRequest’s method is unsafe and forwardResponse’s status is
    // in the range 200 to 399, inclusive, invalidate appropriate stored
    // responses in httpCache, as per the "Invalidation" chapter of HTTP
    // Caching, and set storedResponse to null. [HTTP-CACHING]
    if (
      !safeMethodsSet.has(httpRequest.method) &&
      forwardResponse.status >= 200 &&
      forwardResponse.status <= 399
    ) {
      // TODO: cache
    }

    // 4. If the revalidatingFlag is set and forwardResponse’s status is 304,
    // then:
    if (revalidatingFlag && forwardResponse.status === 304) {
      // TODO: cache
    }

    // 5. If response is null, then:
    if (response == null) {
      // 1. Set response to forwardResponse.
      response = forwardResponse

      // 2. Store httpRequest and forwardResponse in httpCache, as per the
      // "Storing Responses in Caches" chapter of HTTP Caching. [HTTP-CACHING]
      // TODO: cache
    }
  }

  // 11. Set response’s URL list to a clone of httpRequest’s URL list.
  response.urlList = [...httpRequest.urlList]

  // 12. If httpRequest’s header list contains `Range`, then set response’s
  // range-requested flag.
  if (httpRequest.headersList.contains('range')) {
    response.rangeRequested = true
  }

  // 13. Set response’s request-includes-credentials to includeCredentials.
  response.requestIncludesCredentials = includeCredentials

  // 14. If response’s status is 401, httpRequest’s response tainting is not
  // "cors", includeCredentials is true, and request’s window is an environment
  // settings object, then:
  // TODO

  // 15. If response’s status is 407, then:
  if (response.status === 407) {
    // 1. If request’s window is "no-window", then return a network error.
    if (request.window === 'no-window') {
      return makeNetworkError()
    }

    // 2. ???

    // 3. If fetchParams is canceled, then return the appropriate network error for fetchParams.
    if (isCancelled(fetchParams)) {
      return makeAppropriateNetworkError(fetchParams)
    }

    // 4. Prompt the end user as appropriate in request’s window and store
    // the result as a proxy-authentication entry. [HTTP-AUTH]
    // TODO: Invoke some kind of callback?

    // 5. Set response to the result of running HTTP-network-or-cache fetch given
    // fetchParams.
    // TODO
    return makeNetworkError('proxy authentication required')
  }

  // 16. If all of the following are true
  if (
    // response’s status is 421
    response.status === 421 &&
    // isNewConnectionFetch is false
    !isNewConnectionFetch &&
    // request’s body is null, or request’s body is non-null and request’s body’s source is non-null
    (request.body == null || request.body.source != null)
  ) {
    // then:

    // 1. If fetchParams is canceled, then return the appropriate network error for fetchParams.
    if (isCancelled(fetchParams)) {
      return makeAppropriateNetworkError(fetchParams)
    }

    // 2. Set response to the result of running HTTP-network-or-cache
    // fetch given fetchParams, isAuthenticationFetch, and true.

    // TODO (spec): The spec doesn't specify this but we need to cancel
    // the active response before we can start a new one.
    // https://github.com/whatwg/fetch/issues/1293
    fetchParams.controller.connection.destroy()

    response = await httpNetworkOrCacheFetch(
      fetchParams,
      isAuthenticationFetch,
      true
    )
  }

  // 17. If isAuthenticationFetch is true, then create an authentication entry
  if (isAuthenticationFetch) {
    // TODO
  }

  // 18. Return response.
  return response
}

// https://fetch.spec.whatwg.org/#http-network-fetch
async function httpNetworkFetch (
  fetchParams,
  includeCredentials = false,
  forceNewConnection = false
) {
  assert(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed)

  fetchParams.controller.connection = {
    abort: null,
    destroyed: false,
    destroy (err) {
      if (!this.destroyed) {
        this.destroyed = true
        this.abort?.(err ?? new DOMException('The operation was aborted.', 'AbortError'))
      }
    }
  }

  // 1. Let request be fetchParams’s request.
  const request = fetchParams.request

  // 2. Let response be null.
  let response = null

  // 3. Let timingInfo be fetchParams’s timing info.
  const timingInfo = fetchParams.timingInfo

  // 4. Let httpCache be the result of determining the HTTP cache partition,
  // given request.
  // TODO: cache
  const httpCache = null

  // 5. If httpCache is null, then set request’s cache mode to "no-store".
  if (httpCache == null) {
    request.cache = 'no-store'
  }

  // 6. Let networkPartitionKey be the result of determining the network
  // partition key given request.
  // TODO

  // 7. Let newConnection be "yes" if forceNewConnection is true; otherwise
  // "no".
  const newConnection = forceNewConnection ? 'yes' : 'no' // eslint-disable-line no-unused-vars

  // 8. Switch on request’s mode:
  if (request.mode === 'websocket') {
    // Let connection be the result of obtaining a WebSocket connection,
    // given request’s current URL.
    // TODO
  } else {
    // Let connection be the result of obtaining a connection, given
    // networkPartitionKey, request’s current URL’s origin,
    // includeCredentials, and forceNewConnection.
    // TODO
  }

  // 9. Run these steps, but abort when the ongoing fetch is terminated:

  //    1. If connection is failure, then return a network error.

  //    2. Set timingInfo’s final connection timing info to the result of
  //    calling clamp and coarsen connection timing info with connection’s
  //    timing info, timingInfo’s post-redirect start time, and fetchParams’s
  //    cross-origin isolated capability.

  //    3. If connection is not an HTTP/2 connection, request’s body is non-null,
  //    and request’s body’s source is null, then append (`Transfer-Encoding`,
  //    `chunked`) to request’s header list.

  //    4. Set timingInfo’s final network-request start time to the coarsened
  //    shared current time given fetchParams’s cross-origin isolated
  //    capability.

  //    5. Set response to the result of making an HTTP request over connection
  //    using request with the following caveats:

  //        - Follow the relevant requirements from HTTP. [HTTP] [HTTP-SEMANTICS]
  //        [HTTP-COND] [HTTP-CACHING] [HTTP-AUTH]

  //        - If request’s body is non-null, and request’s body’s source is null,
  //        then the user agent may have a buffer of up to 64 kibibytes and store
  //        a part of request’s body in that buffer. If the user agent reads from
  //        request’s body beyond that buffer’s size and the user agent needs to
  //        resend request, then instead return a network error.

  //        - Set timingInfo’s final network-response start time to the coarsened
  //        shared current time given fetchParams’s cross-origin isolated capability,
  //        immediately after the user agent’s HTTP parser receives the first byte
  //        of the response (e.g., frame header bytes for HTTP/2 or response status
  //        line for HTTP/1.x).

  //        - Wait until all the headers are transmitted.

  //        - Any responses whose status is in the range 100 to 199, inclusive,
  //        and is not 101, are to be ignored, except for the purposes of setting
  //        timingInfo’s final network-response start time above.

  //    - If request’s header list contains `Transfer-Encoding`/`chunked` and
  //    response is transferred via HTTP/1.0 or older, then return a network
  //    error.

  //    - If the HTTP request results in a TLS client certificate dialog, then:

  //        1. If request’s window is an environment settings object, make the
  //        dialog available in request’s window.

  //        2. Otherwise, return a network error.

  // To transmit request’s body body, run these steps:
  let requestBody = null
  // 1. If body is null and fetchParams’s process request end-of-body is
  // non-null, then queue a fetch task given fetchParams’s process request
  // end-of-body and fetchParams’s task destination.
  if (request.body == null && fetchParams.processRequestEndOfBody) {
    queueMicrotask(() => fetchParams.processRequestEndOfBody())
  } else if (request.body != null) {
    // 2. Otherwise, if body is non-null:

    //    1. Let processBodyChunk given bytes be these steps:
    const processBodyChunk = async function * (bytes) {
      // 1. If the ongoing fetch is terminated, then abort these steps.
      if (isCancelled(fetchParams)) {
        return
      }

      // 2. Run this step in parallel: transmit bytes.
      yield bytes

      // 3. If fetchParams’s process request body is non-null, then run
      // fetchParams’s process request body given bytes’s length.
      fetchParams.processRequestBodyChunkLength?.(bytes.byteLength)
    }

    // 2. Let processEndOfBody be these steps:
    const processEndOfBody = () => {
      // 1. If fetchParams is canceled, then abort these steps.
      if (isCancelled(fetchParams)) {
        return
      }

      // 2. If fetchParams’s process request end-of-body is non-null,
      // then run fetchParams’s process request end-of-body.
      if (fetchParams.processRequestEndOfBody) {
        fetchParams.processRequestEndOfBody()
      }
    }

    // 3. Let processBodyError given e be these steps:
    const processBodyError = (e) => {
      // 1. If fetchParams is canceled, then abort these steps.
      if (isCancelled(fetchParams)) {
        return
      }

      // 2. If e is an "AbortError" DOMException, then abort fetchParams’s controller.
      if (e.name === 'AbortError') {
        fetchParams.controller.abort()
      } else {
        fetchParams.controller.terminate(e)
      }
    }

    // 4. Incrementally read request’s body given processBodyChunk, processEndOfBody,
    // processBodyError, and fetchParams’s task destination.
    requestBody = (async function * () {
      try {
        for await (const bytes of request.body.stream) {
          yield * processBodyChunk(bytes)
        }
        processEndOfBody()
      } catch (err) {
        processBodyError(err)
      }
    })()
  }

  try {
    // socket is only provided for websockets
    const { body, status, statusText, headersList, socket } = await dispatch({ body: requestBody })

    if (socket) {
      response = makeResponse({ status, statusText, headersList, socket })
    } else {
      const iterator = body[Symbol.asyncIterator]()
      fetchParams.controller.next = () => iterator.next()

      response = makeResponse({ status, statusText, headersList })
    }
  } catch (err) {
    // 10. If aborted, then:
    if (err.name === 'AbortError') {
      // 1. If connection uses HTTP/2, then transmit an RST_STREAM frame.
      fetchParams.controller.connection.destroy()

      // 2. Return the appropriate network error for fetchParams.
      return makeAppropriateNetworkError(fetchParams, err)
    }

    return makeNetworkError(err)
  }

  // 11. Let pullAlgorithm be an action that resumes the ongoing fetch
  // if it is suspended.
  const pullAlgorithm = () => {
    fetchParams.controller.resume()
  }

  // 12. Let cancelAlgorithm be an algorithm that aborts fetchParams’s
  // controller with reason, given reason.
  const cancelAlgorithm = (reason) => {
    fetchParams.controller.abort(reason)
  }

  // 13. Let highWaterMark be a non-negative, non-NaN number, chosen by
  // the user agent.
  // TODO

  // 14. Let sizeAlgorithm be an algorithm that accepts a chunk object
  // and returns a non-negative, non-NaN, non-infinite number, chosen by the user agent.
  // TODO

  // 15. Let stream be a new ReadableStream.
  // 16. Set up stream with pullAlgorithm set to pullAlgorithm,
  // cancelAlgorithm set to cancelAlgorithm, highWaterMark set to
  // highWaterMark, and sizeAlgorithm set to sizeAlgorithm.
  if (!ReadableStream) {
    ReadableStream = (__webpack_require__(/*! stream/web */ "stream/web").ReadableStream)
  }

  const stream = new ReadableStream(
    {
      async start (controller) {
        fetchParams.controller.controller = controller
      },
      async pull (controller) {
        await pullAlgorithm(controller)
      },
      async cancel (reason) {
        await cancelAlgorithm(reason)
      }
    },
    {
      highWaterMark: 0,
      size () {
        return 1
      }
    }
  )

  // 17. Run these steps, but abort when the ongoing fetch is terminated:

  //    1. Set response’s body to a new body whose stream is stream.
  response.body = { stream }

  //    2. If response is not a network error and request’s cache mode is
  //    not "no-store", then update response in httpCache for request.
  //    TODO

  //    3. If includeCredentials is true and the user agent is not configured
  //    to block cookies for request (see section 7 of [COOKIES]), then run the
  //    "set-cookie-string" parsing algorithm (see section 5.2 of [COOKIES]) on
  //    the value of each header whose name is a byte-case-insensitive match for
  //    `Set-Cookie` in response’s header list, if any, and request’s current URL.
  //    TODO

  // 18. If aborted, then:
  // TODO

  // 19. Run these steps in parallel:

  //    1. Run these steps, but abort when fetchParams is canceled:
  fetchParams.controller.on('terminated', onAborted)
  fetchParams.controller.resume = async () => {
    // 1. While true
    while (true) {
      // 1-3. See onData...

      // 4. Set bytes to the result of handling content codings given
      // codings and bytes.
      let bytes
      let isFailure
      try {
        const { done, value } = await fetchParams.controller.next()

        if (isAborted(fetchParams)) {
          break
        }

        bytes = done ? undefined : value
      } catch (err) {
        if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {
          // zlib doesn't like empty streams.
          bytes = undefined
        } else {
          bytes = err

          // err may be propagated from the result of calling readablestream.cancel,
          // which might not be an error. https://github.com/nodejs/undici/issues/2009
          isFailure = true
        }
      }

      if (bytes === undefined) {
        // 2. Otherwise, if the bytes transmission for response’s message
        // body is done normally and stream is readable, then close
        // stream, finalize response for fetchParams and response, and
        // abort these in-parallel steps.
        readableStreamClose(fetchParams.controller.controller)

        finalizeResponse(fetchParams, response)

        return
      }

      // 5. Increase timingInfo’s decoded body size by bytes’s length.
      timingInfo.decodedBodySize += bytes?.byteLength ?? 0

      // 6. If bytes is failure, then terminate fetchParams’s controller.
      if (isFailure) {
        fetchParams.controller.terminate(bytes)
        return
      }

      // 7. Enqueue a Uint8Array wrapping an ArrayBuffer containing bytes
      // into stream.
      fetchParams.controller.controller.enqueue(new Uint8Array(bytes))

      // 8. If stream is errored, then terminate the ongoing fetch.
      if (isErrored(stream)) {
        fetchParams.controller.terminate()
        return
      }

      // 9. If stream doesn’t need more data ask the user agent to suspend
      // the ongoing fetch.
      if (!fetchParams.controller.controller.desiredSize) {
        return
      }
    }
  }

  //    2. If aborted, then:
  function onAborted (reason) {
    // 2. If fetchParams is aborted, then:
    if (isAborted(fetchParams)) {
      // 1. Set response’s aborted flag.
      response.aborted = true

      // 2. If stream is readable, then error stream with the result of
      //    deserialize a serialized abort reason given fetchParams’s
      //    controller’s serialized abort reason and an
      //    implementation-defined realm.
      if (isReadable(stream)) {
        fetchParams.controller.controller.error(
          fetchParams.controller.serializedAbortReason
        )
      }
    } else {
      // 3. Otherwise, if stream is readable, error stream with a TypeError.
      if (isReadable(stream)) {
        fetchParams.controller.controller.error(new TypeError('terminated', {
          cause: isErrorLike(reason) ? reason : undefined
        }))
      }
    }

    // 4. If connection uses HTTP/2, then transmit an RST_STREAM frame.
    // 5. Otherwise, the user agent should close connection unless it would be bad for performance to do so.
    fetchParams.controller.connection.destroy()
  }

  // 20. Return response.
  return response

  async function dispatch ({ body }) {
    const url = requestCurrentURL(request)
    /** @type {import('../..').Agent} */
    const agent = fetchParams.controller.dispatcher

    return new Promise((resolve, reject) => agent.dispatch(
      {
        path: url.pathname + url.search,
        origin: url.origin,
        method: request.method,
        body: fetchParams.controller.dispatcher.isMockActive ? request.body && (request.body.source || request.body.stream) : body,
        headers: request.headersList.entries,
        maxRedirections: 0,
        upgrade: request.mode === 'websocket' ? 'websocket' : undefined
      },
      {
        body: null,
        abort: null,

        onConnect (abort) {
          // TODO (fix): Do we need connection here?
          const { connection } = fetchParams.controller

          if (connection.destroyed) {
            abort(new DOMException('The operation was aborted.', 'AbortError'))
          } else {
            fetchParams.controller.on('terminated', abort)
            this.abort = connection.abort = abort
          }
        },

        onHeaders (status, headersList, resume, statusText) {
          if (status < 200) {
            return
          }

          let codings = []
          let location = ''

          const headers = new Headers()

          // For H2, the headers are a plain JS object
          // We distinguish between them and iterate accordingly
          if (Array.isArray(headersList)) {
            for (let n = 0; n < headersList.length; n += 2) {
              const key = headersList[n + 0].toString('latin1')
              const val = headersList[n + 1].toString('latin1')
              if (key.toLowerCase() === 'content-encoding') {
                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1
                // "All content-coding values are case-insensitive..."
                codings = val.toLowerCase().split(',').map((x) => x.trim())
              } else if (key.toLowerCase() === 'location') {
                location = val
              }

              headers[kHeadersList].append(key, val)
            }
          } else {
            const keys = Object.keys(headersList)
            for (const key of keys) {
              const val = headersList[key]
              if (key.toLowerCase() === 'content-encoding') {
                // https://www.rfc-editor.org/rfc/rfc7231#section-3.1.2.1
                // "All content-coding values are case-insensitive..."
                codings = val.toLowerCase().split(',').map((x) => x.trim()).reverse()
              } else if (key.toLowerCase() === 'location') {
                location = val
              }

              headers[kHeadersList].append(key, val)
            }
          }

          this.body = new Readable({ read: resume })

          const decoders = []

          const willFollow = request.redirect === 'follow' &&
            location &&
            redirectStatusSet.has(status)

          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding
          if (request.method !== 'HEAD' && request.method !== 'CONNECT' && !nullBodyStatus.includes(status) && !willFollow) {
            for (const coding of codings) {
              // https://www.rfc-editor.org/rfc/rfc9112.html#section-7.2
              if (coding === 'x-gzip' || coding === 'gzip') {
                decoders.push(zlib.createGunzip({
                  // Be less strict when decoding compressed responses, since sometimes
                  // servers send slightly invalid responses that are still accepted
                  // by common browsers.
                  // Always using Z_SYNC_FLUSH is what cURL does.
                  flush: zlib.constants.Z_SYNC_FLUSH,
                  finishFlush: zlib.constants.Z_SYNC_FLUSH
                }))
              } else if (coding === 'deflate') {
                decoders.push(zlib.createInflate())
              } else if (coding === 'br') {
                decoders.push(zlib.createBrotliDecompress())
              } else {
                decoders.length = 0
                break
              }
            }
          }

          resolve({
            status,
            statusText,
            headersList: headers[kHeadersList],
            body: decoders.length
              ? pipeline(this.body, ...decoders, () => { })
              : this.body.on('error', () => {})
          })

          return true
        },

        onData (chunk) {
          if (fetchParams.controller.dump) {
            return
          }

          // 1. If one or more bytes have been transmitted from response’s
          // message body, then:

          //  1. Let bytes be the transmitted bytes.
          const bytes = chunk

          //  2. Let codings be the result of extracting header list values
          //  given `Content-Encoding` and response’s header list.
          //  See pullAlgorithm.

          //  3. Increase timingInfo’s encoded body size by bytes’s length.
          timingInfo.encodedBodySize += bytes.byteLength

          //  4. See pullAlgorithm...

          return this.body.push(bytes)
        },

        onComplete () {
          if (this.abort) {
            fetchParams.controller.off('terminated', this.abort)
          }

          fetchParams.controller.ended = true

          this.body.push(null)
        },

        onError (error) {
          if (this.abort) {
            fetchParams.controller.off('terminated', this.abort)
          }

          this.body?.destroy(error)

          fetchParams.controller.terminate(error)

          reject(error)
        },

        onUpgrade (status, headersList, socket) {
          if (status !== 101) {
            return
          }

          const headers = new Headers()

          for (let n = 0; n < headersList.length; n += 2) {
            const key = headersList[n + 0].toString('latin1')
            const val = headersList[n + 1].toString('latin1')

            headers[kHeadersList].append(key, val)
          }

          resolve({
            status,
            statusText: STATUS_CODES[status],
            headersList: headers[kHeadersList],
            socket
          })

          return true
        }
      }
    ))
  }
}

module.exports = {
  fetch,
  Fetch,
  fetching,
  finalizeAndReportTiming
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/request.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/request.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* globals AbortController */



const { extractBody, mixinBody, cloneBody } = __webpack_require__(/*! ./body */ "../../node_modules/undici/lib/fetch/body.js")
const { Headers, fill: fillHeaders, HeadersList } = __webpack_require__(/*! ./headers */ "../../node_modules/undici/lib/fetch/headers.js")
const { FinalizationRegistry } = __webpack_require__(/*! ../compat/dispatcher-weakref */ "../../node_modules/undici/lib/compat/dispatcher-weakref.js")()
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const {
  isValidHTTPToken,
  sameOrigin,
  normalizeMethod,
  makePolicyContainer,
  normalizeMethodRecord
} = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")
const {
  forbiddenMethodsSet,
  corsSafeListedMethodsSet,
  referrerPolicy,
  requestRedirect,
  requestMode,
  requestCredentials,
  requestCache,
  requestDuplex
} = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/fetch/constants.js")
const { kEnumerableProperty } = util
const { kHeaders, kSignal, kState, kGuard, kRealm } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const { webidl } = __webpack_require__(/*! ./webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { getGlobalOrigin } = __webpack_require__(/*! ./global */ "../../node_modules/undici/lib/fetch/global.js")
const { URLSerializer } = __webpack_require__(/*! ./dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const { kHeadersList, kConstruct } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { getMaxListeners, setMaxListeners, getEventListeners, defaultMaxListeners } = __webpack_require__(/*! events */ "events")

let TransformStream = globalThis.TransformStream

const kAbortController = Symbol('abortController')

const requestFinalizer = new FinalizationRegistry(({ signal, abort }) => {
  signal.removeEventListener('abort', abort)
})

// https://fetch.spec.whatwg.org/#request-class
class Request {
  // https://fetch.spec.whatwg.org/#dom-request
  constructor (input, init = {}) {
    if (input === kConstruct) {
      return
    }

    webidl.argumentLengthCheck(arguments, 1, { header: 'Request constructor' })

    input = webidl.converters.RequestInfo(input)
    init = webidl.converters.RequestInit(init)

    // https://html.spec.whatwg.org/multipage/webappapis.html#environment-settings-object
    this[kRealm] = {
      settingsObject: {
        baseUrl: getGlobalOrigin(),
        get origin () {
          return this.baseUrl?.origin
        },
        policyContainer: makePolicyContainer()
      }
    }

    // 1. Let request be null.
    let request = null

    // 2. Let fallbackMode be null.
    let fallbackMode = null

    // 3. Let baseURL be this’s relevant settings object’s API base URL.
    const baseUrl = this[kRealm].settingsObject.baseUrl

    // 4. Let signal be null.
    let signal = null

    // 5. If input is a string, then:
    if (typeof input === 'string') {
      // 1. Let parsedURL be the result of parsing input with baseURL.
      // 2. If parsedURL is failure, then throw a TypeError.
      let parsedURL
      try {
        parsedURL = new URL(input, baseUrl)
      } catch (err) {
        throw new TypeError('Failed to parse URL from ' + input, { cause: err })
      }

      // 3. If parsedURL includes credentials, then throw a TypeError.
      if (parsedURL.username || parsedURL.password) {
        throw new TypeError(
          'Request cannot be constructed from a URL that includes credentials: ' +
            input
        )
      }

      // 4. Set request to a new request whose URL is parsedURL.
      request = makeRequest({ urlList: [parsedURL] })

      // 5. Set fallbackMode to "cors".
      fallbackMode = 'cors'
    } else {
      // 6. Otherwise:

      // 7. Assert: input is a Request object.
      assert(input instanceof Request)

      // 8. Set request to input’s request.
      request = input[kState]

      // 9. Set signal to input’s signal.
      signal = input[kSignal]
    }

    // 7. Let origin be this’s relevant settings object’s origin.
    const origin = this[kRealm].settingsObject.origin

    // 8. Let window be "client".
    let window = 'client'

    // 9. If request’s window is an environment settings object and its origin
    // is same origin with origin, then set window to request’s window.
    if (
      request.window?.constructor?.name === 'EnvironmentSettingsObject' &&
      sameOrigin(request.window, origin)
    ) {
      window = request.window
    }

    // 10. If init["window"] exists and is non-null, then throw a TypeError.
    if (init.window != null) {
      throw new TypeError(`'window' option '${window}' must be null`)
    }

    // 11. If init["window"] exists, then set window to "no-window".
    if ('window' in init) {
      window = 'no-window'
    }

    // 12. Set request to a new request with the following properties:
    request = makeRequest({
      // URL request’s URL.
      // undici implementation note: this is set as the first item in request's urlList in makeRequest
      // method request’s method.
      method: request.method,
      // header list A copy of request’s header list.
      // undici implementation note: headersList is cloned in makeRequest
      headersList: request.headersList,
      // unsafe-request flag Set.
      unsafeRequest: request.unsafeRequest,
      // client This’s relevant settings object.
      client: this[kRealm].settingsObject,
      // window window.
      window,
      // priority request’s priority.
      priority: request.priority,
      // origin request’s origin. The propagation of the origin is only significant for navigation requests
      // being handled by a service worker. In this scenario a request can have an origin that is different
      // from the current client.
      origin: request.origin,
      // referrer request’s referrer.
      referrer: request.referrer,
      // referrer policy request’s referrer policy.
      referrerPolicy: request.referrerPolicy,
      // mode request’s mode.
      mode: request.mode,
      // credentials mode request’s credentials mode.
      credentials: request.credentials,
      // cache mode request’s cache mode.
      cache: request.cache,
      // redirect mode request’s redirect mode.
      redirect: request.redirect,
      // integrity metadata request’s integrity metadata.
      integrity: request.integrity,
      // keepalive request’s keepalive.
      keepalive: request.keepalive,
      // reload-navigation flag request’s reload-navigation flag.
      reloadNavigation: request.reloadNavigation,
      // history-navigation flag request’s history-navigation flag.
      historyNavigation: request.historyNavigation,
      // URL list A clone of request’s URL list.
      urlList: [...request.urlList]
    })

    const initHasKey = Object.keys(init).length !== 0

    // 13. If init is not empty, then:
    if (initHasKey) {
      // 1. If request’s mode is "navigate", then set it to "same-origin".
      if (request.mode === 'navigate') {
        request.mode = 'same-origin'
      }

      // 2. Unset request’s reload-navigation flag.
      request.reloadNavigation = false

      // 3. Unset request’s history-navigation flag.
      request.historyNavigation = false

      // 4. Set request’s origin to "client".
      request.origin = 'client'

      // 5. Set request’s referrer to "client"
      request.referrer = 'client'

      // 6. Set request’s referrer policy to the empty string.
      request.referrerPolicy = ''

      // 7. Set request’s URL to request’s current URL.
      request.url = request.urlList[request.urlList.length - 1]

      // 8. Set request’s URL list to « request’s URL ».
      request.urlList = [request.url]
    }

    // 14. If init["referrer"] exists, then:
    if (init.referrer !== undefined) {
      // 1. Let referrer be init["referrer"].
      const referrer = init.referrer

      // 2. If referrer is the empty string, then set request’s referrer to "no-referrer".
      if (referrer === '') {
        request.referrer = 'no-referrer'
      } else {
        // 1. Let parsedReferrer be the result of parsing referrer with
        // baseURL.
        // 2. If parsedReferrer is failure, then throw a TypeError.
        let parsedReferrer
        try {
          parsedReferrer = new URL(referrer, baseUrl)
        } catch (err) {
          throw new TypeError(`Referrer "${referrer}" is not a valid URL.`, { cause: err })
        }

        // 3. If one of the following is true
        // - parsedReferrer’s scheme is "about" and path is the string "client"
        // - parsedReferrer’s origin is not same origin with origin
        // then set request’s referrer to "client".
        if (
          (parsedReferrer.protocol === 'about:' && parsedReferrer.hostname === 'client') ||
          (origin && !sameOrigin(parsedReferrer, this[kRealm].settingsObject.baseUrl))
        ) {
          request.referrer = 'client'
        } else {
          // 4. Otherwise, set request’s referrer to parsedReferrer.
          request.referrer = parsedReferrer
        }
      }
    }

    // 15. If init["referrerPolicy"] exists, then set request’s referrer policy
    // to it.
    if (init.referrerPolicy !== undefined) {
      request.referrerPolicy = init.referrerPolicy
    }

    // 16. Let mode be init["mode"] if it exists, and fallbackMode otherwise.
    let mode
    if (init.mode !== undefined) {
      mode = init.mode
    } else {
      mode = fallbackMode
    }

    // 17. If mode is "navigate", then throw a TypeError.
    if (mode === 'navigate') {
      throw webidl.errors.exception({
        header: 'Request constructor',
        message: 'invalid request mode navigate.'
      })
    }

    // 18. If mode is non-null, set request’s mode to mode.
    if (mode != null) {
      request.mode = mode
    }

    // 19. If init["credentials"] exists, then set request’s credentials mode
    // to it.
    if (init.credentials !== undefined) {
      request.credentials = init.credentials
    }

    // 18. If init["cache"] exists, then set request’s cache mode to it.
    if (init.cache !== undefined) {
      request.cache = init.cache
    }

    // 21. If request’s cache mode is "only-if-cached" and request’s mode is
    // not "same-origin", then throw a TypeError.
    if (request.cache === 'only-if-cached' && request.mode !== 'same-origin') {
      throw new TypeError(
        "'only-if-cached' can be set only with 'same-origin' mode"
      )
    }

    // 22. If init["redirect"] exists, then set request’s redirect mode to it.
    if (init.redirect !== undefined) {
      request.redirect = init.redirect
    }

    // 23. If init["integrity"] exists, then set request’s integrity metadata to it.
    if (init.integrity != null) {
      request.integrity = String(init.integrity)
    }

    // 24. If init["keepalive"] exists, then set request’s keepalive to it.
    if (init.keepalive !== undefined) {
      request.keepalive = Boolean(init.keepalive)
    }

    // 25. If init["method"] exists, then:
    if (init.method !== undefined) {
      // 1. Let method be init["method"].
      let method = init.method

      // 2. If method is not a method or method is a forbidden method, then
      // throw a TypeError.
      if (!isValidHTTPToken(method)) {
        throw new TypeError(`'${method}' is not a valid HTTP method.`)
      }

      if (forbiddenMethodsSet.has(method.toUpperCase())) {
        throw new TypeError(`'${method}' HTTP method is unsupported.`)
      }

      // 3. Normalize method.
      method = normalizeMethodRecord[method] ?? normalizeMethod(method)

      // 4. Set request’s method to method.
      request.method = method
    }

    // 26. If init["signal"] exists, then set signal to it.
    if (init.signal !== undefined) {
      signal = init.signal
    }

    // 27. Set this’s request to request.
    this[kState] = request

    // 28. Set this’s signal to a new AbortSignal object with this’s relevant
    // Realm.
    // TODO: could this be simplified with AbortSignal.any
    // (https://dom.spec.whatwg.org/#dom-abortsignal-any)
    const ac = new AbortController()
    this[kSignal] = ac.signal
    this[kSignal][kRealm] = this[kRealm]

    // 29. If signal is not null, then make this’s signal follow signal.
    if (signal != null) {
      if (
        !signal ||
        typeof signal.aborted !== 'boolean' ||
        typeof signal.addEventListener !== 'function'
      ) {
        throw new TypeError(
          "Failed to construct 'Request': member signal is not of type AbortSignal."
        )
      }

      if (signal.aborted) {
        ac.abort(signal.reason)
      } else {
        // Keep a strong ref to ac while request object
        // is alive. This is needed to prevent AbortController
        // from being prematurely garbage collected.
        // See, https://github.com/nodejs/undici/issues/1926.
        this[kAbortController] = ac

        const acRef = new WeakRef(ac)
        const abort = function () {
          const ac = acRef.deref()
          if (ac !== undefined) {
            ac.abort(this.reason)
          }
        }

        // Third-party AbortControllers may not work with these.
        // See, https://github.com/nodejs/undici/pull/1910#issuecomment-1464495619.
        try {
          // If the max amount of listeners is equal to the default, increase it
          // This is only available in node >= v19.9.0
          if (typeof getMaxListeners === 'function' && getMaxListeners(signal) === defaultMaxListeners) {
            setMaxListeners(100, signal)
          } else if (getEventListeners(signal, 'abort').length >= defaultMaxListeners) {
            setMaxListeners(100, signal)
          }
        } catch {}

        util.addAbortListener(signal, abort)
        requestFinalizer.register(ac, { signal, abort })
      }
    }

    // 30. Set this’s headers to a new Headers object with this’s relevant
    // Realm, whose header list is request’s header list and guard is
    // "request".
    this[kHeaders] = new Headers(kConstruct)
    this[kHeaders][kHeadersList] = request.headersList
    this[kHeaders][kGuard] = 'request'
    this[kHeaders][kRealm] = this[kRealm]

    // 31. If this’s request’s mode is "no-cors", then:
    if (mode === 'no-cors') {
      // 1. If this’s request’s method is not a CORS-safelisted method,
      // then throw a TypeError.
      if (!corsSafeListedMethodsSet.has(request.method)) {
        throw new TypeError(
          `'${request.method} is unsupported in no-cors mode.`
        )
      }

      // 2. Set this’s headers’s guard to "request-no-cors".
      this[kHeaders][kGuard] = 'request-no-cors'
    }

    // 32. If init is not empty, then:
    if (initHasKey) {
      /** @type {HeadersList} */
      const headersList = this[kHeaders][kHeadersList]
      // 1. Let headers be a copy of this’s headers and its associated header
      // list.
      // 2. If init["headers"] exists, then set headers to init["headers"].
      const headers = init.headers !== undefined ? init.headers : new HeadersList(headersList)

      // 3. Empty this’s headers’s header list.
      headersList.clear()

      // 4. If headers is a Headers object, then for each header in its header
      // list, append header’s name/header’s value to this’s headers.
      if (headers instanceof HeadersList) {
        for (const [key, val] of headers) {
          headersList.append(key, val)
        }
        // Note: Copy the `set-cookie` meta-data.
        headersList.cookies = headers.cookies
      } else {
        // 5. Otherwise, fill this’s headers with headers.
        fillHeaders(this[kHeaders], headers)
      }
    }

    // 33. Let inputBody be input’s request’s body if input is a Request
    // object; otherwise null.
    const inputBody = input instanceof Request ? input[kState].body : null

    // 34. If either init["body"] exists and is non-null or inputBody is
    // non-null, and request’s method is `GET` or `HEAD`, then throw a
    // TypeError.
    if (
      (init.body != null || inputBody != null) &&
      (request.method === 'GET' || request.method === 'HEAD')
    ) {
      throw new TypeError('Request with GET/HEAD method cannot have body.')
    }

    // 35. Let initBody be null.
    let initBody = null

    // 36. If init["body"] exists and is non-null, then:
    if (init.body != null) {
      // 1. Let Content-Type be null.
      // 2. Set initBody and Content-Type to the result of extracting
      // init["body"], with keepalive set to request’s keepalive.
      const [extractedBody, contentType] = extractBody(
        init.body,
        request.keepalive
      )
      initBody = extractedBody

      // 3, If Content-Type is non-null and this’s headers’s header list does
      // not contain `Content-Type`, then append `Content-Type`/Content-Type to
      // this’s headers.
      if (contentType && !this[kHeaders][kHeadersList].contains('content-type')) {
        this[kHeaders].append('content-type', contentType)
      }
    }

    // 37. Let inputOrInitBody be initBody if it is non-null; otherwise
    // inputBody.
    const inputOrInitBody = initBody ?? inputBody

    // 38. If inputOrInitBody is non-null and inputOrInitBody’s source is
    // null, then:
    if (inputOrInitBody != null && inputOrInitBody.source == null) {
      // 1. If initBody is non-null and init["duplex"] does not exist,
      //    then throw a TypeError.
      if (initBody != null && init.duplex == null) {
        throw new TypeError('RequestInit: duplex option is required when sending a body.')
      }

      // 2. If this’s request’s mode is neither "same-origin" nor "cors",
      // then throw a TypeError.
      if (request.mode !== 'same-origin' && request.mode !== 'cors') {
        throw new TypeError(
          'If request is made from ReadableStream, mode should be "same-origin" or "cors"'
        )
      }

      // 3. Set this’s request’s use-CORS-preflight flag.
      request.useCORSPreflightFlag = true
    }

    // 39. Let finalBody be inputOrInitBody.
    let finalBody = inputOrInitBody

    // 40. If initBody is null and inputBody is non-null, then:
    if (initBody == null && inputBody != null) {
      // 1. If input is unusable, then throw a TypeError.
      if (util.isDisturbed(inputBody.stream) || inputBody.stream.locked) {
        throw new TypeError(
          'Cannot construct a Request with a Request object that has already been used.'
        )
      }

      // 2. Set finalBody to the result of creating a proxy for inputBody.
      if (!TransformStream) {
        TransformStream = (__webpack_require__(/*! stream/web */ "stream/web").TransformStream)
      }

      // https://streams.spec.whatwg.org/#readablestream-create-a-proxy
      const identityTransform = new TransformStream()
      inputBody.stream.pipeThrough(identityTransform)
      finalBody = {
        source: inputBody.source,
        length: inputBody.length,
        stream: identityTransform.readable
      }
    }

    // 41. Set this’s request’s body to finalBody.
    this[kState].body = finalBody
  }

  // Returns request’s HTTP method, which is "GET" by default.
  get method () {
    webidl.brandCheck(this, Request)

    // The method getter steps are to return this’s request’s method.
    return this[kState].method
  }

  // Returns the URL of request as a string.
  get url () {
    webidl.brandCheck(this, Request)

    // The url getter steps are to return this’s request’s URL, serialized.
    return URLSerializer(this[kState].url)
  }

  // Returns a Headers object consisting of the headers associated with request.
  // Note that headers added in the network layer by the user agent will not
  // be accounted for in this object, e.g., the "Host" header.
  get headers () {
    webidl.brandCheck(this, Request)

    // The headers getter steps are to return this’s headers.
    return this[kHeaders]
  }

  // Returns the kind of resource requested by request, e.g., "document"
  // or "script".
  get destination () {
    webidl.brandCheck(this, Request)

    // The destination getter are to return this’s request’s destination.
    return this[kState].destination
  }

  // Returns the referrer of request. Its value can be a same-origin URL if
  // explicitly set in init, the empty string to indicate no referrer, and
  // "about:client" when defaulting to the global’s default. This is used
  // during fetching to determine the value of the `Referer` header of the
  // request being made.
  get referrer () {
    webidl.brandCheck(this, Request)

    // 1. If this’s request’s referrer is "no-referrer", then return the
    // empty string.
    if (this[kState].referrer === 'no-referrer') {
      return ''
    }

    // 2. If this’s request’s referrer is "client", then return
    // "about:client".
    if (this[kState].referrer === 'client') {
      return 'about:client'
    }

    // Return this’s request’s referrer, serialized.
    return this[kState].referrer.toString()
  }

  // Returns the referrer policy associated with request.
  // This is used during fetching to compute the value of the request’s
  // referrer.
  get referrerPolicy () {
    webidl.brandCheck(this, Request)

    // The referrerPolicy getter steps are to return this’s request’s referrer policy.
    return this[kState].referrerPolicy
  }

  // Returns the mode associated with request, which is a string indicating
  // whether the request will use CORS, or will be restricted to same-origin
  // URLs.
  get mode () {
    webidl.brandCheck(this, Request)

    // The mode getter steps are to return this’s request’s mode.
    return this[kState].mode
  }

  // Returns the credentials mode associated with request,
  // which is a string indicating whether credentials will be sent with the
  // request always, never, or only when sent to a same-origin URL.
  get credentials () {
    // The credentials getter steps are to return this’s request’s credentials mode.
    return this[kState].credentials
  }

  // Returns the cache mode associated with request,
  // which is a string indicating how the request will
  // interact with the browser’s cache when fetching.
  get cache () {
    webidl.brandCheck(this, Request)

    // The cache getter steps are to return this’s request’s cache mode.
    return this[kState].cache
  }

  // Returns the redirect mode associated with request,
  // which is a string indicating how redirects for the
  // request will be handled during fetching. A request
  // will follow redirects by default.
  get redirect () {
    webidl.brandCheck(this, Request)

    // The redirect getter steps are to return this’s request’s redirect mode.
    return this[kState].redirect
  }

  // Returns request’s subresource integrity metadata, which is a
  // cryptographic hash of the resource being fetched. Its value
  // consists of multiple hashes separated by whitespace. [SRI]
  get integrity () {
    webidl.brandCheck(this, Request)

    // The integrity getter steps are to return this’s request’s integrity
    // metadata.
    return this[kState].integrity
  }

  // Returns a boolean indicating whether or not request can outlive the
  // global in which it was created.
  get keepalive () {
    webidl.brandCheck(this, Request)

    // The keepalive getter steps are to return this’s request’s keepalive.
    return this[kState].keepalive
  }

  // Returns a boolean indicating whether or not request is for a reload
  // navigation.
  get isReloadNavigation () {
    webidl.brandCheck(this, Request)

    // The isReloadNavigation getter steps are to return true if this’s
    // request’s reload-navigation flag is set; otherwise false.
    return this[kState].reloadNavigation
  }

  // Returns a boolean indicating whether or not request is for a history
  // navigation (a.k.a. back-foward navigation).
  get isHistoryNavigation () {
    webidl.brandCheck(this, Request)

    // The isHistoryNavigation getter steps are to return true if this’s request’s
    // history-navigation flag is set; otherwise false.
    return this[kState].historyNavigation
  }

  // Returns the signal associated with request, which is an AbortSignal
  // object indicating whether or not request has been aborted, and its
  // abort event handler.
  get signal () {
    webidl.brandCheck(this, Request)

    // The signal getter steps are to return this’s signal.
    return this[kSignal]
  }

  get body () {
    webidl.brandCheck(this, Request)

    return this[kState].body ? this[kState].body.stream : null
  }

  get bodyUsed () {
    webidl.brandCheck(this, Request)

    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)
  }

  get duplex () {
    webidl.brandCheck(this, Request)

    return 'half'
  }

  // Returns a clone of request.
  clone () {
    webidl.brandCheck(this, Request)

    // 1. If this is unusable, then throw a TypeError.
    if (this.bodyUsed || this.body?.locked) {
      throw new TypeError('unusable')
    }

    // 2. Let clonedRequest be the result of cloning this’s request.
    const clonedRequest = cloneRequest(this[kState])

    // 3. Let clonedRequestObject be the result of creating a Request object,
    // given clonedRequest, this’s headers’s guard, and this’s relevant Realm.
    const clonedRequestObject = new Request(kConstruct)
    clonedRequestObject[kState] = clonedRequest
    clonedRequestObject[kRealm] = this[kRealm]
    clonedRequestObject[kHeaders] = new Headers(kConstruct)
    clonedRequestObject[kHeaders][kHeadersList] = clonedRequest.headersList
    clonedRequestObject[kHeaders][kGuard] = this[kHeaders][kGuard]
    clonedRequestObject[kHeaders][kRealm] = this[kHeaders][kRealm]

    // 4. Make clonedRequestObject’s signal follow this’s signal.
    const ac = new AbortController()
    if (this.signal.aborted) {
      ac.abort(this.signal.reason)
    } else {
      util.addAbortListener(
        this.signal,
        () => {
          ac.abort(this.signal.reason)
        }
      )
    }
    clonedRequestObject[kSignal] = ac.signal

    // 4. Return clonedRequestObject.
    return clonedRequestObject
  }
}

mixinBody(Request)

function makeRequest (init) {
  // https://fetch.spec.whatwg.org/#requests
  const request = {
    method: 'GET',
    localURLsOnly: false,
    unsafeRequest: false,
    body: null,
    client: null,
    reservedClient: null,
    replacesClientId: '',
    window: 'client',
    keepalive: false,
    serviceWorkers: 'all',
    initiator: '',
    destination: '',
    priority: null,
    origin: 'client',
    policyContainer: 'client',
    referrer: 'client',
    referrerPolicy: '',
    mode: 'no-cors',
    useCORSPreflightFlag: false,
    credentials: 'same-origin',
    useCredentials: false,
    cache: 'default',
    redirect: 'follow',
    integrity: '',
    cryptoGraphicsNonceMetadata: '',
    parserMetadata: '',
    reloadNavigation: false,
    historyNavigation: false,
    userActivation: false,
    taintedOrigin: false,
    redirectCount: 0,
    responseTainting: 'basic',
    preventNoCacheCacheControlHeaderModification: false,
    done: false,
    timingAllowFailed: false,
    ...init,
    headersList: init.headersList
      ? new HeadersList(init.headersList)
      : new HeadersList()
  }
  request.url = request.urlList[0]
  return request
}

// https://fetch.spec.whatwg.org/#concept-request-clone
function cloneRequest (request) {
  // To clone a request request, run these steps:

  // 1. Let newRequest be a copy of request, except for its body.
  const newRequest = makeRequest({ ...request, body: null })

  // 2. If request’s body is non-null, set newRequest’s body to the
  // result of cloning request’s body.
  if (request.body != null) {
    newRequest.body = cloneBody(request.body)
  }

  // 3. Return newRequest.
  return newRequest
}

Object.defineProperties(Request.prototype, {
  method: kEnumerableProperty,
  url: kEnumerableProperty,
  headers: kEnumerableProperty,
  redirect: kEnumerableProperty,
  clone: kEnumerableProperty,
  signal: kEnumerableProperty,
  duplex: kEnumerableProperty,
  destination: kEnumerableProperty,
  body: kEnumerableProperty,
  bodyUsed: kEnumerableProperty,
  isHistoryNavigation: kEnumerableProperty,
  isReloadNavigation: kEnumerableProperty,
  keepalive: kEnumerableProperty,
  integrity: kEnumerableProperty,
  cache: kEnumerableProperty,
  credentials: kEnumerableProperty,
  attribute: kEnumerableProperty,
  referrerPolicy: kEnumerableProperty,
  referrer: kEnumerableProperty,
  mode: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'Request',
    configurable: true
  }
})

webidl.converters.Request = webidl.interfaceConverter(
  Request
)

// https://fetch.spec.whatwg.org/#requestinfo
webidl.converters.RequestInfo = function (V) {
  if (typeof V === 'string') {
    return webidl.converters.USVString(V)
  }

  if (V instanceof Request) {
    return webidl.converters.Request(V)
  }

  return webidl.converters.USVString(V)
}

webidl.converters.AbortSignal = webidl.interfaceConverter(
  AbortSignal
)

// https://fetch.spec.whatwg.org/#requestinit
webidl.converters.RequestInit = webidl.dictionaryConverter([
  {
    key: 'method',
    converter: webidl.converters.ByteString
  },
  {
    key: 'headers',
    converter: webidl.converters.HeadersInit
  },
  {
    key: 'body',
    converter: webidl.nullableConverter(
      webidl.converters.BodyInit
    )
  },
  {
    key: 'referrer',
    converter: webidl.converters.USVString
  },
  {
    key: 'referrerPolicy',
    converter: webidl.converters.DOMString,
    // https://w3c.github.io/webappsec-referrer-policy/#referrer-policy
    allowedValues: referrerPolicy
  },
  {
    key: 'mode',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#concept-request-mode
    allowedValues: requestMode
  },
  {
    key: 'credentials',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#requestcredentials
    allowedValues: requestCredentials
  },
  {
    key: 'cache',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#requestcache
    allowedValues: requestCache
  },
  {
    key: 'redirect',
    converter: webidl.converters.DOMString,
    // https://fetch.spec.whatwg.org/#requestredirect
    allowedValues: requestRedirect
  },
  {
    key: 'integrity',
    converter: webidl.converters.DOMString
  },
  {
    key: 'keepalive',
    converter: webidl.converters.boolean
  },
  {
    key: 'signal',
    converter: webidl.nullableConverter(
      (signal) => webidl.converters.AbortSignal(
        signal,
        { strict: false }
      )
    )
  },
  {
    key: 'window',
    converter: webidl.converters.any
  },
  {
    key: 'duplex',
    converter: webidl.converters.DOMString,
    allowedValues: requestDuplex
  }
])

module.exports = { Request, makeRequest }


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/response.js":
/*!*******************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/response.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { Headers, HeadersList, fill } = __webpack_require__(/*! ./headers */ "../../node_modules/undici/lib/fetch/headers.js")
const { extractBody, cloneBody, mixinBody } = __webpack_require__(/*! ./body */ "../../node_modules/undici/lib/fetch/body.js")
const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { kEnumerableProperty } = util
const {
  isValidReasonPhrase,
  isCancelled,
  isAborted,
  isBlobLike,
  serializeJavascriptValueToJSONString,
  isErrorLike,
  isomorphicEncode
} = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")
const {
  redirectStatusSet,
  nullBodyStatus,
  DOMException
} = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/fetch/constants.js")
const { kState, kHeaders, kGuard, kRealm } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fetch/symbols.js")
const { webidl } = __webpack_require__(/*! ./webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { FormData } = __webpack_require__(/*! ./formdata */ "../../node_modules/undici/lib/fetch/formdata.js")
const { getGlobalOrigin } = __webpack_require__(/*! ./global */ "../../node_modules/undici/lib/fetch/global.js")
const { URLSerializer } = __webpack_require__(/*! ./dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const { kHeadersList, kConstruct } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { types } = __webpack_require__(/*! util */ "util")

const ReadableStream = globalThis.ReadableStream || (__webpack_require__(/*! stream/web */ "stream/web").ReadableStream)
const textEncoder = new TextEncoder('utf-8')

// https://fetch.spec.whatwg.org/#response-class
class Response {
  // Creates network error Response.
  static error () {
    // TODO
    const relevantRealm = { settingsObject: {} }

    // The static error() method steps are to return the result of creating a
    // Response object, given a new network error, "immutable", and this’s
    // relevant Realm.
    const responseObject = new Response()
    responseObject[kState] = makeNetworkError()
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kHeadersList] = responseObject[kState].headersList
    responseObject[kHeaders][kGuard] = 'immutable'
    responseObject[kHeaders][kRealm] = relevantRealm
    return responseObject
  }

  // https://fetch.spec.whatwg.org/#dom-response-json
  static json (data, init = {}) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.json' })

    if (init !== null) {
      init = webidl.converters.ResponseInit(init)
    }

    // 1. Let bytes the result of running serialize a JavaScript value to JSON bytes on data.
    const bytes = textEncoder.encode(
      serializeJavascriptValueToJSONString(data)
    )

    // 2. Let body be the result of extracting bytes.
    const body = extractBody(bytes)

    // 3. Let responseObject be the result of creating a Response object, given a new response,
    //    "response", and this’s relevant Realm.
    const relevantRealm = { settingsObject: {} }
    const responseObject = new Response()
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kGuard] = 'response'
    responseObject[kHeaders][kRealm] = relevantRealm

    // 4. Perform initialize a response given responseObject, init, and (body, "application/json").
    initializeResponse(responseObject, init, { body: body[0], type: 'application/json' })

    // 5. Return responseObject.
    return responseObject
  }

  // Creates a redirect Response that redirects to url with status status.
  static redirect (url, status = 302) {
    const relevantRealm = { settingsObject: {} }

    webidl.argumentLengthCheck(arguments, 1, { header: 'Response.redirect' })

    url = webidl.converters.USVString(url)
    status = webidl.converters['unsigned short'](status)

    // 1. Let parsedURL be the result of parsing url with current settings
    // object’s API base URL.
    // 2. If parsedURL is failure, then throw a TypeError.
    // TODO: base-URL?
    let parsedURL
    try {
      parsedURL = new URL(url, getGlobalOrigin())
    } catch (err) {
      throw Object.assign(new TypeError('Failed to parse URL from ' + url), {
        cause: err
      })
    }

    // 3. If status is not a redirect status, then throw a RangeError.
    if (!redirectStatusSet.has(status)) {
      throw new RangeError('Invalid status code ' + status)
    }

    // 4. Let responseObject be the result of creating a Response object,
    // given a new response, "immutable", and this’s relevant Realm.
    const responseObject = new Response()
    responseObject[kRealm] = relevantRealm
    responseObject[kHeaders][kGuard] = 'immutable'
    responseObject[kHeaders][kRealm] = relevantRealm

    // 5. Set responseObject’s response’s status to status.
    responseObject[kState].status = status

    // 6. Let value be parsedURL, serialized and isomorphic encoded.
    const value = isomorphicEncode(URLSerializer(parsedURL))

    // 7. Append `Location`/value to responseObject’s response’s header list.
    responseObject[kState].headersList.append('location', value)

    // 8. Return responseObject.
    return responseObject
  }

  // https://fetch.spec.whatwg.org/#dom-response
  constructor (body = null, init = {}) {
    if (body !== null) {
      body = webidl.converters.BodyInit(body)
    }

    init = webidl.converters.ResponseInit(init)

    // TODO
    this[kRealm] = { settingsObject: {} }

    // 1. Set this’s response to a new response.
    this[kState] = makeResponse({})

    // 2. Set this’s headers to a new Headers object with this’s relevant
    // Realm, whose header list is this’s response’s header list and guard
    // is "response".
    this[kHeaders] = new Headers(kConstruct)
    this[kHeaders][kGuard] = 'response'
    this[kHeaders][kHeadersList] = this[kState].headersList
    this[kHeaders][kRealm] = this[kRealm]

    // 3. Let bodyWithType be null.
    let bodyWithType = null

    // 4. If body is non-null, then set bodyWithType to the result of extracting body.
    if (body != null) {
      const [extractedBody, type] = extractBody(body)
      bodyWithType = { body: extractedBody, type }
    }

    // 5. Perform initialize a response given this, init, and bodyWithType.
    initializeResponse(this, init, bodyWithType)
  }

  // Returns response’s type, e.g., "cors".
  get type () {
    webidl.brandCheck(this, Response)

    // The type getter steps are to return this’s response’s type.
    return this[kState].type
  }

  // Returns response’s URL, if it has one; otherwise the empty string.
  get url () {
    webidl.brandCheck(this, Response)

    const urlList = this[kState].urlList

    // The url getter steps are to return the empty string if this’s
    // response’s URL is null; otherwise this’s response’s URL,
    // serialized with exclude fragment set to true.
    const url = urlList[urlList.length - 1] ?? null

    if (url === null) {
      return ''
    }

    return URLSerializer(url, true)
  }

  // Returns whether response was obtained through a redirect.
  get redirected () {
    webidl.brandCheck(this, Response)

    // The redirected getter steps are to return true if this’s response’s URL
    // list has more than one item; otherwise false.
    return this[kState].urlList.length > 1
  }

  // Returns response’s status.
  get status () {
    webidl.brandCheck(this, Response)

    // The status getter steps are to return this’s response’s status.
    return this[kState].status
  }

  // Returns whether response’s status is an ok status.
  get ok () {
    webidl.brandCheck(this, Response)

    // The ok getter steps are to return true if this’s response’s status is an
    // ok status; otherwise false.
    return this[kState].status >= 200 && this[kState].status <= 299
  }

  // Returns response’s status message.
  get statusText () {
    webidl.brandCheck(this, Response)

    // The statusText getter steps are to return this’s response’s status
    // message.
    return this[kState].statusText
  }

  // Returns response’s headers as Headers.
  get headers () {
    webidl.brandCheck(this, Response)

    // The headers getter steps are to return this’s headers.
    return this[kHeaders]
  }

  get body () {
    webidl.brandCheck(this, Response)

    return this[kState].body ? this[kState].body.stream : null
  }

  get bodyUsed () {
    webidl.brandCheck(this, Response)

    return !!this[kState].body && util.isDisturbed(this[kState].body.stream)
  }

  // Returns a clone of response.
  clone () {
    webidl.brandCheck(this, Response)

    // 1. If this is unusable, then throw a TypeError.
    if (this.bodyUsed || (this.body && this.body.locked)) {
      throw webidl.errors.exception({
        header: 'Response.clone',
        message: 'Body has already been consumed.'
      })
    }

    // 2. Let clonedResponse be the result of cloning this’s response.
    const clonedResponse = cloneResponse(this[kState])

    // 3. Return the result of creating a Response object, given
    // clonedResponse, this’s headers’s guard, and this’s relevant Realm.
    const clonedResponseObject = new Response()
    clonedResponseObject[kState] = clonedResponse
    clonedResponseObject[kRealm] = this[kRealm]
    clonedResponseObject[kHeaders][kHeadersList] = clonedResponse.headersList
    clonedResponseObject[kHeaders][kGuard] = this[kHeaders][kGuard]
    clonedResponseObject[kHeaders][kRealm] = this[kHeaders][kRealm]

    return clonedResponseObject
  }
}

mixinBody(Response)

Object.defineProperties(Response.prototype, {
  type: kEnumerableProperty,
  url: kEnumerableProperty,
  status: kEnumerableProperty,
  ok: kEnumerableProperty,
  redirected: kEnumerableProperty,
  statusText: kEnumerableProperty,
  headers: kEnumerableProperty,
  clone: kEnumerableProperty,
  body: kEnumerableProperty,
  bodyUsed: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'Response',
    configurable: true
  }
})

Object.defineProperties(Response, {
  json: kEnumerableProperty,
  redirect: kEnumerableProperty,
  error: kEnumerableProperty
})

// https://fetch.spec.whatwg.org/#concept-response-clone
function cloneResponse (response) {
  // To clone a response response, run these steps:

  // 1. If response is a filtered response, then return a new identical
  // filtered response whose internal response is a clone of response’s
  // internal response.
  if (response.internalResponse) {
    return filterResponse(
      cloneResponse(response.internalResponse),
      response.type
    )
  }

  // 2. Let newResponse be a copy of response, except for its body.
  const newResponse = makeResponse({ ...response, body: null })

  // 3. If response’s body is non-null, then set newResponse’s body to the
  // result of cloning response’s body.
  if (response.body != null) {
    newResponse.body = cloneBody(response.body)
  }

  // 4. Return newResponse.
  return newResponse
}

function makeResponse (init) {
  return {
    aborted: false,
    rangeRequested: false,
    timingAllowPassed: false,
    requestIncludesCredentials: false,
    type: 'default',
    status: 200,
    timingInfo: null,
    cacheState: '',
    statusText: '',
    ...init,
    headersList: init.headersList
      ? new HeadersList(init.headersList)
      : new HeadersList(),
    urlList: init.urlList ? [...init.urlList] : []
  }
}

function makeNetworkError (reason) {
  const isError = isErrorLike(reason)
  return makeResponse({
    type: 'error',
    status: 0,
    error: isError
      ? reason
      : new Error(reason ? String(reason) : reason),
    aborted: reason && reason.name === 'AbortError'
  })
}

function makeFilteredResponse (response, state) {
  state = {
    internalResponse: response,
    ...state
  }

  return new Proxy(response, {
    get (target, p) {
      return p in state ? state[p] : target[p]
    },
    set (target, p, value) {
      assert(!(p in state))
      target[p] = value
      return true
    }
  })
}

// https://fetch.spec.whatwg.org/#concept-filtered-response
function filterResponse (response, type) {
  // Set response to the following filtered response with response as its
  // internal response, depending on request’s response tainting:
  if (type === 'basic') {
    // A basic filtered response is a filtered response whose type is "basic"
    // and header list excludes any headers in internal response’s header list
    // whose name is a forbidden response-header name.

    // Note: undici does not implement forbidden response-header names
    return makeFilteredResponse(response, {
      type: 'basic',
      headersList: response.headersList
    })
  } else if (type === 'cors') {
    // A CORS filtered response is a filtered response whose type is "cors"
    // and header list excludes any headers in internal response’s header
    // list whose name is not a CORS-safelisted response-header name, given
    // internal response’s CORS-exposed header-name list.

    // Note: undici does not implement CORS-safelisted response-header names
    return makeFilteredResponse(response, {
      type: 'cors',
      headersList: response.headersList
    })
  } else if (type === 'opaque') {
    // An opaque filtered response is a filtered response whose type is
    // "opaque", URL list is the empty list, status is 0, status message
    // is the empty byte sequence, header list is empty, and body is null.

    return makeFilteredResponse(response, {
      type: 'opaque',
      urlList: Object.freeze([]),
      status: 0,
      statusText: '',
      body: null
    })
  } else if (type === 'opaqueredirect') {
    // An opaque-redirect filtered response is a filtered response whose type
    // is "opaqueredirect", status is 0, status message is the empty byte
    // sequence, header list is empty, and body is null.

    return makeFilteredResponse(response, {
      type: 'opaqueredirect',
      status: 0,
      statusText: '',
      headersList: [],
      body: null
    })
  } else {
    assert(false)
  }
}

// https://fetch.spec.whatwg.org/#appropriate-network-error
function makeAppropriateNetworkError (fetchParams, err = null) {
  // 1. Assert: fetchParams is canceled.
  assert(isCancelled(fetchParams))

  // 2. Return an aborted network error if fetchParams is aborted;
  // otherwise return a network error.
  return isAborted(fetchParams)
    ? makeNetworkError(Object.assign(new DOMException('The operation was aborted.', 'AbortError'), { cause: err }))
    : makeNetworkError(Object.assign(new DOMException('Request was cancelled.'), { cause: err }))
}

// https://whatpr.org/fetch/1392.html#initialize-a-response
function initializeResponse (response, init, body) {
  // 1. If init["status"] is not in the range 200 to 599, inclusive, then
  //    throw a RangeError.
  if (init.status !== null && (init.status < 200 || init.status > 599)) {
    throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.')
  }

  // 2. If init["statusText"] does not match the reason-phrase token production,
  //    then throw a TypeError.
  if ('statusText' in init && init.statusText != null) {
    // See, https://datatracker.ietf.org/doc/html/rfc7230#section-3.1.2:
    //   reason-phrase  = *( HTAB / SP / VCHAR / obs-text )
    if (!isValidReasonPhrase(String(init.statusText))) {
      throw new TypeError('Invalid statusText')
    }
  }

  // 3. Set response’s response’s status to init["status"].
  if ('status' in init && init.status != null) {
    response[kState].status = init.status
  }

  // 4. Set response’s response’s status message to init["statusText"].
  if ('statusText' in init && init.statusText != null) {
    response[kState].statusText = init.statusText
  }

  // 5. If init["headers"] exists, then fill response’s headers with init["headers"].
  if ('headers' in init && init.headers != null) {
    fill(response[kHeaders], init.headers)
  }

  // 6. If body was given, then:
  if (body) {
    // 1. If response's status is a null body status, then throw a TypeError.
    if (nullBodyStatus.includes(response.status)) {
      throw webidl.errors.exception({
        header: 'Response constructor',
        message: 'Invalid response status code ' + response.status
      })
    }

    // 2. Set response's body to body's body.
    response[kState].body = body.body

    // 3. If body's type is non-null and response's header list does not contain
    //    `Content-Type`, then append (`Content-Type`, body's type) to response's header list.
    if (body.type != null && !response[kState].headersList.contains('Content-Type')) {
      response[kState].headersList.append('content-type', body.type)
    }
  }
}

webidl.converters.ReadableStream = webidl.interfaceConverter(
  ReadableStream
)

webidl.converters.FormData = webidl.interfaceConverter(
  FormData
)

webidl.converters.URLSearchParams = webidl.interfaceConverter(
  URLSearchParams
)

// https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit
webidl.converters.XMLHttpRequestBodyInit = function (V) {
  if (typeof V === 'string') {
    return webidl.converters.USVString(V)
  }

  if (isBlobLike(V)) {
    return webidl.converters.Blob(V, { strict: false })
  }

  if (types.isArrayBuffer(V) || types.isTypedArray(V) || types.isDataView(V)) {
    return webidl.converters.BufferSource(V)
  }

  if (util.isFormDataLike(V)) {
    return webidl.converters.FormData(V, { strict: false })
  }

  if (V instanceof URLSearchParams) {
    return webidl.converters.URLSearchParams(V)
  }

  return webidl.converters.DOMString(V)
}

// https://fetch.spec.whatwg.org/#bodyinit
webidl.converters.BodyInit = function (V) {
  if (V instanceof ReadableStream) {
    return webidl.converters.ReadableStream(V)
  }

  // Note: the spec doesn't include async iterables,
  // this is an undici extension.
  if (V?.[Symbol.asyncIterator]) {
    return V
  }

  return webidl.converters.XMLHttpRequestBodyInit(V)
}

webidl.converters.ResponseInit = webidl.dictionaryConverter([
  {
    key: 'status',
    converter: webidl.converters['unsigned short'],
    defaultValue: 200
  },
  {
    key: 'statusText',
    converter: webidl.converters.ByteString,
    defaultValue: ''
  },
  {
    key: 'headers',
    converter: webidl.converters.HeadersInit
  }
])

module.exports = {
  makeNetworkError,
  makeResponse,
  makeAppropriateNetworkError,
  filterResponse,
  Response,
  cloneResponse
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/symbols.js":
/*!******************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/symbols.js ***!
  \******************************************************/
/***/ ((module) => {



module.exports = {
  kUrl: Symbol('url'),
  kHeaders: Symbol('headers'),
  kSignal: Symbol('signal'),
  kState: Symbol('state'),
  kGuard: Symbol('guard'),
  kRealm: Symbol('realm')
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/util.js":
/*!***************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/util.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { redirectStatusSet, referrerPolicySet: referrerPolicyTokens, badPortsSet } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/fetch/constants.js")
const { getGlobalOrigin } = __webpack_require__(/*! ./global */ "../../node_modules/undici/lib/fetch/global.js")
const { performance } = __webpack_require__(/*! perf_hooks */ "perf_hooks")
const { isBlobLike, toUSVString, ReadableStreamFrom } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { isUint8Array } = __webpack_require__(/*! util/types */ "util/types")

let supportedHashes = []

// https://nodejs.org/api/crypto.html#determining-if-crypto-support-is-unavailable
/** @type {import('crypto')|undefined} */
let crypto

try {
  crypto = __webpack_require__(/*! crypto */ "crypto")
  const possibleRelevantHashes = ['sha256', 'sha384', 'sha512']
  supportedHashes = crypto.getHashes().filter((hash) => possibleRelevantHashes.includes(hash))
/* c8 ignore next 3 */
} catch {
}

function responseURL (response) {
  // https://fetch.spec.whatwg.org/#responses
  // A response has an associated URL. It is a pointer to the last URL
  // in response’s URL list and null if response’s URL list is empty.
  const urlList = response.urlList
  const length = urlList.length
  return length === 0 ? null : urlList[length - 1].toString()
}

// https://fetch.spec.whatwg.org/#concept-response-location-url
function responseLocationURL (response, requestFragment) {
  // 1. If response’s status is not a redirect status, then return null.
  if (!redirectStatusSet.has(response.status)) {
    return null
  }

  // 2. Let location be the result of extracting header list values given
  // `Location` and response’s header list.
  let location = response.headersList.get('location')

  // 3. If location is a header value, then set location to the result of
  //    parsing location with response’s URL.
  if (location !== null && isValidHeaderValue(location)) {
    location = new URL(location, responseURL(response))
  }

  // 4. If location is a URL whose fragment is null, then set location’s
  // fragment to requestFragment.
  if (location && !location.hash) {
    location.hash = requestFragment
  }

  // 5. Return location.
  return location
}

/** @returns {URL} */
function requestCurrentURL (request) {
  return request.urlList[request.urlList.length - 1]
}

function requestBadPort (request) {
  // 1. Let url be request’s current URL.
  const url = requestCurrentURL(request)

  // 2. If url’s scheme is an HTTP(S) scheme and url’s port is a bad port,
  // then return blocked.
  if (urlIsHttpHttpsScheme(url) && badPortsSet.has(url.port)) {
    return 'blocked'
  }

  // 3. Return allowed.
  return 'allowed'
}

function isErrorLike (object) {
  return object instanceof Error || (
    object?.constructor?.name === 'Error' ||
    object?.constructor?.name === 'DOMException'
  )
}

// Check whether |statusText| is a ByteString and
// matches the Reason-Phrase token production.
// RFC 2616: https://tools.ietf.org/html/rfc2616
// RFC 7230: https://tools.ietf.org/html/rfc7230
// "reason-phrase = *( HTAB / SP / VCHAR / obs-text )"
// https://github.com/chromium/chromium/blob/94.0.4604.1/third_party/blink/renderer/core/fetch/response.cc#L116
function isValidReasonPhrase (statusText) {
  for (let i = 0; i < statusText.length; ++i) {
    const c = statusText.charCodeAt(i)
    if (
      !(
        (
          c === 0x09 || // HTAB
          (c >= 0x20 && c <= 0x7e) || // SP / VCHAR
          (c >= 0x80 && c <= 0xff)
        ) // obs-text
      )
    ) {
      return false
    }
  }
  return true
}

/**
 * @see https://tools.ietf.org/html/rfc7230#section-3.2.6
 * @param {number} c
 */
function isTokenCharCode (c) {
  switch (c) {
    case 0x22:
    case 0x28:
    case 0x29:
    case 0x2c:
    case 0x2f:
    case 0x3a:
    case 0x3b:
    case 0x3c:
    case 0x3d:
    case 0x3e:
    case 0x3f:
    case 0x40:
    case 0x5b:
    case 0x5c:
    case 0x5d:
    case 0x7b:
    case 0x7d:
      // DQUOTE and "(),/:;<=>?@[\]{}"
      return false
    default:
      // VCHAR %x21-7E
      return c >= 0x21 && c <= 0x7e
  }
}

/**
 * @param {string} characters
 */
function isValidHTTPToken (characters) {
  if (characters.length === 0) {
    return false
  }
  for (let i = 0; i < characters.length; ++i) {
    if (!isTokenCharCode(characters.charCodeAt(i))) {
      return false
    }
  }
  return true
}

/**
 * @see https://fetch.spec.whatwg.org/#header-name
 * @param {string} potentialValue
 */
function isValidHeaderName (potentialValue) {
  return isValidHTTPToken(potentialValue)
}

/**
 * @see https://fetch.spec.whatwg.org/#header-value
 * @param {string} potentialValue
 */
function isValidHeaderValue (potentialValue) {
  // - Has no leading or trailing HTTP tab or space bytes.
  // - Contains no 0x00 (NUL) or HTTP newline bytes.
  if (
    potentialValue.startsWith('\t') ||
    potentialValue.startsWith(' ') ||
    potentialValue.endsWith('\t') ||
    potentialValue.endsWith(' ')
  ) {
    return false
  }

  if (
    potentialValue.includes('\0') ||
    potentialValue.includes('\r') ||
    potentialValue.includes('\n')
  ) {
    return false
  }

  return true
}

// https://w3c.github.io/webappsec-referrer-policy/#set-requests-referrer-policy-on-redirect
function setRequestReferrerPolicyOnRedirect (request, actualResponse) {
  //  Given a request request and a response actualResponse, this algorithm
  //  updates request’s referrer policy according to the Referrer-Policy
  //  header (if any) in actualResponse.

  // 1. Let policy be the result of executing § 8.1 Parse a referrer policy
  // from a Referrer-Policy header on actualResponse.

  // 8.1 Parse a referrer policy from a Referrer-Policy header
  // 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy` and response’s header list.
  const { headersList } = actualResponse
  // 2. Let policy be the empty string.
  // 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty string, then set policy to token.
  // 4. Return policy.
  const policyHeader = (headersList.get('referrer-policy') ?? '').split(',')

  // Note: As the referrer-policy can contain multiple policies
  // separated by comma, we need to loop through all of them
  // and pick the first valid one.
  // Ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy#specify_a_fallback_policy
  let policy = ''
  if (policyHeader.length > 0) {
    // The right-most policy takes precedence.
    // The left-most policy is the fallback.
    for (let i = policyHeader.length; i !== 0; i--) {
      const token = policyHeader[i - 1].trim()
      if (referrerPolicyTokens.has(token)) {
        policy = token
        break
      }
    }
  }

  // 2. If policy is not the empty string, then set request’s referrer policy to policy.
  if (policy !== '') {
    request.referrerPolicy = policy
  }
}

// https://fetch.spec.whatwg.org/#cross-origin-resource-policy-check
function crossOriginResourcePolicyCheck () {
  // TODO
  return 'allowed'
}

// https://fetch.spec.whatwg.org/#concept-cors-check
function corsCheck () {
  // TODO
  return 'success'
}

// https://fetch.spec.whatwg.org/#concept-tao-check
function TAOCheck () {
  // TODO
  return 'success'
}

function appendFetchMetadata (httpRequest) {
  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-dest-header
  //  TODO

  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-mode-header

  //  1. Assert: r’s url is a potentially trustworthy URL.
  //  TODO

  //  2. Let header be a Structured Header whose value is a token.
  let header = null

  //  3. Set header’s value to r’s mode.
  header = httpRequest.mode

  //  4. Set a structured field value `Sec-Fetch-Mode`/header in r’s header list.
  httpRequest.headersList.set('sec-fetch-mode', header)

  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-site-header
  //  TODO

  //  https://w3c.github.io/webappsec-fetch-metadata/#sec-fetch-user-header
  //  TODO
}

// https://fetch.spec.whatwg.org/#append-a-request-origin-header
function appendRequestOriginHeader (request) {
  // 1. Let serializedOrigin be the result of byte-serializing a request origin with request.
  let serializedOrigin = request.origin

  // 2. If request’s response tainting is "cors" or request’s mode is "websocket", then append (`Origin`, serializedOrigin) to request’s header list.
  if (request.responseTainting === 'cors' || request.mode === 'websocket') {
    if (serializedOrigin) {
      request.headersList.append('origin', serializedOrigin)
    }

  // 3. Otherwise, if request’s method is neither `GET` nor `HEAD`, then:
  } else if (request.method !== 'GET' && request.method !== 'HEAD') {
    // 1. Switch on request’s referrer policy:
    switch (request.referrerPolicy) {
      case 'no-referrer':
        // Set serializedOrigin to `null`.
        serializedOrigin = null
        break
      case 'no-referrer-when-downgrade':
      case 'strict-origin':
      case 'strict-origin-when-cross-origin':
        // If request’s origin is a tuple origin, its scheme is "https", and request’s current URL’s scheme is not "https", then set serializedOrigin to `null`.
        if (request.origin && urlHasHttpsScheme(request.origin) && !urlHasHttpsScheme(requestCurrentURL(request))) {
          serializedOrigin = null
        }
        break
      case 'same-origin':
        // If request’s origin is not same origin with request’s current URL’s origin, then set serializedOrigin to `null`.
        if (!sameOrigin(request, requestCurrentURL(request))) {
          serializedOrigin = null
        }
        break
      default:
        // Do nothing.
    }

    if (serializedOrigin) {
      // 2. Append (`Origin`, serializedOrigin) to request’s header list.
      request.headersList.append('origin', serializedOrigin)
    }
  }
}

function coarsenedSharedCurrentTime (crossOriginIsolatedCapability) {
  // TODO
  return performance.now()
}

// https://fetch.spec.whatwg.org/#create-an-opaque-timing-info
function createOpaqueTimingInfo (timingInfo) {
  return {
    startTime: timingInfo.startTime ?? 0,
    redirectStartTime: 0,
    redirectEndTime: 0,
    postRedirectStartTime: timingInfo.startTime ?? 0,
    finalServiceWorkerStartTime: 0,
    finalNetworkResponseStartTime: 0,
    finalNetworkRequestStartTime: 0,
    endTime: 0,
    encodedBodySize: 0,
    decodedBodySize: 0,
    finalConnectionTimingInfo: null
  }
}

// https://html.spec.whatwg.org/multipage/origin.html#policy-container
function makePolicyContainer () {
  // Note: the fetch spec doesn't make use of embedder policy or CSP list
  return {
    referrerPolicy: 'strict-origin-when-cross-origin'
  }
}

// https://html.spec.whatwg.org/multipage/origin.html#clone-a-policy-container
function clonePolicyContainer (policyContainer) {
  return {
    referrerPolicy: policyContainer.referrerPolicy
  }
}

// https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer
function determineRequestsReferrer (request) {
  // 1. Let policy be request's referrer policy.
  const policy = request.referrerPolicy

  // Note: policy cannot (shouldn't) be null or an empty string.
  assert(policy)

  // 2. Let environment be request’s client.

  let referrerSource = null

  // 3. Switch on request’s referrer:
  if (request.referrer === 'client') {
    // Note: node isn't a browser and doesn't implement document/iframes,
    // so we bypass this step and replace it with our own.

    const globalOrigin = getGlobalOrigin()

    if (!globalOrigin || globalOrigin.origin === 'null') {
      return 'no-referrer'
    }

    // note: we need to clone it as it's mutated
    referrerSource = new URL(globalOrigin)
  } else if (request.referrer instanceof URL) {
    // Let referrerSource be request’s referrer.
    referrerSource = request.referrer
  }

  // 4. Let request’s referrerURL be the result of stripping referrerSource for
  //    use as a referrer.
  let referrerURL = stripURLForReferrer(referrerSource)

  // 5. Let referrerOrigin be the result of stripping referrerSource for use as
  //    a referrer, with the origin-only flag set to true.
  const referrerOrigin = stripURLForReferrer(referrerSource, true)

  // 6. If the result of serializing referrerURL is a string whose length is
  //    greater than 4096, set referrerURL to referrerOrigin.
  if (referrerURL.toString().length > 4096) {
    referrerURL = referrerOrigin
  }

  const areSameOrigin = sameOrigin(request, referrerURL)
  const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerURL) &&
    !isURLPotentiallyTrustworthy(request.url)

  // 8. Execute the switch statements corresponding to the value of policy:
  switch (policy) {
    case 'origin': return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true)
    case 'unsafe-url': return referrerURL
    case 'same-origin':
      return areSameOrigin ? referrerOrigin : 'no-referrer'
    case 'origin-when-cross-origin':
      return areSameOrigin ? referrerURL : referrerOrigin
    case 'strict-origin-when-cross-origin': {
      const currentURL = requestCurrentURL(request)

      // 1. If the origin of referrerURL and the origin of request’s current
      //    URL are the same, then return referrerURL.
      if (sameOrigin(referrerURL, currentURL)) {
        return referrerURL
      }

      // 2. If referrerURL is a potentially trustworthy URL and request’s
      //    current URL is not a potentially trustworthy URL, then return no
      //    referrer.
      if (isURLPotentiallyTrustworthy(referrerURL) && !isURLPotentiallyTrustworthy(currentURL)) {
        return 'no-referrer'
      }

      // 3. Return referrerOrigin.
      return referrerOrigin
    }
    case 'strict-origin': // eslint-disable-line
      /**
         * 1. If referrerURL is a potentially trustworthy URL and
         * request’s current URL is not a potentially trustworthy URL,
         * then return no referrer.
         * 2. Return referrerOrigin
        */
    case 'no-referrer-when-downgrade': // eslint-disable-line
      /**
       * 1. If referrerURL is a potentially trustworthy URL and
       * request’s current URL is not a potentially trustworthy URL,
       * then return no referrer.
       * 2. Return referrerOrigin
      */

    default: // eslint-disable-line
      return isNonPotentiallyTrustWorthy ? 'no-referrer' : referrerOrigin
  }
}

/**
 * @see https://w3c.github.io/webappsec-referrer-policy/#strip-url
 * @param {URL} url
 * @param {boolean|undefined} originOnly
 */
function stripURLForReferrer (url, originOnly) {
  // 1. Assert: url is a URL.
  assert(url instanceof URL)

  // 2. If url’s scheme is a local scheme, then return no referrer.
  if (url.protocol === 'file:' || url.protocol === 'about:' || url.protocol === 'blank:') {
    return 'no-referrer'
  }

  // 3. Set url’s username to the empty string.
  url.username = ''

  // 4. Set url’s password to the empty string.
  url.password = ''

  // 5. Set url’s fragment to null.
  url.hash = ''

  // 6. If the origin-only flag is true, then:
  if (originOnly) {
    // 1. Set url’s path to « the empty string ».
    url.pathname = ''

    // 2. Set url’s query to null.
    url.search = ''
  }

  // 7. Return url.
  return url
}

function isURLPotentiallyTrustworthy (url) {
  if (!(url instanceof URL)) {
    return false
  }

  // If child of about, return true
  if (url.href === 'about:blank' || url.href === 'about:srcdoc') {
    return true
  }

  // If scheme is data, return true
  if (url.protocol === 'data:') return true

  // If file, return true
  if (url.protocol === 'file:') return true

  return isOriginPotentiallyTrustworthy(url.origin)

  function isOriginPotentiallyTrustworthy (origin) {
    // If origin is explicitly null, return false
    if (origin == null || origin === 'null') return false

    const originAsURL = new URL(origin)

    // If secure, return true
    if (originAsURL.protocol === 'https:' || originAsURL.protocol === 'wss:') {
      return true
    }

    // If localhost or variants, return true
    if (/^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(originAsURL.hostname) ||
     (originAsURL.hostname === 'localhost' || originAsURL.hostname.includes('localhost.')) ||
     (originAsURL.hostname.endsWith('.localhost'))) {
      return true
    }

    // If any other, return false
    return false
  }
}

/**
 * @see https://w3c.github.io/webappsec-subresource-integrity/#does-response-match-metadatalist
 * @param {Uint8Array} bytes
 * @param {string} metadataList
 */
function bytesMatch (bytes, metadataList) {
  // If node is not built with OpenSSL support, we cannot check
  // a request's integrity, so allow it by default (the spec will
  // allow requests if an invalid hash is given, as precedence).
  /* istanbul ignore if: only if node is built with --without-ssl */
  if (crypto === undefined) {
    return true
  }

  // 1. Let parsedMetadata be the result of parsing metadataList.
  const parsedMetadata = parseMetadata(metadataList)

  // 2. If parsedMetadata is no metadata, return true.
  if (parsedMetadata === 'no metadata') {
    return true
  }

  // 3. If response is not eligible for integrity validation, return false.
  // TODO

  // 4. If parsedMetadata is the empty set, return true.
  if (parsedMetadata.length === 0) {
    return true
  }

  // 5. Let metadata be the result of getting the strongest
  //    metadata from parsedMetadata.
  const strongest = getStrongestMetadata(parsedMetadata)
  const metadata = filterMetadataListByAlgorithm(parsedMetadata, strongest)

  // 6. For each item in metadata:
  for (const item of metadata) {
    // 1. Let algorithm be the alg component of item.
    const algorithm = item.algo

    // 2. Let expectedValue be the val component of item.
    const expectedValue = item.hash

    // See https://github.com/web-platform-tests/wpt/commit/e4c5cc7a5e48093220528dfdd1c4012dc3837a0e
    // "be liberal with padding". This is annoying, and it's not even in the spec.

    // 3. Let actualValue be the result of applying algorithm to bytes.
    let actualValue = crypto.createHash(algorithm).update(bytes).digest('base64')

    if (actualValue[actualValue.length - 1] === '=') {
      if (actualValue[actualValue.length - 2] === '=') {
        actualValue = actualValue.slice(0, -2)
      } else {
        actualValue = actualValue.slice(0, -1)
      }
    }

    // 4. If actualValue is a case-sensitive match for expectedValue,
    //    return true.
    if (compareBase64Mixed(actualValue, expectedValue)) {
      return true
    }
  }

  // 7. Return false.
  return false
}

// https://w3c.github.io/webappsec-subresource-integrity/#grammardef-hash-with-options
// https://www.w3.org/TR/CSP2/#source-list-syntax
// https://www.rfc-editor.org/rfc/rfc5234#appendix-B.1
const parseHashWithOptions = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i

/**
 * @see https://w3c.github.io/webappsec-subresource-integrity/#parse-metadata
 * @param {string} metadata
 */
function parseMetadata (metadata) {
  // 1. Let result be the empty set.
  /** @type {{ algo: string, hash: string }[]} */
  const result = []

  // 2. Let empty be equal to true.
  let empty = true

  // 3. For each token returned by splitting metadata on spaces:
  for (const token of metadata.split(' ')) {
    // 1. Set empty to false.
    empty = false

    // 2. Parse token as a hash-with-options.
    const parsedToken = parseHashWithOptions.exec(token)

    // 3. If token does not parse, continue to the next token.
    if (
      parsedToken === null ||
      parsedToken.groups === undefined ||
      parsedToken.groups.algo === undefined
    ) {
      // Note: Chromium blocks the request at this point, but Firefox
      // gives a warning that an invalid integrity was given. The
      // correct behavior is to ignore these, and subsequently not
      // check the integrity of the resource.
      continue
    }

    // 4. Let algorithm be the hash-algo component of token.
    const algorithm = parsedToken.groups.algo.toLowerCase()

    // 5. If algorithm is a hash function recognized by the user
    //    agent, add the parsed token to result.
    if (supportedHashes.includes(algorithm)) {
      result.push(parsedToken.groups)
    }
  }

  // 4. Return no metadata if empty is true, otherwise return result.
  if (empty === true) {
    return 'no metadata'
  }

  return result
}

/**
 * @param {{ algo: 'sha256' | 'sha384' | 'sha512' }[]} metadataList
 */
function getStrongestMetadata (metadataList) {
  // Let algorithm be the algo component of the first item in metadataList.
  // Can be sha256
  let algorithm = metadataList[0].algo
  // If the algorithm is sha512, then it is the strongest
  // and we can return immediately
  if (algorithm[3] === '5') {
    return algorithm
  }

  for (let i = 1; i < metadataList.length; ++i) {
    const metadata = metadataList[i]
    // If the algorithm is sha512, then it is the strongest
    // and we can break the loop immediately
    if (metadata.algo[3] === '5') {
      algorithm = 'sha512'
      break
    // If the algorithm is sha384, then a potential sha256 or sha384 is ignored
    } else if (algorithm[3] === '3') {
      continue
    // algorithm is sha256, check if algorithm is sha384 and if so, set it as
    // the strongest
    } else if (metadata.algo[3] === '3') {
      algorithm = 'sha384'
    }
  }
  return algorithm
}

function filterMetadataListByAlgorithm (metadataList, algorithm) {
  if (metadataList.length === 1) {
    return metadataList
  }

  let pos = 0
  for (let i = 0; i < metadataList.length; ++i) {
    if (metadataList[i].algo === algorithm) {
      metadataList[pos++] = metadataList[i]
    }
  }

  metadataList.length = pos

  return metadataList
}

/**
 * Compares two base64 strings, allowing for base64url
 * in the second string.
 *
* @param {string} actualValue always base64
 * @param {string} expectedValue base64 or base64url
 * @returns {boolean}
 */
function compareBase64Mixed (actualValue, expectedValue) {
  if (actualValue.length !== expectedValue.length) {
    return false
  }
  for (let i = 0; i < actualValue.length; ++i) {
    if (actualValue[i] !== expectedValue[i]) {
      if (
        (actualValue[i] === '+' && expectedValue[i] === '-') ||
        (actualValue[i] === '/' && expectedValue[i] === '_')
      ) {
        continue
      }
      return false
    }
  }

  return true
}

// https://w3c.github.io/webappsec-upgrade-insecure-requests/#upgrade-request
function tryUpgradeRequestToAPotentiallyTrustworthyURL (request) {
  // TODO
}

/**
 * @link {https://html.spec.whatwg.org/multipage/origin.html#same-origin}
 * @param {URL} A
 * @param {URL} B
 */
function sameOrigin (A, B) {
  // 1. If A and B are the same opaque origin, then return true.
  if (A.origin === B.origin && A.origin === 'null') {
    return true
  }

  // 2. If A and B are both tuple origins and their schemes,
  //    hosts, and port are identical, then return true.
  if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {
    return true
  }

  // 3. Return false.
  return false
}

function createDeferredPromise () {
  let res
  let rej
  const promise = new Promise((resolve, reject) => {
    res = resolve
    rej = reject
  })

  return { promise, resolve: res, reject: rej }
}

function isAborted (fetchParams) {
  return fetchParams.controller.state === 'aborted'
}

function isCancelled (fetchParams) {
  return fetchParams.controller.state === 'aborted' ||
    fetchParams.controller.state === 'terminated'
}

const normalizeMethodRecord = {
  delete: 'DELETE',
  DELETE: 'DELETE',
  get: 'GET',
  GET: 'GET',
  head: 'HEAD',
  HEAD: 'HEAD',
  options: 'OPTIONS',
  OPTIONS: 'OPTIONS',
  post: 'POST',
  POST: 'POST',
  put: 'PUT',
  PUT: 'PUT'
}

// Note: object prototypes should not be able to be referenced. e.g. `Object#hasOwnProperty`.
Object.setPrototypeOf(normalizeMethodRecord, null)

/**
 * @see https://fetch.spec.whatwg.org/#concept-method-normalize
 * @param {string} method
 */
function normalizeMethod (method) {
  return normalizeMethodRecord[method.toLowerCase()] ?? method
}

// https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string
function serializeJavascriptValueToJSONString (value) {
  // 1. Let result be ? Call(%JSON.stringify%, undefined, « value »).
  const result = JSON.stringify(value)

  // 2. If result is undefined, then throw a TypeError.
  if (result === undefined) {
    throw new TypeError('Value is not JSON serializable')
  }

  // 3. Assert: result is a string.
  assert(typeof result === 'string')

  // 4. Return result.
  return result
}

// https://tc39.es/ecma262/#sec-%25iteratorprototype%25-object
const esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()))

/**
 * @see https://webidl.spec.whatwg.org/#dfn-iterator-prototype-object
 * @param {() => unknown[]} iterator
 * @param {string} name name of the instance
 * @param {'key'|'value'|'key+value'} kind
 */
function makeIterator (iterator, name, kind) {
  const object = {
    index: 0,
    kind,
    target: iterator
  }

  const i = {
    next () {
      // 1. Let interface be the interface for which the iterator prototype object exists.

      // 2. Let thisValue be the this value.

      // 3. Let object be ? ToObject(thisValue).

      // 4. If object is a platform object, then perform a security
      //    check, passing:

      // 5. If object is not a default iterator object for interface,
      //    then throw a TypeError.
      if (Object.getPrototypeOf(this) !== i) {
        throw new TypeError(
          `'next' called on an object that does not implement interface ${name} Iterator.`
        )
      }

      // 6. Let index be object’s index.
      // 7. Let kind be object’s kind.
      // 8. Let values be object’s target's value pairs to iterate over.
      const { index, kind, target } = object
      const values = target()

      // 9. Let len be the length of values.
      const len = values.length

      // 10. If index is greater than or equal to len, then return
      //     CreateIterResultObject(undefined, true).
      if (index >= len) {
        return { value: undefined, done: true }
      }

      // 11. Let pair be the entry in values at index index.
      const pair = values[index]

      // 12. Set object’s index to index + 1.
      object.index = index + 1

      // 13. Return the iterator result for pair and kind.
      return iteratorResult(pair, kind)
    },
    // The class string of an iterator prototype object for a given interface is the
    // result of concatenating the identifier of the interface and the string " Iterator".
    [Symbol.toStringTag]: `${name} Iterator`
  }

  // The [[Prototype]] internal slot of an iterator prototype object must be %IteratorPrototype%.
  Object.setPrototypeOf(i, esIteratorPrototype)
  // esIteratorPrototype needs to be the prototype of i
  // which is the prototype of an empty object. Yes, it's confusing.
  return Object.setPrototypeOf({}, i)
}

// https://webidl.spec.whatwg.org/#iterator-result
function iteratorResult (pair, kind) {
  let result

  // 1. Let result be a value determined by the value of kind:
  switch (kind) {
    case 'key': {
      // 1. Let idlKey be pair’s key.
      // 2. Let key be the result of converting idlKey to an
      //    ECMAScript value.
      // 3. result is key.
      result = pair[0]
      break
    }
    case 'value': {
      // 1. Let idlValue be pair’s value.
      // 2. Let value be the result of converting idlValue to
      //    an ECMAScript value.
      // 3. result is value.
      result = pair[1]
      break
    }
    case 'key+value': {
      // 1. Let idlKey be pair’s key.
      // 2. Let idlValue be pair’s value.
      // 3. Let key be the result of converting idlKey to an
      //    ECMAScript value.
      // 4. Let value be the result of converting idlValue to
      //    an ECMAScript value.
      // 5. Let array be ! ArrayCreate(2).
      // 6. Call ! CreateDataProperty(array, "0", key).
      // 7. Call ! CreateDataProperty(array, "1", value).
      // 8. result is array.
      result = pair
      break
    }
  }

  // 2. Return CreateIterResultObject(result, false).
  return { value: result, done: false }
}

/**
 * @see https://fetch.spec.whatwg.org/#body-fully-read
 */
async function fullyReadBody (body, processBody, processBodyError) {
  // 1. If taskDestination is null, then set taskDestination to
  //    the result of starting a new parallel queue.

  // 2. Let successSteps given a byte sequence bytes be to queue a
  //    fetch task to run processBody given bytes, with taskDestination.
  const successSteps = processBody

  // 3. Let errorSteps be to queue a fetch task to run processBodyError,
  //    with taskDestination.
  const errorSteps = processBodyError

  // 4. Let reader be the result of getting a reader for body’s stream.
  //    If that threw an exception, then run errorSteps with that
  //    exception and return.
  let reader

  try {
    reader = body.stream.getReader()
  } catch (e) {
    errorSteps(e)
    return
  }

  // 5. Read all bytes from reader, given successSteps and errorSteps.
  try {
    const result = await readAllBytes(reader)
    successSteps(result)
  } catch (e) {
    errorSteps(e)
  }
}

/** @type {ReadableStream} */
let ReadableStream = globalThis.ReadableStream

function isReadableStreamLike (stream) {
  if (!ReadableStream) {
    ReadableStream = (__webpack_require__(/*! stream/web */ "stream/web").ReadableStream)
  }

  return stream instanceof ReadableStream || (
    stream[Symbol.toStringTag] === 'ReadableStream' &&
    typeof stream.tee === 'function'
  )
}

const MAXIMUM_ARGUMENT_LENGTH = 65535

/**
 * @see https://infra.spec.whatwg.org/#isomorphic-decode
 * @param {number[]|Uint8Array} input
 */
function isomorphicDecode (input) {
  // 1. To isomorphic decode a byte sequence input, return a string whose code point
  //    length is equal to input’s length and whose code points have the same values
  //    as the values of input’s bytes, in the same order.

  if (input.length < MAXIMUM_ARGUMENT_LENGTH) {
    return String.fromCharCode(...input)
  }

  return input.reduce((previous, current) => previous + String.fromCharCode(current), '')
}

/**
 * @param {ReadableStreamController<Uint8Array>} controller
 */
function readableStreamClose (controller) {
  try {
    controller.close()
  } catch (err) {
    // TODO: add comment explaining why this error occurs.
    if (!err.message.includes('Controller is already closed')) {
      throw err
    }
  }
}

/**
 * @see https://infra.spec.whatwg.org/#isomorphic-encode
 * @param {string} input
 */
function isomorphicEncode (input) {
  // 1. Assert: input contains no code points greater than U+00FF.
  for (let i = 0; i < input.length; i++) {
    assert(input.charCodeAt(i) <= 0xFF)
  }

  // 2. Return a byte sequence whose length is equal to input’s code
  //    point length and whose bytes have the same values as the
  //    values of input’s code points, in the same order
  return input
}

/**
 * @see https://streams.spec.whatwg.org/#readablestreamdefaultreader-read-all-bytes
 * @see https://streams.spec.whatwg.org/#read-loop
 * @param {ReadableStreamDefaultReader} reader
 */
async function readAllBytes (reader) {
  const bytes = []
  let byteLength = 0

  while (true) {
    const { done, value: chunk } = await reader.read()

    if (done) {
      // 1. Call successSteps with bytes.
      return Buffer.concat(bytes, byteLength)
    }

    // 1. If chunk is not a Uint8Array object, call failureSteps
    //    with a TypeError and abort these steps.
    if (!isUint8Array(chunk)) {
      throw new TypeError('Received non-Uint8Array chunk')
    }

    // 2. Append the bytes represented by chunk to bytes.
    bytes.push(chunk)
    byteLength += chunk.length

    // 3. Read-loop given reader, bytes, successSteps, and failureSteps.
  }
}

/**
 * @see https://fetch.spec.whatwg.org/#is-local
 * @param {URL} url
 */
function urlIsLocal (url) {
  assert('protocol' in url) // ensure it's a url object

  const protocol = url.protocol

  return protocol === 'about:' || protocol === 'blob:' || protocol === 'data:'
}

/**
 * @param {string|URL} url
 */
function urlHasHttpsScheme (url) {
  if (typeof url === 'string') {
    return url.startsWith('https:')
  }

  return url.protocol === 'https:'
}

/**
 * @see https://fetch.spec.whatwg.org/#http-scheme
 * @param {URL} url
 */
function urlIsHttpHttpsScheme (url) {
  assert('protocol' in url) // ensure it's a url object

  const protocol = url.protocol

  return protocol === 'http:' || protocol === 'https:'
}

/**
 * Fetch supports node >= 16.8.0, but Object.hasOwn was added in v16.9.0.
 */
const hasOwn = Object.hasOwn || ((dict, key) => Object.prototype.hasOwnProperty.call(dict, key))

module.exports = {
  isAborted,
  isCancelled,
  createDeferredPromise,
  ReadableStreamFrom,
  toUSVString,
  tryUpgradeRequestToAPotentiallyTrustworthyURL,
  coarsenedSharedCurrentTime,
  determineRequestsReferrer,
  makePolicyContainer,
  clonePolicyContainer,
  appendFetchMetadata,
  appendRequestOriginHeader,
  TAOCheck,
  corsCheck,
  crossOriginResourcePolicyCheck,
  createOpaqueTimingInfo,
  setRequestReferrerPolicyOnRedirect,
  isValidHTTPToken,
  requestBadPort,
  requestCurrentURL,
  responseURL,
  responseLocationURL,
  isBlobLike,
  isURLPotentiallyTrustworthy,
  isValidReasonPhrase,
  sameOrigin,
  normalizeMethod,
  serializeJavascriptValueToJSONString,
  makeIterator,
  isValidHeaderName,
  isValidHeaderValue,
  hasOwn,
  isErrorLike,
  fullyReadBody,
  bytesMatch,
  isReadableStreamLike,
  readableStreamClose,
  isomorphicEncode,
  isomorphicDecode,
  urlIsLocal,
  urlHasHttpsScheme,
  urlIsHttpHttpsScheme,
  readAllBytes,
  normalizeMethodRecord,
  parseMetadata
}


/***/ }),

/***/ "../../node_modules/undici/lib/fetch/webidl.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/fetch/webidl.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { types } = __webpack_require__(/*! util */ "util")
const { hasOwn, toUSVString } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fetch/util.js")

/** @type {import('../../types/webidl').Webidl} */
const webidl = {}
webidl.converters = {}
webidl.util = {}
webidl.errors = {}

webidl.errors.exception = function (message) {
  return new TypeError(`${message.header}: ${message.message}`)
}

webidl.errors.conversionFailed = function (context) {
  const plural = context.types.length === 1 ? '' : ' one of'
  const message =
    `${context.argument} could not be converted to` +
    `${plural}: ${context.types.join(', ')}.`

  return webidl.errors.exception({
    header: context.prefix,
    message
  })
}

webidl.errors.invalidArgument = function (context) {
  return webidl.errors.exception({
    header: context.prefix,
    message: `"${context.value}" is an invalid ${context.type}.`
  })
}

// https://webidl.spec.whatwg.org/#implements
webidl.brandCheck = function (V, I, opts = undefined) {
  if (opts?.strict !== false && !(V instanceof I)) {
    throw new TypeError('Illegal invocation')
  } else {
    return V?.[Symbol.toStringTag] === I.prototype[Symbol.toStringTag]
  }
}

webidl.argumentLengthCheck = function ({ length }, min, ctx) {
  if (length < min) {
    throw webidl.errors.exception({
      message: `${min} argument${min !== 1 ? 's' : ''} required, ` +
               `but${length ? ' only' : ''} ${length} found.`,
      ...ctx
    })
  }
}

webidl.illegalConstructor = function () {
  throw webidl.errors.exception({
    header: 'TypeError',
    message: 'Illegal constructor'
  })
}

// https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values
webidl.util.Type = function (V) {
  switch (typeof V) {
    case 'undefined': return 'Undefined'
    case 'boolean': return 'Boolean'
    case 'string': return 'String'
    case 'symbol': return 'Symbol'
    case 'number': return 'Number'
    case 'bigint': return 'BigInt'
    case 'function':
    case 'object': {
      if (V === null) {
        return 'Null'
      }

      return 'Object'
    }
  }
}

// https://webidl.spec.whatwg.org/#abstract-opdef-converttoint
webidl.util.ConvertToInt = function (V, bitLength, signedness, opts = {}) {
  let upperBound
  let lowerBound

  // 1. If bitLength is 64, then:
  if (bitLength === 64) {
    // 1. Let upperBound be 2^53 − 1.
    upperBound = Math.pow(2, 53) - 1

    // 2. If signedness is "unsigned", then let lowerBound be 0.
    if (signedness === 'unsigned') {
      lowerBound = 0
    } else {
      // 3. Otherwise let lowerBound be −2^53 + 1.
      lowerBound = Math.pow(-2, 53) + 1
    }
  } else if (signedness === 'unsigned') {
    // 2. Otherwise, if signedness is "unsigned", then:

    // 1. Let lowerBound be 0.
    lowerBound = 0

    // 2. Let upperBound be 2^bitLength − 1.
    upperBound = Math.pow(2, bitLength) - 1
  } else {
    // 3. Otherwise:

    // 1. Let lowerBound be -2^bitLength − 1.
    lowerBound = Math.pow(-2, bitLength) - 1

    // 2. Let upperBound be 2^bitLength − 1 − 1.
    upperBound = Math.pow(2, bitLength - 1) - 1
  }

  // 4. Let x be ? ToNumber(V).
  let x = Number(V)

  // 5. If x is −0, then set x to +0.
  if (x === 0) {
    x = 0
  }

  // 6. If the conversion is to an IDL type associated
  //    with the [EnforceRange] extended attribute, then:
  if (opts.enforceRange === true) {
    // 1. If x is NaN, +∞, or −∞, then throw a TypeError.
    if (
      Number.isNaN(x) ||
      x === Number.POSITIVE_INFINITY ||
      x === Number.NEGATIVE_INFINITY
    ) {
      throw webidl.errors.exception({
        header: 'Integer conversion',
        message: `Could not convert ${V} to an integer.`
      })
    }

    // 2. Set x to IntegerPart(x).
    x = webidl.util.IntegerPart(x)

    // 3. If x < lowerBound or x > upperBound, then
    //    throw a TypeError.
    if (x < lowerBound || x > upperBound) {
      throw webidl.errors.exception({
        header: 'Integer conversion',
        message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`
      })
    }

    // 4. Return x.
    return x
  }

  // 7. If x is not NaN and the conversion is to an IDL
  //    type associated with the [Clamp] extended
  //    attribute, then:
  if (!Number.isNaN(x) && opts.clamp === true) {
    // 1. Set x to min(max(x, lowerBound), upperBound).
    x = Math.min(Math.max(x, lowerBound), upperBound)

    // 2. Round x to the nearest integer, choosing the
    //    even integer if it lies halfway between two,
    //    and choosing +0 rather than −0.
    if (Math.floor(x) % 2 === 0) {
      x = Math.floor(x)
    } else {
      x = Math.ceil(x)
    }

    // 3. Return x.
    return x
  }

  // 8. If x is NaN, +0, +∞, or −∞, then return +0.
  if (
    Number.isNaN(x) ||
    (x === 0 && Object.is(0, x)) ||
    x === Number.POSITIVE_INFINITY ||
    x === Number.NEGATIVE_INFINITY
  ) {
    return 0
  }

  // 9. Set x to IntegerPart(x).
  x = webidl.util.IntegerPart(x)

  // 10. Set x to x modulo 2^bitLength.
  x = x % Math.pow(2, bitLength)

  // 11. If signedness is "signed" and x ≥ 2^bitLength − 1,
  //    then return x − 2^bitLength.
  if (signedness === 'signed' && x >= Math.pow(2, bitLength) - 1) {
    return x - Math.pow(2, bitLength)
  }

  // 12. Otherwise, return x.
  return x
}

// https://webidl.spec.whatwg.org/#abstract-opdef-integerpart
webidl.util.IntegerPart = function (n) {
  // 1. Let r be floor(abs(n)).
  const r = Math.floor(Math.abs(n))

  // 2. If n < 0, then return -1 × r.
  if (n < 0) {
    return -1 * r
  }

  // 3. Otherwise, return r.
  return r
}

// https://webidl.spec.whatwg.org/#es-sequence
webidl.sequenceConverter = function (converter) {
  return (V) => {
    // 1. If Type(V) is not Object, throw a TypeError.
    if (webidl.util.Type(V) !== 'Object') {
      throw webidl.errors.exception({
        header: 'Sequence',
        message: `Value of type ${webidl.util.Type(V)} is not an Object.`
      })
    }

    // 2. Let method be ? GetMethod(V, @@iterator).
    /** @type {Generator} */
    const method = V?.[Symbol.iterator]?.()
    const seq = []

    // 3. If method is undefined, throw a TypeError.
    if (
      method === undefined ||
      typeof method.next !== 'function'
    ) {
      throw webidl.errors.exception({
        header: 'Sequence',
        message: 'Object is not an iterator.'
      })
    }

    // https://webidl.spec.whatwg.org/#create-sequence-from-iterable
    while (true) {
      const { done, value } = method.next()

      if (done) {
        break
      }

      seq.push(converter(value))
    }

    return seq
  }
}

// https://webidl.spec.whatwg.org/#es-to-record
webidl.recordConverter = function (keyConverter, valueConverter) {
  return (O) => {
    // 1. If Type(O) is not Object, throw a TypeError.
    if (webidl.util.Type(O) !== 'Object') {
      throw webidl.errors.exception({
        header: 'Record',
        message: `Value of type ${webidl.util.Type(O)} is not an Object.`
      })
    }

    // 2. Let result be a new empty instance of record<K, V>.
    const result = {}

    if (!types.isProxy(O)) {
      // Object.keys only returns enumerable properties
      const keys = Object.keys(O)

      for (const key of keys) {
        // 1. Let typedKey be key converted to an IDL value of type K.
        const typedKey = keyConverter(key)

        // 2. Let value be ? Get(O, key).
        // 3. Let typedValue be value converted to an IDL value of type V.
        const typedValue = valueConverter(O[key])

        // 4. Set result[typedKey] to typedValue.
        result[typedKey] = typedValue
      }

      // 5. Return result.
      return result
    }

    // 3. Let keys be ? O.[[OwnPropertyKeys]]().
    const keys = Reflect.ownKeys(O)

    // 4. For each key of keys.
    for (const key of keys) {
      // 1. Let desc be ? O.[[GetOwnProperty]](key).
      const desc = Reflect.getOwnPropertyDescriptor(O, key)

      // 2. If desc is not undefined and desc.[[Enumerable]] is true:
      if (desc?.enumerable) {
        // 1. Let typedKey be key converted to an IDL value of type K.
        const typedKey = keyConverter(key)

        // 2. Let value be ? Get(O, key).
        // 3. Let typedValue be value converted to an IDL value of type V.
        const typedValue = valueConverter(O[key])

        // 4. Set result[typedKey] to typedValue.
        result[typedKey] = typedValue
      }
    }

    // 5. Return result.
    return result
  }
}

webidl.interfaceConverter = function (i) {
  return (V, opts = {}) => {
    if (opts.strict !== false && !(V instanceof i)) {
      throw webidl.errors.exception({
        header: i.name,
        message: `Expected ${V} to be an instance of ${i.name}.`
      })
    }

    return V
  }
}

webidl.dictionaryConverter = function (converters) {
  return (dictionary) => {
    const type = webidl.util.Type(dictionary)
    const dict = {}

    if (type === 'Null' || type === 'Undefined') {
      return dict
    } else if (type !== 'Object') {
      throw webidl.errors.exception({
        header: 'Dictionary',
        message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`
      })
    }

    for (const options of converters) {
      const { key, defaultValue, required, converter } = options

      if (required === true) {
        if (!hasOwn(dictionary, key)) {
          throw webidl.errors.exception({
            header: 'Dictionary',
            message: `Missing required key "${key}".`
          })
        }
      }

      let value = dictionary[key]
      const hasDefault = hasOwn(options, 'defaultValue')

      // Only use defaultValue if value is undefined and
      // a defaultValue options was provided.
      if (hasDefault && value !== null) {
        value = value ?? defaultValue
      }

      // A key can be optional and have no default value.
      // When this happens, do not perform a conversion,
      // and do not assign the key a value.
      if (required || hasDefault || value !== undefined) {
        value = converter(value)

        if (
          options.allowedValues &&
          !options.allowedValues.includes(value)
        ) {
          throw webidl.errors.exception({
            header: 'Dictionary',
            message: `${value} is not an accepted type. Expected one of ${options.allowedValues.join(', ')}.`
          })
        }

        dict[key] = value
      }
    }

    return dict
  }
}

webidl.nullableConverter = function (converter) {
  return (V) => {
    if (V === null) {
      return V
    }

    return converter(V)
  }
}

// https://webidl.spec.whatwg.org/#es-DOMString
webidl.converters.DOMString = function (V, opts = {}) {
  // 1. If V is null and the conversion is to an IDL type
  //    associated with the [LegacyNullToEmptyString]
  //    extended attribute, then return the DOMString value
  //    that represents the empty string.
  if (V === null && opts.legacyNullToEmptyString) {
    return ''
  }

  // 2. Let x be ? ToString(V).
  if (typeof V === 'symbol') {
    throw new TypeError('Could not convert argument of type symbol to string.')
  }

  // 3. Return the IDL DOMString value that represents the
  //    same sequence of code units as the one the
  //    ECMAScript String value x represents.
  return String(V)
}

// https://webidl.spec.whatwg.org/#es-ByteString
webidl.converters.ByteString = function (V) {
  // 1. Let x be ? ToString(V).
  // Note: DOMString converter perform ? ToString(V)
  const x = webidl.converters.DOMString(V)

  // 2. If the value of any element of x is greater than
  //    255, then throw a TypeError.
  for (let index = 0; index < x.length; index++) {
    if (x.charCodeAt(index) > 255) {
      throw new TypeError(
        'Cannot convert argument to a ByteString because the character at ' +
        `index ${index} has a value of ${x.charCodeAt(index)} which is greater than 255.`
      )
    }
  }

  // 3. Return an IDL ByteString value whose length is the
  //    length of x, and where the value of each element is
  //    the value of the corresponding element of x.
  return x
}

// https://webidl.spec.whatwg.org/#es-USVString
webidl.converters.USVString = toUSVString

// https://webidl.spec.whatwg.org/#es-boolean
webidl.converters.boolean = function (V) {
  // 1. Let x be the result of computing ToBoolean(V).
  const x = Boolean(V)

  // 2. Return the IDL boolean value that is the one that represents
  //    the same truth value as the ECMAScript Boolean value x.
  return x
}

// https://webidl.spec.whatwg.org/#es-any
webidl.converters.any = function (V) {
  return V
}

// https://webidl.spec.whatwg.org/#es-long-long
webidl.converters['long long'] = function (V) {
  // 1. Let x be ? ConvertToInt(V, 64, "signed").
  const x = webidl.util.ConvertToInt(V, 64, 'signed')

  // 2. Return the IDL long long value that represents
  //    the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#es-unsigned-long-long
webidl.converters['unsigned long long'] = function (V) {
  // 1. Let x be ? ConvertToInt(V, 64, "unsigned").
  const x = webidl.util.ConvertToInt(V, 64, 'unsigned')

  // 2. Return the IDL unsigned long long value that
  //    represents the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#es-unsigned-long
webidl.converters['unsigned long'] = function (V) {
  // 1. Let x be ? ConvertToInt(V, 32, "unsigned").
  const x = webidl.util.ConvertToInt(V, 32, 'unsigned')

  // 2. Return the IDL unsigned long value that
  //    represents the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#es-unsigned-short
webidl.converters['unsigned short'] = function (V, opts) {
  // 1. Let x be ? ConvertToInt(V, 16, "unsigned").
  const x = webidl.util.ConvertToInt(V, 16, 'unsigned', opts)

  // 2. Return the IDL unsigned short value that represents
  //    the same numeric value as x.
  return x
}

// https://webidl.spec.whatwg.org/#idl-ArrayBuffer
webidl.converters.ArrayBuffer = function (V, opts = {}) {
  // 1. If Type(V) is not Object, or V does not have an
  //    [[ArrayBufferData]] internal slot, then throw a
  //    TypeError.
  // see: https://tc39.es/ecma262/#sec-properties-of-the-arraybuffer-instances
  // see: https://tc39.es/ecma262/#sec-properties-of-the-sharedarraybuffer-instances
  if (
    webidl.util.Type(V) !== 'Object' ||
    !types.isAnyArrayBuffer(V)
  ) {
    throw webidl.errors.conversionFailed({
      prefix: `${V}`,
      argument: `${V}`,
      types: ['ArrayBuffer']
    })
  }

  // 2. If the conversion is not to an IDL type associated
  //    with the [AllowShared] extended attribute, and
  //    IsSharedArrayBuffer(V) is true, then throw a
  //    TypeError.
  if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {
    throw webidl.errors.exception({
      header: 'ArrayBuffer',
      message: 'SharedArrayBuffer is not allowed.'
    })
  }

  // 3. If the conversion is not to an IDL type associated
  //    with the [AllowResizable] extended attribute, and
  //    IsResizableArrayBuffer(V) is true, then throw a
  //    TypeError.
  // Note: resizable ArrayBuffers are currently a proposal.

  // 4. Return the IDL ArrayBuffer value that is a
  //    reference to the same object as V.
  return V
}

webidl.converters.TypedArray = function (V, T, opts = {}) {
  // 1. Let T be the IDL type V is being converted to.

  // 2. If Type(V) is not Object, or V does not have a
  //    [[TypedArrayName]] internal slot with a value
  //    equal to T’s name, then throw a TypeError.
  if (
    webidl.util.Type(V) !== 'Object' ||
    !types.isTypedArray(V) ||
    V.constructor.name !== T.name
  ) {
    throw webidl.errors.conversionFailed({
      prefix: `${T.name}`,
      argument: `${V}`,
      types: [T.name]
    })
  }

  // 3. If the conversion is not to an IDL type associated
  //    with the [AllowShared] extended attribute, and
  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is
  //    true, then throw a TypeError.
  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
    throw webidl.errors.exception({
      header: 'ArrayBuffer',
      message: 'SharedArrayBuffer is not allowed.'
    })
  }

  // 4. If the conversion is not to an IDL type associated
  //    with the [AllowResizable] extended attribute, and
  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is
  //    true, then throw a TypeError.
  // Note: resizable array buffers are currently a proposal

  // 5. Return the IDL value of type T that is a reference
  //    to the same object as V.
  return V
}

webidl.converters.DataView = function (V, opts = {}) {
  // 1. If Type(V) is not Object, or V does not have a
  //    [[DataView]] internal slot, then throw a TypeError.
  if (webidl.util.Type(V) !== 'Object' || !types.isDataView(V)) {
    throw webidl.errors.exception({
      header: 'DataView',
      message: 'Object is not a DataView.'
    })
  }

  // 2. If the conversion is not to an IDL type associated
  //    with the [AllowShared] extended attribute, and
  //    IsSharedArrayBuffer(V.[[ViewedArrayBuffer]]) is true,
  //    then throw a TypeError.
  if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
    throw webidl.errors.exception({
      header: 'ArrayBuffer',
      message: 'SharedArrayBuffer is not allowed.'
    })
  }

  // 3. If the conversion is not to an IDL type associated
  //    with the [AllowResizable] extended attribute, and
  //    IsResizableArrayBuffer(V.[[ViewedArrayBuffer]]) is
  //    true, then throw a TypeError.
  // Note: resizable ArrayBuffers are currently a proposal

  // 4. Return the IDL DataView value that is a reference
  //    to the same object as V.
  return V
}

// https://webidl.spec.whatwg.org/#BufferSource
webidl.converters.BufferSource = function (V, opts = {}) {
  if (types.isAnyArrayBuffer(V)) {
    return webidl.converters.ArrayBuffer(V, opts)
  }

  if (types.isTypedArray(V)) {
    return webidl.converters.TypedArray(V, V.constructor)
  }

  if (types.isDataView(V)) {
    return webidl.converters.DataView(V, opts)
  }

  throw new TypeError(`Could not convert ${V} to a BufferSource.`)
}

webidl.converters['sequence<ByteString>'] = webidl.sequenceConverter(
  webidl.converters.ByteString
)

webidl.converters['sequence<sequence<ByteString>>'] = webidl.sequenceConverter(
  webidl.converters['sequence<ByteString>']
)

webidl.converters['record<ByteString, ByteString>'] = webidl.recordConverter(
  webidl.converters.ByteString,
  webidl.converters.ByteString
)

module.exports = {
  webidl
}


/***/ }),

/***/ "../../node_modules/undici/lib/fileapi/encoding.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/fileapi/encoding.js ***!
  \*********************************************************/
/***/ ((module) => {



/**
 * @see https://encoding.spec.whatwg.org/#concept-encoding-get
 * @param {string|undefined} label
 */
function getEncoding (label) {
  if (!label) {
    return 'failure'
  }

  // 1. Remove any leading and trailing ASCII whitespace from label.
  // 2. If label is an ASCII case-insensitive match for any of the
  //    labels listed in the table below, then return the
  //    corresponding encoding; otherwise return failure.
  switch (label.trim().toLowerCase()) {
    case 'unicode-1-1-utf-8':
    case 'unicode11utf8':
    case 'unicode20utf8':
    case 'utf-8':
    case 'utf8':
    case 'x-unicode20utf8':
      return 'UTF-8'
    case '866':
    case 'cp866':
    case 'csibm866':
    case 'ibm866':
      return 'IBM866'
    case 'csisolatin2':
    case 'iso-8859-2':
    case 'iso-ir-101':
    case 'iso8859-2':
    case 'iso88592':
    case 'iso_8859-2':
    case 'iso_8859-2:1987':
    case 'l2':
    case 'latin2':
      return 'ISO-8859-2'
    case 'csisolatin3':
    case 'iso-8859-3':
    case 'iso-ir-109':
    case 'iso8859-3':
    case 'iso88593':
    case 'iso_8859-3':
    case 'iso_8859-3:1988':
    case 'l3':
    case 'latin3':
      return 'ISO-8859-3'
    case 'csisolatin4':
    case 'iso-8859-4':
    case 'iso-ir-110':
    case 'iso8859-4':
    case 'iso88594':
    case 'iso_8859-4':
    case 'iso_8859-4:1988':
    case 'l4':
    case 'latin4':
      return 'ISO-8859-4'
    case 'csisolatincyrillic':
    case 'cyrillic':
    case 'iso-8859-5':
    case 'iso-ir-144':
    case 'iso8859-5':
    case 'iso88595':
    case 'iso_8859-5':
    case 'iso_8859-5:1988':
      return 'ISO-8859-5'
    case 'arabic':
    case 'asmo-708':
    case 'csiso88596e':
    case 'csiso88596i':
    case 'csisolatinarabic':
    case 'ecma-114':
    case 'iso-8859-6':
    case 'iso-8859-6-e':
    case 'iso-8859-6-i':
    case 'iso-ir-127':
    case 'iso8859-6':
    case 'iso88596':
    case 'iso_8859-6':
    case 'iso_8859-6:1987':
      return 'ISO-8859-6'
    case 'csisolatingreek':
    case 'ecma-118':
    case 'elot_928':
    case 'greek':
    case 'greek8':
    case 'iso-8859-7':
    case 'iso-ir-126':
    case 'iso8859-7':
    case 'iso88597':
    case 'iso_8859-7':
    case 'iso_8859-7:1987':
    case 'sun_eu_greek':
      return 'ISO-8859-7'
    case 'csiso88598e':
    case 'csisolatinhebrew':
    case 'hebrew':
    case 'iso-8859-8':
    case 'iso-8859-8-e':
    case 'iso-ir-138':
    case 'iso8859-8':
    case 'iso88598':
    case 'iso_8859-8':
    case 'iso_8859-8:1988':
    case 'visual':
      return 'ISO-8859-8'
    case 'csiso88598i':
    case 'iso-8859-8-i':
    case 'logical':
      return 'ISO-8859-8-I'
    case 'csisolatin6':
    case 'iso-8859-10':
    case 'iso-ir-157':
    case 'iso8859-10':
    case 'iso885910':
    case 'l6':
    case 'latin6':
      return 'ISO-8859-10'
    case 'iso-8859-13':
    case 'iso8859-13':
    case 'iso885913':
      return 'ISO-8859-13'
    case 'iso-8859-14':
    case 'iso8859-14':
    case 'iso885914':
      return 'ISO-8859-14'
    case 'csisolatin9':
    case 'iso-8859-15':
    case 'iso8859-15':
    case 'iso885915':
    case 'iso_8859-15':
    case 'l9':
      return 'ISO-8859-15'
    case 'iso-8859-16':
      return 'ISO-8859-16'
    case 'cskoi8r':
    case 'koi':
    case 'koi8':
    case 'koi8-r':
    case 'koi8_r':
      return 'KOI8-R'
    case 'koi8-ru':
    case 'koi8-u':
      return 'KOI8-U'
    case 'csmacintosh':
    case 'mac':
    case 'macintosh':
    case 'x-mac-roman':
      return 'macintosh'
    case 'iso-8859-11':
    case 'iso8859-11':
    case 'iso885911':
    case 'tis-620':
    case 'windows-874':
      return 'windows-874'
    case 'cp1250':
    case 'windows-1250':
    case 'x-cp1250':
      return 'windows-1250'
    case 'cp1251':
    case 'windows-1251':
    case 'x-cp1251':
      return 'windows-1251'
    case 'ansi_x3.4-1968':
    case 'ascii':
    case 'cp1252':
    case 'cp819':
    case 'csisolatin1':
    case 'ibm819':
    case 'iso-8859-1':
    case 'iso-ir-100':
    case 'iso8859-1':
    case 'iso88591':
    case 'iso_8859-1':
    case 'iso_8859-1:1987':
    case 'l1':
    case 'latin1':
    case 'us-ascii':
    case 'windows-1252':
    case 'x-cp1252':
      return 'windows-1252'
    case 'cp1253':
    case 'windows-1253':
    case 'x-cp1253':
      return 'windows-1253'
    case 'cp1254':
    case 'csisolatin5':
    case 'iso-8859-9':
    case 'iso-ir-148':
    case 'iso8859-9':
    case 'iso88599':
    case 'iso_8859-9':
    case 'iso_8859-9:1989':
    case 'l5':
    case 'latin5':
    case 'windows-1254':
    case 'x-cp1254':
      return 'windows-1254'
    case 'cp1255':
    case 'windows-1255':
    case 'x-cp1255':
      return 'windows-1255'
    case 'cp1256':
    case 'windows-1256':
    case 'x-cp1256':
      return 'windows-1256'
    case 'cp1257':
    case 'windows-1257':
    case 'x-cp1257':
      return 'windows-1257'
    case 'cp1258':
    case 'windows-1258':
    case 'x-cp1258':
      return 'windows-1258'
    case 'x-mac-cyrillic':
    case 'x-mac-ukrainian':
      return 'x-mac-cyrillic'
    case 'chinese':
    case 'csgb2312':
    case 'csiso58gb231280':
    case 'gb2312':
    case 'gb_2312':
    case 'gb_2312-80':
    case 'gbk':
    case 'iso-ir-58':
    case 'x-gbk':
      return 'GBK'
    case 'gb18030':
      return 'gb18030'
    case 'big5':
    case 'big5-hkscs':
    case 'cn-big5':
    case 'csbig5':
    case 'x-x-big5':
      return 'Big5'
    case 'cseucpkdfmtjapanese':
    case 'euc-jp':
    case 'x-euc-jp':
      return 'EUC-JP'
    case 'csiso2022jp':
    case 'iso-2022-jp':
      return 'ISO-2022-JP'
    case 'csshiftjis':
    case 'ms932':
    case 'ms_kanji':
    case 'shift-jis':
    case 'shift_jis':
    case 'sjis':
    case 'windows-31j':
    case 'x-sjis':
      return 'Shift_JIS'
    case 'cseuckr':
    case 'csksc56011987':
    case 'euc-kr':
    case 'iso-ir-149':
    case 'korean':
    case 'ks_c_5601-1987':
    case 'ks_c_5601-1989':
    case 'ksc5601':
    case 'ksc_5601':
    case 'windows-949':
      return 'EUC-KR'
    case 'csiso2022kr':
    case 'hz-gb-2312':
    case 'iso-2022-cn':
    case 'iso-2022-cn-ext':
    case 'iso-2022-kr':
    case 'replacement':
      return 'replacement'
    case 'unicodefffe':
    case 'utf-16be':
      return 'UTF-16BE'
    case 'csunicode':
    case 'iso-10646-ucs-2':
    case 'ucs-2':
    case 'unicode':
    case 'unicodefeff':
    case 'utf-16':
    case 'utf-16le':
      return 'UTF-16LE'
    case 'x-user-defined':
      return 'x-user-defined'
    default: return 'failure'
  }
}

module.exports = {
  getEncoding
}


/***/ }),

/***/ "../../node_modules/undici/lib/fileapi/filereader.js":
/*!***********************************************************!*\
  !*** ../../node_modules/undici/lib/fileapi/filereader.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const {
  staticPropertyDescriptors,
  readOperation,
  fireAProgressEvent
} = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/fileapi/util.js")
const {
  kState,
  kError,
  kResult,
  kEvents,
  kAborted
} = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fileapi/symbols.js")
const { webidl } = __webpack_require__(/*! ../fetch/webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { kEnumerableProperty } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")

class FileReader extends EventTarget {
  constructor () {
    super()

    this[kState] = 'empty'
    this[kResult] = null
    this[kError] = null
    this[kEvents] = {
      loadend: null,
      error: null,
      abort: null,
      load: null,
      progress: null,
      loadstart: null
    }
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dfn-readAsArrayBuffer
   * @param {import('buffer').Blob} blob
   */
  readAsArrayBuffer (blob) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsArrayBuffer' })

    blob = webidl.converters.Blob(blob, { strict: false })

    // The readAsArrayBuffer(blob) method, when invoked,
    // must initiate a read operation for blob with ArrayBuffer.
    readOperation(this, blob, 'ArrayBuffer')
  }

  /**
   * @see https://w3c.github.io/FileAPI/#readAsBinaryString
   * @param {import('buffer').Blob} blob
   */
  readAsBinaryString (blob) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsBinaryString' })

    blob = webidl.converters.Blob(blob, { strict: false })

    // The readAsBinaryString(blob) method, when invoked,
    // must initiate a read operation for blob with BinaryString.
    readOperation(this, blob, 'BinaryString')
  }

  /**
   * @see https://w3c.github.io/FileAPI/#readAsDataText
   * @param {import('buffer').Blob} blob
   * @param {string?} encoding
   */
  readAsText (blob, encoding = undefined) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsText' })

    blob = webidl.converters.Blob(blob, { strict: false })

    if (encoding !== undefined) {
      encoding = webidl.converters.DOMString(encoding)
    }

    // The readAsText(blob, encoding) method, when invoked,
    // must initiate a read operation for blob with Text and encoding.
    readOperation(this, blob, 'Text', encoding)
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dfn-readAsDataURL
   * @param {import('buffer').Blob} blob
   */
  readAsDataURL (blob) {
    webidl.brandCheck(this, FileReader)

    webidl.argumentLengthCheck(arguments, 1, { header: 'FileReader.readAsDataURL' })

    blob = webidl.converters.Blob(blob, { strict: false })

    // The readAsDataURL(blob) method, when invoked, must
    // initiate a read operation for blob with DataURL.
    readOperation(this, blob, 'DataURL')
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dfn-abort
   */
  abort () {
    // 1. If this's state is "empty" or if this's state is
    //    "done" set this's result to null and terminate
    //    this algorithm.
    if (this[kState] === 'empty' || this[kState] === 'done') {
      this[kResult] = null
      return
    }

    // 2. If this's state is "loading" set this's state to
    //    "done" and set this's result to null.
    if (this[kState] === 'loading') {
      this[kState] = 'done'
      this[kResult] = null
    }

    // 3. If there are any tasks from this on the file reading
    //    task source in an affiliated task queue, then remove
    //    those tasks from that task queue.
    this[kAborted] = true

    // 4. Terminate the algorithm for the read method being processed.
    // TODO

    // 5. Fire a progress event called abort at this.
    fireAProgressEvent('abort', this)

    // 6. If this's state is not "loading", fire a progress
    //    event called loadend at this.
    if (this[kState] !== 'loading') {
      fireAProgressEvent('loadend', this)
    }
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dom-filereader-readystate
   */
  get readyState () {
    webidl.brandCheck(this, FileReader)

    switch (this[kState]) {
      case 'empty': return this.EMPTY
      case 'loading': return this.LOADING
      case 'done': return this.DONE
    }
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dom-filereader-result
   */
  get result () {
    webidl.brandCheck(this, FileReader)

    // The result attribute’s getter, when invoked, must return
    // this's result.
    return this[kResult]
  }

  /**
   * @see https://w3c.github.io/FileAPI/#dom-filereader-error
   */
  get error () {
    webidl.brandCheck(this, FileReader)

    // The error attribute’s getter, when invoked, must return
    // this's error.
    return this[kError]
  }

  get onloadend () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].loadend
  }

  set onloadend (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].loadend) {
      this.removeEventListener('loadend', this[kEvents].loadend)
    }

    if (typeof fn === 'function') {
      this[kEvents].loadend = fn
      this.addEventListener('loadend', fn)
    } else {
      this[kEvents].loadend = null
    }
  }

  get onerror () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].error
  }

  set onerror (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].error) {
      this.removeEventListener('error', this[kEvents].error)
    }

    if (typeof fn === 'function') {
      this[kEvents].error = fn
      this.addEventListener('error', fn)
    } else {
      this[kEvents].error = null
    }
  }

  get onloadstart () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].loadstart
  }

  set onloadstart (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].loadstart) {
      this.removeEventListener('loadstart', this[kEvents].loadstart)
    }

    if (typeof fn === 'function') {
      this[kEvents].loadstart = fn
      this.addEventListener('loadstart', fn)
    } else {
      this[kEvents].loadstart = null
    }
  }

  get onprogress () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].progress
  }

  set onprogress (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].progress) {
      this.removeEventListener('progress', this[kEvents].progress)
    }

    if (typeof fn === 'function') {
      this[kEvents].progress = fn
      this.addEventListener('progress', fn)
    } else {
      this[kEvents].progress = null
    }
  }

  get onload () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].load
  }

  set onload (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].load) {
      this.removeEventListener('load', this[kEvents].load)
    }

    if (typeof fn === 'function') {
      this[kEvents].load = fn
      this.addEventListener('load', fn)
    } else {
      this[kEvents].load = null
    }
  }

  get onabort () {
    webidl.brandCheck(this, FileReader)

    return this[kEvents].abort
  }

  set onabort (fn) {
    webidl.brandCheck(this, FileReader)

    if (this[kEvents].abort) {
      this.removeEventListener('abort', this[kEvents].abort)
    }

    if (typeof fn === 'function') {
      this[kEvents].abort = fn
      this.addEventListener('abort', fn)
    } else {
      this[kEvents].abort = null
    }
  }
}

// https://w3c.github.io/FileAPI/#dom-filereader-empty
FileReader.EMPTY = FileReader.prototype.EMPTY = 0
// https://w3c.github.io/FileAPI/#dom-filereader-loading
FileReader.LOADING = FileReader.prototype.LOADING = 1
// https://w3c.github.io/FileAPI/#dom-filereader-done
FileReader.DONE = FileReader.prototype.DONE = 2

Object.defineProperties(FileReader.prototype, {
  EMPTY: staticPropertyDescriptors,
  LOADING: staticPropertyDescriptors,
  DONE: staticPropertyDescriptors,
  readAsArrayBuffer: kEnumerableProperty,
  readAsBinaryString: kEnumerableProperty,
  readAsText: kEnumerableProperty,
  readAsDataURL: kEnumerableProperty,
  abort: kEnumerableProperty,
  readyState: kEnumerableProperty,
  result: kEnumerableProperty,
  error: kEnumerableProperty,
  onloadstart: kEnumerableProperty,
  onprogress: kEnumerableProperty,
  onload: kEnumerableProperty,
  onabort: kEnumerableProperty,
  onerror: kEnumerableProperty,
  onloadend: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'FileReader',
    writable: false,
    enumerable: false,
    configurable: true
  }
})

Object.defineProperties(FileReader, {
  EMPTY: staticPropertyDescriptors,
  LOADING: staticPropertyDescriptors,
  DONE: staticPropertyDescriptors
})

module.exports = {
  FileReader
}


/***/ }),

/***/ "../../node_modules/undici/lib/fileapi/progressevent.js":
/*!**************************************************************!*\
  !*** ../../node_modules/undici/lib/fileapi/progressevent.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { webidl } = __webpack_require__(/*! ../fetch/webidl */ "../../node_modules/undici/lib/fetch/webidl.js")

const kState = Symbol('ProgressEvent state')

/**
 * @see https://xhr.spec.whatwg.org/#progressevent
 */
class ProgressEvent extends Event {
  constructor (type, eventInitDict = {}) {
    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.ProgressEventInit(eventInitDict ?? {})

    super(type, eventInitDict)

    this[kState] = {
      lengthComputable: eventInitDict.lengthComputable,
      loaded: eventInitDict.loaded,
      total: eventInitDict.total
    }
  }

  get lengthComputable () {
    webidl.brandCheck(this, ProgressEvent)

    return this[kState].lengthComputable
  }

  get loaded () {
    webidl.brandCheck(this, ProgressEvent)

    return this[kState].loaded
  }

  get total () {
    webidl.brandCheck(this, ProgressEvent)

    return this[kState].total
  }
}

webidl.converters.ProgressEventInit = webidl.dictionaryConverter([
  {
    key: 'lengthComputable',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'loaded',
    converter: webidl.converters['unsigned long long'],
    defaultValue: 0
  },
  {
    key: 'total',
    converter: webidl.converters['unsigned long long'],
    defaultValue: 0
  },
  {
    key: 'bubbles',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'cancelable',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'composed',
    converter: webidl.converters.boolean,
    defaultValue: false
  }
])

module.exports = {
  ProgressEvent
}


/***/ }),

/***/ "../../node_modules/undici/lib/fileapi/symbols.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/fileapi/symbols.js ***!
  \********************************************************/
/***/ ((module) => {



module.exports = {
  kState: Symbol('FileReader state'),
  kResult: Symbol('FileReader result'),
  kError: Symbol('FileReader error'),
  kLastProgressEventFired: Symbol('FileReader last progress event fired timestamp'),
  kEvents: Symbol('FileReader events'),
  kAborted: Symbol('FileReader aborted')
}


/***/ }),

/***/ "../../node_modules/undici/lib/fileapi/util.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/fileapi/util.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const {
  kState,
  kError,
  kResult,
  kAborted,
  kLastProgressEventFired
} = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/fileapi/symbols.js")
const { ProgressEvent } = __webpack_require__(/*! ./progressevent */ "../../node_modules/undici/lib/fileapi/progressevent.js")
const { getEncoding } = __webpack_require__(/*! ./encoding */ "../../node_modules/undici/lib/fileapi/encoding.js")
const { DOMException } = __webpack_require__(/*! ../fetch/constants */ "../../node_modules/undici/lib/fetch/constants.js")
const { serializeAMimeType, parseMIMEType } = __webpack_require__(/*! ../fetch/dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const { types } = __webpack_require__(/*! util */ "util")
const { StringDecoder } = __webpack_require__(/*! string_decoder */ "string_decoder")
const { btoa } = __webpack_require__(/*! buffer */ "buffer")

/** @type {PropertyDescriptor} */
const staticPropertyDescriptors = {
  enumerable: true,
  writable: false,
  configurable: false
}

/**
 * @see https://w3c.github.io/FileAPI/#readOperation
 * @param {import('./filereader').FileReader} fr
 * @param {import('buffer').Blob} blob
 * @param {string} type
 * @param {string?} encodingName
 */
function readOperation (fr, blob, type, encodingName) {
  // 1. If fr’s state is "loading", throw an InvalidStateError
  //    DOMException.
  if (fr[kState] === 'loading') {
    throw new DOMException('Invalid state', 'InvalidStateError')
  }

  // 2. Set fr’s state to "loading".
  fr[kState] = 'loading'

  // 3. Set fr’s result to null.
  fr[kResult] = null

  // 4. Set fr’s error to null.
  fr[kError] = null

  // 5. Let stream be the result of calling get stream on blob.
  /** @type {import('stream/web').ReadableStream} */
  const stream = blob.stream()

  // 6. Let reader be the result of getting a reader from stream.
  const reader = stream.getReader()

  // 7. Let bytes be an empty byte sequence.
  /** @type {Uint8Array[]} */
  const bytes = []

  // 8. Let chunkPromise be the result of reading a chunk from
  //    stream with reader.
  let chunkPromise = reader.read()

  // 9. Let isFirstChunk be true.
  let isFirstChunk = true

  // 10. In parallel, while true:
  // Note: "In parallel" just means non-blocking
  // Note 2: readOperation itself cannot be async as double
  // reading the body would then reject the promise, instead
  // of throwing an error.
  ;(async () => {
    while (!fr[kAborted]) {
      // 1. Wait for chunkPromise to be fulfilled or rejected.
      try {
        const { done, value } = await chunkPromise

        // 2. If chunkPromise is fulfilled, and isFirstChunk is
        //    true, queue a task to fire a progress event called
        //    loadstart at fr.
        if (isFirstChunk && !fr[kAborted]) {
          queueMicrotask(() => {
            fireAProgressEvent('loadstart', fr)
          })
        }

        // 3. Set isFirstChunk to false.
        isFirstChunk = false

        // 4. If chunkPromise is fulfilled with an object whose
        //    done property is false and whose value property is
        //    a Uint8Array object, run these steps:
        if (!done && types.isUint8Array(value)) {
          // 1. Let bs be the byte sequence represented by the
          //    Uint8Array object.

          // 2. Append bs to bytes.
          bytes.push(value)

          // 3. If roughly 50ms have passed since these steps
          //    were last invoked, queue a task to fire a
          //    progress event called progress at fr.
          if (
            (
              fr[kLastProgressEventFired] === undefined ||
              Date.now() - fr[kLastProgressEventFired] >= 50
            ) &&
            !fr[kAborted]
          ) {
            fr[kLastProgressEventFired] = Date.now()
            queueMicrotask(() => {
              fireAProgressEvent('progress', fr)
            })
          }

          // 4. Set chunkPromise to the result of reading a
          //    chunk from stream with reader.
          chunkPromise = reader.read()
        } else if (done) {
          // 5. Otherwise, if chunkPromise is fulfilled with an
          //    object whose done property is true, queue a task
          //    to run the following steps and abort this algorithm:
          queueMicrotask(() => {
            // 1. Set fr’s state to "done".
            fr[kState] = 'done'

            // 2. Let result be the result of package data given
            //    bytes, type, blob’s type, and encodingName.
            try {
              const result = packageData(bytes, type, blob.type, encodingName)

              // 4. Else:

              if (fr[kAborted]) {
                return
              }

              // 1. Set fr’s result to result.
              fr[kResult] = result

              // 2. Fire a progress event called load at the fr.
              fireAProgressEvent('load', fr)
            } catch (error) {
              // 3. If package data threw an exception error:

              // 1. Set fr’s error to error.
              fr[kError] = error

              // 2. Fire a progress event called error at fr.
              fireAProgressEvent('error', fr)
            }

            // 5. If fr’s state is not "loading", fire a progress
            //    event called loadend at the fr.
            if (fr[kState] !== 'loading') {
              fireAProgressEvent('loadend', fr)
            }
          })

          break
        }
      } catch (error) {
        if (fr[kAborted]) {
          return
        }

        // 6. Otherwise, if chunkPromise is rejected with an
        //    error error, queue a task to run the following
        //    steps and abort this algorithm:
        queueMicrotask(() => {
          // 1. Set fr’s state to "done".
          fr[kState] = 'done'

          // 2. Set fr’s error to error.
          fr[kError] = error

          // 3. Fire a progress event called error at fr.
          fireAProgressEvent('error', fr)

          // 4. If fr’s state is not "loading", fire a progress
          //    event called loadend at fr.
          if (fr[kState] !== 'loading') {
            fireAProgressEvent('loadend', fr)
          }
        })

        break
      }
    }
  })()
}

/**
 * @see https://w3c.github.io/FileAPI/#fire-a-progress-event
 * @see https://dom.spec.whatwg.org/#concept-event-fire
 * @param {string} e The name of the event
 * @param {import('./filereader').FileReader} reader
 */
function fireAProgressEvent (e, reader) {
  // The progress event e does not bubble. e.bubbles must be false
  // The progress event e is NOT cancelable. e.cancelable must be false
  const event = new ProgressEvent(e, {
    bubbles: false,
    cancelable: false
  })

  reader.dispatchEvent(event)
}

/**
 * @see https://w3c.github.io/FileAPI/#blob-package-data
 * @param {Uint8Array[]} bytes
 * @param {string} type
 * @param {string?} mimeType
 * @param {string?} encodingName
 */
function packageData (bytes, type, mimeType, encodingName) {
  // 1. A Blob has an associated package data algorithm, given
  //    bytes, a type, a optional mimeType, and a optional
  //    encodingName, which switches on type and runs the
  //    associated steps:

  switch (type) {
    case 'DataURL': {
      // 1. Return bytes as a DataURL [RFC2397] subject to
      //    the considerations below:
      //  * Use mimeType as part of the Data URL if it is
      //    available in keeping with the Data URL
      //    specification [RFC2397].
      //  * If mimeType is not available return a Data URL
      //    without a media-type. [RFC2397].

      // https://datatracker.ietf.org/doc/html/rfc2397#section-3
      // dataurl    := "data:" [ mediatype ] [ ";base64" ] "," data
      // mediatype  := [ type "/" subtype ] *( ";" parameter )
      // data       := *urlchar
      // parameter  := attribute "=" value
      let dataURL = 'data:'

      const parsed = parseMIMEType(mimeType || 'application/octet-stream')

      if (parsed !== 'failure') {
        dataURL += serializeAMimeType(parsed)
      }

      dataURL += ';base64,'

      const decoder = new StringDecoder('latin1')

      for (const chunk of bytes) {
        dataURL += btoa(decoder.write(chunk))
      }

      dataURL += btoa(decoder.end())

      return dataURL
    }
    case 'Text': {
      // 1. Let encoding be failure
      let encoding = 'failure'

      // 2. If the encodingName is present, set encoding to the
      //    result of getting an encoding from encodingName.
      if (encodingName) {
        encoding = getEncoding(encodingName)
      }

      // 3. If encoding is failure, and mimeType is present:
      if (encoding === 'failure' && mimeType) {
        // 1. Let type be the result of parse a MIME type
        //    given mimeType.
        const type = parseMIMEType(mimeType)

        // 2. If type is not failure, set encoding to the result
        //    of getting an encoding from type’s parameters["charset"].
        if (type !== 'failure') {
          encoding = getEncoding(type.parameters.get('charset'))
        }
      }

      // 4. If encoding is failure, then set encoding to UTF-8.
      if (encoding === 'failure') {
        encoding = 'UTF-8'
      }

      // 5. Decode bytes using fallback encoding encoding, and
      //    return the result.
      return decode(bytes, encoding)
    }
    case 'ArrayBuffer': {
      // Return a new ArrayBuffer whose contents are bytes.
      const sequence = combineByteSequences(bytes)

      return sequence.buffer
    }
    case 'BinaryString': {
      // Return bytes as a binary string, in which every byte
      //  is represented by a code unit of equal value [0..255].
      let binaryString = ''

      const decoder = new StringDecoder('latin1')

      for (const chunk of bytes) {
        binaryString += decoder.write(chunk)
      }

      binaryString += decoder.end()

      return binaryString
    }
  }
}

/**
 * @see https://encoding.spec.whatwg.org/#decode
 * @param {Uint8Array[]} ioQueue
 * @param {string} encoding
 */
function decode (ioQueue, encoding) {
  const bytes = combineByteSequences(ioQueue)

  // 1. Let BOMEncoding be the result of BOM sniffing ioQueue.
  const BOMEncoding = BOMSniffing(bytes)

  let slice = 0

  // 2. If BOMEncoding is non-null:
  if (BOMEncoding !== null) {
    // 1. Set encoding to BOMEncoding.
    encoding = BOMEncoding

    // 2. Read three bytes from ioQueue, if BOMEncoding is
    //    UTF-8; otherwise read two bytes.
    //    (Do nothing with those bytes.)
    slice = BOMEncoding === 'UTF-8' ? 3 : 2
  }

  // 3. Process a queue with an instance of encoding’s
  //    decoder, ioQueue, output, and "replacement".

  // 4. Return output.

  const sliced = bytes.slice(slice)
  return new TextDecoder(encoding).decode(sliced)
}

/**
 * @see https://encoding.spec.whatwg.org/#bom-sniff
 * @param {Uint8Array} ioQueue
 */
function BOMSniffing (ioQueue) {
  // 1. Let BOM be the result of peeking 3 bytes from ioQueue,
  //    converted to a byte sequence.
  const [a, b, c] = ioQueue

  // 2. For each of the rows in the table below, starting with
  //    the first one and going down, if BOM starts with the
  //    bytes given in the first column, then return the
  //    encoding given in the cell in the second column of that
  //    row. Otherwise, return null.
  if (a === 0xEF && b === 0xBB && c === 0xBF) {
    return 'UTF-8'
  } else if (a === 0xFE && b === 0xFF) {
    return 'UTF-16BE'
  } else if (a === 0xFF && b === 0xFE) {
    return 'UTF-16LE'
  }

  return null
}

/**
 * @param {Uint8Array[]} sequences
 */
function combineByteSequences (sequences) {
  const size = sequences.reduce((a, b) => {
    return a + b.byteLength
  }, 0)

  let offset = 0

  return sequences.reduce((a, b) => {
    a.set(b, offset)
    offset += b.byteLength
    return a
  }, new Uint8Array(size))
}

module.exports = {
  staticPropertyDescriptors,
  readOperation,
  fireAProgressEvent
}


/***/ }),

/***/ "../../node_modules/undici/lib/global.js":
/*!***********************************************!*\
  !*** ../../node_modules/undici/lib/global.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



// We include a version number for the Dispatcher API. In case of breaking changes,
// this version number must be increased to avoid conflicts.
const globalDispatcher = Symbol.for('undici.globalDispatcher.1')
const { InvalidArgumentError } = __webpack_require__(/*! ./core/errors */ "../../node_modules/undici/lib/core/errors.js")
const Agent = __webpack_require__(/*! ./agent */ "../../node_modules/undici/lib/agent.js")

if (getGlobalDispatcher() === undefined) {
  setGlobalDispatcher(new Agent())
}

function setGlobalDispatcher (agent) {
  if (!agent || typeof agent.dispatch !== 'function') {
    throw new InvalidArgumentError('Argument agent must implement Agent')
  }
  Object.defineProperty(globalThis, globalDispatcher, {
    value: agent,
    writable: true,
    enumerable: false,
    configurable: false
  })
}

function getGlobalDispatcher () {
  return globalThis[globalDispatcher]
}

module.exports = {
  setGlobalDispatcher,
  getGlobalDispatcher
}


/***/ }),

/***/ "../../node_modules/undici/lib/handler/DecoratorHandler.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/undici/lib/handler/DecoratorHandler.js ***!
  \*****************************************************************/
/***/ ((module) => {



module.exports = class DecoratorHandler {
  constructor (handler) {
    this.handler = handler
  }

  onConnect (...args) {
    return this.handler.onConnect(...args)
  }

  onError (...args) {
    return this.handler.onError(...args)
  }

  onUpgrade (...args) {
    return this.handler.onUpgrade(...args)
  }

  onHeaders (...args) {
    return this.handler.onHeaders(...args)
  }

  onData (...args) {
    return this.handler.onData(...args)
  }

  onComplete (...args) {
    return this.handler.onComplete(...args)
  }

  onBodySent (...args) {
    return this.handler.onBodySent(...args)
  }
}


/***/ }),

/***/ "../../node_modules/undici/lib/handler/RedirectHandler.js":
/*!****************************************************************!*\
  !*** ../../node_modules/undici/lib/handler/RedirectHandler.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const util = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { kBodyUsed } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const assert = __webpack_require__(/*! assert */ "assert")
const { InvalidArgumentError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const EE = __webpack_require__(/*! events */ "events")

const redirectableStatusCodes = [300, 301, 302, 303, 307, 308]

const kBody = Symbol('body')

class BodyAsyncIterable {
  constructor (body) {
    this[kBody] = body
    this[kBodyUsed] = false
  }

  async * [Symbol.asyncIterator] () {
    assert(!this[kBodyUsed], 'disturbed')
    this[kBodyUsed] = true
    yield * this[kBody]
  }
}

class RedirectHandler {
  constructor (dispatch, maxRedirections, opts, handler) {
    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
      throw new InvalidArgumentError('maxRedirections must be a positive number')
    }

    util.validateHandler(handler, opts.method, opts.upgrade)

    this.dispatch = dispatch
    this.location = null
    this.abort = null
    this.opts = { ...opts, maxRedirections: 0 } // opts must be a copy
    this.maxRedirections = maxRedirections
    this.handler = handler
    this.history = []

    if (util.isStream(this.opts.body)) {
      // TODO (fix): Provide some way for the user to cache the file to e.g. /tmp
      // so that it can be dispatched again?
      // TODO (fix): Do we need 100-expect support to provide a way to do this properly?
      if (util.bodyLength(this.opts.body) === 0) {
        this.opts.body
          .on('data', function () {
            assert(false)
          })
      }

      if (typeof this.opts.body.readableDidRead !== 'boolean') {
        this.opts.body[kBodyUsed] = false
        EE.prototype.on.call(this.opts.body, 'data', function () {
          this[kBodyUsed] = true
        })
      }
    } else if (this.opts.body && typeof this.opts.body.pipeTo === 'function') {
      // TODO (fix): We can't access ReadableStream internal state
      // to determine whether or not it has been disturbed. This is just
      // a workaround.
      this.opts.body = new BodyAsyncIterable(this.opts.body)
    } else if (
      this.opts.body &&
      typeof this.opts.body !== 'string' &&
      !ArrayBuffer.isView(this.opts.body) &&
      util.isIterable(this.opts.body)
    ) {
      // TODO: Should we allow re-using iterable if !this.opts.idempotent
      // or through some other flag?
      this.opts.body = new BodyAsyncIterable(this.opts.body)
    }
  }

  onConnect (abort) {
    this.abort = abort
    this.handler.onConnect(abort, { history: this.history })
  }

  onUpgrade (statusCode, headers, socket) {
    this.handler.onUpgrade(statusCode, headers, socket)
  }

  onError (error) {
    this.handler.onError(error)
  }

  onHeaders (statusCode, headers, resume, statusText) {
    this.location = this.history.length >= this.maxRedirections || util.isDisturbed(this.opts.body)
      ? null
      : parseLocation(statusCode, headers)

    if (this.opts.origin) {
      this.history.push(new URL(this.opts.path, this.opts.origin))
    }

    if (!this.location) {
      return this.handler.onHeaders(statusCode, headers, resume, statusText)
    }

    const { origin, pathname, search } = util.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)))
    const path = search ? `${pathname}${search}` : pathname

    // Remove headers referring to the original URL.
    // By default it is Host only, unless it's a 303 (see below), which removes also all Content-* headers.
    // https://tools.ietf.org/html/rfc7231#section-6.4
    this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin)
    this.opts.path = path
    this.opts.origin = origin
    this.opts.maxRedirections = 0
    this.opts.query = null

    // https://tools.ietf.org/html/rfc7231#section-6.4.4
    // In case of HTTP 303, always replace method to be either HEAD or GET
    if (statusCode === 303 && this.opts.method !== 'HEAD') {
      this.opts.method = 'GET'
      this.opts.body = null
    }
  }

  onData (chunk) {
    if (this.location) {
      /*
        https://tools.ietf.org/html/rfc7231#section-6.4

        TLDR: undici always ignores 3xx response bodies.

        Redirection is used to serve the requested resource from another URL, so it is assumes that
        no body is generated (and thus can be ignored). Even though generating a body is not prohibited.

        For status 301, 302, 303, 307 and 308 (the latter from RFC 7238), the specs mention that the body usually
        (which means it's optional and not mandated) contain just an hyperlink to the value of
        the Location response header, so the body can be ignored safely.

        For status 300, which is "Multiple Choices", the spec mentions both generating a Location
        response header AND a response body with the other possible location to follow.
        Since the spec explicitily chooses not to specify a format for such body and leave it to
        servers and browsers implementors, we ignore the body as there is no specified way to eventually parse it.
      */
    } else {
      return this.handler.onData(chunk)
    }
  }

  onComplete (trailers) {
    if (this.location) {
      /*
        https://tools.ietf.org/html/rfc7231#section-6.4

        TLDR: undici always ignores 3xx response trailers as they are not expected in case of redirections
        and neither are useful if present.

        See comment on onData method above for more detailed informations.
      */

      this.location = null
      this.abort = null

      this.dispatch(this.opts, this)
    } else {
      this.handler.onComplete(trailers)
    }
  }

  onBodySent (chunk) {
    if (this.handler.onBodySent) {
      this.handler.onBodySent(chunk)
    }
  }
}

function parseLocation (statusCode, headers) {
  if (redirectableStatusCodes.indexOf(statusCode) === -1) {
    return null
  }

  for (let i = 0; i < headers.length; i += 2) {
    if (headers[i].toString().toLowerCase() === 'location') {
      return headers[i + 1]
    }
  }
}

// https://tools.ietf.org/html/rfc7231#section-6.4.4
function shouldRemoveHeader (header, removeContent, unknownOrigin) {
  if (header.length === 4) {
    return util.headerNameToString(header) === 'host'
  }
  if (removeContent && util.headerNameToString(header).startsWith('content-')) {
    return true
  }
  if (unknownOrigin && (header.length === 13 || header.length === 6 || header.length === 19)) {
    const name = util.headerNameToString(header)
    return name === 'authorization' || name === 'cookie' || name === 'proxy-authorization'
  }
  return false
}

// https://tools.ietf.org/html/rfc7231#section-6.4
function cleanRequestHeaders (headers, removeContent, unknownOrigin) {
  const ret = []
  if (Array.isArray(headers)) {
    for (let i = 0; i < headers.length; i += 2) {
      if (!shouldRemoveHeader(headers[i], removeContent, unknownOrigin)) {
        ret.push(headers[i], headers[i + 1])
      }
    }
  } else if (headers && typeof headers === 'object') {
    for (const key of Object.keys(headers)) {
      if (!shouldRemoveHeader(key, removeContent, unknownOrigin)) {
        ret.push(key, headers[key])
      }
    }
  } else {
    assert(headers == null, 'headers must be an object or an array')
  }
  return ret
}

module.exports = RedirectHandler


/***/ }),

/***/ "../../node_modules/undici/lib/handler/RetryHandler.js":
/*!*************************************************************!*\
  !*** ../../node_modules/undici/lib/handler/RetryHandler.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const assert = __webpack_require__(/*! assert */ "assert")

const { kRetryHandlerDefaultRetry } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { RequestRetryError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const { isDisturbed, parseHeaders, parseRangeHeader } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")

function calculateRetryAfterHeader (retryAfter) {
  const current = Date.now()
  const diff = new Date(retryAfter).getTime() - current

  return diff
}

class RetryHandler {
  constructor (opts, handlers) {
    const { retryOptions, ...dispatchOpts } = opts
    const {
      // Retry scoped
      retry: retryFn,
      maxRetries,
      maxTimeout,
      minTimeout,
      timeoutFactor,
      // Response scoped
      methods,
      errorCodes,
      retryAfter,
      statusCodes
    } = retryOptions ?? {}

    this.dispatch = handlers.dispatch
    this.handler = handlers.handler
    this.opts = dispatchOpts
    this.abort = null
    this.aborted = false
    this.retryOpts = {
      retry: retryFn ?? RetryHandler[kRetryHandlerDefaultRetry],
      retryAfter: retryAfter ?? true,
      maxTimeout: maxTimeout ?? 30 * 1000, // 30s,
      timeout: minTimeout ?? 500, // .5s
      timeoutFactor: timeoutFactor ?? 2,
      maxRetries: maxRetries ?? 5,
      // What errors we should retry
      methods: methods ?? ['GET', 'HEAD', 'OPTIONS', 'PUT', 'DELETE', 'TRACE'],
      // Indicates which errors to retry
      statusCodes: statusCodes ?? [500, 502, 503, 504, 429],
      // List of errors to retry
      errorCodes: errorCodes ?? [
        'ECONNRESET',
        'ECONNREFUSED',
        'ENOTFOUND',
        'ENETDOWN',
        'ENETUNREACH',
        'EHOSTDOWN',
        'EHOSTUNREACH',
        'EPIPE'
      ]
    }

    this.retryCount = 0
    this.start = 0
    this.end = null
    this.etag = null
    this.resume = null

    // Handle possible onConnect duplication
    this.handler.onConnect(reason => {
      this.aborted = true
      if (this.abort) {
        this.abort(reason)
      } else {
        this.reason = reason
      }
    })
  }

  onRequestSent () {
    if (this.handler.onRequestSent) {
      this.handler.onRequestSent()
    }
  }

  onUpgrade (statusCode, headers, socket) {
    if (this.handler.onUpgrade) {
      this.handler.onUpgrade(statusCode, headers, socket)
    }
  }

  onConnect (abort) {
    if (this.aborted) {
      abort(this.reason)
    } else {
      this.abort = abort
    }
  }

  onBodySent (chunk) {
    if (this.handler.onBodySent) return this.handler.onBodySent(chunk)
  }

  static [kRetryHandlerDefaultRetry] (err, { state, opts }, cb) {
    const { statusCode, code, headers } = err
    const { method, retryOptions } = opts
    const {
      maxRetries,
      timeout,
      maxTimeout,
      timeoutFactor,
      statusCodes,
      errorCodes,
      methods
    } = retryOptions
    let { counter, currentTimeout } = state

    currentTimeout =
      currentTimeout != null && currentTimeout > 0 ? currentTimeout : timeout

    // Any code that is not a Undici's originated and allowed to retry
    if (
      code &&
      code !== 'UND_ERR_REQ_RETRY' &&
      code !== 'UND_ERR_SOCKET' &&
      !errorCodes.includes(code)
    ) {
      cb(err)
      return
    }

    // If a set of method are provided and the current method is not in the list
    if (Array.isArray(methods) && !methods.includes(method)) {
      cb(err)
      return
    }

    // If a set of status code are provided and the current status code is not in the list
    if (
      statusCode != null &&
      Array.isArray(statusCodes) &&
      !statusCodes.includes(statusCode)
    ) {
      cb(err)
      return
    }

    // If we reached the max number of retries
    if (counter > maxRetries) {
      cb(err)
      return
    }

    let retryAfterHeader = headers != null && headers['retry-after']
    if (retryAfterHeader) {
      retryAfterHeader = Number(retryAfterHeader)
      retryAfterHeader = isNaN(retryAfterHeader)
        ? calculateRetryAfterHeader(retryAfterHeader)
        : retryAfterHeader * 1e3 // Retry-After is in seconds
    }

    const retryTimeout =
      retryAfterHeader > 0
        ? Math.min(retryAfterHeader, maxTimeout)
        : Math.min(currentTimeout * timeoutFactor ** counter, maxTimeout)

    state.currentTimeout = retryTimeout

    setTimeout(() => cb(null), retryTimeout)
  }

  onHeaders (statusCode, rawHeaders, resume, statusMessage) {
    const headers = parseHeaders(rawHeaders)

    this.retryCount += 1

    if (statusCode >= 300) {
      this.abort(
        new RequestRetryError('Request failed', statusCode, {
          headers,
          count: this.retryCount
        })
      )
      return false
    }

    // Checkpoint for resume from where we left it
    if (this.resume != null) {
      this.resume = null

      if (statusCode !== 206) {
        return true
      }

      const contentRange = parseRangeHeader(headers['content-range'])
      // If no content range
      if (!contentRange) {
        this.abort(
          new RequestRetryError('Content-Range mismatch', statusCode, {
            headers,
            count: this.retryCount
          })
        )
        return false
      }

      // Let's start with a weak etag check
      if (this.etag != null && this.etag !== headers.etag) {
        this.abort(
          new RequestRetryError('ETag mismatch', statusCode, {
            headers,
            count: this.retryCount
          })
        )
        return false
      }

      const { start, size, end = size } = contentRange

      assert(this.start === start, 'content-range mismatch')
      assert(this.end == null || this.end === end, 'content-range mismatch')

      this.resume = resume
      return true
    }

    if (this.end == null) {
      if (statusCode === 206) {
        // First time we receive 206
        const range = parseRangeHeader(headers['content-range'])

        if (range == null) {
          return this.handler.onHeaders(
            statusCode,
            rawHeaders,
            resume,
            statusMessage
          )
        }

        const { start, size, end = size } = range

        assert(
          start != null && Number.isFinite(start) && this.start !== start,
          'content-range mismatch'
        )
        assert(Number.isFinite(start))
        assert(
          end != null && Number.isFinite(end) && this.end !== end,
          'invalid content-length'
        )

        this.start = start
        this.end = end
      }

      // We make our best to checkpoint the body for further range headers
      if (this.end == null) {
        const contentLength = headers['content-length']
        this.end = contentLength != null ? Number(contentLength) : null
      }

      assert(Number.isFinite(this.start))
      assert(
        this.end == null || Number.isFinite(this.end),
        'invalid content-length'
      )

      this.resume = resume
      this.etag = headers.etag != null ? headers.etag : null

      return this.handler.onHeaders(
        statusCode,
        rawHeaders,
        resume,
        statusMessage
      )
    }

    const err = new RequestRetryError('Request failed', statusCode, {
      headers,
      count: this.retryCount
    })

    this.abort(err)

    return false
  }

  onData (chunk) {
    this.start += chunk.length

    return this.handler.onData(chunk)
  }

  onComplete (rawTrailers) {
    this.retryCount = 0
    return this.handler.onComplete(rawTrailers)
  }

  onError (err) {
    if (this.aborted || isDisturbed(this.opts.body)) {
      return this.handler.onError(err)
    }

    this.retryOpts.retry(
      err,
      {
        state: { counter: this.retryCount++, currentTimeout: this.retryAfter },
        opts: { retryOptions: this.retryOpts, ...this.opts }
      },
      onRetry.bind(this)
    )

    function onRetry (err) {
      if (err != null || this.aborted || isDisturbed(this.opts.body)) {
        return this.handler.onError(err)
      }

      if (this.start !== 0) {
        this.opts = {
          ...this.opts,
          headers: {
            ...this.opts.headers,
            range: `bytes=${this.start}-${this.end ?? ''}`
          }
        }
      }

      try {
        this.dispatch(this.opts, this)
      } catch (err) {
        this.handler.onError(err)
      }
    }
  }
}

module.exports = RetryHandler


/***/ }),

/***/ "../../node_modules/undici/lib/interceptor/redirectInterceptor.js":
/*!************************************************************************!*\
  !*** ../../node_modules/undici/lib/interceptor/redirectInterceptor.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const RedirectHandler = __webpack_require__(/*! ../handler/RedirectHandler */ "../../node_modules/undici/lib/handler/RedirectHandler.js")

function createRedirectInterceptor ({ maxRedirections: defaultMaxRedirections }) {
  return (dispatch) => {
    return function Intercept (opts, handler) {
      const { maxRedirections = defaultMaxRedirections } = opts

      if (!maxRedirections) {
        return dispatch(opts, handler)
      }

      const redirectHandler = new RedirectHandler(dispatch, maxRedirections, opts, handler)
      opts = { ...opts, maxRedirections: 0 } // Stop sub dispatcher from also redirecting.
      return dispatch(opts, redirectHandler)
    }
  }
}

module.exports = createRedirectInterceptor


/***/ }),

/***/ "../../node_modules/undici/lib/llhttp/constants.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/llhttp/constants.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SPECIAL_HEADERS = exports.HEADER_STATE = exports.MINOR = exports.MAJOR = exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS = exports.TOKEN = exports.STRICT_TOKEN = exports.HEX = exports.URL_CHAR = exports.STRICT_URL_CHAR = exports.USERINFO_CHARS = exports.MARK = exports.ALPHANUM = exports.NUM = exports.HEX_MAP = exports.NUM_MAP = exports.ALPHA = exports.FINISH = exports.H_METHOD_MAP = exports.METHOD_MAP = exports.METHODS_RTSP = exports.METHODS_ICE = exports.METHODS_HTTP = exports.METHODS = exports.LENIENT_FLAGS = exports.FLAGS = exports.TYPE = exports.ERROR = void 0;
const utils_1 = __webpack_require__(/*! ./utils */ "../../node_modules/undici/lib/llhttp/utils.js");
// C headers
var ERROR;
(function (ERROR) {
    ERROR[ERROR["OK"] = 0] = "OK";
    ERROR[ERROR["INTERNAL"] = 1] = "INTERNAL";
    ERROR[ERROR["STRICT"] = 2] = "STRICT";
    ERROR[ERROR["LF_EXPECTED"] = 3] = "LF_EXPECTED";
    ERROR[ERROR["UNEXPECTED_CONTENT_LENGTH"] = 4] = "UNEXPECTED_CONTENT_LENGTH";
    ERROR[ERROR["CLOSED_CONNECTION"] = 5] = "CLOSED_CONNECTION";
    ERROR[ERROR["INVALID_METHOD"] = 6] = "INVALID_METHOD";
    ERROR[ERROR["INVALID_URL"] = 7] = "INVALID_URL";
    ERROR[ERROR["INVALID_CONSTANT"] = 8] = "INVALID_CONSTANT";
    ERROR[ERROR["INVALID_VERSION"] = 9] = "INVALID_VERSION";
    ERROR[ERROR["INVALID_HEADER_TOKEN"] = 10] = "INVALID_HEADER_TOKEN";
    ERROR[ERROR["INVALID_CONTENT_LENGTH"] = 11] = "INVALID_CONTENT_LENGTH";
    ERROR[ERROR["INVALID_CHUNK_SIZE"] = 12] = "INVALID_CHUNK_SIZE";
    ERROR[ERROR["INVALID_STATUS"] = 13] = "INVALID_STATUS";
    ERROR[ERROR["INVALID_EOF_STATE"] = 14] = "INVALID_EOF_STATE";
    ERROR[ERROR["INVALID_TRANSFER_ENCODING"] = 15] = "INVALID_TRANSFER_ENCODING";
    ERROR[ERROR["CB_MESSAGE_BEGIN"] = 16] = "CB_MESSAGE_BEGIN";
    ERROR[ERROR["CB_HEADERS_COMPLETE"] = 17] = "CB_HEADERS_COMPLETE";
    ERROR[ERROR["CB_MESSAGE_COMPLETE"] = 18] = "CB_MESSAGE_COMPLETE";
    ERROR[ERROR["CB_CHUNK_HEADER"] = 19] = "CB_CHUNK_HEADER";
    ERROR[ERROR["CB_CHUNK_COMPLETE"] = 20] = "CB_CHUNK_COMPLETE";
    ERROR[ERROR["PAUSED"] = 21] = "PAUSED";
    ERROR[ERROR["PAUSED_UPGRADE"] = 22] = "PAUSED_UPGRADE";
    ERROR[ERROR["PAUSED_H2_UPGRADE"] = 23] = "PAUSED_H2_UPGRADE";
    ERROR[ERROR["USER"] = 24] = "USER";
})(ERROR = exports.ERROR || (exports.ERROR = {}));
var TYPE;
(function (TYPE) {
    TYPE[TYPE["BOTH"] = 0] = "BOTH";
    TYPE[TYPE["REQUEST"] = 1] = "REQUEST";
    TYPE[TYPE["RESPONSE"] = 2] = "RESPONSE";
})(TYPE = exports.TYPE || (exports.TYPE = {}));
var FLAGS;
(function (FLAGS) {
    FLAGS[FLAGS["CONNECTION_KEEP_ALIVE"] = 1] = "CONNECTION_KEEP_ALIVE";
    FLAGS[FLAGS["CONNECTION_CLOSE"] = 2] = "CONNECTION_CLOSE";
    FLAGS[FLAGS["CONNECTION_UPGRADE"] = 4] = "CONNECTION_UPGRADE";
    FLAGS[FLAGS["CHUNKED"] = 8] = "CHUNKED";
    FLAGS[FLAGS["UPGRADE"] = 16] = "UPGRADE";
    FLAGS[FLAGS["CONTENT_LENGTH"] = 32] = "CONTENT_LENGTH";
    FLAGS[FLAGS["SKIPBODY"] = 64] = "SKIPBODY";
    FLAGS[FLAGS["TRAILING"] = 128] = "TRAILING";
    // 1 << 8 is unused
    FLAGS[FLAGS["TRANSFER_ENCODING"] = 512] = "TRANSFER_ENCODING";
})(FLAGS = exports.FLAGS || (exports.FLAGS = {}));
var LENIENT_FLAGS;
(function (LENIENT_FLAGS) {
    LENIENT_FLAGS[LENIENT_FLAGS["HEADERS"] = 1] = "HEADERS";
    LENIENT_FLAGS[LENIENT_FLAGS["CHUNKED_LENGTH"] = 2] = "CHUNKED_LENGTH";
    LENIENT_FLAGS[LENIENT_FLAGS["KEEP_ALIVE"] = 4] = "KEEP_ALIVE";
})(LENIENT_FLAGS = exports.LENIENT_FLAGS || (exports.LENIENT_FLAGS = {}));
var METHODS;
(function (METHODS) {
    METHODS[METHODS["DELETE"] = 0] = "DELETE";
    METHODS[METHODS["GET"] = 1] = "GET";
    METHODS[METHODS["HEAD"] = 2] = "HEAD";
    METHODS[METHODS["POST"] = 3] = "POST";
    METHODS[METHODS["PUT"] = 4] = "PUT";
    /* pathological */
    METHODS[METHODS["CONNECT"] = 5] = "CONNECT";
    METHODS[METHODS["OPTIONS"] = 6] = "OPTIONS";
    METHODS[METHODS["TRACE"] = 7] = "TRACE";
    /* WebDAV */
    METHODS[METHODS["COPY"] = 8] = "COPY";
    METHODS[METHODS["LOCK"] = 9] = "LOCK";
    METHODS[METHODS["MKCOL"] = 10] = "MKCOL";
    METHODS[METHODS["MOVE"] = 11] = "MOVE";
    METHODS[METHODS["PROPFIND"] = 12] = "PROPFIND";
    METHODS[METHODS["PROPPATCH"] = 13] = "PROPPATCH";
    METHODS[METHODS["SEARCH"] = 14] = "SEARCH";
    METHODS[METHODS["UNLOCK"] = 15] = "UNLOCK";
    METHODS[METHODS["BIND"] = 16] = "BIND";
    METHODS[METHODS["REBIND"] = 17] = "REBIND";
    METHODS[METHODS["UNBIND"] = 18] = "UNBIND";
    METHODS[METHODS["ACL"] = 19] = "ACL";
    /* subversion */
    METHODS[METHODS["REPORT"] = 20] = "REPORT";
    METHODS[METHODS["MKACTIVITY"] = 21] = "MKACTIVITY";
    METHODS[METHODS["CHECKOUT"] = 22] = "CHECKOUT";
    METHODS[METHODS["MERGE"] = 23] = "MERGE";
    /* upnp */
    METHODS[METHODS["M-SEARCH"] = 24] = "M-SEARCH";
    METHODS[METHODS["NOTIFY"] = 25] = "NOTIFY";
    METHODS[METHODS["SUBSCRIBE"] = 26] = "SUBSCRIBE";
    METHODS[METHODS["UNSUBSCRIBE"] = 27] = "UNSUBSCRIBE";
    /* RFC-5789 */
    METHODS[METHODS["PATCH"] = 28] = "PATCH";
    METHODS[METHODS["PURGE"] = 29] = "PURGE";
    /* CalDAV */
    METHODS[METHODS["MKCALENDAR"] = 30] = "MKCALENDAR";
    /* RFC-2068, section 19.6.1.2 */
    METHODS[METHODS["LINK"] = 31] = "LINK";
    METHODS[METHODS["UNLINK"] = 32] = "UNLINK";
    /* icecast */
    METHODS[METHODS["SOURCE"] = 33] = "SOURCE";
    /* RFC-7540, section 11.6 */
    METHODS[METHODS["PRI"] = 34] = "PRI";
    /* RFC-2326 RTSP */
    METHODS[METHODS["DESCRIBE"] = 35] = "DESCRIBE";
    METHODS[METHODS["ANNOUNCE"] = 36] = "ANNOUNCE";
    METHODS[METHODS["SETUP"] = 37] = "SETUP";
    METHODS[METHODS["PLAY"] = 38] = "PLAY";
    METHODS[METHODS["PAUSE"] = 39] = "PAUSE";
    METHODS[METHODS["TEARDOWN"] = 40] = "TEARDOWN";
    METHODS[METHODS["GET_PARAMETER"] = 41] = "GET_PARAMETER";
    METHODS[METHODS["SET_PARAMETER"] = 42] = "SET_PARAMETER";
    METHODS[METHODS["REDIRECT"] = 43] = "REDIRECT";
    METHODS[METHODS["RECORD"] = 44] = "RECORD";
    /* RAOP */
    METHODS[METHODS["FLUSH"] = 45] = "FLUSH";
})(METHODS = exports.METHODS || (exports.METHODS = {}));
exports.METHODS_HTTP = [
    METHODS.DELETE,
    METHODS.GET,
    METHODS.HEAD,
    METHODS.POST,
    METHODS.PUT,
    METHODS.CONNECT,
    METHODS.OPTIONS,
    METHODS.TRACE,
    METHODS.COPY,
    METHODS.LOCK,
    METHODS.MKCOL,
    METHODS.MOVE,
    METHODS.PROPFIND,
    METHODS.PROPPATCH,
    METHODS.SEARCH,
    METHODS.UNLOCK,
    METHODS.BIND,
    METHODS.REBIND,
    METHODS.UNBIND,
    METHODS.ACL,
    METHODS.REPORT,
    METHODS.MKACTIVITY,
    METHODS.CHECKOUT,
    METHODS.MERGE,
    METHODS['M-SEARCH'],
    METHODS.NOTIFY,
    METHODS.SUBSCRIBE,
    METHODS.UNSUBSCRIBE,
    METHODS.PATCH,
    METHODS.PURGE,
    METHODS.MKCALENDAR,
    METHODS.LINK,
    METHODS.UNLINK,
    METHODS.PRI,
    // TODO(indutny): should we allow it with HTTP?
    METHODS.SOURCE,
];
exports.METHODS_ICE = [
    METHODS.SOURCE,
];
exports.METHODS_RTSP = [
    METHODS.OPTIONS,
    METHODS.DESCRIBE,
    METHODS.ANNOUNCE,
    METHODS.SETUP,
    METHODS.PLAY,
    METHODS.PAUSE,
    METHODS.TEARDOWN,
    METHODS.GET_PARAMETER,
    METHODS.SET_PARAMETER,
    METHODS.REDIRECT,
    METHODS.RECORD,
    METHODS.FLUSH,
    // For AirPlay
    METHODS.GET,
    METHODS.POST,
];
exports.METHOD_MAP = utils_1.enumToMap(METHODS);
exports.H_METHOD_MAP = {};
Object.keys(exports.METHOD_MAP).forEach((key) => {
    if (/^H/.test(key)) {
        exports.H_METHOD_MAP[key] = exports.METHOD_MAP[key];
    }
});
var FINISH;
(function (FINISH) {
    FINISH[FINISH["SAFE"] = 0] = "SAFE";
    FINISH[FINISH["SAFE_WITH_CB"] = 1] = "SAFE_WITH_CB";
    FINISH[FINISH["UNSAFE"] = 2] = "UNSAFE";
})(FINISH = exports.FINISH || (exports.FINISH = {}));
exports.ALPHA = [];
for (let i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++) {
    // Upper case
    exports.ALPHA.push(String.fromCharCode(i));
    // Lower case
    exports.ALPHA.push(String.fromCharCode(i + 0x20));
}
exports.NUM_MAP = {
    0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
    5: 5, 6: 6, 7: 7, 8: 8, 9: 9,
};
exports.HEX_MAP = {
    0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
    5: 5, 6: 6, 7: 7, 8: 8, 9: 9,
    A: 0XA, B: 0XB, C: 0XC, D: 0XD, E: 0XE, F: 0XF,
    a: 0xa, b: 0xb, c: 0xc, d: 0xd, e: 0xe, f: 0xf,
};
exports.NUM = [
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
];
exports.ALPHANUM = exports.ALPHA.concat(exports.NUM);
exports.MARK = ['-', '_', '.', '!', '~', '*', '\'', '(', ')'];
exports.USERINFO_CHARS = exports.ALPHANUM
    .concat(exports.MARK)
    .concat(['%', ';', ':', '&', '=', '+', '$', ',']);
// TODO(indutny): use RFC
exports.STRICT_URL_CHAR = [
    '!', '"', '$', '%', '&', '\'',
    '(', ')', '*', '+', ',', '-', '.', '/',
    ':', ';', '<', '=', '>',
    '@', '[', '\\', ']', '^', '_',
    '`',
    '{', '|', '}', '~',
].concat(exports.ALPHANUM);
exports.URL_CHAR = exports.STRICT_URL_CHAR
    .concat(['\t', '\f']);
// All characters with 0x80 bit set to 1
for (let i = 0x80; i <= 0xff; i++) {
    exports.URL_CHAR.push(i);
}
exports.HEX = exports.NUM.concat(['a', 'b', 'c', 'd', 'e', 'f', 'A', 'B', 'C', 'D', 'E', 'F']);
/* Tokens as defined by rfc 2616. Also lowercases them.
 *        token       = 1*<any CHAR except CTLs or separators>
 *     separators     = "(" | ")" | "<" | ">" | "@"
 *                    | "," | ";" | ":" | "\" | <">
 *                    | "/" | "[" | "]" | "?" | "="
 *                    | "{" | "}" | SP | HT
 */
exports.STRICT_TOKEN = [
    '!', '#', '$', '%', '&', '\'',
    '*', '+', '-', '.',
    '^', '_', '`',
    '|', '~',
].concat(exports.ALPHANUM);
exports.TOKEN = exports.STRICT_TOKEN.concat([' ']);
/*
 * Verify that a char is a valid visible (printable) US-ASCII
 * character or %x80-FF
 */
exports.HEADER_CHARS = ['\t'];
for (let i = 32; i <= 255; i++) {
    if (i !== 127) {
        exports.HEADER_CHARS.push(i);
    }
}
// ',' = \x44
exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS.filter((c) => c !== 44);
exports.MAJOR = exports.NUM_MAP;
exports.MINOR = exports.MAJOR;
var HEADER_STATE;
(function (HEADER_STATE) {
    HEADER_STATE[HEADER_STATE["GENERAL"] = 0] = "GENERAL";
    HEADER_STATE[HEADER_STATE["CONNECTION"] = 1] = "CONNECTION";
    HEADER_STATE[HEADER_STATE["CONTENT_LENGTH"] = 2] = "CONTENT_LENGTH";
    HEADER_STATE[HEADER_STATE["TRANSFER_ENCODING"] = 3] = "TRANSFER_ENCODING";
    HEADER_STATE[HEADER_STATE["UPGRADE"] = 4] = "UPGRADE";
    HEADER_STATE[HEADER_STATE["CONNECTION_KEEP_ALIVE"] = 5] = "CONNECTION_KEEP_ALIVE";
    HEADER_STATE[HEADER_STATE["CONNECTION_CLOSE"] = 6] = "CONNECTION_CLOSE";
    HEADER_STATE[HEADER_STATE["CONNECTION_UPGRADE"] = 7] = "CONNECTION_UPGRADE";
    HEADER_STATE[HEADER_STATE["TRANSFER_ENCODING_CHUNKED"] = 8] = "TRANSFER_ENCODING_CHUNKED";
})(HEADER_STATE = exports.HEADER_STATE || (exports.HEADER_STATE = {}));
exports.SPECIAL_HEADERS = {
    'connection': HEADER_STATE.CONNECTION,
    'content-length': HEADER_STATE.CONTENT_LENGTH,
    'proxy-connection': HEADER_STATE.CONNECTION,
    'transfer-encoding': HEADER_STATE.TRANSFER_ENCODING,
    'upgrade': HEADER_STATE.UPGRADE,
};
//# sourceMappingURL=constants.js.map

/***/ }),

/***/ "../../node_modules/undici/lib/llhttp/llhttp-wasm.js":
/*!***********************************************************!*\
  !*** ../../node_modules/undici/lib/llhttp/llhttp-wasm.js ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = ''


/***/ }),

/***/ "../../node_modules/undici/lib/llhttp/llhttp_simd-wasm.js":
/*!****************************************************************!*\
  !*** ../../node_modules/undici/lib/llhttp/llhttp_simd-wasm.js ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = ''


/***/ }),

/***/ "../../node_modules/undici/lib/llhttp/utils.js":
/*!*****************************************************!*\
  !*** ../../node_modules/undici/lib/llhttp/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.enumToMap = void 0;
function enumToMap(obj) {
    const res = {};
    Object.keys(obj).forEach((key) => {
        const value = obj[key];
        if (typeof value === 'number') {
            res[key] = value;
        }
    });
    return res;
}
exports.enumToMap = enumToMap;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "../../node_modules/undici/lib/mock/mock-agent.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/mock/mock-agent.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { kClients } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const Agent = __webpack_require__(/*! ../agent */ "../../node_modules/undici/lib/agent.js")
const {
  kAgent,
  kMockAgentSet,
  kMockAgentGet,
  kDispatches,
  kIsMockActive,
  kNetConnect,
  kGetNetConnect,
  kOptions,
  kFactory
} = __webpack_require__(/*! ./mock-symbols */ "../../node_modules/undici/lib/mock/mock-symbols.js")
const MockClient = __webpack_require__(/*! ./mock-client */ "../../node_modules/undici/lib/mock/mock-client.js")
const MockPool = __webpack_require__(/*! ./mock-pool */ "../../node_modules/undici/lib/mock/mock-pool.js")
const { matchValue, buildMockOptions } = __webpack_require__(/*! ./mock-utils */ "../../node_modules/undici/lib/mock/mock-utils.js")
const { InvalidArgumentError, UndiciError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const Dispatcher = __webpack_require__(/*! ../dispatcher */ "../../node_modules/undici/lib/dispatcher.js")
const Pluralizer = __webpack_require__(/*! ./pluralizer */ "../../node_modules/undici/lib/mock/pluralizer.js")
const PendingInterceptorsFormatter = __webpack_require__(/*! ./pending-interceptors-formatter */ "../../node_modules/undici/lib/mock/pending-interceptors-formatter.js")

class FakeWeakRef {
  constructor (value) {
    this.value = value
  }

  deref () {
    return this.value
  }
}

class MockAgent extends Dispatcher {
  constructor (opts) {
    super(opts)

    this[kNetConnect] = true
    this[kIsMockActive] = true

    // Instantiate Agent and encapsulate
    if ((opts && opts.agent && typeof opts.agent.dispatch !== 'function')) {
      throw new InvalidArgumentError('Argument opts.agent must implement Agent')
    }
    const agent = opts && opts.agent ? opts.agent : new Agent(opts)
    this[kAgent] = agent

    this[kClients] = agent[kClients]
    this[kOptions] = buildMockOptions(opts)
  }

  get (origin) {
    let dispatcher = this[kMockAgentGet](origin)

    if (!dispatcher) {
      dispatcher = this[kFactory](origin)
      this[kMockAgentSet](origin, dispatcher)
    }
    return dispatcher
  }

  dispatch (opts, handler) {
    // Call MockAgent.get to perform additional setup before dispatching as normal
    this.get(opts.origin)
    return this[kAgent].dispatch(opts, handler)
  }

  async close () {
    await this[kAgent].close()
    this[kClients].clear()
  }

  deactivate () {
    this[kIsMockActive] = false
  }

  activate () {
    this[kIsMockActive] = true
  }

  enableNetConnect (matcher) {
    if (typeof matcher === 'string' || typeof matcher === 'function' || matcher instanceof RegExp) {
      if (Array.isArray(this[kNetConnect])) {
        this[kNetConnect].push(matcher)
      } else {
        this[kNetConnect] = [matcher]
      }
    } else if (typeof matcher === 'undefined') {
      this[kNetConnect] = true
    } else {
      throw new InvalidArgumentError('Unsupported matcher. Must be one of String|Function|RegExp.')
    }
  }

  disableNetConnect () {
    this[kNetConnect] = false
  }

  // This is required to bypass issues caused by using global symbols - see:
  // https://github.com/nodejs/undici/issues/1447
  get isMockActive () {
    return this[kIsMockActive]
  }

  [kMockAgentSet] (origin, dispatcher) {
    this[kClients].set(origin, new FakeWeakRef(dispatcher))
  }

  [kFactory] (origin) {
    const mockOptions = Object.assign({ agent: this }, this[kOptions])
    return this[kOptions] && this[kOptions].connections === 1
      ? new MockClient(origin, mockOptions)
      : new MockPool(origin, mockOptions)
  }

  [kMockAgentGet] (origin) {
    // First check if we can immediately find it
    const ref = this[kClients].get(origin)
    if (ref) {
      return ref.deref()
    }

    // If the origin is not a string create a dummy parent pool and return to user
    if (typeof origin !== 'string') {
      const dispatcher = this[kFactory]('http://localhost:9999')
      this[kMockAgentSet](origin, dispatcher)
      return dispatcher
    }

    // If we match, create a pool and assign the same dispatches
    for (const [keyMatcher, nonExplicitRef] of Array.from(this[kClients])) {
      const nonExplicitDispatcher = nonExplicitRef.deref()
      if (nonExplicitDispatcher && typeof keyMatcher !== 'string' && matchValue(keyMatcher, origin)) {
        const dispatcher = this[kFactory](origin)
        this[kMockAgentSet](origin, dispatcher)
        dispatcher[kDispatches] = nonExplicitDispatcher[kDispatches]
        return dispatcher
      }
    }
  }

  [kGetNetConnect] () {
    return this[kNetConnect]
  }

  pendingInterceptors () {
    const mockAgentClients = this[kClients]

    return Array.from(mockAgentClients.entries())
      .flatMap(([origin, scope]) => scope.deref()[kDispatches].map(dispatch => ({ ...dispatch, origin })))
      .filter(({ pending }) => pending)
  }

  assertNoPendingInterceptors ({ pendingInterceptorsFormatter = new PendingInterceptorsFormatter() } = {}) {
    const pending = this.pendingInterceptors()

    if (pending.length === 0) {
      return
    }

    const pluralizer = new Pluralizer('interceptor', 'interceptors').pluralize(pending.length)

    throw new UndiciError(`
${pluralizer.count} ${pluralizer.noun} ${pluralizer.is} pending:

${pendingInterceptorsFormatter.format(pending)}
`.trim())
  }
}

module.exports = MockAgent


/***/ }),

/***/ "../../node_modules/undici/lib/mock/mock-client.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/mock/mock-client.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { promisify } = __webpack_require__(/*! util */ "util")
const Client = __webpack_require__(/*! ../client */ "../../node_modules/undici/lib/client.js")
const { buildMockDispatch } = __webpack_require__(/*! ./mock-utils */ "../../node_modules/undici/lib/mock/mock-utils.js")
const {
  kDispatches,
  kMockAgent,
  kClose,
  kOriginalClose,
  kOrigin,
  kOriginalDispatch,
  kConnected
} = __webpack_require__(/*! ./mock-symbols */ "../../node_modules/undici/lib/mock/mock-symbols.js")
const { MockInterceptor } = __webpack_require__(/*! ./mock-interceptor */ "../../node_modules/undici/lib/mock/mock-interceptor.js")
const Symbols = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { InvalidArgumentError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")

/**
 * MockClient provides an API that extends the Client to influence the mockDispatches.
 */
class MockClient extends Client {
  constructor (origin, opts) {
    super(origin, opts)

    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {
      throw new InvalidArgumentError('Argument opts.agent must implement Agent')
    }

    this[kMockAgent] = opts.agent
    this[kOrigin] = origin
    this[kDispatches] = []
    this[kConnected] = 1
    this[kOriginalDispatch] = this.dispatch
    this[kOriginalClose] = this.close.bind(this)

    this.dispatch = buildMockDispatch.call(this)
    this.close = this[kClose]
  }

  get [Symbols.kConnected] () {
    return this[kConnected]
  }

  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept (opts) {
    return new MockInterceptor(opts, this[kDispatches])
  }

  async [kClose] () {
    await promisify(this[kOriginalClose])()
    this[kConnected] = 0
    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])
  }
}

module.exports = MockClient


/***/ }),

/***/ "../../node_modules/undici/lib/mock/mock-errors.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/mock/mock-errors.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { UndiciError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")

class MockNotMatchedError extends UndiciError {
  constructor (message) {
    super(message)
    Error.captureStackTrace(this, MockNotMatchedError)
    this.name = 'MockNotMatchedError'
    this.message = message || 'The request does not match any registered mock dispatches'
    this.code = 'UND_MOCK_ERR_MOCK_NOT_MATCHED'
  }
}

module.exports = {
  MockNotMatchedError
}


/***/ }),

/***/ "../../node_modules/undici/lib/mock/mock-interceptor.js":
/*!**************************************************************!*\
  !*** ../../node_modules/undici/lib/mock/mock-interceptor.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { getResponseData, buildKey, addMockDispatch } = __webpack_require__(/*! ./mock-utils */ "../../node_modules/undici/lib/mock/mock-utils.js")
const {
  kDispatches,
  kDispatchKey,
  kDefaultHeaders,
  kDefaultTrailers,
  kContentLength,
  kMockDispatch
} = __webpack_require__(/*! ./mock-symbols */ "../../node_modules/undici/lib/mock/mock-symbols.js")
const { InvalidArgumentError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")
const { buildURL } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")

/**
 * Defines the scope API for an interceptor reply
 */
class MockScope {
  constructor (mockDispatch) {
    this[kMockDispatch] = mockDispatch
  }

  /**
   * Delay a reply by a set amount in ms.
   */
  delay (waitInMs) {
    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {
      throw new InvalidArgumentError('waitInMs must be a valid integer > 0')
    }

    this[kMockDispatch].delay = waitInMs
    return this
  }

  /**
   * For a defined reply, never mark as consumed.
   */
  persist () {
    this[kMockDispatch].persist = true
    return this
  }

  /**
   * Allow one to define a reply for a set amount of matching requests.
   */
  times (repeatTimes) {
    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {
      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0')
    }

    this[kMockDispatch].times = repeatTimes
    return this
  }
}

/**
 * Defines an interceptor for a Mock
 */
class MockInterceptor {
  constructor (opts, mockDispatches) {
    if (typeof opts !== 'object') {
      throw new InvalidArgumentError('opts must be an object')
    }
    if (typeof opts.path === 'undefined') {
      throw new InvalidArgumentError('opts.path must be defined')
    }
    if (typeof opts.method === 'undefined') {
      opts.method = 'GET'
    }
    // See https://github.com/nodejs/undici/issues/1245
    // As per RFC 3986, clients are not supposed to send URI
    // fragments to servers when they retrieve a document,
    if (typeof opts.path === 'string') {
      if (opts.query) {
        opts.path = buildURL(opts.path, opts.query)
      } else {
        // Matches https://github.com/nodejs/undici/blob/main/lib/fetch/index.js#L1811
        const parsedURL = new URL(opts.path, 'data://')
        opts.path = parsedURL.pathname + parsedURL.search
      }
    }
    if (typeof opts.method === 'string') {
      opts.method = opts.method.toUpperCase()
    }

    this[kDispatchKey] = buildKey(opts)
    this[kDispatches] = mockDispatches
    this[kDefaultHeaders] = {}
    this[kDefaultTrailers] = {}
    this[kContentLength] = false
  }

  createMockScopeDispatchData (statusCode, data, responseOptions = {}) {
    const responseData = getResponseData(data)
    const contentLength = this[kContentLength] ? { 'content-length': responseData.length } : {}
    const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers }
    const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers }

    return { statusCode, data, headers, trailers }
  }

  validateReplyParameters (statusCode, data, responseOptions) {
    if (typeof statusCode === 'undefined') {
      throw new InvalidArgumentError('statusCode must be defined')
    }
    if (typeof data === 'undefined') {
      throw new InvalidArgumentError('data must be defined')
    }
    if (typeof responseOptions !== 'object') {
      throw new InvalidArgumentError('responseOptions must be an object')
    }
  }

  /**
   * Mock an undici request with a defined reply.
   */
  reply (replyData) {
    // Values of reply aren't available right now as they
    // can only be available when the reply callback is invoked.
    if (typeof replyData === 'function') {
      // We'll first wrap the provided callback in another function,
      // this function will properly resolve the data from the callback
      // when invoked.
      const wrappedDefaultsCallback = (opts) => {
        // Our reply options callback contains the parameter for statusCode, data and options.
        const resolvedData = replyData(opts)

        // Check if it is in the right format
        if (typeof resolvedData !== 'object') {
          throw new InvalidArgumentError('reply options callback must return an object')
        }

        const { statusCode, data = '', responseOptions = {} } = resolvedData
        this.validateReplyParameters(statusCode, data, responseOptions)
        // Since the values can be obtained immediately we return them
        // from this higher order function that will be resolved later.
        return {
          ...this.createMockScopeDispatchData(statusCode, data, responseOptions)
        }
      }

      // Add usual dispatch data, but this time set the data parameter to function that will eventually provide data.
      const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], wrappedDefaultsCallback)
      return new MockScope(newMockDispatch)
    }

    // We can have either one or three parameters, if we get here,
    // we should have 1-3 parameters. So we spread the arguments of
    // this function to obtain the parameters, since replyData will always
    // just be the statusCode.
    const [statusCode, data = '', responseOptions = {}] = [...arguments]
    this.validateReplyParameters(statusCode, data, responseOptions)

    // Send in-already provided data like usual
    const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions)
    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], dispatchData)
    return new MockScope(newMockDispatch)
  }

  /**
   * Mock an undici request with a defined error.
   */
  replyWithError (error) {
    if (typeof error === 'undefined') {
      throw new InvalidArgumentError('error must be defined')
    }

    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error })
    return new MockScope(newMockDispatch)
  }

  /**
   * Set default reply headers on the interceptor for subsequent replies
   */
  defaultReplyHeaders (headers) {
    if (typeof headers === 'undefined') {
      throw new InvalidArgumentError('headers must be defined')
    }

    this[kDefaultHeaders] = headers
    return this
  }

  /**
   * Set default reply trailers on the interceptor for subsequent replies
   */
  defaultReplyTrailers (trailers) {
    if (typeof trailers === 'undefined') {
      throw new InvalidArgumentError('trailers must be defined')
    }

    this[kDefaultTrailers] = trailers
    return this
  }

  /**
   * Set reply content length header for replies on the interceptor
   */
  replyContentLength () {
    this[kContentLength] = true
    return this
  }
}

module.exports.MockInterceptor = MockInterceptor
module.exports.MockScope = MockScope


/***/ }),

/***/ "../../node_modules/undici/lib/mock/mock-pool.js":
/*!*******************************************************!*\
  !*** ../../node_modules/undici/lib/mock/mock-pool.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { promisify } = __webpack_require__(/*! util */ "util")
const Pool = __webpack_require__(/*! ../pool */ "../../node_modules/undici/lib/pool.js")
const { buildMockDispatch } = __webpack_require__(/*! ./mock-utils */ "../../node_modules/undici/lib/mock/mock-utils.js")
const {
  kDispatches,
  kMockAgent,
  kClose,
  kOriginalClose,
  kOrigin,
  kOriginalDispatch,
  kConnected
} = __webpack_require__(/*! ./mock-symbols */ "../../node_modules/undici/lib/mock/mock-symbols.js")
const { MockInterceptor } = __webpack_require__(/*! ./mock-interceptor */ "../../node_modules/undici/lib/mock/mock-interceptor.js")
const Symbols = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { InvalidArgumentError } = __webpack_require__(/*! ../core/errors */ "../../node_modules/undici/lib/core/errors.js")

/**
 * MockPool provides an API that extends the Pool to influence the mockDispatches.
 */
class MockPool extends Pool {
  constructor (origin, opts) {
    super(origin, opts)

    if (!opts || !opts.agent || typeof opts.agent.dispatch !== 'function') {
      throw new InvalidArgumentError('Argument opts.agent must implement Agent')
    }

    this[kMockAgent] = opts.agent
    this[kOrigin] = origin
    this[kDispatches] = []
    this[kConnected] = 1
    this[kOriginalDispatch] = this.dispatch
    this[kOriginalClose] = this.close.bind(this)

    this.dispatch = buildMockDispatch.call(this)
    this.close = this[kClose]
  }

  get [Symbols.kConnected] () {
    return this[kConnected]
  }

  /**
   * Sets up the base interceptor for mocking replies from undici.
   */
  intercept (opts) {
    return new MockInterceptor(opts, this[kDispatches])
  }

  async [kClose] () {
    await promisify(this[kOriginalClose])()
    this[kConnected] = 0
    this[kMockAgent][Symbols.kClients].delete(this[kOrigin])
  }
}

module.exports = MockPool


/***/ }),

/***/ "../../node_modules/undici/lib/mock/mock-symbols.js":
/*!**********************************************************!*\
  !*** ../../node_modules/undici/lib/mock/mock-symbols.js ***!
  \**********************************************************/
/***/ ((module) => {



module.exports = {
  kAgent: Symbol('agent'),
  kOptions: Symbol('options'),
  kFactory: Symbol('factory'),
  kDispatches: Symbol('dispatches'),
  kDispatchKey: Symbol('dispatch key'),
  kDefaultHeaders: Symbol('default headers'),
  kDefaultTrailers: Symbol('default trailers'),
  kContentLength: Symbol('content length'),
  kMockAgent: Symbol('mock agent'),
  kMockAgentSet: Symbol('mock agent set'),
  kMockAgentGet: Symbol('mock agent get'),
  kMockDispatch: Symbol('mock dispatch'),
  kClose: Symbol('close'),
  kOriginalClose: Symbol('original agent close'),
  kOrigin: Symbol('origin'),
  kIsMockActive: Symbol('is mock active'),
  kNetConnect: Symbol('net connect'),
  kGetNetConnect: Symbol('get net connect'),
  kConnected: Symbol('connected')
}


/***/ }),

/***/ "../../node_modules/undici/lib/mock/mock-utils.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/mock/mock-utils.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { MockNotMatchedError } = __webpack_require__(/*! ./mock-errors */ "../../node_modules/undici/lib/mock/mock-errors.js")
const {
  kDispatches,
  kMockAgent,
  kOriginalDispatch,
  kOrigin,
  kGetNetConnect
} = __webpack_require__(/*! ./mock-symbols */ "../../node_modules/undici/lib/mock/mock-symbols.js")
const { buildURL, nop } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { STATUS_CODES } = __webpack_require__(/*! http */ "http")
const {
  types: {
    isPromise
  }
} = __webpack_require__(/*! util */ "util")

function matchValue (match, value) {
  if (typeof match === 'string') {
    return match === value
  }
  if (match instanceof RegExp) {
    return match.test(value)
  }
  if (typeof match === 'function') {
    return match(value) === true
  }
  return false
}

function lowerCaseEntries (headers) {
  return Object.fromEntries(
    Object.entries(headers).map(([headerName, headerValue]) => {
      return [headerName.toLocaleLowerCase(), headerValue]
    })
  )
}

/**
 * @param {import('../../index').Headers|string[]|Record<string, string>} headers
 * @param {string} key
 */
function getHeaderByName (headers, key) {
  if (Array.isArray(headers)) {
    for (let i = 0; i < headers.length; i += 2) {
      if (headers[i].toLocaleLowerCase() === key.toLocaleLowerCase()) {
        return headers[i + 1]
      }
    }

    return undefined
  } else if (typeof headers.get === 'function') {
    return headers.get(key)
  } else {
    return lowerCaseEntries(headers)[key.toLocaleLowerCase()]
  }
}

/** @param {string[]} headers */
function buildHeadersFromArray (headers) { // fetch HeadersList
  const clone = headers.slice()
  const entries = []
  for (let index = 0; index < clone.length; index += 2) {
    entries.push([clone[index], clone[index + 1]])
  }
  return Object.fromEntries(entries)
}

function matchHeaders (mockDispatch, headers) {
  if (typeof mockDispatch.headers === 'function') {
    if (Array.isArray(headers)) { // fetch HeadersList
      headers = buildHeadersFromArray(headers)
    }
    return mockDispatch.headers(headers ? lowerCaseEntries(headers) : {})
  }
  if (typeof mockDispatch.headers === 'undefined') {
    return true
  }
  if (typeof headers !== 'object' || typeof mockDispatch.headers !== 'object') {
    return false
  }

  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch.headers)) {
    const headerValue = getHeaderByName(headers, matchHeaderName)

    if (!matchValue(matchHeaderValue, headerValue)) {
      return false
    }
  }
  return true
}

function safeUrl (path) {
  if (typeof path !== 'string') {
    return path
  }

  const pathSegments = path.split('?')

  if (pathSegments.length !== 2) {
    return path
  }

  const qp = new URLSearchParams(pathSegments.pop())
  qp.sort()
  return [...pathSegments, qp.toString()].join('?')
}

function matchKey (mockDispatch, { path, method, body, headers }) {
  const pathMatch = matchValue(mockDispatch.path, path)
  const methodMatch = matchValue(mockDispatch.method, method)
  const bodyMatch = typeof mockDispatch.body !== 'undefined' ? matchValue(mockDispatch.body, body) : true
  const headersMatch = matchHeaders(mockDispatch, headers)
  return pathMatch && methodMatch && bodyMatch && headersMatch
}

function getResponseData (data) {
  if (Buffer.isBuffer(data)) {
    return data
  } else if (typeof data === 'object') {
    return JSON.stringify(data)
  } else {
    return data.toString()
  }
}

function getMockDispatch (mockDispatches, key) {
  const basePath = key.query ? buildURL(key.path, key.query) : key.path
  const resolvedPath = typeof basePath === 'string' ? safeUrl(basePath) : basePath

  // Match path
  let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue(safeUrl(path), resolvedPath))
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for path '${resolvedPath}'`)
  }

  // Match method
  matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue(method, key.method))
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for method '${key.method}'`)
  }

  // Match body
  matchedMockDispatches = matchedMockDispatches.filter(({ body }) => typeof body !== 'undefined' ? matchValue(body, key.body) : true)
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for body '${key.body}'`)
  }

  // Match headers
  matchedMockDispatches = matchedMockDispatches.filter((mockDispatch) => matchHeaders(mockDispatch, key.headers))
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError(`Mock dispatch not matched for headers '${typeof key.headers === 'object' ? JSON.stringify(key.headers) : key.headers}'`)
  }

  return matchedMockDispatches[0]
}

function addMockDispatch (mockDispatches, key, data) {
  const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false }
  const replyData = typeof data === 'function' ? { callback: data } : { ...data }
  const newMockDispatch = { ...baseData, ...key, pending: true, data: { error: null, ...replyData } }
  mockDispatches.push(newMockDispatch)
  return newMockDispatch
}

function deleteMockDispatch (mockDispatches, key) {
  const index = mockDispatches.findIndex(dispatch => {
    if (!dispatch.consumed) {
      return false
    }
    return matchKey(dispatch, key)
  })
  if (index !== -1) {
    mockDispatches.splice(index, 1)
  }
}

function buildKey (opts) {
  const { path, method, body, headers, query } = opts
  return {
    path,
    method,
    body,
    headers,
    query
  }
}

function generateKeyValues (data) {
  return Object.entries(data).reduce((keyValuePairs, [key, value]) => [
    ...keyValuePairs,
    Buffer.from(`${key}`),
    Array.isArray(value) ? value.map(x => Buffer.from(`${x}`)) : Buffer.from(`${value}`)
  ], [])
}

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
 * @param {number} statusCode
 */
function getStatusText (statusCode) {
  return STATUS_CODES[statusCode] || 'unknown'
}

async function getResponse (body) {
  const buffers = []
  for await (const data of body) {
    buffers.push(data)
  }
  return Buffer.concat(buffers).toString('utf8')
}

/**
 * Mock dispatch function used to simulate undici dispatches
 */
function mockDispatch (opts, handler) {
  // Get mock dispatch from built key
  const key = buildKey(opts)
  const mockDispatch = getMockDispatch(this[kDispatches], key)

  mockDispatch.timesInvoked++

  // Here's where we resolve a callback if a callback is present for the dispatch data.
  if (mockDispatch.data.callback) {
    mockDispatch.data = { ...mockDispatch.data, ...mockDispatch.data.callback(opts) }
  }

  // Parse mockDispatch data
  const { data: { statusCode, data, headers, trailers, error }, delay, persist } = mockDispatch
  const { timesInvoked, times } = mockDispatch

  // If it's used up and not persistent, mark as consumed
  mockDispatch.consumed = !persist && timesInvoked >= times
  mockDispatch.pending = timesInvoked < times

  // If specified, trigger dispatch error
  if (error !== null) {
    deleteMockDispatch(this[kDispatches], key)
    handler.onError(error)
    return true
  }

  // Handle the request with a delay if necessary
  if (typeof delay === 'number' && delay > 0) {
    setTimeout(() => {
      handleReply(this[kDispatches])
    }, delay)
  } else {
    handleReply(this[kDispatches])
  }

  function handleReply (mockDispatches, _data = data) {
    // fetch's HeadersList is a 1D string array
    const optsHeaders = Array.isArray(opts.headers)
      ? buildHeadersFromArray(opts.headers)
      : opts.headers
    const body = typeof _data === 'function'
      ? _data({ ...opts, headers: optsHeaders })
      : _data

    // util.types.isPromise is likely needed for jest.
    if (isPromise(body)) {
      // If handleReply is asynchronous, throwing an error
      // in the callback will reject the promise, rather than
      // synchronously throw the error, which breaks some tests.
      // Rather, we wait for the callback to resolve if it is a
      // promise, and then re-run handleReply with the new body.
      body.then((newData) => handleReply(mockDispatches, newData))
      return
    }

    const responseData = getResponseData(body)
    const responseHeaders = generateKeyValues(headers)
    const responseTrailers = generateKeyValues(trailers)

    handler.abort = nop
    handler.onHeaders(statusCode, responseHeaders, resume, getStatusText(statusCode))
    handler.onData(Buffer.from(responseData))
    handler.onComplete(responseTrailers)
    deleteMockDispatch(mockDispatches, key)
  }

  function resume () {}

  return true
}

function buildMockDispatch () {
  const agent = this[kMockAgent]
  const origin = this[kOrigin]
  const originalDispatch = this[kOriginalDispatch]

  return function dispatch (opts, handler) {
    if (agent.isMockActive) {
      try {
        mockDispatch.call(this, opts, handler)
      } catch (error) {
        if (error instanceof MockNotMatchedError) {
          const netConnect = agent[kGetNetConnect]()
          if (netConnect === false) {
            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`)
          }
          if (checkNetConnect(netConnect, origin)) {
            originalDispatch.call(this, opts, handler)
          } else {
            throw new MockNotMatchedError(`${error.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`)
          }
        } else {
          throw error
        }
      }
    } else {
      originalDispatch.call(this, opts, handler)
    }
  }
}

function checkNetConnect (netConnect, origin) {
  const url = new URL(origin)
  if (netConnect === true) {
    return true
  } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue(matcher, url.host))) {
    return true
  }
  return false
}

function buildMockOptions (opts) {
  if (opts) {
    const { agent, ...mockOptions } = opts
    return mockOptions
  }
}

module.exports = {
  getResponseData,
  getMockDispatch,
  addMockDispatch,
  deleteMockDispatch,
  buildKey,
  generateKeyValues,
  matchValue,
  getResponse,
  getStatusText,
  mockDispatch,
  buildMockDispatch,
  checkNetConnect,
  buildMockOptions,
  getHeaderByName
}


/***/ }),

/***/ "../../node_modules/undici/lib/mock/pending-interceptors-formatter.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/undici/lib/mock/pending-interceptors-formatter.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { Transform } = __webpack_require__(/*! stream */ "stream")
const { Console } = __webpack_require__(/*! console */ "console")

/**
 * Gets the output of `console.table(…)` as a string.
 */
module.exports = class PendingInterceptorsFormatter {
  constructor ({ disableColors } = {}) {
    this.transform = new Transform({
      transform (chunk, _enc, cb) {
        cb(null, chunk)
      }
    })

    this.logger = new Console({
      stdout: this.transform,
      inspectOptions: {
        colors: !disableColors && !process.env.CI
      }
    })
  }

  format (pendingInterceptors) {
    const withPrettyHeaders = pendingInterceptors.map(
      ({ method, path, data: { statusCode }, persist, times, timesInvoked, origin }) => ({
        Method: method,
        Origin: origin,
        Path: path,
        'Status code': statusCode,
        Persistent: persist ? '✅' : '❌',
        Invocations: timesInvoked,
        Remaining: persist ? Infinity : times - timesInvoked
      }))

    this.logger.table(withPrettyHeaders)
    return this.transform.read().toString()
  }
}


/***/ }),

/***/ "../../node_modules/undici/lib/mock/pluralizer.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/mock/pluralizer.js ***!
  \********************************************************/
/***/ ((module) => {



const singulars = {
  pronoun: 'it',
  is: 'is',
  was: 'was',
  this: 'this'
}

const plurals = {
  pronoun: 'they',
  is: 'are',
  was: 'were',
  this: 'these'
}

module.exports = class Pluralizer {
  constructor (singular, plural) {
    this.singular = singular
    this.plural = plural
  }

  pluralize (count) {
    const one = count === 1
    const keys = one ? singulars : plurals
    const noun = one ? this.singular : this.plural
    return { ...keys, count, noun }
  }
}


/***/ }),

/***/ "../../node_modules/undici/lib/node/fixed-queue.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/node/fixed-queue.js ***!
  \*********************************************************/
/***/ ((module) => {

/* eslint-disable */



// Extracted from node/lib/internal/fixed_queue.js

// Currently optimal queue size, tested on V8 6.0 - 6.6. Must be power of two.
const kSize = 2048;
const kMask = kSize - 1;

// The FixedQueue is implemented as a singly-linked list of fixed-size
// circular buffers. It looks something like this:
//
//  head                                                       tail
//    |                                                          |
//    v                                                          v
// +-----------+ <-----\       +-----------+ <------\         +-----------+
// |  [null]   |        \----- |   next    |         \------- |   next    |
// +-----------+               +-----------+                  +-----------+
// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |                  |  [empty]  |
// |   item    |               |   item    |       bottom --> |   item    |
// |   item    |               |   item    |                  |   item    |
// |    ...    |               |    ...    |                  |    ...    |
// |   item    |               |   item    |                  |   item    |
// |   item    |               |   item    |                  |   item    |
// |  [empty]  | <-- top       |   item    |                  |   item    |
// |  [empty]  |               |   item    |                  |   item    |
// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |
// +-----------+               +-----------+                  +-----------+
//
// Or, if there is only one circular buffer, it looks something
// like either of these:
//
//  head   tail                                 head   tail
//    |     |                                     |     |
//    v     v                                     v     v
// +-----------+                               +-----------+
// |  [null]   |                               |  [null]   |
// +-----------+                               +-----------+
// |  [empty]  |                               |   item    |
// |  [empty]  |                               |   item    |
// |   item    | <-- bottom            top --> |  [empty]  |
// |   item    |                               |  [empty]  |
// |  [empty]  | <-- top            bottom --> |   item    |
// |  [empty]  |                               |   item    |
// +-----------+                               +-----------+
//
// Adding a value means moving `top` forward by one, removing means
// moving `bottom` forward by one. After reaching the end, the queue
// wraps around.
//
// When `top === bottom` the current queue is empty and when
// `top + 1 === bottom` it's full. This wastes a single space of storage
// but allows much quicker checks.

class FixedCircularBuffer {
  constructor() {
    this.bottom = 0;
    this.top = 0;
    this.list = new Array(kSize);
    this.next = null;
  }

  isEmpty() {
    return this.top === this.bottom;
  }

  isFull() {
    return ((this.top + 1) & kMask) === this.bottom;
  }

  push(data) {
    this.list[this.top] = data;
    this.top = (this.top + 1) & kMask;
  }

  shift() {
    const nextItem = this.list[this.bottom];
    if (nextItem === undefined)
      return null;
    this.list[this.bottom] = undefined;
    this.bottom = (this.bottom + 1) & kMask;
    return nextItem;
  }
}

module.exports = class FixedQueue {
  constructor() {
    this.head = this.tail = new FixedCircularBuffer();
  }

  isEmpty() {
    return this.head.isEmpty();
  }

  push(data) {
    if (this.head.isFull()) {
      // Head is full: Creates a new queue, sets the old queue's `.next` to it,
      // and sets it as the new main queue.
      this.head = this.head.next = new FixedCircularBuffer();
    }
    this.head.push(data);
  }

  shift() {
    const tail = this.tail;
    const next = tail.shift();
    if (tail.isEmpty() && tail.next !== null) {
      // If there is another queue, it forms the new tail.
      this.tail = tail.next;
    }
    return next;
  }
};


/***/ }),

/***/ "../../node_modules/undici/lib/pool-base.js":
/*!**************************************************!*\
  !*** ../../node_modules/undici/lib/pool-base.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const DispatcherBase = __webpack_require__(/*! ./dispatcher-base */ "../../node_modules/undici/lib/dispatcher-base.js")
const FixedQueue = __webpack_require__(/*! ./node/fixed-queue */ "../../node_modules/undici/lib/node/fixed-queue.js")
const { kConnected, kSize, kRunning, kPending, kQueued, kBusy, kFree, kUrl, kClose, kDestroy, kDispatch } = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const PoolStats = __webpack_require__(/*! ./pool-stats */ "../../node_modules/undici/lib/pool-stats.js")

const kClients = Symbol('clients')
const kNeedDrain = Symbol('needDrain')
const kQueue = Symbol('queue')
const kClosedResolve = Symbol('closed resolve')
const kOnDrain = Symbol('onDrain')
const kOnConnect = Symbol('onConnect')
const kOnDisconnect = Symbol('onDisconnect')
const kOnConnectionError = Symbol('onConnectionError')
const kGetDispatcher = Symbol('get dispatcher')
const kAddClient = Symbol('add client')
const kRemoveClient = Symbol('remove client')
const kStats = Symbol('stats')

class PoolBase extends DispatcherBase {
  constructor () {
    super()

    this[kQueue] = new FixedQueue()
    this[kClients] = []
    this[kQueued] = 0

    const pool = this

    this[kOnDrain] = function onDrain (origin, targets) {
      const queue = pool[kQueue]

      let needDrain = false

      while (!needDrain) {
        const item = queue.shift()
        if (!item) {
          break
        }
        pool[kQueued]--
        needDrain = !this.dispatch(item.opts, item.handler)
      }

      this[kNeedDrain] = needDrain

      if (!this[kNeedDrain] && pool[kNeedDrain]) {
        pool[kNeedDrain] = false
        pool.emit('drain', origin, [pool, ...targets])
      }

      if (pool[kClosedResolve] && queue.isEmpty()) {
        Promise
          .all(pool[kClients].map(c => c.close()))
          .then(pool[kClosedResolve])
      }
    }

    this[kOnConnect] = (origin, targets) => {
      pool.emit('connect', origin, [pool, ...targets])
    }

    this[kOnDisconnect] = (origin, targets, err) => {
      pool.emit('disconnect', origin, [pool, ...targets], err)
    }

    this[kOnConnectionError] = (origin, targets, err) => {
      pool.emit('connectionError', origin, [pool, ...targets], err)
    }

    this[kStats] = new PoolStats(this)
  }

  get [kBusy] () {
    return this[kNeedDrain]
  }

  get [kConnected] () {
    return this[kClients].filter(client => client[kConnected]).length
  }

  get [kFree] () {
    return this[kClients].filter(client => client[kConnected] && !client[kNeedDrain]).length
  }

  get [kPending] () {
    let ret = this[kQueued]
    for (const { [kPending]: pending } of this[kClients]) {
      ret += pending
    }
    return ret
  }

  get [kRunning] () {
    let ret = 0
    for (const { [kRunning]: running } of this[kClients]) {
      ret += running
    }
    return ret
  }

  get [kSize] () {
    let ret = this[kQueued]
    for (const { [kSize]: size } of this[kClients]) {
      ret += size
    }
    return ret
  }

  get stats () {
    return this[kStats]
  }

  async [kClose] () {
    if (this[kQueue].isEmpty()) {
      return Promise.all(this[kClients].map(c => c.close()))
    } else {
      return new Promise((resolve) => {
        this[kClosedResolve] = resolve
      })
    }
  }

  async [kDestroy] (err) {
    while (true) {
      const item = this[kQueue].shift()
      if (!item) {
        break
      }
      item.handler.onError(err)
    }

    return Promise.all(this[kClients].map(c => c.destroy(err)))
  }

  [kDispatch] (opts, handler) {
    const dispatcher = this[kGetDispatcher]()

    if (!dispatcher) {
      this[kNeedDrain] = true
      this[kQueue].push({ opts, handler })
      this[kQueued]++
    } else if (!dispatcher.dispatch(opts, handler)) {
      dispatcher[kNeedDrain] = true
      this[kNeedDrain] = !this[kGetDispatcher]()
    }

    return !this[kNeedDrain]
  }

  [kAddClient] (client) {
    client
      .on('drain', this[kOnDrain])
      .on('connect', this[kOnConnect])
      .on('disconnect', this[kOnDisconnect])
      .on('connectionError', this[kOnConnectionError])

    this[kClients].push(client)

    if (this[kNeedDrain]) {
      process.nextTick(() => {
        if (this[kNeedDrain]) {
          this[kOnDrain](client[kUrl], [this, client])
        }
      })
    }

    return this
  }

  [kRemoveClient] (client) {
    client.close(() => {
      const idx = this[kClients].indexOf(client)
      if (idx !== -1) {
        this[kClients].splice(idx, 1)
      }
    })

    this[kNeedDrain] = this[kClients].some(dispatcher => (
      !dispatcher[kNeedDrain] &&
      dispatcher.closed !== true &&
      dispatcher.destroyed !== true
    ))
  }
}

module.exports = {
  PoolBase,
  kClients,
  kNeedDrain,
  kAddClient,
  kRemoveClient,
  kGetDispatcher
}


/***/ }),

/***/ "../../node_modules/undici/lib/pool-stats.js":
/*!***************************************************!*\
  !*** ../../node_modules/undici/lib/pool-stats.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { kFree, kConnected, kPending, kQueued, kRunning, kSize } = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const kPool = Symbol('pool')

class PoolStats {
  constructor (pool) {
    this[kPool] = pool
  }

  get connected () {
    return this[kPool][kConnected]
  }

  get free () {
    return this[kPool][kFree]
  }

  get pending () {
    return this[kPool][kPending]
  }

  get queued () {
    return this[kPool][kQueued]
  }

  get running () {
    return this[kPool][kRunning]
  }

  get size () {
    return this[kPool][kSize]
  }
}

module.exports = PoolStats


/***/ }),

/***/ "../../node_modules/undici/lib/pool.js":
/*!*********************************************!*\
  !*** ../../node_modules/undici/lib/pool.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const {
  PoolBase,
  kClients,
  kNeedDrain,
  kAddClient,
  kGetDispatcher
} = __webpack_require__(/*! ./pool-base */ "../../node_modules/undici/lib/pool-base.js")
const Client = __webpack_require__(/*! ./client */ "../../node_modules/undici/lib/client.js")
const {
  InvalidArgumentError
} = __webpack_require__(/*! ./core/errors */ "../../node_modules/undici/lib/core/errors.js")
const util = __webpack_require__(/*! ./core/util */ "../../node_modules/undici/lib/core/util.js")
const { kUrl, kInterceptors } = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const buildConnector = __webpack_require__(/*! ./core/connect */ "../../node_modules/undici/lib/core/connect.js")

const kOptions = Symbol('options')
const kConnections = Symbol('connections')
const kFactory = Symbol('factory')

function defaultFactory (origin, opts) {
  return new Client(origin, opts)
}

class Pool extends PoolBase {
  constructor (origin, {
    connections,
    factory = defaultFactory,
    connect,
    connectTimeout,
    tls,
    maxCachedSessions,
    socketPath,
    autoSelectFamily,
    autoSelectFamilyAttemptTimeout,
    allowH2,
    ...options
  } = {}) {
    super()

    if (connections != null && (!Number.isFinite(connections) || connections < 0)) {
      throw new InvalidArgumentError('invalid connections')
    }

    if (typeof factory !== 'function') {
      throw new InvalidArgumentError('factory must be a function.')
    }

    if (connect != null && typeof connect !== 'function' && typeof connect !== 'object') {
      throw new InvalidArgumentError('connect must be a function or an object')
    }

    if (typeof connect !== 'function') {
      connect = buildConnector({
        ...tls,
        maxCachedSessions,
        allowH2,
        socketPath,
        timeout: connectTimeout,
        ...(util.nodeHasAutoSelectFamily && autoSelectFamily ? { autoSelectFamily, autoSelectFamilyAttemptTimeout } : undefined),
        ...connect
      })
    }

    this[kInterceptors] = options.interceptors && options.interceptors.Pool && Array.isArray(options.interceptors.Pool)
      ? options.interceptors.Pool
      : []
    this[kConnections] = connections || null
    this[kUrl] = util.parseOrigin(origin)
    this[kOptions] = { ...util.deepClone(options), connect, allowH2 }
    this[kOptions].interceptors = options.interceptors
      ? { ...options.interceptors }
      : undefined
    this[kFactory] = factory
  }

  [kGetDispatcher] () {
    let dispatcher = this[kClients].find(dispatcher => !dispatcher[kNeedDrain])

    if (dispatcher) {
      return dispatcher
    }

    if (!this[kConnections] || this[kClients].length < this[kConnections]) {
      dispatcher = this[kFactory](this[kUrl], this[kOptions])
      this[kAddClient](dispatcher)
    }

    return dispatcher
  }
}

module.exports = Pool


/***/ }),

/***/ "../../node_modules/undici/lib/proxy-agent.js":
/*!****************************************************!*\
  !*** ../../node_modules/undici/lib/proxy-agent.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { kProxy, kClose, kDestroy, kInterceptors } = __webpack_require__(/*! ./core/symbols */ "../../node_modules/undici/lib/core/symbols.js")
const { URL } = __webpack_require__(/*! url */ "url")
const Agent = __webpack_require__(/*! ./agent */ "../../node_modules/undici/lib/agent.js")
const Pool = __webpack_require__(/*! ./pool */ "../../node_modules/undici/lib/pool.js")
const DispatcherBase = __webpack_require__(/*! ./dispatcher-base */ "../../node_modules/undici/lib/dispatcher-base.js")
const { InvalidArgumentError, RequestAbortedError } = __webpack_require__(/*! ./core/errors */ "../../node_modules/undici/lib/core/errors.js")
const buildConnector = __webpack_require__(/*! ./core/connect */ "../../node_modules/undici/lib/core/connect.js")

const kAgent = Symbol('proxy agent')
const kClient = Symbol('proxy client')
const kProxyHeaders = Symbol('proxy headers')
const kRequestTls = Symbol('request tls settings')
const kProxyTls = Symbol('proxy tls settings')
const kConnectEndpoint = Symbol('connect endpoint function')

function defaultProtocolPort (protocol) {
  return protocol === 'https:' ? 443 : 80
}

function buildProxyOptions (opts) {
  if (typeof opts === 'string') {
    opts = { uri: opts }
  }

  if (!opts || !opts.uri) {
    throw new InvalidArgumentError('Proxy opts.uri is mandatory')
  }

  return {
    uri: opts.uri,
    protocol: opts.protocol || 'https'
  }
}

function defaultFactory (origin, opts) {
  return new Pool(origin, opts)
}

class ProxyAgent extends DispatcherBase {
  constructor (opts) {
    super(opts)
    this[kProxy] = buildProxyOptions(opts)
    this[kAgent] = new Agent(opts)
    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent)
      ? opts.interceptors.ProxyAgent
      : []

    if (typeof opts === 'string') {
      opts = { uri: opts }
    }

    if (!opts || !opts.uri) {
      throw new InvalidArgumentError('Proxy opts.uri is mandatory')
    }

    const { clientFactory = defaultFactory } = opts

    if (typeof clientFactory !== 'function') {
      throw new InvalidArgumentError('Proxy opts.clientFactory must be a function.')
    }

    this[kRequestTls] = opts.requestTls
    this[kProxyTls] = opts.proxyTls
    this[kProxyHeaders] = opts.headers || {}

    const resolvedUrl = new URL(opts.uri)
    const { origin, port, host, username, password } = resolvedUrl

    if (opts.auth && opts.token) {
      throw new InvalidArgumentError('opts.auth cannot be used in combination with opts.token')
    } else if (opts.auth) {
      /* @deprecated in favour of opts.token */
      this[kProxyHeaders]['proxy-authorization'] = `Basic ${opts.auth}`
    } else if (opts.token) {
      this[kProxyHeaders]['proxy-authorization'] = opts.token
    } else if (username && password) {
      this[kProxyHeaders]['proxy-authorization'] = `Basic ${Buffer.from(`${decodeURIComponent(username)}:${decodeURIComponent(password)}`).toString('base64')}`
    }

    const connect = buildConnector({ ...opts.proxyTls })
    this[kConnectEndpoint] = buildConnector({ ...opts.requestTls })
    this[kClient] = clientFactory(resolvedUrl, { connect })
    this[kAgent] = new Agent({
      ...opts,
      connect: async (opts, callback) => {
        let requestedHost = opts.host
        if (!opts.port) {
          requestedHost += `:${defaultProtocolPort(opts.protocol)}`
        }
        try {
          const { socket, statusCode } = await this[kClient].connect({
            origin,
            port,
            path: requestedHost,
            signal: opts.signal,
            headers: {
              ...this[kProxyHeaders],
              host
            }
          })
          if (statusCode !== 200) {
            socket.on('error', () => {}).destroy()
            callback(new RequestAbortedError(`Proxy response (${statusCode}) !== 200 when HTTP Tunneling`))
          }
          if (opts.protocol !== 'https:') {
            callback(null, socket)
            return
          }
          let servername
          if (this[kRequestTls]) {
            servername = this[kRequestTls].servername
          } else {
            servername = opts.servername
          }
          this[kConnectEndpoint]({ ...opts, servername, httpSocket: socket }, callback)
        } catch (err) {
          callback(err)
        }
      }
    })
  }

  dispatch (opts, handler) {
    const { host } = new URL(opts.origin)
    const headers = buildHeaders(opts.headers)
    throwIfProxyAuthIsSent(headers)
    return this[kAgent].dispatch(
      {
        ...opts,
        headers: {
          ...headers,
          host
        }
      },
      handler
    )
  }

  async [kClose] () {
    await this[kAgent].close()
    await this[kClient].close()
  }

  async [kDestroy] () {
    await this[kAgent].destroy()
    await this[kClient].destroy()
  }
}

/**
 * @param {string[] | Record<string, string>} headers
 * @returns {Record<string, string>}
 */
function buildHeaders (headers) {
  // When using undici.fetch, the headers list is stored
  // as an array.
  if (Array.isArray(headers)) {
    /** @type {Record<string, string>} */
    const headersPair = {}

    for (let i = 0; i < headers.length; i += 2) {
      headersPair[headers[i]] = headers[i + 1]
    }

    return headersPair
  }

  return headers
}

/**
 * @param {Record<string, string>} headers
 *
 * Previous versions of ProxyAgent suggests the Proxy-Authorization in request headers
 * Nevertheless, it was changed and to avoid a security vulnerability by end users
 * this check was created.
 * It should be removed in the next major version for performance reasons
 */
function throwIfProxyAuthIsSent (headers) {
  const existProxyAuth = headers && Object.keys(headers)
    .find((key) => key.toLowerCase() === 'proxy-authorization')
  if (existProxyAuth) {
    throw new InvalidArgumentError('Proxy-Authorization should be sent in ProxyAgent constructor')
  }
}

module.exports = ProxyAgent


/***/ }),

/***/ "../../node_modules/undici/lib/timers.js":
/*!***********************************************!*\
  !*** ../../node_modules/undici/lib/timers.js ***!
  \***********************************************/
/***/ ((module) => {



let fastNow = Date.now()
let fastNowTimeout

const fastTimers = []

function onTimeout () {
  fastNow = Date.now()

  let len = fastTimers.length
  let idx = 0
  while (idx < len) {
    const timer = fastTimers[idx]

    if (timer.state === 0) {
      timer.state = fastNow + timer.delay
    } else if (timer.state > 0 && fastNow >= timer.state) {
      timer.state = -1
      timer.callback(timer.opaque)
    }

    if (timer.state === -1) {
      timer.state = -2
      if (idx !== len - 1) {
        fastTimers[idx] = fastTimers.pop()
      } else {
        fastTimers.pop()
      }
      len -= 1
    } else {
      idx += 1
    }
  }

  if (fastTimers.length > 0) {
    refreshTimeout()
  }
}

function refreshTimeout () {
  if (fastNowTimeout && fastNowTimeout.refresh) {
    fastNowTimeout.refresh()
  } else {
    clearTimeout(fastNowTimeout)
    fastNowTimeout = setTimeout(onTimeout, 1e3)
    if (fastNowTimeout.unref) {
      fastNowTimeout.unref()
    }
  }
}

class Timeout {
  constructor (callback, delay, opaque) {
    this.callback = callback
    this.delay = delay
    this.opaque = opaque

    //  -2 not in timer list
    //  -1 in timer list but inactive
    //   0 in timer list waiting for time
    // > 0 in timer list waiting for time to expire
    this.state = -2

    this.refresh()
  }

  refresh () {
    if (this.state === -2) {
      fastTimers.push(this)
      if (!fastNowTimeout || fastTimers.length === 1) {
        refreshTimeout()
      }
    }

    this.state = 0
  }

  clear () {
    this.state = -1
  }
}

module.exports = {
  setTimeout (callback, delay, opaque) {
    return delay < 1e3
      ? setTimeout(callback, delay, opaque)
      : new Timeout(callback, delay, opaque)
  },
  clearTimeout (timeout) {
    if (timeout instanceof Timeout) {
      timeout.clear()
    } else {
      clearTimeout(timeout)
    }
  }
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/connection.js":
/*!*************************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/connection.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const diagnosticsChannel = __webpack_require__(/*! diagnostics_channel */ "diagnostics_channel")
const { uid, states } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/websocket/constants.js")
const {
  kReadyState,
  kSentClose,
  kByteParser,
  kReceivedClose
} = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/websocket/symbols.js")
const { fireEvent, failWebsocketConnection } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/websocket/util.js")
const { CloseEvent } = __webpack_require__(/*! ./events */ "../../node_modules/undici/lib/websocket/events.js")
const { makeRequest } = __webpack_require__(/*! ../fetch/request */ "../../node_modules/undici/lib/fetch/request.js")
const { fetching } = __webpack_require__(/*! ../fetch/index */ "../../node_modules/undici/lib/fetch/index.js")
const { Headers } = __webpack_require__(/*! ../fetch/headers */ "../../node_modules/undici/lib/fetch/headers.js")
const { getGlobalDispatcher } = __webpack_require__(/*! ../global */ "../../node_modules/undici/lib/global.js")
const { kHeadersList } = __webpack_require__(/*! ../core/symbols */ "../../node_modules/undici/lib/core/symbols.js")

const channels = {}
channels.open = diagnosticsChannel.channel('undici:websocket:open')
channels.close = diagnosticsChannel.channel('undici:websocket:close')
channels.socketError = diagnosticsChannel.channel('undici:websocket:socket_error')

/** @type {import('crypto')} */
let crypto
try {
  crypto = __webpack_require__(/*! crypto */ "crypto")
} catch {

}

/**
 * @see https://websockets.spec.whatwg.org/#concept-websocket-establish
 * @param {URL} url
 * @param {string|string[]} protocols
 * @param {import('./websocket').WebSocket} ws
 * @param {(response: any) => void} onEstablish
 * @param {Partial<import('../../types/websocket').WebSocketInit>} options
 */
function establishWebSocketConnection (url, protocols, ws, onEstablish, options) {
  // 1. Let requestURL be a copy of url, with its scheme set to "http", if url’s
  //    scheme is "ws", and to "https" otherwise.
  const requestURL = url

  requestURL.protocol = url.protocol === 'ws:' ? 'http:' : 'https:'

  // 2. Let request be a new request, whose URL is requestURL, client is client,
  //    service-workers mode is "none", referrer is "no-referrer", mode is
  //    "websocket", credentials mode is "include", cache mode is "no-store" ,
  //    and redirect mode is "error".
  const request = makeRequest({
    urlList: [requestURL],
    serviceWorkers: 'none',
    referrer: 'no-referrer',
    mode: 'websocket',
    credentials: 'include',
    cache: 'no-store',
    redirect: 'error'
  })

  // Note: undici extension, allow setting custom headers.
  if (options.headers) {
    const headersList = new Headers(options.headers)[kHeadersList]

    request.headersList = headersList
  }

  // 3. Append (`Upgrade`, `websocket`) to request’s header list.
  // 4. Append (`Connection`, `Upgrade`) to request’s header list.
  // Note: both of these are handled by undici currently.
  // https://github.com/nodejs/undici/blob/68c269c4144c446f3f1220951338daef4a6b5ec4/lib/client.js#L1397

  // 5. Let keyValue be a nonce consisting of a randomly selected
  //    16-byte value that has been forgiving-base64-encoded and
  //    isomorphic encoded.
  const keyValue = crypto.randomBytes(16).toString('base64')

  // 6. Append (`Sec-WebSocket-Key`, keyValue) to request’s
  //    header list.
  request.headersList.append('sec-websocket-key', keyValue)

  // 7. Append (`Sec-WebSocket-Version`, `13`) to request’s
  //    header list.
  request.headersList.append('sec-websocket-version', '13')

  // 8. For each protocol in protocols, combine
  //    (`Sec-WebSocket-Protocol`, protocol) in request’s header
  //    list.
  for (const protocol of protocols) {
    request.headersList.append('sec-websocket-protocol', protocol)
  }

  // 9. Let permessageDeflate be a user-agent defined
  //    "permessage-deflate" extension header value.
  // https://github.com/mozilla/gecko-dev/blob/ce78234f5e653a5d3916813ff990f053510227bc/netwerk/protocol/websocket/WebSocketChannel.cpp#L2673
  // TODO: enable once permessage-deflate is supported
  const permessageDeflate = '' // 'permessage-deflate; 15'

  // 10. Append (`Sec-WebSocket-Extensions`, permessageDeflate) to
  //     request’s header list.
  // request.headersList.append('sec-websocket-extensions', permessageDeflate)

  // 11. Fetch request with useParallelQueue set to true, and
  //     processResponse given response being these steps:
  const controller = fetching({
    request,
    useParallelQueue: true,
    dispatcher: options.dispatcher ?? getGlobalDispatcher(),
    processResponse (response) {
      // 1. If response is a network error or its status is not 101,
      //    fail the WebSocket connection.
      if (response.type === 'error' || response.status !== 101) {
        failWebsocketConnection(ws, 'Received network error or non-101 status code.')
        return
      }

      // 2. If protocols is not the empty list and extracting header
      //    list values given `Sec-WebSocket-Protocol` and response’s
      //    header list results in null, failure, or the empty byte
      //    sequence, then fail the WebSocket connection.
      if (protocols.length !== 0 && !response.headersList.get('Sec-WebSocket-Protocol')) {
        failWebsocketConnection(ws, 'Server did not respond with sent protocols.')
        return
      }

      // 3. Follow the requirements stated step 2 to step 6, inclusive,
      //    of the last set of steps in section 4.1 of The WebSocket
      //    Protocol to validate response. This either results in fail
      //    the WebSocket connection or the WebSocket connection is
      //    established.

      // 2. If the response lacks an |Upgrade| header field or the |Upgrade|
      //    header field contains a value that is not an ASCII case-
      //    insensitive match for the value "websocket", the client MUST
      //    _Fail the WebSocket Connection_.
      if (response.headersList.get('Upgrade')?.toLowerCase() !== 'websocket') {
        failWebsocketConnection(ws, 'Server did not set Upgrade header to "websocket".')
        return
      }

      // 3. If the response lacks a |Connection| header field or the
      //    |Connection| header field doesn't contain a token that is an
      //    ASCII case-insensitive match for the value "Upgrade", the client
      //    MUST _Fail the WebSocket Connection_.
      if (response.headersList.get('Connection')?.toLowerCase() !== 'upgrade') {
        failWebsocketConnection(ws, 'Server did not set Connection header to "upgrade".')
        return
      }

      // 4. If the response lacks a |Sec-WebSocket-Accept| header field or
      //    the |Sec-WebSocket-Accept| contains a value other than the
      //    base64-encoded SHA-1 of the concatenation of the |Sec-WebSocket-
      //    Key| (as a string, not base64-decoded) with the string "258EAFA5-
      //    E914-47DA-95CA-C5AB0DC85B11" but ignoring any leading and
      //    trailing whitespace, the client MUST _Fail the WebSocket
      //    Connection_.
      const secWSAccept = response.headersList.get('Sec-WebSocket-Accept')
      const digest = crypto.createHash('sha1').update(keyValue + uid).digest('base64')
      if (secWSAccept !== digest) {
        failWebsocketConnection(ws, 'Incorrect hash received in Sec-WebSocket-Accept header.')
        return
      }

      // 5. If the response includes a |Sec-WebSocket-Extensions| header
      //    field and this header field indicates the use of an extension
      //    that was not present in the client's handshake (the server has
      //    indicated an extension not requested by the client), the client
      //    MUST _Fail the WebSocket Connection_.  (The parsing of this
      //    header field to determine which extensions are requested is
      //    discussed in Section 9.1.)
      const secExtension = response.headersList.get('Sec-WebSocket-Extensions')

      if (secExtension !== null && secExtension !== permessageDeflate) {
        failWebsocketConnection(ws, 'Received different permessage-deflate than the one set.')
        return
      }

      // 6. If the response includes a |Sec-WebSocket-Protocol| header field
      //    and this header field indicates the use of a subprotocol that was
      //    not present in the client's handshake (the server has indicated a
      //    subprotocol not requested by the client), the client MUST _Fail
      //    the WebSocket Connection_.
      const secProtocol = response.headersList.get('Sec-WebSocket-Protocol')

      if (secProtocol !== null && secProtocol !== request.headersList.get('Sec-WebSocket-Protocol')) {
        failWebsocketConnection(ws, 'Protocol was not set in the opening handshake.')
        return
      }

      response.socket.on('data', onSocketData)
      response.socket.on('close', onSocketClose)
      response.socket.on('error', onSocketError)

      if (channels.open.hasSubscribers) {
        channels.open.publish({
          address: response.socket.address(),
          protocol: secProtocol,
          extensions: secExtension
        })
      }

      onEstablish(response)
    }
  })

  return controller
}

/**
 * @param {Buffer} chunk
 */
function onSocketData (chunk) {
  if (!this.ws[kByteParser].write(chunk)) {
    this.pause()
  }
}

/**
 * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
 * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.4
 */
function onSocketClose () {
  const { ws } = this

  // If the TCP connection was closed after the
  // WebSocket closing handshake was completed, the WebSocket connection
  // is said to have been closed _cleanly_.
  const wasClean = ws[kSentClose] && ws[kReceivedClose]

  let code = 1005
  let reason = ''

  const result = ws[kByteParser].closingInfo

  if (result) {
    code = result.code ?? 1005
    reason = result.reason
  } else if (!ws[kSentClose]) {
    // If _The WebSocket
    // Connection is Closed_ and no Close control frame was received by the
    // endpoint (such as could occur if the underlying transport connection
    // is lost), _The WebSocket Connection Close Code_ is considered to be
    // 1006.
    code = 1006
  }

  // 1. Change the ready state to CLOSED (3).
  ws[kReadyState] = states.CLOSED

  // 2. If the user agent was required to fail the WebSocket
  //    connection, or if the WebSocket connection was closed
  //    after being flagged as full, fire an event named error
  //    at the WebSocket object.
  // TODO

  // 3. Fire an event named close at the WebSocket object,
  //    using CloseEvent, with the wasClean attribute
  //    initialized to true if the connection closed cleanly
  //    and false otherwise, the code attribute initialized to
  //    the WebSocket connection close code, and the reason
  //    attribute initialized to the result of applying UTF-8
  //    decode without BOM to the WebSocket connection close
  //    reason.
  fireEvent('close', ws, CloseEvent, {
    wasClean, code, reason
  })

  if (channels.close.hasSubscribers) {
    channels.close.publish({
      websocket: ws,
      code,
      reason
    })
  }
}

function onSocketError (error) {
  const { ws } = this

  ws[kReadyState] = states.CLOSING

  if (channels.socketError.hasSubscribers) {
    channels.socketError.publish(error)
  }

  this.destroy()
}

module.exports = {
  establishWebSocketConnection
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/constants.js":
/*!************************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/constants.js ***!
  \************************************************************/
/***/ ((module) => {



// This is a Globally Unique Identifier unique used
// to validate that the endpoint accepts websocket
// connections.
// See https://www.rfc-editor.org/rfc/rfc6455.html#section-1.3
const uid = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'

/** @type {PropertyDescriptor} */
const staticPropertyDescriptors = {
  enumerable: true,
  writable: false,
  configurable: false
}

const states = {
  CONNECTING: 0,
  OPEN: 1,
  CLOSING: 2,
  CLOSED: 3
}

const opcodes = {
  CONTINUATION: 0x0,
  TEXT: 0x1,
  BINARY: 0x2,
  CLOSE: 0x8,
  PING: 0x9,
  PONG: 0xA
}

const maxUnsigned16Bit = 2 ** 16 - 1 // 65535

const parserStates = {
  INFO: 0,
  PAYLOADLENGTH_16: 2,
  PAYLOADLENGTH_64: 3,
  READ_DATA: 4
}

const emptyBuffer = Buffer.allocUnsafe(0)

module.exports = {
  uid,
  staticPropertyDescriptors,
  states,
  opcodes,
  maxUnsigned16Bit,
  parserStates,
  emptyBuffer
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/events.js":
/*!*********************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/events.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { webidl } = __webpack_require__(/*! ../fetch/webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { kEnumerableProperty } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { MessagePort } = __webpack_require__(/*! worker_threads */ "worker_threads")

/**
 * @see https://html.spec.whatwg.org/multipage/comms.html#messageevent
 */
class MessageEvent extends Event {
  #eventInit

  constructor (type, eventInitDict = {}) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent constructor' })

    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.MessageEventInit(eventInitDict)

    super(type, eventInitDict)

    this.#eventInit = eventInitDict
  }

  get data () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.data
  }

  get origin () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.origin
  }

  get lastEventId () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.lastEventId
  }

  get source () {
    webidl.brandCheck(this, MessageEvent)

    return this.#eventInit.source
  }

  get ports () {
    webidl.brandCheck(this, MessageEvent)

    if (!Object.isFrozen(this.#eventInit.ports)) {
      Object.freeze(this.#eventInit.ports)
    }

    return this.#eventInit.ports
  }

  initMessageEvent (
    type,
    bubbles = false,
    cancelable = false,
    data = null,
    origin = '',
    lastEventId = '',
    source = null,
    ports = []
  ) {
    webidl.brandCheck(this, MessageEvent)

    webidl.argumentLengthCheck(arguments, 1, { header: 'MessageEvent.initMessageEvent' })

    return new MessageEvent(type, {
      bubbles, cancelable, data, origin, lastEventId, source, ports
    })
  }
}

/**
 * @see https://websockets.spec.whatwg.org/#the-closeevent-interface
 */
class CloseEvent extends Event {
  #eventInit

  constructor (type, eventInitDict = {}) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'CloseEvent constructor' })

    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.CloseEventInit(eventInitDict)

    super(type, eventInitDict)

    this.#eventInit = eventInitDict
  }

  get wasClean () {
    webidl.brandCheck(this, CloseEvent)

    return this.#eventInit.wasClean
  }

  get code () {
    webidl.brandCheck(this, CloseEvent)

    return this.#eventInit.code
  }

  get reason () {
    webidl.brandCheck(this, CloseEvent)

    return this.#eventInit.reason
  }
}

// https://html.spec.whatwg.org/multipage/webappapis.html#the-errorevent-interface
class ErrorEvent extends Event {
  #eventInit

  constructor (type, eventInitDict) {
    webidl.argumentLengthCheck(arguments, 1, { header: 'ErrorEvent constructor' })

    super(type, eventInitDict)

    type = webidl.converters.DOMString(type)
    eventInitDict = webidl.converters.ErrorEventInit(eventInitDict ?? {})

    this.#eventInit = eventInitDict
  }

  get message () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.message
  }

  get filename () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.filename
  }

  get lineno () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.lineno
  }

  get colno () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.colno
  }

  get error () {
    webidl.brandCheck(this, ErrorEvent)

    return this.#eventInit.error
  }
}

Object.defineProperties(MessageEvent.prototype, {
  [Symbol.toStringTag]: {
    value: 'MessageEvent',
    configurable: true
  },
  data: kEnumerableProperty,
  origin: kEnumerableProperty,
  lastEventId: kEnumerableProperty,
  source: kEnumerableProperty,
  ports: kEnumerableProperty,
  initMessageEvent: kEnumerableProperty
})

Object.defineProperties(CloseEvent.prototype, {
  [Symbol.toStringTag]: {
    value: 'CloseEvent',
    configurable: true
  },
  reason: kEnumerableProperty,
  code: kEnumerableProperty,
  wasClean: kEnumerableProperty
})

Object.defineProperties(ErrorEvent.prototype, {
  [Symbol.toStringTag]: {
    value: 'ErrorEvent',
    configurable: true
  },
  message: kEnumerableProperty,
  filename: kEnumerableProperty,
  lineno: kEnumerableProperty,
  colno: kEnumerableProperty,
  error: kEnumerableProperty
})

webidl.converters.MessagePort = webidl.interfaceConverter(MessagePort)

webidl.converters['sequence<MessagePort>'] = webidl.sequenceConverter(
  webidl.converters.MessagePort
)

const eventInit = [
  {
    key: 'bubbles',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'cancelable',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'composed',
    converter: webidl.converters.boolean,
    defaultValue: false
  }
]

webidl.converters.MessageEventInit = webidl.dictionaryConverter([
  ...eventInit,
  {
    key: 'data',
    converter: webidl.converters.any,
    defaultValue: null
  },
  {
    key: 'origin',
    converter: webidl.converters.USVString,
    defaultValue: ''
  },
  {
    key: 'lastEventId',
    converter: webidl.converters.DOMString,
    defaultValue: ''
  },
  {
    key: 'source',
    // Node doesn't implement WindowProxy or ServiceWorker, so the only
    // valid value for source is a MessagePort.
    converter: webidl.nullableConverter(webidl.converters.MessagePort),
    defaultValue: null
  },
  {
    key: 'ports',
    converter: webidl.converters['sequence<MessagePort>'],
    get defaultValue () {
      return []
    }
  }
])

webidl.converters.CloseEventInit = webidl.dictionaryConverter([
  ...eventInit,
  {
    key: 'wasClean',
    converter: webidl.converters.boolean,
    defaultValue: false
  },
  {
    key: 'code',
    converter: webidl.converters['unsigned short'],
    defaultValue: 0
  },
  {
    key: 'reason',
    converter: webidl.converters.USVString,
    defaultValue: ''
  }
])

webidl.converters.ErrorEventInit = webidl.dictionaryConverter([
  ...eventInit,
  {
    key: 'message',
    converter: webidl.converters.DOMString,
    defaultValue: ''
  },
  {
    key: 'filename',
    converter: webidl.converters.USVString,
    defaultValue: ''
  },
  {
    key: 'lineno',
    converter: webidl.converters['unsigned long'],
    defaultValue: 0
  },
  {
    key: 'colno',
    converter: webidl.converters['unsigned long'],
    defaultValue: 0
  },
  {
    key: 'error',
    converter: webidl.converters.any
  }
])

module.exports = {
  MessageEvent,
  CloseEvent,
  ErrorEvent
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/frame.js":
/*!********************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/frame.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { maxUnsigned16Bit } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/websocket/constants.js")

/** @type {import('crypto')} */
let crypto
try {
  crypto = __webpack_require__(/*! crypto */ "crypto")
} catch {

}

class WebsocketFrameSend {
  /**
   * @param {Buffer|undefined} data
   */
  constructor (data) {
    this.frameData = data
    this.maskKey = crypto.randomBytes(4)
  }

  createFrame (opcode) {
    const bodyLength = this.frameData?.byteLength ?? 0

    /** @type {number} */
    let payloadLength = bodyLength // 0-125
    let offset = 6

    if (bodyLength > maxUnsigned16Bit) {
      offset += 8 // payload length is next 8 bytes
      payloadLength = 127
    } else if (bodyLength > 125) {
      offset += 2 // payload length is next 2 bytes
      payloadLength = 126
    }

    const buffer = Buffer.allocUnsafe(bodyLength + offset)

    // Clear first 2 bytes, everything else is overwritten
    buffer[0] = buffer[1] = 0
    buffer[0] |= 0x80 // FIN
    buffer[0] = (buffer[0] & 0xF0) + opcode // opcode

    /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */
    buffer[offset - 4] = this.maskKey[0]
    buffer[offset - 3] = this.maskKey[1]
    buffer[offset - 2] = this.maskKey[2]
    buffer[offset - 1] = this.maskKey[3]

    buffer[1] = payloadLength

    if (payloadLength === 126) {
      buffer.writeUInt16BE(bodyLength, 2)
    } else if (payloadLength === 127) {
      // Clear extended payload length
      buffer[2] = buffer[3] = 0
      buffer.writeUIntBE(bodyLength, 4, 6)
    }

    buffer[1] |= 0x80 // MASK

    // mask body
    for (let i = 0; i < bodyLength; i++) {
      buffer[offset + i] = this.frameData[i] ^ this.maskKey[i % 4]
    }

    return buffer
  }
}

module.exports = {
  WebsocketFrameSend
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/receiver.js":
/*!***********************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/receiver.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { Writable } = __webpack_require__(/*! stream */ "stream")
const diagnosticsChannel = __webpack_require__(/*! diagnostics_channel */ "diagnostics_channel")
const { parserStates, opcodes, states, emptyBuffer } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/websocket/constants.js")
const { kReadyState, kSentClose, kResponse, kReceivedClose } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/websocket/symbols.js")
const { isValidStatusCode, failWebsocketConnection, websocketMessageReceived } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/websocket/util.js")
const { WebsocketFrameSend } = __webpack_require__(/*! ./frame */ "../../node_modules/undici/lib/websocket/frame.js")

// This code was influenced by ws released under the MIT license.
// Copyright (c) 2011 Einar Otto Stangvik <einaros@gmail.com>
// Copyright (c) 2013 Arnout Kazemier and contributors
// Copyright (c) 2016 Luigi Pinca and contributors

const channels = {}
channels.ping = diagnosticsChannel.channel('undici:websocket:ping')
channels.pong = diagnosticsChannel.channel('undici:websocket:pong')

class ByteParser extends Writable {
  #buffers = []
  #byteOffset = 0

  #state = parserStates.INFO

  #info = {}
  #fragments = []

  constructor (ws) {
    super()

    this.ws = ws
  }

  /**
   * @param {Buffer} chunk
   * @param {() => void} callback
   */
  _write (chunk, _, callback) {
    this.#buffers.push(chunk)
    this.#byteOffset += chunk.length

    this.run(callback)
  }

  /**
   * Runs whenever a new chunk is received.
   * Callback is called whenever there are no more chunks buffering,
   * or not enough bytes are buffered to parse.
   */
  run (callback) {
    while (true) {
      if (this.#state === parserStates.INFO) {
        // If there aren't enough bytes to parse the payload length, etc.
        if (this.#byteOffset < 2) {
          return callback()
        }

        const buffer = this.consume(2)

        this.#info.fin = (buffer[0] & 0x80) !== 0
        this.#info.opcode = buffer[0] & 0x0F

        // If we receive a fragmented message, we use the type of the first
        // frame to parse the full message as binary/text, when it's terminated
        this.#info.originalOpcode ??= this.#info.opcode

        this.#info.fragmented = !this.#info.fin && this.#info.opcode !== opcodes.CONTINUATION

        if (this.#info.fragmented && this.#info.opcode !== opcodes.BINARY && this.#info.opcode !== opcodes.TEXT) {
          // Only text and binary frames can be fragmented
          failWebsocketConnection(this.ws, 'Invalid frame type was fragmented.')
          return
        }

        const payloadLength = buffer[1] & 0x7F

        if (payloadLength <= 125) {
          this.#info.payloadLength = payloadLength
          this.#state = parserStates.READ_DATA
        } else if (payloadLength === 126) {
          this.#state = parserStates.PAYLOADLENGTH_16
        } else if (payloadLength === 127) {
          this.#state = parserStates.PAYLOADLENGTH_64
        }

        if (this.#info.fragmented && payloadLength > 125) {
          // A fragmented frame can't be fragmented itself
          failWebsocketConnection(this.ws, 'Fragmented frame exceeded 125 bytes.')
          return
        } else if (
          (this.#info.opcode === opcodes.PING ||
            this.#info.opcode === opcodes.PONG ||
            this.#info.opcode === opcodes.CLOSE) &&
          payloadLength > 125
        ) {
          // Control frames can have a payload length of 125 bytes MAX
          failWebsocketConnection(this.ws, 'Payload length for control frame exceeded 125 bytes.')
          return
        } else if (this.#info.opcode === opcodes.CLOSE) {
          if (payloadLength === 1) {
            failWebsocketConnection(this.ws, 'Received close frame with a 1-byte body.')
            return
          }

          const body = this.consume(payloadLength)

          this.#info.closeInfo = this.parseCloseBody(false, body)

          if (!this.ws[kSentClose]) {
            // If an endpoint receives a Close frame and did not previously send a
            // Close frame, the endpoint MUST send a Close frame in response.  (When
            // sending a Close frame in response, the endpoint typically echos the
            // status code it received.)
            const body = Buffer.allocUnsafe(2)
            body.writeUInt16BE(this.#info.closeInfo.code, 0)
            const closeFrame = new WebsocketFrameSend(body)

            this.ws[kResponse].socket.write(
              closeFrame.createFrame(opcodes.CLOSE),
              (err) => {
                if (!err) {
                  this.ws[kSentClose] = true
                }
              }
            )
          }

          // Upon either sending or receiving a Close control frame, it is said
          // that _The WebSocket Closing Handshake is Started_ and that the
          // WebSocket connection is in the CLOSING state.
          this.ws[kReadyState] = states.CLOSING
          this.ws[kReceivedClose] = true

          this.end()

          return
        } else if (this.#info.opcode === opcodes.PING) {
          // Upon receipt of a Ping frame, an endpoint MUST send a Pong frame in
          // response, unless it already received a Close frame.
          // A Pong frame sent in response to a Ping frame must have identical
          // "Application data"

          const body = this.consume(payloadLength)

          if (!this.ws[kReceivedClose]) {
            const frame = new WebsocketFrameSend(body)

            this.ws[kResponse].socket.write(frame.createFrame(opcodes.PONG))

            if (channels.ping.hasSubscribers) {
              channels.ping.publish({
                payload: body
              })
            }
          }

          this.#state = parserStates.INFO

          if (this.#byteOffset > 0) {
            continue
          } else {
            callback()
            return
          }
        } else if (this.#info.opcode === opcodes.PONG) {
          // A Pong frame MAY be sent unsolicited.  This serves as a
          // unidirectional heartbeat.  A response to an unsolicited Pong frame is
          // not expected.

          const body = this.consume(payloadLength)

          if (channels.pong.hasSubscribers) {
            channels.pong.publish({
              payload: body
            })
          }

          if (this.#byteOffset > 0) {
            continue
          } else {
            callback()
            return
          }
        }
      } else if (this.#state === parserStates.PAYLOADLENGTH_16) {
        if (this.#byteOffset < 2) {
          return callback()
        }

        const buffer = this.consume(2)

        this.#info.payloadLength = buffer.readUInt16BE(0)
        this.#state = parserStates.READ_DATA
      } else if (this.#state === parserStates.PAYLOADLENGTH_64) {
        if (this.#byteOffset < 8) {
          return callback()
        }

        const buffer = this.consume(8)
        const upper = buffer.readUInt32BE(0)

        // 2^31 is the maxinimum bytes an arraybuffer can contain
        // on 32-bit systems. Although, on 64-bit systems, this is
        // 2^53-1 bytes.
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Invalid_array_length
        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/common/globals.h;drc=1946212ac0100668f14eb9e2843bdd846e510a1e;bpv=1;bpt=1;l=1275
        // https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/js-array-buffer.h;l=34;drc=1946212ac0100668f14eb9e2843bdd846e510a1e
        if (upper > 2 ** 31 - 1) {
          failWebsocketConnection(this.ws, 'Received payload length > 2^31 bytes.')
          return
        }

        const lower = buffer.readUInt32BE(4)

        this.#info.payloadLength = (upper << 8) + lower
        this.#state = parserStates.READ_DATA
      } else if (this.#state === parserStates.READ_DATA) {
        if (this.#byteOffset < this.#info.payloadLength) {
          // If there is still more data in this chunk that needs to be read
          return callback()
        } else if (this.#byteOffset >= this.#info.payloadLength) {
          // If the server sent multiple frames in a single chunk

          const body = this.consume(this.#info.payloadLength)

          this.#fragments.push(body)

          // If the frame is unfragmented, or a fragmented frame was terminated,
          // a message was received
          if (!this.#info.fragmented || (this.#info.fin && this.#info.opcode === opcodes.CONTINUATION)) {
            const fullMessage = Buffer.concat(this.#fragments)

            websocketMessageReceived(this.ws, this.#info.originalOpcode, fullMessage)

            this.#info = {}
            this.#fragments.length = 0
          }

          this.#state = parserStates.INFO
        }
      }

      if (this.#byteOffset > 0) {
        continue
      } else {
        callback()
        break
      }
    }
  }

  /**
   * Take n bytes from the buffered Buffers
   * @param {number} n
   * @returns {Buffer|null}
   */
  consume (n) {
    if (n > this.#byteOffset) {
      return null
    } else if (n === 0) {
      return emptyBuffer
    }

    if (this.#buffers[0].length === n) {
      this.#byteOffset -= this.#buffers[0].length
      return this.#buffers.shift()
    }

    const buffer = Buffer.allocUnsafe(n)
    let offset = 0

    while (offset !== n) {
      const next = this.#buffers[0]
      const { length } = next

      if (length + offset === n) {
        buffer.set(this.#buffers.shift(), offset)
        break
      } else if (length + offset > n) {
        buffer.set(next.subarray(0, n - offset), offset)
        this.#buffers[0] = next.subarray(n - offset)
        break
      } else {
        buffer.set(this.#buffers.shift(), offset)
        offset += next.length
      }
    }

    this.#byteOffset -= n

    return buffer
  }

  parseCloseBody (onlyCode, data) {
    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.5
    /** @type {number|undefined} */
    let code

    if (data.length >= 2) {
      // _The WebSocket Connection Close Code_ is
      // defined as the status code (Section 7.4) contained in the first Close
      // control frame received by the application
      code = data.readUInt16BE(0)
    }

    if (onlyCode) {
      if (!isValidStatusCode(code)) {
        return null
      }

      return { code }
    }

    // https://datatracker.ietf.org/doc/html/rfc6455#section-7.1.6
    /** @type {Buffer} */
    let reason = data.subarray(2)

    // Remove BOM
    if (reason[0] === 0xEF && reason[1] === 0xBB && reason[2] === 0xBF) {
      reason = reason.subarray(3)
    }

    if (code !== undefined && !isValidStatusCode(code)) {
      return null
    }

    try {
      // TODO: optimize this
      reason = new TextDecoder('utf-8', { fatal: true }).decode(reason)
    } catch {
      return null
    }

    return { code, reason }
  }

  get closingInfo () {
    return this.#info.closeInfo
  }
}

module.exports = {
  ByteParser
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/symbols.js":
/*!**********************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/symbols.js ***!
  \**********************************************************/
/***/ ((module) => {



module.exports = {
  kWebSocketURL: Symbol('url'),
  kReadyState: Symbol('ready state'),
  kController: Symbol('controller'),
  kResponse: Symbol('response'),
  kBinaryType: Symbol('binary type'),
  kSentClose: Symbol('sent close'),
  kReceivedClose: Symbol('received close'),
  kByteParser: Symbol('byte parser')
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/util.js":
/*!*******************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/util.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { kReadyState, kController, kResponse, kBinaryType, kWebSocketURL } = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/websocket/symbols.js")
const { states, opcodes } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/websocket/constants.js")
const { MessageEvent, ErrorEvent } = __webpack_require__(/*! ./events */ "../../node_modules/undici/lib/websocket/events.js")

/* globals Blob */

/**
 * @param {import('./websocket').WebSocket} ws
 */
function isEstablished (ws) {
  // If the server's response is validated as provided for above, it is
  // said that _The WebSocket Connection is Established_ and that the
  // WebSocket Connection is in the OPEN state.
  return ws[kReadyState] === states.OPEN
}

/**
 * @param {import('./websocket').WebSocket} ws
 */
function isClosing (ws) {
  // Upon either sending or receiving a Close control frame, it is said
  // that _The WebSocket Closing Handshake is Started_ and that the
  // WebSocket connection is in the CLOSING state.
  return ws[kReadyState] === states.CLOSING
}

/**
 * @param {import('./websocket').WebSocket} ws
 */
function isClosed (ws) {
  return ws[kReadyState] === states.CLOSED
}

/**
 * @see https://dom.spec.whatwg.org/#concept-event-fire
 * @param {string} e
 * @param {EventTarget} target
 * @param {EventInit | undefined} eventInitDict
 */
function fireEvent (e, target, eventConstructor = Event, eventInitDict) {
  // 1. If eventConstructor is not given, then let eventConstructor be Event.

  // 2. Let event be the result of creating an event given eventConstructor,
  //    in the relevant realm of target.
  // 3. Initialize event’s type attribute to e.
  const event = new eventConstructor(e, eventInitDict) // eslint-disable-line new-cap

  // 4. Initialize any other IDL attributes of event as described in the
  //    invocation of this algorithm.

  // 5. Return the result of dispatching event at target, with legacy target
  //    override flag set if set.
  target.dispatchEvent(event)
}

/**
 * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
 * @param {import('./websocket').WebSocket} ws
 * @param {number} type Opcode
 * @param {Buffer} data application data
 */
function websocketMessageReceived (ws, type, data) {
  // 1. If ready state is not OPEN (1), then return.
  if (ws[kReadyState] !== states.OPEN) {
    return
  }

  // 2. Let dataForEvent be determined by switching on type and binary type:
  let dataForEvent

  if (type === opcodes.TEXT) {
    // -> type indicates that the data is Text
    //      a new DOMString containing data
    try {
      dataForEvent = new TextDecoder('utf-8', { fatal: true }).decode(data)
    } catch {
      failWebsocketConnection(ws, 'Received invalid UTF-8 in text frame.')
      return
    }
  } else if (type === opcodes.BINARY) {
    if (ws[kBinaryType] === 'blob') {
      // -> type indicates that the data is Binary and binary type is "blob"
      //      a new Blob object, created in the relevant Realm of the WebSocket
      //      object, that represents data as its raw data
      dataForEvent = new Blob([data])
    } else {
      // -> type indicates that the data is Binary and binary type is "arraybuffer"
      //      a new ArrayBuffer object, created in the relevant Realm of the
      //      WebSocket object, whose contents are data
      dataForEvent = new Uint8Array(data).buffer
    }
  }

  // 3. Fire an event named message at the WebSocket object, using MessageEvent,
  //    with the origin attribute initialized to the serialization of the WebSocket
  //    object’s url's origin, and the data attribute initialized to dataForEvent.
  fireEvent('message', ws, MessageEvent, {
    origin: ws[kWebSocketURL].origin,
    data: dataForEvent
  })
}

/**
 * @see https://datatracker.ietf.org/doc/html/rfc6455
 * @see https://datatracker.ietf.org/doc/html/rfc2616
 * @see https://bugs.chromium.org/p/chromium/issues/detail?id=398407
 * @param {string} protocol
 */
function isValidSubprotocol (protocol) {
  // If present, this value indicates one
  // or more comma-separated subprotocol the client wishes to speak,
  // ordered by preference.  The elements that comprise this value
  // MUST be non-empty strings with characters in the range U+0021 to
  // U+007E not including separator characters as defined in
  // [RFC2616] and MUST all be unique strings.
  if (protocol.length === 0) {
    return false
  }

  for (const char of protocol) {
    const code = char.charCodeAt(0)

    if (
      code < 0x21 ||
      code > 0x7E ||
      char === '(' ||
      char === ')' ||
      char === '<' ||
      char === '>' ||
      char === '@' ||
      char === ',' ||
      char === ';' ||
      char === ':' ||
      char === '\\' ||
      char === '"' ||
      char === '/' ||
      char === '[' ||
      char === ']' ||
      char === '?' ||
      char === '=' ||
      char === '{' ||
      char === '}' ||
      code === 32 || // SP
      code === 9 // HT
    ) {
      return false
    }
  }

  return true
}

/**
 * @see https://datatracker.ietf.org/doc/html/rfc6455#section-7-4
 * @param {number} code
 */
function isValidStatusCode (code) {
  if (code >= 1000 && code < 1015) {
    return (
      code !== 1004 && // reserved
      code !== 1005 && // "MUST NOT be set as a status code"
      code !== 1006 // "MUST NOT be set as a status code"
    )
  }

  return code >= 3000 && code <= 4999
}

/**
 * @param {import('./websocket').WebSocket} ws
 * @param {string|undefined} reason
 */
function failWebsocketConnection (ws, reason) {
  const { [kController]: controller, [kResponse]: response } = ws

  controller.abort()

  if (response?.socket && !response.socket.destroyed) {
    response.socket.destroy()
  }

  if (reason) {
    fireEvent('error', ws, ErrorEvent, {
      error: new Error(reason)
    })
  }
}

module.exports = {
  isEstablished,
  isClosing,
  isClosed,
  fireEvent,
  isValidSubprotocol,
  isValidStatusCode,
  failWebsocketConnection,
  websocketMessageReceived
}


/***/ }),

/***/ "../../node_modules/undici/lib/websocket/websocket.js":
/*!************************************************************!*\
  !*** ../../node_modules/undici/lib/websocket/websocket.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const { webidl } = __webpack_require__(/*! ../fetch/webidl */ "../../node_modules/undici/lib/fetch/webidl.js")
const { DOMException } = __webpack_require__(/*! ../fetch/constants */ "../../node_modules/undici/lib/fetch/constants.js")
const { URLSerializer } = __webpack_require__(/*! ../fetch/dataURL */ "../../node_modules/undici/lib/fetch/dataURL.js")
const { getGlobalOrigin } = __webpack_require__(/*! ../fetch/global */ "../../node_modules/undici/lib/fetch/global.js")
const { staticPropertyDescriptors, states, opcodes, emptyBuffer } = __webpack_require__(/*! ./constants */ "../../node_modules/undici/lib/websocket/constants.js")
const {
  kWebSocketURL,
  kReadyState,
  kController,
  kBinaryType,
  kResponse,
  kSentClose,
  kByteParser
} = __webpack_require__(/*! ./symbols */ "../../node_modules/undici/lib/websocket/symbols.js")
const { isEstablished, isClosing, isValidSubprotocol, failWebsocketConnection, fireEvent } = __webpack_require__(/*! ./util */ "../../node_modules/undici/lib/websocket/util.js")
const { establishWebSocketConnection } = __webpack_require__(/*! ./connection */ "../../node_modules/undici/lib/websocket/connection.js")
const { WebsocketFrameSend } = __webpack_require__(/*! ./frame */ "../../node_modules/undici/lib/websocket/frame.js")
const { ByteParser } = __webpack_require__(/*! ./receiver */ "../../node_modules/undici/lib/websocket/receiver.js")
const { kEnumerableProperty, isBlobLike } = __webpack_require__(/*! ../core/util */ "../../node_modules/undici/lib/core/util.js")
const { getGlobalDispatcher } = __webpack_require__(/*! ../global */ "../../node_modules/undici/lib/global.js")
const { types } = __webpack_require__(/*! util */ "util")

let experimentalWarned = false

// https://websockets.spec.whatwg.org/#interface-definition
class WebSocket extends EventTarget {
  #events = {
    open: null,
    error: null,
    close: null,
    message: null
  }

  #bufferedAmount = 0
  #protocol = ''
  #extensions = ''

  /**
   * @param {string} url
   * @param {string|string[]} protocols
   */
  constructor (url, protocols = []) {
    super()

    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket constructor' })

    if (!experimentalWarned) {
      experimentalWarned = true
      process.emitWarning('WebSockets are experimental, expect them to change at any time.', {
        code: 'UNDICI-WS'
      })
    }

    const options = webidl.converters['DOMString or sequence<DOMString> or WebSocketInit'](protocols)

    url = webidl.converters.USVString(url)
    protocols = options.protocols

    // 1. Let baseURL be this's relevant settings object's API base URL.
    const baseURL = getGlobalOrigin()

    // 1. Let urlRecord be the result of applying the URL parser to url with baseURL.
    let urlRecord

    try {
      urlRecord = new URL(url, baseURL)
    } catch (e) {
      // 3. If urlRecord is failure, then throw a "SyntaxError" DOMException.
      throw new DOMException(e, 'SyntaxError')
    }

    // 4. If urlRecord’s scheme is "http", then set urlRecord’s scheme to "ws".
    if (urlRecord.protocol === 'http:') {
      urlRecord.protocol = 'ws:'
    } else if (urlRecord.protocol === 'https:') {
      // 5. Otherwise, if urlRecord’s scheme is "https", set urlRecord’s scheme to "wss".
      urlRecord.protocol = 'wss:'
    }

    // 6. If urlRecord’s scheme is not "ws" or "wss", then throw a "SyntaxError" DOMException.
    if (urlRecord.protocol !== 'ws:' && urlRecord.protocol !== 'wss:') {
      throw new DOMException(
        `Expected a ws: or wss: protocol, got ${urlRecord.protocol}`,
        'SyntaxError'
      )
    }

    // 7. If urlRecord’s fragment is non-null, then throw a "SyntaxError"
    //    DOMException.
    if (urlRecord.hash || urlRecord.href.endsWith('#')) {
      throw new DOMException('Got fragment', 'SyntaxError')
    }

    // 8. If protocols is a string, set protocols to a sequence consisting
    //    of just that string.
    if (typeof protocols === 'string') {
      protocols = [protocols]
    }

    // 9. If any of the values in protocols occur more than once or otherwise
    //    fail to match the requirements for elements that comprise the value
    //    of `Sec-WebSocket-Protocol` fields as defined by The WebSocket
    //    protocol, then throw a "SyntaxError" DOMException.
    if (protocols.length !== new Set(protocols.map(p => p.toLowerCase())).size) {
      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')
    }

    if (protocols.length > 0 && !protocols.every(p => isValidSubprotocol(p))) {
      throw new DOMException('Invalid Sec-WebSocket-Protocol value', 'SyntaxError')
    }

    // 10. Set this's url to urlRecord.
    this[kWebSocketURL] = new URL(urlRecord.href)

    // 11. Let client be this's relevant settings object.

    // 12. Run this step in parallel:

    //    1. Establish a WebSocket connection given urlRecord, protocols,
    //       and client.
    this[kController] = establishWebSocketConnection(
      urlRecord,
      protocols,
      this,
      (response) => this.#onConnectionEstablished(response),
      options
    )

    // Each WebSocket object has an associated ready state, which is a
    // number representing the state of the connection. Initially it must
    // be CONNECTING (0).
    this[kReadyState] = WebSocket.CONNECTING

    // The extensions attribute must initially return the empty string.

    // The protocol attribute must initially return the empty string.

    // Each WebSocket object has an associated binary type, which is a
    // BinaryType. Initially it must be "blob".
    this[kBinaryType] = 'blob'
  }

  /**
   * @see https://websockets.spec.whatwg.org/#dom-websocket-close
   * @param {number|undefined} code
   * @param {string|undefined} reason
   */
  close (code = undefined, reason = undefined) {
    webidl.brandCheck(this, WebSocket)

    if (code !== undefined) {
      code = webidl.converters['unsigned short'](code, { clamp: true })
    }

    if (reason !== undefined) {
      reason = webidl.converters.USVString(reason)
    }

    // 1. If code is present, but is neither an integer equal to 1000 nor an
    //    integer in the range 3000 to 4999, inclusive, throw an
    //    "InvalidAccessError" DOMException.
    if (code !== undefined) {
      if (code !== 1000 && (code < 3000 || code > 4999)) {
        throw new DOMException('invalid code', 'InvalidAccessError')
      }
    }

    let reasonByteLength = 0

    // 2. If reason is present, then run these substeps:
    if (reason !== undefined) {
      // 1. Let reasonBytes be the result of encoding reason.
      // 2. If reasonBytes is longer than 123 bytes, then throw a
      //    "SyntaxError" DOMException.
      reasonByteLength = Buffer.byteLength(reason)

      if (reasonByteLength > 123) {
        throw new DOMException(
          `Reason must be less than 123 bytes; received ${reasonByteLength}`,
          'SyntaxError'
        )
      }
    }

    // 3. Run the first matching steps from the following list:
    if (this[kReadyState] === WebSocket.CLOSING || this[kReadyState] === WebSocket.CLOSED) {
      // If this's ready state is CLOSING (2) or CLOSED (3)
      // Do nothing.
    } else if (!isEstablished(this)) {
      // If the WebSocket connection is not yet established
      // Fail the WebSocket connection and set this's ready state
      // to CLOSING (2).
      failWebsocketConnection(this, 'Connection was closed before it was established.')
      this[kReadyState] = WebSocket.CLOSING
    } else if (!isClosing(this)) {
      // If the WebSocket closing handshake has not yet been started
      // Start the WebSocket closing handshake and set this's ready
      // state to CLOSING (2).
      // - If neither code nor reason is present, the WebSocket Close
      //   message must not have a body.
      // - If code is present, then the status code to use in the
      //   WebSocket Close message must be the integer given by code.
      // - If reason is also present, then reasonBytes must be
      //   provided in the Close message after the status code.

      const frame = new WebsocketFrameSend()

      // If neither code nor reason is present, the WebSocket Close
      // message must not have a body.

      // If code is present, then the status code to use in the
      // WebSocket Close message must be the integer given by code.
      if (code !== undefined && reason === undefined) {
        frame.frameData = Buffer.allocUnsafe(2)
        frame.frameData.writeUInt16BE(code, 0)
      } else if (code !== undefined && reason !== undefined) {
        // If reason is also present, then reasonBytes must be
        // provided in the Close message after the status code.
        frame.frameData = Buffer.allocUnsafe(2 + reasonByteLength)
        frame.frameData.writeUInt16BE(code, 0)
        // the body MAY contain UTF-8-encoded data with value /reason/
        frame.frameData.write(reason, 2, 'utf-8')
      } else {
        frame.frameData = emptyBuffer
      }

      /** @type {import('stream').Duplex} */
      const socket = this[kResponse].socket

      socket.write(frame.createFrame(opcodes.CLOSE), (err) => {
        if (!err) {
          this[kSentClose] = true
        }
      })

      // Upon either sending or receiving a Close control frame, it is said
      // that _The WebSocket Closing Handshake is Started_ and that the
      // WebSocket connection is in the CLOSING state.
      this[kReadyState] = states.CLOSING
    } else {
      // Otherwise
      // Set this's ready state to CLOSING (2).
      this[kReadyState] = WebSocket.CLOSING
    }
  }

  /**
   * @see https://websockets.spec.whatwg.org/#dom-websocket-send
   * @param {NodeJS.TypedArray|ArrayBuffer|Blob|string} data
   */
  send (data) {
    webidl.brandCheck(this, WebSocket)

    webidl.argumentLengthCheck(arguments, 1, { header: 'WebSocket.send' })

    data = webidl.converters.WebSocketSendData(data)

    // 1. If this's ready state is CONNECTING, then throw an
    //    "InvalidStateError" DOMException.
    if (this[kReadyState] === WebSocket.CONNECTING) {
      throw new DOMException('Sent before connected.', 'InvalidStateError')
    }

    // 2. Run the appropriate set of steps from the following list:
    // https://datatracker.ietf.org/doc/html/rfc6455#section-6.1
    // https://datatracker.ietf.org/doc/html/rfc6455#section-5.2

    if (!isEstablished(this) || isClosing(this)) {
      return
    }

    /** @type {import('stream').Duplex} */
    const socket = this[kResponse].socket

    // If data is a string
    if (typeof data === 'string') {
      // If the WebSocket connection is established and the WebSocket
      // closing handshake has not yet started, then the user agent
      // must send a WebSocket Message comprised of the data argument
      // using a text frame opcode; if the data cannot be sent, e.g.
      // because it would need to be buffered but the buffer is full,
      // the user agent must flag the WebSocket as full and then close
      // the WebSocket connection. Any invocation of this method with a
      // string argument that does not throw an exception must increase
      // the bufferedAmount attribute by the number of bytes needed to
      // express the argument as UTF-8.

      const value = Buffer.from(data)
      const frame = new WebsocketFrameSend(value)
      const buffer = frame.createFrame(opcodes.TEXT)

      this.#bufferedAmount += value.byteLength
      socket.write(buffer, () => {
        this.#bufferedAmount -= value.byteLength
      })
    } else if (types.isArrayBuffer(data)) {
      // If the WebSocket connection is established, and the WebSocket
      // closing handshake has not yet started, then the user agent must
      // send a WebSocket Message comprised of data using a binary frame
      // opcode; if the data cannot be sent, e.g. because it would need
      // to be buffered but the buffer is full, the user agent must flag
      // the WebSocket as full and then close the WebSocket connection.
      // The data to be sent is the data stored in the buffer described
      // by the ArrayBuffer object. Any invocation of this method with an
      // ArrayBuffer argument that does not throw an exception must
      // increase the bufferedAmount attribute by the length of the
      // ArrayBuffer in bytes.

      const value = Buffer.from(data)
      const frame = new WebsocketFrameSend(value)
      const buffer = frame.createFrame(opcodes.BINARY)

      this.#bufferedAmount += value.byteLength
      socket.write(buffer, () => {
        this.#bufferedAmount -= value.byteLength
      })
    } else if (ArrayBuffer.isView(data)) {
      // If the WebSocket connection is established, and the WebSocket
      // closing handshake has not yet started, then the user agent must
      // send a WebSocket Message comprised of data using a binary frame
      // opcode; if the data cannot be sent, e.g. because it would need to
      // be buffered but the buffer is full, the user agent must flag the
      // WebSocket as full and then close the WebSocket connection. The
      // data to be sent is the data stored in the section of the buffer
      // described by the ArrayBuffer object that data references. Any
      // invocation of this method with this kind of argument that does
      // not throw an exception must increase the bufferedAmount attribute
      // by the length of data’s buffer in bytes.

      const ab = Buffer.from(data, data.byteOffset, data.byteLength)

      const frame = new WebsocketFrameSend(ab)
      const buffer = frame.createFrame(opcodes.BINARY)

      this.#bufferedAmount += ab.byteLength
      socket.write(buffer, () => {
        this.#bufferedAmount -= ab.byteLength
      })
    } else if (isBlobLike(data)) {
      // If the WebSocket connection is established, and the WebSocket
      // closing handshake has not yet started, then the user agent must
      // send a WebSocket Message comprised of data using a binary frame
      // opcode; if the data cannot be sent, e.g. because it would need to
      // be buffered but the buffer is full, the user agent must flag the
      // WebSocket as full and then close the WebSocket connection. The data
      // to be sent is the raw data represented by the Blob object. Any
      // invocation of this method with a Blob argument that does not throw
      // an exception must increase the bufferedAmount attribute by the size
      // of the Blob object’s raw data, in bytes.

      const frame = new WebsocketFrameSend()

      data.arrayBuffer().then((ab) => {
        const value = Buffer.from(ab)
        frame.frameData = value
        const buffer = frame.createFrame(opcodes.BINARY)

        this.#bufferedAmount += value.byteLength
        socket.write(buffer, () => {
          this.#bufferedAmount -= value.byteLength
        })
      })
    }
  }

  get readyState () {
    webidl.brandCheck(this, WebSocket)

    // The readyState getter steps are to return this's ready state.
    return this[kReadyState]
  }

  get bufferedAmount () {
    webidl.brandCheck(this, WebSocket)

    return this.#bufferedAmount
  }

  get url () {
    webidl.brandCheck(this, WebSocket)

    // The url getter steps are to return this's url, serialized.
    return URLSerializer(this[kWebSocketURL])
  }

  get extensions () {
    webidl.brandCheck(this, WebSocket)

    return this.#extensions
  }

  get protocol () {
    webidl.brandCheck(this, WebSocket)

    return this.#protocol
  }

  get onopen () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.open
  }

  set onopen (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.open) {
      this.removeEventListener('open', this.#events.open)
    }

    if (typeof fn === 'function') {
      this.#events.open = fn
      this.addEventListener('open', fn)
    } else {
      this.#events.open = null
    }
  }

  get onerror () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.error
  }

  set onerror (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.error) {
      this.removeEventListener('error', this.#events.error)
    }

    if (typeof fn === 'function') {
      this.#events.error = fn
      this.addEventListener('error', fn)
    } else {
      this.#events.error = null
    }
  }

  get onclose () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.close
  }

  set onclose (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.close) {
      this.removeEventListener('close', this.#events.close)
    }

    if (typeof fn === 'function') {
      this.#events.close = fn
      this.addEventListener('close', fn)
    } else {
      this.#events.close = null
    }
  }

  get onmessage () {
    webidl.brandCheck(this, WebSocket)

    return this.#events.message
  }

  set onmessage (fn) {
    webidl.brandCheck(this, WebSocket)

    if (this.#events.message) {
      this.removeEventListener('message', this.#events.message)
    }

    if (typeof fn === 'function') {
      this.#events.message = fn
      this.addEventListener('message', fn)
    } else {
      this.#events.message = null
    }
  }

  get binaryType () {
    webidl.brandCheck(this, WebSocket)

    return this[kBinaryType]
  }

  set binaryType (type) {
    webidl.brandCheck(this, WebSocket)

    if (type !== 'blob' && type !== 'arraybuffer') {
      this[kBinaryType] = 'blob'
    } else {
      this[kBinaryType] = type
    }
  }

  /**
   * @see https://websockets.spec.whatwg.org/#feedback-from-the-protocol
   */
  #onConnectionEstablished (response) {
    // processResponse is called when the "response’s header list has been received and initialized."
    // once this happens, the connection is open
    this[kResponse] = response

    const parser = new ByteParser(this)
    parser.on('drain', function onParserDrain () {
      this.ws[kResponse].socket.resume()
    })

    response.socket.ws = this
    this[kByteParser] = parser

    // 1. Change the ready state to OPEN (1).
    this[kReadyState] = states.OPEN

    // 2. Change the extensions attribute’s value to the extensions in use, if
    //    it is not the null value.
    // https://datatracker.ietf.org/doc/html/rfc6455#section-9.1
    const extensions = response.headersList.get('sec-websocket-extensions')

    if (extensions !== null) {
      this.#extensions = extensions
    }

    // 3. Change the protocol attribute’s value to the subprotocol in use, if
    //    it is not the null value.
    // https://datatracker.ietf.org/doc/html/rfc6455#section-1.9
    const protocol = response.headersList.get('sec-websocket-protocol')

    if (protocol !== null) {
      this.#protocol = protocol
    }

    // 4. Fire an event named open at the WebSocket object.
    fireEvent('open', this)
  }
}

// https://websockets.spec.whatwg.org/#dom-websocket-connecting
WebSocket.CONNECTING = WebSocket.prototype.CONNECTING = states.CONNECTING
// https://websockets.spec.whatwg.org/#dom-websocket-open
WebSocket.OPEN = WebSocket.prototype.OPEN = states.OPEN
// https://websockets.spec.whatwg.org/#dom-websocket-closing
WebSocket.CLOSING = WebSocket.prototype.CLOSING = states.CLOSING
// https://websockets.spec.whatwg.org/#dom-websocket-closed
WebSocket.CLOSED = WebSocket.prototype.CLOSED = states.CLOSED

Object.defineProperties(WebSocket.prototype, {
  CONNECTING: staticPropertyDescriptors,
  OPEN: staticPropertyDescriptors,
  CLOSING: staticPropertyDescriptors,
  CLOSED: staticPropertyDescriptors,
  url: kEnumerableProperty,
  readyState: kEnumerableProperty,
  bufferedAmount: kEnumerableProperty,
  onopen: kEnumerableProperty,
  onerror: kEnumerableProperty,
  onclose: kEnumerableProperty,
  close: kEnumerableProperty,
  onmessage: kEnumerableProperty,
  binaryType: kEnumerableProperty,
  send: kEnumerableProperty,
  extensions: kEnumerableProperty,
  protocol: kEnumerableProperty,
  [Symbol.toStringTag]: {
    value: 'WebSocket',
    writable: false,
    enumerable: false,
    configurable: true
  }
})

Object.defineProperties(WebSocket, {
  CONNECTING: staticPropertyDescriptors,
  OPEN: staticPropertyDescriptors,
  CLOSING: staticPropertyDescriptors,
  CLOSED: staticPropertyDescriptors
})

webidl.converters['sequence<DOMString>'] = webidl.sequenceConverter(
  webidl.converters.DOMString
)

webidl.converters['DOMString or sequence<DOMString>'] = function (V) {
  if (webidl.util.Type(V) === 'Object' && Symbol.iterator in V) {
    return webidl.converters['sequence<DOMString>'](V)
  }

  return webidl.converters.DOMString(V)
}

// This implements the propsal made in https://github.com/whatwg/websockets/issues/42
webidl.converters.WebSocketInit = webidl.dictionaryConverter([
  {
    key: 'protocols',
    converter: webidl.converters['DOMString or sequence<DOMString>'],
    get defaultValue () {
      return []
    }
  },
  {
    key: 'dispatcher',
    converter: (V) => V,
    get defaultValue () {
      return getGlobalDispatcher()
    }
  },
  {
    key: 'headers',
    converter: webidl.nullableConverter(webidl.converters.HeadersInit)
  }
])

webidl.converters['DOMString or sequence<DOMString> or WebSocketInit'] = function (V) {
  if (webidl.util.Type(V) === 'Object' && !(Symbol.iterator in V)) {
    return webidl.converters.WebSocketInit(V)
  }

  return { protocols: webidl.converters['DOMString or sequence<DOMString>'](V) }
}

webidl.converters.WebSocketSendData = function (V) {
  if (webidl.util.Type(V) === 'Object') {
    if (isBlobLike(V)) {
      return webidl.converters.Blob(V, { strict: false })
    }

    if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {
      return webidl.converters.BufferSource(V)
    }
  }

  return webidl.converters.USVString(V)
}

module.exports = {
  WebSocket
}


/***/ }),

/***/ "../../node_modules/universal-user-agent/dist-web/index.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/universal-user-agent/dist-web/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent)
/* harmony export */ });
function getUserAgent() {
    if (typeof navigator === "object" && "userAgent" in navigator) {
        return navigator.userAgent;
    }
    if (typeof process === "object" && process.version !== undefined) {
        return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
    }
    return "<environment undetectable>";
}


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "../../node_modules/wrappy/wrappy.js":
/*!*******************************************!*\
  !*** ../../node_modules/wrappy/wrappy.js ***!
  \*******************************************/
/***/ ((module) => {

// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}


/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_assert__;

/***/ }),

/***/ "async_hooks":
/*!******************************!*\
  !*** external "async_hooks" ***!
  \******************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_async_hooks__;

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_buffer__;

/***/ }),

/***/ "console":
/*!**************************!*\
  !*** external "console" ***!
  \**************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_console__;

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_crypto__;

/***/ }),

/***/ "diagnostics_channel":
/*!**************************************!*\
  !*** external "diagnostics_channel" ***!
  \**************************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_diagnostics_channel__;

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_events__;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_fs__;

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_http__;

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_http2__;

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_https__;

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_net__;

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_node_events_819cca76__;

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_node_stream_62980834__;

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_node_util_1f093676__;

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_os__;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_path__;

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_perf_hooks__;

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_querystring__;

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_stream__;

/***/ }),

/***/ "stream/web":
/*!*****************************!*\
  !*** external "stream/web" ***!
  \*****************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_stream_web_f5b18fac__;

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_string_decoder__;

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_tls__;

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_url__;

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_util__;

/***/ }),

/***/ "util/types":
/*!*****************************!*\
  !*** external "util/types" ***!
  \*****************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_util_types_cbaa04f4__;

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_worker_threads__;

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

var x = (y) => {
	var x = {}; __webpack_require__.d(x, y); return x
} 
var y = (x) => (() => (x))
module.exports = __WEBPACK_EXTERNAL_MODULE_zlib__;

/***/ }),

/***/ "../../node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const WritableStream = (__webpack_require__(/*! node:stream */ "node:stream").Writable)
const inherits = (__webpack_require__(/*! node:util */ "node:util").inherits)

const StreamSearch = __webpack_require__(/*! ../../streamsearch/sbmh */ "../../node_modules/@fastify/busboy/deps/streamsearch/sbmh.js")

const PartStream = __webpack_require__(/*! ./PartStream */ "../../node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js")
const HeaderParser = __webpack_require__(/*! ./HeaderParser */ "../../node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js")

const DASH = 45
const B_ONEDASH = Buffer.from('-')
const B_CRLF = Buffer.from('\r\n')
const EMPTY_FN = function () {}

function Dicer (cfg) {
  if (!(this instanceof Dicer)) { return new Dicer(cfg) }
  WritableStream.call(this, cfg)

  if (!cfg || (!cfg.headerFirst && typeof cfg.boundary !== 'string')) { throw new TypeError('Boundary required') }

  if (typeof cfg.boundary === 'string') { this.setBoundary(cfg.boundary) } else { this._bparser = undefined }

  this._headerFirst = cfg.headerFirst

  this._dashes = 0
  this._parts = 0
  this._finished = false
  this._realFinish = false
  this._isPreamble = true
  this._justMatched = false
  this._firstWrite = true
  this._inHeader = true
  this._part = undefined
  this._cb = undefined
  this._ignoreData = false
  this._partOpts = { highWaterMark: cfg.partHwm }
  this._pause = false

  const self = this
  this._hparser = new HeaderParser(cfg)
  this._hparser.on('header', function (header) {
    self._inHeader = false
    self._part.emit('header', header)
  })
}
inherits(Dicer, WritableStream)

Dicer.prototype.emit = function (ev) {
  if (ev === 'finish' && !this._realFinish) {
    if (!this._finished) {
      const self = this
      process.nextTick(function () {
        self.emit('error', new Error('Unexpected end of multipart data'))
        if (self._part && !self._ignoreData) {
          const type = (self._isPreamble ? 'Preamble' : 'Part')
          self._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'))
          self._part.push(null)
          process.nextTick(function () {
            self._realFinish = true
            self.emit('finish')
            self._realFinish = false
          })
          return
        }
        self._realFinish = true
        self.emit('finish')
        self._realFinish = false
      })
    }
  } else { WritableStream.prototype.emit.apply(this, arguments) }
}

Dicer.prototype._write = function (data, encoding, cb) {
  // ignore unexpected data (e.g. extra trailer data after finished)
  if (!this._hparser && !this._bparser) { return cb() }

  if (this._headerFirst && this._isPreamble) {
    if (!this._part) {
      this._part = new PartStream(this._partOpts)
      if (this.listenerCount('preamble') !== 0) { this.emit('preamble', this._part) } else { this._ignore() }
    }
    const r = this._hparser.push(data)
    if (!this._inHeader && r !== undefined && r < data.length) { data = data.slice(r) } else { return cb() }
  }

  // allows for "easier" testing
  if (this._firstWrite) {
    this._bparser.push(B_CRLF)
    this._firstWrite = false
  }

  this._bparser.push(data)

  if (this._pause) { this._cb = cb } else { cb() }
}

Dicer.prototype.reset = function () {
  this._part = undefined
  this._bparser = undefined
  this._hparser = undefined
}

Dicer.prototype.setBoundary = function (boundary) {
  const self = this
  this._bparser = new StreamSearch('\r\n--' + boundary)
  this._bparser.on('info', function (isMatch, data, start, end) {
    self._oninfo(isMatch, data, start, end)
  })
}

Dicer.prototype._ignore = function () {
  if (this._part && !this._ignoreData) {
    this._ignoreData = true
    this._part.on('error', EMPTY_FN)
    // we must perform some kind of read on the stream even though we are
    // ignoring the data, otherwise node's Readable stream will not emit 'end'
    // after pushing null to the stream
    this._part.resume()
  }
}

Dicer.prototype._oninfo = function (isMatch, data, start, end) {
  let buf; const self = this; let i = 0; let r; let shouldWriteMore = true

  if (!this._part && this._justMatched && data) {
    while (this._dashes < 2 && (start + i) < end) {
      if (data[start + i] === DASH) {
        ++i
        ++this._dashes
      } else {
        if (this._dashes) { buf = B_ONEDASH }
        this._dashes = 0
        break
      }
    }
    if (this._dashes === 2) {
      if ((start + i) < end && this.listenerCount('trailer') !== 0) { this.emit('trailer', data.slice(start + i, end)) }
      this.reset()
      this._finished = true
      // no more parts will be added
      if (self._parts === 0) {
        self._realFinish = true
        self.emit('finish')
        self._realFinish = false
      }
    }
    if (this._dashes) { return }
  }
  if (this._justMatched) { this._justMatched = false }
  if (!this._part) {
    this._part = new PartStream(this._partOpts)
    this._part._read = function (n) {
      self._unpause()
    }
    if (this._isPreamble && this.listenerCount('preamble') !== 0) {
      this.emit('preamble', this._part)
    } else if (this._isPreamble !== true && this.listenerCount('part') !== 0) {
      this.emit('part', this._part)
    } else {
      this._ignore()
    }
    if (!this._isPreamble) { this._inHeader = true }
  }
  if (data && start < end && !this._ignoreData) {
    if (this._isPreamble || !this._inHeader) {
      if (buf) { shouldWriteMore = this._part.push(buf) }
      shouldWriteMore = this._part.push(data.slice(start, end))
      if (!shouldWriteMore) { this._pause = true }
    } else if (!this._isPreamble && this._inHeader) {
      if (buf) { this._hparser.push(buf) }
      r = this._hparser.push(data.slice(start, end))
      if (!this._inHeader && r !== undefined && r < end) { this._oninfo(false, data, start + r, end) }
    }
  }
  if (isMatch) {
    this._hparser.reset()
    if (this._isPreamble) { this._isPreamble = false } else {
      if (start !== end) {
        ++this._parts
        this._part.on('end', function () {
          if (--self._parts === 0) {
            if (self._finished) {
              self._realFinish = true
              self.emit('finish')
              self._realFinish = false
            } else {
              self._unpause()
            }
          }
        })
      }
    }
    this._part.push(null)
    this._part = undefined
    this._ignoreData = false
    this._justMatched = true
    this._dashes = 0
  }
}

Dicer.prototype._unpause = function () {
  if (!this._pause) { return }

  this._pause = false
  if (this._cb) {
    const cb = this._cb
    this._cb = undefined
    cb()
  }
}

module.exports = Dicer


/***/ }),

/***/ "../../node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/deps/dicer/lib/HeaderParser.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const EventEmitter = (__webpack_require__(/*! node:events */ "node:events").EventEmitter)
const inherits = (__webpack_require__(/*! node:util */ "node:util").inherits)
const getLimit = __webpack_require__(/*! ../../../lib/utils/getLimit */ "../../node_modules/@fastify/busboy/lib/utils/getLimit.js")

const StreamSearch = __webpack_require__(/*! ../../streamsearch/sbmh */ "../../node_modules/@fastify/busboy/deps/streamsearch/sbmh.js")

const B_DCRLF = Buffer.from('\r\n\r\n')
const RE_CRLF = /\r\n/g
const RE_HDR = /^([^:]+):[ \t]?([\x00-\xFF]+)?$/ // eslint-disable-line no-control-regex

function HeaderParser (cfg) {
  EventEmitter.call(this)

  cfg = cfg || {}
  const self = this
  this.nread = 0
  this.maxed = false
  this.npairs = 0
  this.maxHeaderPairs = getLimit(cfg, 'maxHeaderPairs', 2000)
  this.maxHeaderSize = getLimit(cfg, 'maxHeaderSize', 80 * 1024)
  this.buffer = ''
  this.header = {}
  this.finished = false
  this.ss = new StreamSearch(B_DCRLF)
  this.ss.on('info', function (isMatch, data, start, end) {
    if (data && !self.maxed) {
      if (self.nread + end - start >= self.maxHeaderSize) {
        end = self.maxHeaderSize - self.nread + start
        self.nread = self.maxHeaderSize
        self.maxed = true
      } else { self.nread += (end - start) }

      self.buffer += data.toString('binary', start, end)
    }
    if (isMatch) { self._finish() }
  })
}
inherits(HeaderParser, EventEmitter)

HeaderParser.prototype.push = function (data) {
  const r = this.ss.push(data)
  if (this.finished) { return r }
}

HeaderParser.prototype.reset = function () {
  this.finished = false
  this.buffer = ''
  this.header = {}
  this.ss.reset()
}

HeaderParser.prototype._finish = function () {
  if (this.buffer) { this._parseHeader() }
  this.ss.matches = this.ss.maxMatches
  const header = this.header
  this.header = {}
  this.buffer = ''
  this.finished = true
  this.nread = this.npairs = 0
  this.maxed = false
  this.emit('header', header)
}

HeaderParser.prototype._parseHeader = function () {
  if (this.npairs === this.maxHeaderPairs) { return }

  const lines = this.buffer.split(RE_CRLF)
  const len = lines.length
  let m, h

  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var
    if (lines[i].length === 0) { continue }
    if (lines[i][0] === '\t' || lines[i][0] === ' ') {
      // folded header content
      // RFC2822 says to just remove the CRLF and not the whitespace following
      // it, so we follow the RFC and include the leading whitespace ...
      if (h) {
        this.header[h][this.header[h].length - 1] += lines[i]
        continue
      }
    }

    const posColon = lines[i].indexOf(':')
    if (
      posColon === -1 ||
      posColon === 0
    ) {
      return
    }
    m = RE_HDR.exec(lines[i])
    h = m[1].toLowerCase()
    this.header[h] = this.header[h] || []
    this.header[h].push((m[2] || ''))
    if (++this.npairs === this.maxHeaderPairs) { break }
  }
}

module.exports = HeaderParser


/***/ }),

/***/ "../../node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/deps/dicer/lib/PartStream.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const inherits = (__webpack_require__(/*! node:util */ "node:util").inherits)
const ReadableStream = (__webpack_require__(/*! node:stream */ "node:stream").Readable)

function PartStream (opts) {
  ReadableStream.call(this, opts)
}
inherits(PartStream, ReadableStream)

PartStream.prototype._read = function (n) {}

module.exports = PartStream


/***/ }),

/***/ "../../node_modules/@fastify/busboy/deps/streamsearch/sbmh.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/deps/streamsearch/sbmh.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/**
 * Copyright Brian White. All rights reserved.
 *
 * @see https://github.com/mscdex/streamsearch
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * Based heavily on the Streaming Boyer-Moore-Horspool C++ implementation
 * by Hongli Lai at: https://github.com/FooBarWidget/boyer-moore-horspool
 */
const EventEmitter = (__webpack_require__(/*! node:events */ "node:events").EventEmitter)
const inherits = (__webpack_require__(/*! node:util */ "node:util").inherits)

function SBMH (needle) {
  if (typeof needle === 'string') {
    needle = Buffer.from(needle)
  }

  if (!Buffer.isBuffer(needle)) {
    throw new TypeError('The needle has to be a String or a Buffer.')
  }

  const needleLength = needle.length

  if (needleLength === 0) {
    throw new Error('The needle cannot be an empty String/Buffer.')
  }

  if (needleLength > 256) {
    throw new Error('The needle cannot have a length bigger than 256.')
  }

  this.maxMatches = Infinity
  this.matches = 0

  this._occ = new Array(256)
    .fill(needleLength) // Initialize occurrence table.
  this._lookbehind_size = 0
  this._needle = needle
  this._bufpos = 0

  this._lookbehind = Buffer.alloc(needleLength)

  // Populate occurrence table with analysis of the needle,
  // ignoring last letter.
  for (var i = 0; i < needleLength - 1; ++i) { // eslint-disable-line no-var
    this._occ[needle[i]] = needleLength - 1 - i
  }
}
inherits(SBMH, EventEmitter)

SBMH.prototype.reset = function () {
  this._lookbehind_size = 0
  this.matches = 0
  this._bufpos = 0
}

SBMH.prototype.push = function (chunk, pos) {
  if (!Buffer.isBuffer(chunk)) {
    chunk = Buffer.from(chunk, 'binary')
  }
  const chlen = chunk.length
  this._bufpos = pos || 0
  let r
  while (r !== chlen && this.matches < this.maxMatches) { r = this._sbmh_feed(chunk) }
  return r
}

SBMH.prototype._sbmh_feed = function (data) {
  const len = data.length
  const needle = this._needle
  const needleLength = needle.length
  const lastNeedleChar = needle[needleLength - 1]

  // Positive: points to a position in `data`
  //           pos == 3 points to data[3]
  // Negative: points to a position in the lookbehind buffer
  //           pos == -2 points to lookbehind[lookbehind_size - 2]
  let pos = -this._lookbehind_size
  let ch

  if (pos < 0) {
    // Lookbehind buffer is not empty. Perform Boyer-Moore-Horspool
    // search with character lookup code that considers both the
    // lookbehind buffer and the current round's haystack data.
    //
    // Loop until
    //   there is a match.
    // or until
    //   we've moved past the position that requires the
    //   lookbehind buffer. In this case we switch to the
    //   optimized loop.
    // or until
    //   the character to look at lies outside the haystack.
    while (pos < 0 && pos <= len - needleLength) {
      ch = this._sbmh_lookup_char(data, pos + needleLength - 1)

      if (
        ch === lastNeedleChar &&
        this._sbmh_memcmp(data, pos, needleLength - 1)
      ) {
        this._lookbehind_size = 0
        ++this.matches
        this.emit('info', true)

        return (this._bufpos = pos + needleLength)
      }
      pos += this._occ[ch]
    }

    // No match.

    if (pos < 0) {
      // There's too few data for Boyer-Moore-Horspool to run,
      // so let's use a different algorithm to skip as much as
      // we can.
      // Forward pos until
      //   the trailing part of lookbehind + data
      //   looks like the beginning of the needle
      // or until
      //   pos == 0
      while (pos < 0 && !this._sbmh_memcmp(data, pos, len - pos)) { ++pos }
    }

    if (pos >= 0) {
      // Discard lookbehind buffer.
      this.emit('info', false, this._lookbehind, 0, this._lookbehind_size)
      this._lookbehind_size = 0
    } else {
      // Cut off part of the lookbehind buffer that has
      // been processed and append the entire haystack
      // into it.
      const bytesToCutOff = this._lookbehind_size + pos
      if (bytesToCutOff > 0) {
        // The cut off data is guaranteed not to contain the needle.
        this.emit('info', false, this._lookbehind, 0, bytesToCutOff)
      }

      this._lookbehind.copy(this._lookbehind, 0, bytesToCutOff,
        this._lookbehind_size - bytesToCutOff)
      this._lookbehind_size -= bytesToCutOff

      data.copy(this._lookbehind, this._lookbehind_size)
      this._lookbehind_size += len

      this._bufpos = len
      return len
    }
  }

  pos += (pos >= 0) * this._bufpos

  // Lookbehind buffer is now empty. We only need to check if the
  // needle is in the haystack.
  if (data.indexOf(needle, pos) !== -1) {
    pos = data.indexOf(needle, pos)
    ++this.matches
    if (pos > 0) { this.emit('info', true, data, this._bufpos, pos) } else { this.emit('info', true) }

    return (this._bufpos = pos + needleLength)
  } else {
    pos = len - needleLength
  }

  // There was no match. If there's trailing haystack data that we cannot
  // match yet using the Boyer-Moore-Horspool algorithm (because the trailing
  // data is less than the needle size) then match using a modified
  // algorithm that starts matching from the beginning instead of the end.
  // Whatever trailing data is left after running this algorithm is added to
  // the lookbehind buffer.
  while (
    pos < len &&
    (
      data[pos] !== needle[0] ||
      (
        (Buffer.compare(
          data.subarray(pos, pos + len - pos),
          needle.subarray(0, len - pos)
        ) !== 0)
      )
    )
  ) {
    ++pos
  }
  if (pos < len) {
    data.copy(this._lookbehind, 0, pos, pos + (len - pos))
    this._lookbehind_size = len - pos
  }

  // Everything until pos is guaranteed not to contain needle data.
  if (pos > 0) { this.emit('info', false, data, this._bufpos, pos < len ? pos : len) }

  this._bufpos = len
  return len
}

SBMH.prototype._sbmh_lookup_char = function (data, pos) {
  return (pos < 0)
    ? this._lookbehind[this._lookbehind_size + pos]
    : data[pos]
}

SBMH.prototype._sbmh_memcmp = function (data, pos, len) {
  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var
    if (this._sbmh_lookup_char(data, pos + i) !== this._needle[i]) { return false }
  }
  return true
}

module.exports = SBMH


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/main.js":
/*!******************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/main.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const WritableStream = (__webpack_require__(/*! node:stream */ "node:stream").Writable)
const { inherits } = __webpack_require__(/*! node:util */ "node:util")
const Dicer = __webpack_require__(/*! ../deps/dicer/lib/Dicer */ "../../node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js")

const MultipartParser = __webpack_require__(/*! ./types/multipart */ "../../node_modules/@fastify/busboy/lib/types/multipart.js")
const UrlencodedParser = __webpack_require__(/*! ./types/urlencoded */ "../../node_modules/@fastify/busboy/lib/types/urlencoded.js")
const parseParams = __webpack_require__(/*! ./utils/parseParams */ "../../node_modules/@fastify/busboy/lib/utils/parseParams.js")

function Busboy (opts) {
  if (!(this instanceof Busboy)) { return new Busboy(opts) }

  if (typeof opts !== 'object') {
    throw new TypeError('Busboy expected an options-Object.')
  }
  if (typeof opts.headers !== 'object') {
    throw new TypeError('Busboy expected an options-Object with headers-attribute.')
  }
  if (typeof opts.headers['content-type'] !== 'string') {
    throw new TypeError('Missing Content-Type-header.')
  }

  const {
    headers,
    ...streamOptions
  } = opts

  this.opts = {
    autoDestroy: false,
    ...streamOptions
  }
  WritableStream.call(this, this.opts)

  this._done = false
  this._parser = this.getParserByHeaders(headers)
  this._finished = false
}
inherits(Busboy, WritableStream)

Busboy.prototype.emit = function (ev) {
  if (ev === 'finish') {
    if (!this._done) {
      this._parser?.end()
      return
    } else if (this._finished) {
      return
    }
    this._finished = true
  }
  WritableStream.prototype.emit.apply(this, arguments)
}

Busboy.prototype.getParserByHeaders = function (headers) {
  const parsed = parseParams(headers['content-type'])

  const cfg = {
    defCharset: this.opts.defCharset,
    fileHwm: this.opts.fileHwm,
    headers,
    highWaterMark: this.opts.highWaterMark,
    isPartAFile: this.opts.isPartAFile,
    limits: this.opts.limits,
    parsedConType: parsed,
    preservePath: this.opts.preservePath
  }

  if (MultipartParser.detect.test(parsed[0])) {
    return new MultipartParser(this, cfg)
  }
  if (UrlencodedParser.detect.test(parsed[0])) {
    return new UrlencodedParser(this, cfg)
  }
  throw new Error('Unsupported Content-Type.')
}

Busboy.prototype._write = function (chunk, encoding, cb) {
  this._parser.write(chunk, cb)
}

module.exports = Busboy
module.exports["default"] = Busboy
module.exports.Busboy = Busboy

module.exports.Dicer = Dicer


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/types/multipart.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/types/multipart.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



// TODO:
//  * support 1 nested multipart level
//    (see second multipart example here:
//     http://www.w3.org/TR/html401/interact/forms.html#didx-multipartform-data)
//  * support limits.fieldNameSize
//     -- this will require modifications to utils.parseParams

const { Readable } = __webpack_require__(/*! node:stream */ "node:stream")
const { inherits } = __webpack_require__(/*! node:util */ "node:util")

const Dicer = __webpack_require__(/*! ../../deps/dicer/lib/Dicer */ "../../node_modules/@fastify/busboy/deps/dicer/lib/Dicer.js")

const parseParams = __webpack_require__(/*! ../utils/parseParams */ "../../node_modules/@fastify/busboy/lib/utils/parseParams.js")
const decodeText = __webpack_require__(/*! ../utils/decodeText */ "../../node_modules/@fastify/busboy/lib/utils/decodeText.js")
const basename = __webpack_require__(/*! ../utils/basename */ "../../node_modules/@fastify/busboy/lib/utils/basename.js")
const getLimit = __webpack_require__(/*! ../utils/getLimit */ "../../node_modules/@fastify/busboy/lib/utils/getLimit.js")

const RE_BOUNDARY = /^boundary$/i
const RE_FIELD = /^form-data$/i
const RE_CHARSET = /^charset$/i
const RE_FILENAME = /^filename$/i
const RE_NAME = /^name$/i

Multipart.detect = /^multipart\/form-data/i
function Multipart (boy, cfg) {
  let i
  let len
  const self = this
  let boundary
  const limits = cfg.limits
  const isPartAFile = cfg.isPartAFile || ((fieldName, contentType, fileName) => (contentType === 'application/octet-stream' || fileName !== undefined))
  const parsedConType = cfg.parsedConType || []
  const defCharset = cfg.defCharset || 'utf8'
  const preservePath = cfg.preservePath
  const fileOpts = { highWaterMark: cfg.fileHwm }

  for (i = 0, len = parsedConType.length; i < len; ++i) {
    if (Array.isArray(parsedConType[i]) &&
      RE_BOUNDARY.test(parsedConType[i][0])) {
      boundary = parsedConType[i][1]
      break
    }
  }

  function checkFinished () {
    if (nends === 0 && finished && !boy._done) {
      finished = false
      self.end()
    }
  }

  if (typeof boundary !== 'string') { throw new Error('Multipart: Boundary not found') }

  const fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)
  const fileSizeLimit = getLimit(limits, 'fileSize', Infinity)
  const filesLimit = getLimit(limits, 'files', Infinity)
  const fieldsLimit = getLimit(limits, 'fields', Infinity)
  const partsLimit = getLimit(limits, 'parts', Infinity)
  const headerPairsLimit = getLimit(limits, 'headerPairs', 2000)
  const headerSizeLimit = getLimit(limits, 'headerSize', 80 * 1024)

  let nfiles = 0
  let nfields = 0
  let nends = 0
  let curFile
  let curField
  let finished = false

  this._needDrain = false
  this._pause = false
  this._cb = undefined
  this._nparts = 0
  this._boy = boy

  const parserCfg = {
    boundary,
    maxHeaderPairs: headerPairsLimit,
    maxHeaderSize: headerSizeLimit,
    partHwm: fileOpts.highWaterMark,
    highWaterMark: cfg.highWaterMark
  }

  this.parser = new Dicer(parserCfg)
  this.parser.on('drain', function () {
    self._needDrain = false
    if (self._cb && !self._pause) {
      const cb = self._cb
      self._cb = undefined
      cb()
    }
  }).on('part', function onPart (part) {
    if (++self._nparts > partsLimit) {
      self.parser.removeListener('part', onPart)
      self.parser.on('part', skipPart)
      boy.hitPartsLimit = true
      boy.emit('partsLimit')
      return skipPart(part)
    }

    // hack because streams2 _always_ doesn't emit 'end' until nextTick, so let
    // us emit 'end' early since we know the part has ended if we are already
    // seeing the next part
    if (curField) {
      const field = curField
      field.emit('end')
      field.removeAllListeners('end')
    }

    part.on('header', function (header) {
      let contype
      let fieldname
      let parsed
      let charset
      let encoding
      let filename
      let nsize = 0

      if (header['content-type']) {
        parsed = parseParams(header['content-type'][0])
        if (parsed[0]) {
          contype = parsed[0].toLowerCase()
          for (i = 0, len = parsed.length; i < len; ++i) {
            if (RE_CHARSET.test(parsed[i][0])) {
              charset = parsed[i][1].toLowerCase()
              break
            }
          }
        }
      }

      if (contype === undefined) { contype = 'text/plain' }
      if (charset === undefined) { charset = defCharset }

      if (header['content-disposition']) {
        parsed = parseParams(header['content-disposition'][0])
        if (!RE_FIELD.test(parsed[0])) { return skipPart(part) }
        for (i = 0, len = parsed.length; i < len; ++i) {
          if (RE_NAME.test(parsed[i][0])) {
            fieldname = parsed[i][1]
          } else if (RE_FILENAME.test(parsed[i][0])) {
            filename = parsed[i][1]
            if (!preservePath) { filename = basename(filename) }
          }
        }
      } else { return skipPart(part) }

      if (header['content-transfer-encoding']) { encoding = header['content-transfer-encoding'][0].toLowerCase() } else { encoding = '7bit' }

      let onData,
        onEnd

      if (isPartAFile(fieldname, contype, filename)) {
        // file/binary field
        if (nfiles === filesLimit) {
          if (!boy.hitFilesLimit) {
            boy.hitFilesLimit = true
            boy.emit('filesLimit')
          }
          return skipPart(part)
        }

        ++nfiles

        if (boy.listenerCount('file') === 0) {
          self.parser._ignore()
          return
        }

        ++nends
        const file = new FileStream(fileOpts)
        curFile = file
        file.on('end', function () {
          --nends
          self._pause = false
          checkFinished()
          if (self._cb && !self._needDrain) {
            const cb = self._cb
            self._cb = undefined
            cb()
          }
        })
        file._read = function (n) {
          if (!self._pause) { return }
          self._pause = false
          if (self._cb && !self._needDrain) {
            const cb = self._cb
            self._cb = undefined
            cb()
          }
        }
        boy.emit('file', fieldname, file, filename, encoding, contype)

        onData = function (data) {
          if ((nsize += data.length) > fileSizeLimit) {
            const extralen = fileSizeLimit - nsize + data.length
            if (extralen > 0) { file.push(data.slice(0, extralen)) }
            file.truncated = true
            file.bytesRead = fileSizeLimit
            part.removeAllListeners('data')
            file.emit('limit')
            return
          } else if (!file.push(data)) { self._pause = true }

          file.bytesRead = nsize
        }

        onEnd = function () {
          curFile = undefined
          file.push(null)
        }
      } else {
        // non-file field
        if (nfields === fieldsLimit) {
          if (!boy.hitFieldsLimit) {
            boy.hitFieldsLimit = true
            boy.emit('fieldsLimit')
          }
          return skipPart(part)
        }

        ++nfields
        ++nends
        let buffer = ''
        let truncated = false
        curField = part

        onData = function (data) {
          if ((nsize += data.length) > fieldSizeLimit) {
            const extralen = (fieldSizeLimit - (nsize - data.length))
            buffer += data.toString('binary', 0, extralen)
            truncated = true
            part.removeAllListeners('data')
          } else { buffer += data.toString('binary') }
        }

        onEnd = function () {
          curField = undefined
          if (buffer.length) { buffer = decodeText(buffer, 'binary', charset) }
          boy.emit('field', fieldname, buffer, false, truncated, encoding, contype)
          --nends
          checkFinished()
        }
      }

      /* As of node@2efe4ab761666 (v0.10.29+/v0.11.14+), busboy had become
         broken. Streams2/streams3 is a huge black box of confusion, but
         somehow overriding the sync state seems to fix things again (and still
         seems to work for previous node versions).
      */
      part._readableState.sync = false

      part.on('data', onData)
      part.on('end', onEnd)
    }).on('error', function (err) {
      if (curFile) { curFile.emit('error', err) }
    })
  }).on('error', function (err) {
    boy.emit('error', err)
  }).on('finish', function () {
    finished = true
    checkFinished()
  })
}

Multipart.prototype.write = function (chunk, cb) {
  const r = this.parser.write(chunk)
  if (r && !this._pause) {
    cb()
  } else {
    this._needDrain = !r
    this._cb = cb
  }
}

Multipart.prototype.end = function () {
  const self = this

  if (self.parser.writable) {
    self.parser.end()
  } else if (!self._boy._done) {
    process.nextTick(function () {
      self._boy._done = true
      self._boy.emit('finish')
    })
  }
}

function skipPart (part) {
  part.resume()
}

function FileStream (opts) {
  Readable.call(this, opts)

  this.bytesRead = 0

  this.truncated = false
}

inherits(FileStream, Readable)

FileStream.prototype._read = function (n) {}

module.exports = Multipart


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/types/urlencoded.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/types/urlencoded.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const Decoder = __webpack_require__(/*! ../utils/Decoder */ "../../node_modules/@fastify/busboy/lib/utils/Decoder.js")
const decodeText = __webpack_require__(/*! ../utils/decodeText */ "../../node_modules/@fastify/busboy/lib/utils/decodeText.js")
const getLimit = __webpack_require__(/*! ../utils/getLimit */ "../../node_modules/@fastify/busboy/lib/utils/getLimit.js")

const RE_CHARSET = /^charset$/i

UrlEncoded.detect = /^application\/x-www-form-urlencoded/i
function UrlEncoded (boy, cfg) {
  const limits = cfg.limits
  const parsedConType = cfg.parsedConType
  this.boy = boy

  this.fieldSizeLimit = getLimit(limits, 'fieldSize', 1 * 1024 * 1024)
  this.fieldNameSizeLimit = getLimit(limits, 'fieldNameSize', 100)
  this.fieldsLimit = getLimit(limits, 'fields', Infinity)

  let charset
  for (var i = 0, len = parsedConType.length; i < len; ++i) { // eslint-disable-line no-var
    if (Array.isArray(parsedConType[i]) &&
        RE_CHARSET.test(parsedConType[i][0])) {
      charset = parsedConType[i][1].toLowerCase()
      break
    }
  }

  if (charset === undefined) { charset = cfg.defCharset || 'utf8' }

  this.decoder = new Decoder()
  this.charset = charset
  this._fields = 0
  this._state = 'key'
  this._checkingBytes = true
  this._bytesKey = 0
  this._bytesVal = 0
  this._key = ''
  this._val = ''
  this._keyTrunc = false
  this._valTrunc = false
  this._hitLimit = false
}

UrlEncoded.prototype.write = function (data, cb) {
  if (this._fields === this.fieldsLimit) {
    if (!this.boy.hitFieldsLimit) {
      this.boy.hitFieldsLimit = true
      this.boy.emit('fieldsLimit')
    }
    return cb()
  }

  let idxeq; let idxamp; let i; let p = 0; const len = data.length

  while (p < len) {
    if (this._state === 'key') {
      idxeq = idxamp = undefined
      for (i = p; i < len; ++i) {
        if (!this._checkingBytes) { ++p }
        if (data[i] === 0x3D/* = */) {
          idxeq = i
          break
        } else if (data[i] === 0x26/* & */) {
          idxamp = i
          break
        }
        if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {
          this._hitLimit = true
          break
        } else if (this._checkingBytes) { ++this._bytesKey }
      }

      if (idxeq !== undefined) {
        // key with assignment
        if (idxeq > p) { this._key += this.decoder.write(data.toString('binary', p, idxeq)) }
        this._state = 'val'

        this._hitLimit = false
        this._checkingBytes = true
        this._val = ''
        this._bytesVal = 0
        this._valTrunc = false
        this.decoder.reset()

        p = idxeq + 1
      } else if (idxamp !== undefined) {
        // key with no assignment
        ++this._fields
        let key; const keyTrunc = this._keyTrunc
        if (idxamp > p) { key = (this._key += this.decoder.write(data.toString('binary', p, idxamp))) } else { key = this._key }

        this._hitLimit = false
        this._checkingBytes = true
        this._key = ''
        this._bytesKey = 0
        this._keyTrunc = false
        this.decoder.reset()

        if (key.length) {
          this.boy.emit('field', decodeText(key, 'binary', this.charset),
            '',
            keyTrunc,
            false)
        }

        p = idxamp + 1
        if (this._fields === this.fieldsLimit) { return cb() }
      } else if (this._hitLimit) {
        // we may not have hit the actual limit if there are encoded bytes...
        if (i > p) { this._key += this.decoder.write(data.toString('binary', p, i)) }
        p = i
        if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {
          // yep, we actually did hit the limit
          this._checkingBytes = false
          this._keyTrunc = true
        }
      } else {
        if (p < len) { this._key += this.decoder.write(data.toString('binary', p)) }
        p = len
      }
    } else {
      idxamp = undefined
      for (i = p; i < len; ++i) {
        if (!this._checkingBytes) { ++p }
        if (data[i] === 0x26/* & */) {
          idxamp = i
          break
        }
        if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {
          this._hitLimit = true
          break
        } else if (this._checkingBytes) { ++this._bytesVal }
      }

      if (idxamp !== undefined) {
        ++this._fields
        if (idxamp > p) { this._val += this.decoder.write(data.toString('binary', p, idxamp)) }
        this.boy.emit('field', decodeText(this._key, 'binary', this.charset),
          decodeText(this._val, 'binary', this.charset),
          this._keyTrunc,
          this._valTrunc)
        this._state = 'key'

        this._hitLimit = false
        this._checkingBytes = true
        this._key = ''
        this._bytesKey = 0
        this._keyTrunc = false
        this.decoder.reset()

        p = idxamp + 1
        if (this._fields === this.fieldsLimit) { return cb() }
      } else if (this._hitLimit) {
        // we may not have hit the actual limit if there are encoded bytes...
        if (i > p) { this._val += this.decoder.write(data.toString('binary', p, i)) }
        p = i
        if ((this._val === '' && this.fieldSizeLimit === 0) ||
            (this._bytesVal = this._val.length) === this.fieldSizeLimit) {
          // yep, we actually did hit the limit
          this._checkingBytes = false
          this._valTrunc = true
        }
      } else {
        if (p < len) { this._val += this.decoder.write(data.toString('binary', p)) }
        p = len
      }
    }
  }
  cb()
}

UrlEncoded.prototype.end = function () {
  if (this.boy._done) { return }

  if (this._state === 'key' && this._key.length > 0) {
    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),
      '',
      this._keyTrunc,
      false)
  } else if (this._state === 'val') {
    this.boy.emit('field', decodeText(this._key, 'binary', this.charset),
      decodeText(this._val, 'binary', this.charset),
      this._keyTrunc,
      this._valTrunc)
  }
  this.boy._done = true
  this.boy.emit('finish')
}

module.exports = UrlEncoded


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/utils/Decoder.js":
/*!***************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/utils/Decoder.js ***!
  \***************************************************************/
/***/ ((module) => {



const RE_PLUS = /\+/g

const HEX = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
]

function Decoder () {
  this.buffer = undefined
}
Decoder.prototype.write = function (str) {
  // Replace '+' with ' ' before decoding
  str = str.replace(RE_PLUS, ' ')
  let res = ''
  let i = 0; let p = 0; const len = str.length
  for (; i < len; ++i) {
    if (this.buffer !== undefined) {
      if (!HEX[str.charCodeAt(i)]) {
        res += '%' + this.buffer
        this.buffer = undefined
        --i // retry character
      } else {
        this.buffer += str[i]
        ++p
        if (this.buffer.length === 2) {
          res += String.fromCharCode(parseInt(this.buffer, 16))
          this.buffer = undefined
        }
      }
    } else if (str[i] === '%') {
      if (i > p) {
        res += str.substring(p, i)
        p = i
      }
      this.buffer = ''
      ++p
    }
  }
  if (p < len && this.buffer === undefined) { res += str.substring(p) }
  return res
}
Decoder.prototype.reset = function () {
  this.buffer = undefined
}

module.exports = Decoder


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/utils/basename.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/utils/basename.js ***!
  \****************************************************************/
/***/ ((module) => {



module.exports = function basename (path) {
  if (typeof path !== 'string') { return '' }
  for (var i = path.length - 1; i >= 0; --i) { // eslint-disable-line no-var
    switch (path.charCodeAt(i)) {
      case 0x2F: // '/'
      case 0x5C: // '\'
        path = path.slice(i + 1)
        return (path === '..' || path === '.' ? '' : path)
    }
  }
  return (path === '..' || path === '.' ? '' : path)
}


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/utils/decodeText.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/utils/decodeText.js ***!
  \******************************************************************/
/***/ (function(module) {



// Node has always utf-8
const utf8Decoder = new TextDecoder('utf-8')
const textDecoders = new Map([
  ['utf-8', utf8Decoder],
  ['utf8', utf8Decoder]
])

function getDecoder (charset) {
  let lc
  while (true) {
    switch (charset) {
      case 'utf-8':
      case 'utf8':
        return decoders.utf8
      case 'latin1':
      case 'ascii': // TODO: Make these a separate, strict decoder?
      case 'us-ascii':
      case 'iso-8859-1':
      case 'iso8859-1':
      case 'iso88591':
      case 'iso_8859-1':
      case 'windows-1252':
      case 'iso_8859-1:1987':
      case 'cp1252':
      case 'x-cp1252':
        return decoders.latin1
      case 'utf16le':
      case 'utf-16le':
      case 'ucs2':
      case 'ucs-2':
        return decoders.utf16le
      case 'base64':
        return decoders.base64
      default:
        if (lc === undefined) {
          lc = true
          charset = charset.toLowerCase()
          continue
        }
        return decoders.other.bind(charset)
    }
  }
}

const decoders = {
  utf8: (data, sourceEncoding) => {
    if (data.length === 0) {
      return ''
    }
    if (typeof data === 'string') {
      data = Buffer.from(data, sourceEncoding)
    }
    return data.utf8Slice(0, data.length)
  },

  latin1: (data, sourceEncoding) => {
    if (data.length === 0) {
      return ''
    }
    if (typeof data === 'string') {
      return data
    }
    return data.latin1Slice(0, data.length)
  },

  utf16le: (data, sourceEncoding) => {
    if (data.length === 0) {
      return ''
    }
    if (typeof data === 'string') {
      data = Buffer.from(data, sourceEncoding)
    }
    return data.ucs2Slice(0, data.length)
  },

  base64: (data, sourceEncoding) => {
    if (data.length === 0) {
      return ''
    }
    if (typeof data === 'string') {
      data = Buffer.from(data, sourceEncoding)
    }
    return data.base64Slice(0, data.length)
  },

  other: (data, sourceEncoding) => {
    if (data.length === 0) {
      return ''
    }
    if (typeof data === 'string') {
      data = Buffer.from(data, sourceEncoding)
    }

    if (textDecoders.has(this.toString())) {
      try {
        return textDecoders.get(this).decode(data)
      } catch {}
    }
    return typeof data === 'string'
      ? data
      : data.toString()
  }
}

function decodeText (text, sourceEncoding, destEncoding) {
  if (text) {
    return getDecoder(destEncoding)(text, sourceEncoding)
  }
  return text
}

module.exports = decodeText


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/utils/getLimit.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/utils/getLimit.js ***!
  \****************************************************************/
/***/ ((module) => {



module.exports = function getLimit (limits, name, defaultLimit) {
  if (
    !limits ||
    limits[name] === undefined ||
    limits[name] === null
  ) { return defaultLimit }

  if (
    typeof limits[name] !== 'number' ||
    isNaN(limits[name])
  ) { throw new TypeError('Limit ' + name + ' is not a valid number') }

  return limits[name]
}


/***/ }),

/***/ "../../node_modules/@fastify/busboy/lib/utils/parseParams.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@fastify/busboy/lib/utils/parseParams.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable object-property-newline */


const decodeText = __webpack_require__(/*! ./decodeText */ "../../node_modules/@fastify/busboy/lib/utils/decodeText.js")

const RE_ENCODED = /%[a-fA-F0-9][a-fA-F0-9]/g

const EncodedLookup = {
  '%00': '\x00', '%01': '\x01', '%02': '\x02', '%03': '\x03', '%04': '\x04',
  '%05': '\x05', '%06': '\x06', '%07': '\x07', '%08': '\x08', '%09': '\x09',
  '%0a': '\x0a', '%0A': '\x0a', '%0b': '\x0b', '%0B': '\x0b', '%0c': '\x0c',
  '%0C': '\x0c', '%0d': '\x0d', '%0D': '\x0d', '%0e': '\x0e', '%0E': '\x0e',
  '%0f': '\x0f', '%0F': '\x0f', '%10': '\x10', '%11': '\x11', '%12': '\x12',
  '%13': '\x13', '%14': '\x14', '%15': '\x15', '%16': '\x16', '%17': '\x17',
  '%18': '\x18', '%19': '\x19', '%1a': '\x1a', '%1A': '\x1a', '%1b': '\x1b',
  '%1B': '\x1b', '%1c': '\x1c', '%1C': '\x1c', '%1d': '\x1d', '%1D': '\x1d',
  '%1e': '\x1e', '%1E': '\x1e', '%1f': '\x1f', '%1F': '\x1f', '%20': '\x20',
  '%21': '\x21', '%22': '\x22', '%23': '\x23', '%24': '\x24', '%25': '\x25',
  '%26': '\x26', '%27': '\x27', '%28': '\x28', '%29': '\x29', '%2a': '\x2a',
  '%2A': '\x2a', '%2b': '\x2b', '%2B': '\x2b', '%2c': '\x2c', '%2C': '\x2c',
  '%2d': '\x2d', '%2D': '\x2d', '%2e': '\x2e', '%2E': '\x2e', '%2f': '\x2f',
  '%2F': '\x2f', '%30': '\x30', '%31': '\x31', '%32': '\x32', '%33': '\x33',
  '%34': '\x34', '%35': '\x35', '%36': '\x36', '%37': '\x37', '%38': '\x38',
  '%39': '\x39', '%3a': '\x3a', '%3A': '\x3a', '%3b': '\x3b', '%3B': '\x3b',
  '%3c': '\x3c', '%3C': '\x3c', '%3d': '\x3d', '%3D': '\x3d', '%3e': '\x3e',
  '%3E': '\x3e', '%3f': '\x3f', '%3F': '\x3f', '%40': '\x40', '%41': '\x41',
  '%42': '\x42', '%43': '\x43', '%44': '\x44', '%45': '\x45', '%46': '\x46',
  '%47': '\x47', '%48': '\x48', '%49': '\x49', '%4a': '\x4a', '%4A': '\x4a',
  '%4b': '\x4b', '%4B': '\x4b', '%4c': '\x4c', '%4C': '\x4c', '%4d': '\x4d',
  '%4D': '\x4d', '%4e': '\x4e', '%4E': '\x4e', '%4f': '\x4f', '%4F': '\x4f',
  '%50': '\x50', '%51': '\x51', '%52': '\x52', '%53': '\x53', '%54': '\x54',
  '%55': '\x55', '%56': '\x56', '%57': '\x57', '%58': '\x58', '%59': '\x59',
  '%5a': '\x5a', '%5A': '\x5a', '%5b': '\x5b', '%5B': '\x5b', '%5c': '\x5c',
  '%5C': '\x5c', '%5d': '\x5d', '%5D': '\x5d', '%5e': '\x5e', '%5E': '\x5e',
  '%5f': '\x5f', '%5F': '\x5f', '%60': '\x60', '%61': '\x61', '%62': '\x62',
  '%63': '\x63', '%64': '\x64', '%65': '\x65', '%66': '\x66', '%67': '\x67',
  '%68': '\x68', '%69': '\x69', '%6a': '\x6a', '%6A': '\x6a', '%6b': '\x6b',
  '%6B': '\x6b', '%6c': '\x6c', '%6C': '\x6c', '%6d': '\x6d', '%6D': '\x6d',
  '%6e': '\x6e', '%6E': '\x6e', '%6f': '\x6f', '%6F': '\x6f', '%70': '\x70',
  '%71': '\x71', '%72': '\x72', '%73': '\x73', '%74': '\x74', '%75': '\x75',
  '%76': '\x76', '%77': '\x77', '%78': '\x78', '%79': '\x79', '%7a': '\x7a',
  '%7A': '\x7a', '%7b': '\x7b', '%7B': '\x7b', '%7c': '\x7c', '%7C': '\x7c',
  '%7d': '\x7d', '%7D': '\x7d', '%7e': '\x7e', '%7E': '\x7e', '%7f': '\x7f',
  '%7F': '\x7f', '%80': '\x80', '%81': '\x81', '%82': '\x82', '%83': '\x83',
  '%84': '\x84', '%85': '\x85', '%86': '\x86', '%87': '\x87', '%88': '\x88',
  '%89': '\x89', '%8a': '\x8a', '%8A': '\x8a', '%8b': '\x8b', '%8B': '\x8b',
  '%8c': '\x8c', '%8C': '\x8c', '%8d': '\x8d', '%8D': '\x8d', '%8e': '\x8e',
  '%8E': '\x8e', '%8f': '\x8f', '%8F': '\x8f', '%90': '\x90', '%91': '\x91',
  '%92': '\x92', '%93': '\x93', '%94': '\x94', '%95': '\x95', '%96': '\x96',
  '%97': '\x97', '%98': '\x98', '%99': '\x99', '%9a': '\x9a', '%9A': '\x9a',
  '%9b': '\x9b', '%9B': '\x9b', '%9c': '\x9c', '%9C': '\x9c', '%9d': '\x9d',
  '%9D': '\x9d', '%9e': '\x9e', '%9E': '\x9e', '%9f': '\x9f', '%9F': '\x9f',
  '%a0': '\xa0', '%A0': '\xa0', '%a1': '\xa1', '%A1': '\xa1', '%a2': '\xa2',
  '%A2': '\xa2', '%a3': '\xa3', '%A3': '\xa3', '%a4': '\xa4', '%A4': '\xa4',
  '%a5': '\xa5', '%A5': '\xa5', '%a6': '\xa6', '%A6': '\xa6', '%a7': '\xa7',
  '%A7': '\xa7', '%a8': '\xa8', '%A8': '\xa8', '%a9': '\xa9', '%A9': '\xa9',
  '%aa': '\xaa', '%Aa': '\xaa', '%aA': '\xaa', '%AA': '\xaa', '%ab': '\xab',
  '%Ab': '\xab', '%aB': '\xab', '%AB': '\xab', '%ac': '\xac', '%Ac': '\xac',
  '%aC': '\xac', '%AC': '\xac', '%ad': '\xad', '%Ad': '\xad', '%aD': '\xad',
  '%AD': '\xad', '%ae': '\xae', '%Ae': '\xae', '%aE': '\xae', '%AE': '\xae',
  '%af': '\xaf', '%Af': '\xaf', '%aF': '\xaf', '%AF': '\xaf', '%b0': '\xb0',
  '%B0': '\xb0', '%b1': '\xb1', '%B1': '\xb1', '%b2': '\xb2', '%B2': '\xb2',
  '%b3': '\xb3', '%B3': '\xb3', '%b4': '\xb4', '%B4': '\xb4', '%b5': '\xb5',
  '%B5': '\xb5', '%b6': '\xb6', '%B6': '\xb6', '%b7': '\xb7', '%B7': '\xb7',
  '%b8': '\xb8', '%B8': '\xb8', '%b9': '\xb9', '%B9': '\xb9', '%ba': '\xba',
  '%Ba': '\xba', '%bA': '\xba', '%BA': '\xba', '%bb': '\xbb', '%Bb': '\xbb',
  '%bB': '\xbb', '%BB': '\xbb', '%bc': '\xbc', '%Bc': '\xbc', '%bC': '\xbc',
  '%BC': '\xbc', '%bd': '\xbd', '%Bd': '\xbd', '%bD': '\xbd', '%BD': '\xbd',
  '%be': '\xbe', '%Be': '\xbe', '%bE': '\xbe', '%BE': '\xbe', '%bf': '\xbf',
  '%Bf': '\xbf', '%bF': '\xbf', '%BF': '\xbf', '%c0': '\xc0', '%C0': '\xc0',
  '%c1': '\xc1', '%C1': '\xc1', '%c2': '\xc2', '%C2': '\xc2', '%c3': '\xc3',
  '%C3': '\xc3', '%c4': '\xc4', '%C4': '\xc4', '%c5': '\xc5', '%C5': '\xc5',
  '%c6': '\xc6', '%C6': '\xc6', '%c7': '\xc7', '%C7': '\xc7', '%c8': '\xc8',
  '%C8': '\xc8', '%c9': '\xc9', '%C9': '\xc9', '%ca': '\xca', '%Ca': '\xca',
  '%cA': '\xca', '%CA': '\xca', '%cb': '\xcb', '%Cb': '\xcb', '%cB': '\xcb',
  '%CB': '\xcb', '%cc': '\xcc', '%Cc': '\xcc', '%cC': '\xcc', '%CC': '\xcc',
  '%cd': '\xcd', '%Cd': '\xcd', '%cD': '\xcd', '%CD': '\xcd', '%ce': '\xce',
  '%Ce': '\xce', '%cE': '\xce', '%CE': '\xce', '%cf': '\xcf', '%Cf': '\xcf',
  '%cF': '\xcf', '%CF': '\xcf', '%d0': '\xd0', '%D0': '\xd0', '%d1': '\xd1',
  '%D1': '\xd1', '%d2': '\xd2', '%D2': '\xd2', '%d3': '\xd3', '%D3': '\xd3',
  '%d4': '\xd4', '%D4': '\xd4', '%d5': '\xd5', '%D5': '\xd5', '%d6': '\xd6',
  '%D6': '\xd6', '%d7': '\xd7', '%D7': '\xd7', '%d8': '\xd8', '%D8': '\xd8',
  '%d9': '\xd9', '%D9': '\xd9', '%da': '\xda', '%Da': '\xda', '%dA': '\xda',
  '%DA': '\xda', '%db': '\xdb', '%Db': '\xdb', '%dB': '\xdb', '%DB': '\xdb',
  '%dc': '\xdc', '%Dc': '\xdc', '%dC': '\xdc', '%DC': '\xdc', '%dd': '\xdd',
  '%Dd': '\xdd', '%dD': '\xdd', '%DD': '\xdd', '%de': '\xde', '%De': '\xde',
  '%dE': '\xde', '%DE': '\xde', '%df': '\xdf', '%Df': '\xdf', '%dF': '\xdf',
  '%DF': '\xdf', '%e0': '\xe0', '%E0': '\xe0', '%e1': '\xe1', '%E1': '\xe1',
  '%e2': '\xe2', '%E2': '\xe2', '%e3': '\xe3', '%E3': '\xe3', '%e4': '\xe4',
  '%E4': '\xe4', '%e5': '\xe5', '%E5': '\xe5', '%e6': '\xe6', '%E6': '\xe6',
  '%e7': '\xe7', '%E7': '\xe7', '%e8': '\xe8', '%E8': '\xe8', '%e9': '\xe9',
  '%E9': '\xe9', '%ea': '\xea', '%Ea': '\xea', '%eA': '\xea', '%EA': '\xea',
  '%eb': '\xeb', '%Eb': '\xeb', '%eB': '\xeb', '%EB': '\xeb', '%ec': '\xec',
  '%Ec': '\xec', '%eC': '\xec', '%EC': '\xec', '%ed': '\xed', '%Ed': '\xed',
  '%eD': '\xed', '%ED': '\xed', '%ee': '\xee', '%Ee': '\xee', '%eE': '\xee',
  '%EE': '\xee', '%ef': '\xef', '%Ef': '\xef', '%eF': '\xef', '%EF': '\xef',
  '%f0': '\xf0', '%F0': '\xf0', '%f1': '\xf1', '%F1': '\xf1', '%f2': '\xf2',
  '%F2': '\xf2', '%f3': '\xf3', '%F3': '\xf3', '%f4': '\xf4', '%F4': '\xf4',
  '%f5': '\xf5', '%F5': '\xf5', '%f6': '\xf6', '%F6': '\xf6', '%f7': '\xf7',
  '%F7': '\xf7', '%f8': '\xf8', '%F8': '\xf8', '%f9': '\xf9', '%F9': '\xf9',
  '%fa': '\xfa', '%Fa': '\xfa', '%fA': '\xfa', '%FA': '\xfa', '%fb': '\xfb',
  '%Fb': '\xfb', '%fB': '\xfb', '%FB': '\xfb', '%fc': '\xfc', '%Fc': '\xfc',
  '%fC': '\xfc', '%FC': '\xfc', '%fd': '\xfd', '%Fd': '\xfd', '%fD': '\xfd',
  '%FD': '\xfd', '%fe': '\xfe', '%Fe': '\xfe', '%fE': '\xfe', '%FE': '\xfe',
  '%ff': '\xff', '%Ff': '\xff', '%fF': '\xff', '%FF': '\xff'
}

function encodedReplacer (match) {
  return EncodedLookup[match]
}

const STATE_KEY = 0
const STATE_VALUE = 1
const STATE_CHARSET = 2
const STATE_LANG = 3

function parseParams (str) {
  const res = []
  let state = STATE_KEY
  let charset = ''
  let inquote = false
  let escaping = false
  let p = 0
  let tmp = ''
  const len = str.length

  for (var i = 0; i < len; ++i) { // eslint-disable-line no-var
    const char = str[i]
    if (char === '\\' && inquote) {
      if (escaping) { escaping = false } else {
        escaping = true
        continue
      }
    } else if (char === '"') {
      if (!escaping) {
        if (inquote) {
          inquote = false
          state = STATE_KEY
        } else { inquote = true }
        continue
      } else { escaping = false }
    } else {
      if (escaping && inquote) { tmp += '\\' }
      escaping = false
      if ((state === STATE_CHARSET || state === STATE_LANG) && char === "'") {
        if (state === STATE_CHARSET) {
          state = STATE_LANG
          charset = tmp.substring(1)
        } else { state = STATE_VALUE }
        tmp = ''
        continue
      } else if (state === STATE_KEY &&
        (char === '*' || char === '=') &&
        res.length) {
        state = char === '*'
          ? STATE_CHARSET
          : STATE_VALUE
        res[p] = [tmp, undefined]
        tmp = ''
        continue
      } else if (!inquote && char === ';') {
        state = STATE_KEY
        if (charset) {
          if (tmp.length) {
            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),
              'binary',
              charset)
          }
          charset = ''
        } else if (tmp.length) {
          tmp = decodeText(tmp, 'binary', 'utf8')
        }
        if (res[p] === undefined) { res[p] = tmp } else { res[p][1] = tmp }
        tmp = ''
        ++p
        continue
      } else if (!inquote && (char === ' ' || char === '\t')) { continue }
    }
    tmp += char
  }
  if (charset && tmp.length) {
    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),
      'binary',
      charset)
  } else if (tmp) {
    tmp = decodeText(tmp, 'binary', 'utf8')
  }

  if (res[p] === undefined) {
    if (tmp) { res[p] = tmp }
  } else { res[p][1] = tmp }

  return res
}

module.exports = parseParams


/***/ }),

/***/ "../../node_modules/@actions/core/node_modules/uuid/wrapper.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/@actions/core/node_modules/uuid/wrapper.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NIL: () => (/* binding */ NIL),
/* harmony export */   parse: () => (/* binding */ parse),
/* harmony export */   stringify: () => (/* binding */ stringify),
/* harmony export */   v1: () => (/* binding */ v1),
/* harmony export */   v3: () => (/* binding */ v3),
/* harmony export */   v4: () => (/* binding */ v4),
/* harmony export */   v5: () => (/* binding */ v5),
/* harmony export */   validate: () => (/* binding */ validate),
/* harmony export */   version: () => (/* binding */ version)
/* harmony export */ });
/* harmony import */ var _dist_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/index.js */ "../../node_modules/@actions/core/node_modules/uuid/dist/index.js");

const v1 = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.v1;
const v3 = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.v3;
const v4 = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.v4;
const v5 = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.v5;
const NIL = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.NIL;
const version = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.version;
const validate = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.validate;
const stringify = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.stringify;
const parse = _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.parse;


/***/ }),

/***/ "./kotlin/kotlin-actions-ktor-engine.mjs":
/*!***********************************************!*\
  !*** ./kotlin/kotlin-actions-ktor-engine.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JsEsModule_instancea6jusegqa21s: () => (/* binding */ JsEsModule_instance)
/* harmony export */ });
/* harmony import */ var _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ktor-ktor-client-core.mjs */ "./kotlin/ktor-ktor-client-core.mjs");
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-utils.mjs */ "./kotlin/ktor-ktor-utils.mjs");
/* harmony import */ var _kotlin_web_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kotlin-web.mjs */ "./kotlin/kotlin-web.mjs");
/* harmony import */ var _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ktor-ktor-http.mjs */ "./kotlin/ktor-ktor-http.mjs");
/* harmony import */ var _kotlin_js_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kotlin-js.mjs */ "./kotlin/kotlin-js.mjs");
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");
/* harmony import */ var _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ktor-ktor-io.mjs */ "./kotlin/ktor-ktor-io.mjs");








//region block: imports
var constructor = (class ReadableStreamReadValueResult {
    static [Symbol.hasInstance](instance) {
        return instance && (typeof instance === 'object') && (instance.done === false)
    }
    }.prototype).constructor;
var constructor_0 = (class ReadableStreamReadDoneResult {
    static [Symbol.hasInstance](instance) {
        return instance && (typeof instance === 'object') && (instance.done === true)
    }
    }.prototype).constructor;
//endregion
//region block: pre-declaration
class JsEsModule {
  k32(block) {
    // Inline function 'kotlin.apply' call
    var this_0 = new _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpClientEngineConfig53hvl3zmhf7d();
    // Inline function 'kotlin.contracts.contract' call
    block(this_0);
    return new JsEsModuleEngine(this_0);
  }
  q29(block) {
    return this.k32(block);
  }
}
class $executeCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, data, resultContinuation) {
    super(resultContinuation);
    this.t32_1 = _this__u8e3s4;
    this.u32_1 = data;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            this.lb_1 = 1;
            suspendResult = (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_0__.callContext1vmlct0otxsqs)(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.v32_1 = suspendResult;
            this.w32_1 = this.u32_1.j2e_1.l1k(get_CLIENT_CONFIG());
            if ((0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_0__.isUpgradeRequest3msdo2i9hxs68)(this.u32_1)) {
              var message = 'Not supported';
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
            }

            this.x32_1 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.GMTDate36bhedawynxlf)();
            this.lb_1 = 2;
            suspendResult = toRaw(this.u32_1, this.w32_1, this.v32_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.y32_1 = suspendResult;
            this.lb_1 = 3;
            suspendResult = (0,_kotlin_web_mjs__WEBPACK_IMPORTED_MODULE_3__.fetch1hzbcl89lee4e)(this.u32_1.e2e_1.toString(), this.y32_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            var rawResponse = suspendResult;
            var status = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatusCode3o1wkms10pg4k(rawResponse.status, rawResponse.statusText);
            (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__.Companion_getInstance12n7p6s0jad4v)();
            var this_0 = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__.HeadersBuilder3h7sn3kkvu98m();
            var tmp0_iterator = (0,_kotlin_js_mjs__WEBPACK_IMPORTED_MODULE_5__.toList16hak62x7tqkd)(rawResponse.headers.keys()).w();
            while (tmp0_iterator.x()) {
              var element = tmp0_iterator.y();
              this_0.q1m(element, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(rawResponse.headers.get(element)));
            }

            var headers = this_0.y18();
            var version = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__.Companion_getInstance3s68g5cirsb1h)().x1x_1;
            var body = readBodyNode((0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_6__.CoroutineScopelux7s7zphw7e)(this.v32_1), rawResponse);
            return new _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpResponseData2dozo5khuplr6(status, this.x32_1, headers, version, body, this.v32_1);
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class JsEsModuleEngine extends _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpClientEngineBase2tgisnw4e4drr {
  constructor(config) {
    super('ktor-js');
    this.d33_1 = config;
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.d33_1.f2g_1 == null)) {
      // Inline function 'app.softwork.kotlin.actions.JsEsModuleEngine.<anonymous>' call
      var message = 'Proxy unsupported in Js engine.';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
    }
  }
  z28() {
    return this.d33_1;
  }
  x2f(data, $completion) {
    var tmp = new $executeCOROUTINE$0(this, data, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
}
class toRaw$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($content, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.a34_1 = $content;
    super(resultContinuation, $box);
  }
  l2d($this$writer, $completion) {
    var tmp = this.m2d($this$writer, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.l2d((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__.WriterScope3b0bo1enaee6b) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.a34_1.z22(this.b34_1.v1b(), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  m2d($this$writer, completion) {
    var i = new toRaw$slambda(this.a34_1, completion);
    i.b34_1 = $this$writer;
    return i;
  }
}
class readBodyNode$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($response, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.k34_1 = $response;
    super(resultContinuation, $box);
  }
  r34($this$flow, $completion) {
    var tmp = this.s34($this$flow, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.r34((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_6__.FlowCollector26clgpmzihvke) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 7;
            var tmp_0 = this;
            var tmp0_elvis_lhs = this.k34_1.body;
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              var message = 'Fail to get body';
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0.m34_1 = tmp_1;
            this.n34_1 = this.m34_1.getReader();
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (false) {}

            var tmp_2 = this;
            tmp_2.o34_1 = this.n34_1;
            this.lb_1 = 2;
            suspendResult = (0,_kotlin_js_mjs__WEBPACK_IMPORTED_MODULE_5__.awaitPromiseLike1nucgnh099rgw)(this.o34_1.read(), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.p34_1 = suspendResult;
            var tmp_3 = this.p34_1;
            if (tmp_3 instanceof constructor_0) {
              this.q34_1 = this.p34_1.value;
              if (!(this.q34_1 == null)) {
                this.lb_1 = 5;
                suspendResult = this.l34_1.ly(this.q34_1, this);
                if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.lb_1 = 6;
                continue $sm;
              }
            } else {
              var tmp_4 = this.p34_1;
              if (tmp_4 instanceof constructor) {
                this.lb_1 = 3;
                suspendResult = this.l34_1.ly(this.p34_1.value, this);
                if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.noWhenBranchMatchedException2a6r7ubxgky5j)();
              }
            }

            break;
          case 3:
            this.lb_1 = 4;
            continue $sm;
          case 4:
            this.lb_1 = 1;
            continue $sm;
          case 5:
            this.lb_1 = 6;
            continue $sm;
          case 6:
            this.lb_1 = 8;
            continue $sm;
          case 7:
            throw this.ob_1;
          case 8:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 7) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  s34($this$flow, completion) {
    var i = new readBodyNode$slambda(this.k34_1, completion);
    i.l34_1 = $this$flow;
    return i;
  }
}
class sam$kotlinx_coroutines_flow_FlowCollector$0 {
  constructor(function_0) {
    this.t34_1 = function_0;
  }
  ly(value, $completion) {
    return this.t34_1(value, $completion);
  }
}
class readBodyNode$slambda$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($this_writer, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.c35_1 = $this_writer;
    super(resultContinuation, $box);
  }
  e35(it, $completion) {
    var tmp = this.f35(it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.e35(p1 instanceof Uint8Array ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            var tmp_0 = this.c35_1.v1b();
            var this_0 = this.d35_1;
            var this_1 = new Int8Array(this_0.buffer, this_0.byteOffset, this_0.length);
            suspendResult = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__.writeFully2uk0nvr5t2puu)(tmp_0, this_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f35(it, completion) {
    var i = new readBodyNode$slambda$slambda(this.c35_1, completion);
    i.d35_1 = it;
    return i;
  }
}
class readBodyNode$slambda_0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($data, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.o35_1 = $data;
    super(resultContinuation, $box);
  }
  l2d($this$writer, $completion) {
    var tmp = this.m2d($this$writer, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.l2d((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__.WriterScope3b0bo1enaee6b) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            var tmp_0 = readBodyNode$slambda$slambda_0(this.p35_1, null);
            suspendResult = this.o35_1.ux(new sam$kotlinx_coroutines_flow_FlowCollector$0(tmp_0), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.p35_1.v1b().ib();
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  m2d($this$writer, completion) {
    var i = new readBodyNode$slambda_0(this.o35_1, completion);
    i.p35_1 = $this$writer;
    return i;
  }
}
class $toRawCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, clientConfig, callContext, resultContinuation) {
    super(resultContinuation);
    this.m33_1 = _this__u8e3s4;
    this.n33_1 = clientConfig;
    this.o33_1 = callContext;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            this.p33_1 = new Headers();
            (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_0__.mergeHeadersub4y73mj759y)(this.m33_1.g2e_1, this.m33_1.h2e_1, toRaw$lambda(this.p33_1));
            this.q33_1 = this.m33_1.h2e_1;
            var tmp_0 = this.q33_1;
            if (tmp_0 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__.ByteArrayContent2n0wb43y6ugs1) {
              var tmp_1 = this;
              tmp_1.r33_1 = this.q33_1.u22();
              this.lb_1 = 3;
              continue $sm;
            } else {
              var tmp_2 = this.q33_1;
              if (tmp_2 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__.ReadChannelContentz1amb4hnpqp4) {
                this.lb_1 = 2;
                suspendResult = this.q33_1.x22().l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, this);
                if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                var tmp_3 = this.q33_1;
                if (tmp_3 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_4__.WriteChannelContent1d7f40hsfcaxg) {
                  this.lb_1 = 1;
                  var tmp_4 = _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_6__.GlobalScope_instance3rq364dcgnf9q;
                  suspendResult = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__.writer1eia5its2a1fh)(tmp_4, this.o33_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, toRaw$slambda_0(this.q33_1, null)).v1b().l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, this);
                  if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  this.r33_1 = null;
                  this.lb_1 = 3;
                  continue $sm;
                }
              }
            }

          case 1:
            var ARGUMENT = suspendResult;
            var tmp_5 = this;
            tmp_5.r33_1 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__.readBytes2b47ed7nra7rg)(ARGUMENT);
            this.lb_1 = 3;
            continue $sm;
          case 2:
            var ARGUMENT_0 = suspendResult;
            var tmp_6 = this;
            tmp_6.r33_1 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__.readBytes2b47ed7nra7rg)(ARGUMENT_0);
            this.lb_1 = 3;
            continue $sm;
          case 3:
            var bodyBytes = this.r33_1;
            var this_0 = {};
            this_0.method = this.m33_1.f2e_1.v1x_1;
            this_0.headers = this.p33_1;
            var tmp_7;
            if (this.n33_1.v28_1) {
              tmp_7 = 'follow';
            } else {
              tmp_7 = 'manual';
            }

            this_0.redirect = tmp_7;
            if (!(bodyBytes == null)) {
              this_0.body = bodyBytes;
            }

            return this_0;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
//endregion
function get_CLIENT_CONFIG() {
  _init_properties_JsEsModule_kt__313n25();
  return CLIENT_CONFIG;
}
var CLIENT_CONFIG;
var JsEsModule_instance;
function JsEsModule_getInstance() {
  return JsEsModule_instance;
}
function toRaw(_this__u8e3s4, clientConfig, callContext, $completion) {
  var tmp = new $toRawCOROUTINE$1(_this__u8e3s4, clientConfig, callContext, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function readBodyNode(scope, response) {
  _init_properties_JsEsModule_kt__313n25();
  var data = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_6__.cancellable2hwvzb6vsyyjp)((0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_6__.flow3tazazxj2t7g4)(readBodyNode$slambda_1(response, null)));
  return (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_7__.writer1eia5its2a1fh)(scope, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, readBodyNode$slambda_2(data, null)).v1b();
}
function toRaw$lambda($jsHeaders) {
  return function (key, value) {
    $jsHeaders.set(key, value);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function toRaw$slambda_0($content, resultContinuation) {
  var i = new toRaw$slambda($content, resultContinuation);
  var l = function ($this$writer, $completion) {
    return i.l2d($this$writer, $completion);
  };
  l.$arity = 1;
  return l;
}
function readBodyNode$slambda_1($response, resultContinuation) {
  var i = new readBodyNode$slambda($response, resultContinuation);
  var l = function ($this$flow, $completion) {
    return i.r34($this$flow, $completion);
  };
  l.$arity = 1;
  return l;
}
function readBodyNode$slambda$slambda_0($this_writer, resultContinuation) {
  var i = new readBodyNode$slambda$slambda($this_writer, resultContinuation);
  var l = function (it, $completion) {
    return i.e35(it, $completion);
  };
  l.$arity = 1;
  return l;
}
function readBodyNode$slambda_2($data, resultContinuation) {
  var i = new readBodyNode$slambda_0($data, resultContinuation);
  var l = function ($this$writer, $completion) {
    return i.l2d($this$writer, $completion);
  };
  l.$arity = 1;
  return l;
}
var properties_initialized_JsEsModule_kt_aeypdx;
function _init_properties_JsEsModule_kt__313n25() {
  if (!properties_initialized_JsEsModule_kt_aeypdx) {
    properties_initialized_JsEsModule_kt_aeypdx = true;
    CLIENT_CONFIG = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('client-config');
  }
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsEsModule, 'JsEsModule');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($executeCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsEsModuleEngine, 'JsEsModuleEngine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(toRaw$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(readBodyNode$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(sam$kotlinx_coroutines_flow_FlowCollector$0, 'sam$kotlinx_coroutines_flow_FlowCollector$0', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_6__.FlowCollector26clgpmzihvke], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(readBodyNode$slambda$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(readBodyNode$slambda_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($toRawCOROUTINE$1);
//endregion
//region block: init
JsEsModule_instance = new JsEsModule();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=kotlin-actions-ktor-engine.mjs.map


/***/ }),

/***/ "./kotlin/kotlin-js.mjs":
/*!******************************!*\
  !*** ./kotlin/kotlin-js.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   awaitPromiseLike1nucgnh099rgw: () => (/* binding */ awaitPromiseLike),
/* harmony export */   toList16hak62x7tqkd: () => (/* binding */ toList_0)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");


//region block: imports
var constructor = (class IteratorYieldResult {
    static [Symbol.hasInstance](instance) {
        return instance && (typeof instance === 'object') && (instance.done === false)
    }
    }.prototype).constructor;
//endregion
//region block: pre-declaration
class AsyncIteratorAdapter {
  constructor(source) {
    this.a13_1 = source;
    this.b13_1 = null;
  }
}
class iteratorFor$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($source, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.k13_1 = $source;
    super(resultContinuation, $box);
  }
  p13($this$iterator, $completion) {
    var tmp = this.q13($this$iterator, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.p13(p1 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.SequenceScope1coiso86pqzq2 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            var tmp_0 = this;
            var tmp_1 = this.k13_1.next();
            tmp_0.m13_1 = tmp_1 instanceof constructor ? tmp_1 : null;
            if (this.m13_1 == null) {
              this.lb_1 = 4;
              var tmp_2 = this;
              continue $sm;
            } else {
              this.n13_1 = this.m13_1;
              this.lb_1 = 2;
              continue $sm;
            }

          case 2:
            this.o13_1 = this.n13_1;
            this.lb_1 = 3;
            suspendResult = this.l13_1.gi(this.o13_1.value, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.lb_1 = 1;
            continue $sm;
          case 4:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  q13($this$iterator, completion) {
    var i = new iteratorFor$slambda(this.k13_1, completion);
    i.l13_1 = $this$iterator;
    return i;
  }
}
//endregion
function get_POW() {
  _init_properties_BigInt_kt__agomkx();
  return POW;
}
var POW;
function get_n(_this__u8e3s4) {
  _init_properties_BigInt_kt__agomkx();
  return BigInt(_this__u8e3s4);
}
var properties_initialized_BigInt_kt_nhzooh;
function _init_properties_BigInt_kt__agomkx() {
  if (!properties_initialized_BigInt_kt_nhzooh) {
    properties_initialized_BigInt_kt_nhzooh = true;
    POW = Function('base', 'exponent', 'return base ** exponent');
  }
}
function invoke(_this__u8e3s4, p1, p2) {
  // Inline function 'kotlin.js.asDynamic' call
  return _this__u8e3s4(p1, p2);
}
function iteratorFor(source) {
  // Inline function 'js.iterable.AsyncIterator.iterator' call
  var this_0 = source[Symbol.asyncIterator]();
  return iteratorFor_0(this_0);
}
function iteratorFor_0(source) {
  return new AsyncIteratorAdapter(source);
}
function iteratorFor_1(source) {
  // Inline function 'js.iterable.JsIteratorLike.iterator' call
  var this_0 = source[Symbol.iterator]();
  return iteratorFor_2(this_0);
}
function toList_0(_this__u8e3s4) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toList383f556t1dixk)(toArray(_this__u8e3s4));
}
function toArray(_this__u8e3s4) {
  return Array.from(_this__u8e3s4);
}
function iteratorFor_2(source) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.iterator3f5i676wpaa3g)(iteratorFor$slambda_0(source, null));
}
function iteratorFor$slambda_0($source, resultContinuation) {
  var i = new iteratorFor$slambda($source, resultContinuation);
  var l = function ($this$iterator, $completion) {
    return i.p13($this$iterator, $completion);
  };
  l.$arity = 1;
  return l;
}
function awaitPromiseLike(p, $completion) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  return (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_1__.await2pwm8za8tntlx)(p, $completion);
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AsyncIteratorAdapter, 'AsyncIteratorAdapter', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(iteratorFor$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
//endregion
//region block: exports

//endregion

//# sourceMappingURL=kotlin-js.mjs.map


/***/ }),

/***/ "./kotlin/kotlin-kotlin-stdlib.mjs":
/*!*****************************************!*\
  !*** ./kotlin/kotlin-kotlin-stdlib.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbstractCoroutineContextElement2rpehg0hv5szw: () => (/* binding */ AbstractCoroutineContextElement),
/* harmony export */   AbstractCoroutineContextKey9xr9r6wlj5bm: () => (/* binding */ AbstractCoroutineContextKey),
/* harmony export */   ArrayDeque2dzc9uld4xi7n: () => (/* binding */ ArrayDeque),
/* harmony export */   ArrayList3it5z8td81qkl: () => (/* binding */ ArrayList),
/* harmony export */   BooleanCompanionObject_instance3nvf6tg77gv83: () => (/* binding */ BooleanCompanionObject_instance),
/* harmony export */   ByteCompanionObject_instancerp27gpfua1xf: () => (/* binding */ ByteCompanionObject_instance),
/* harmony export */   CancellationException3b36o9qz53rgr: () => (/* binding */ CancellationException),
/* harmony export */   Char19o2r8palgjof: () => (/* binding */ Char),
/* harmony export */   Char__compareTo_impl_ypi4mb25zzl63tc6wpg: () => (/* binding */ Char__compareTo_impl_ypi4mb),
/* harmony export */   Char__minus_impl_a2frrh1d5m178rbxqeu: () => (/* binding */ Char__minus_impl_a2frrh_0),
/* harmony export */   Char__minus_impl_a2frrhp8twy13wqz9c: () => (/* binding */ Char__minus_impl_a2frrh),
/* harmony export */   Char__plus_impl_qi7pgjue8oeapgr66d: () => (/* binding */ Char__plus_impl_qi7pgj),
/* harmony export */   Char__rangeTo_impl_tkncvp2up16j2a74v0: () => (/* binding */ Char__rangeTo_impl_tkncvp),
/* harmony export */   Char__toInt_impl_vasixd1g1ubcha2b2yr: () => (/* binding */ Char__toInt_impl_vasixd),
/* harmony export */   Collection1k04j3hzsbod0: () => (/* binding */ Collection),
/* harmony export */   Companion_getInstance1poxudqc1ru3p: () => (/* binding */ Companion_getInstance_17),
/* harmony export */   Companion_getInstance1pxg306pnafvz: () => (/* binding */ Companion_getInstance_1),
/* harmony export */   Companion_getInstance1z323tr26bmxd: () => (/* binding */ Companion_getInstance_16),
/* harmony export */   Companion_getInstance2b73c6hwbaiuw: () => (/* binding */ Companion_getInstance_13),
/* harmony export */   Companion_getInstance2g172z58li19e: () => (/* binding */ Companion_getInstance),
/* harmony export */   Companion_getInstance374brtr06v94p: () => (/* binding */ Companion_getInstance_15),
/* harmony export */   Companion_getInstanceojp2cj59jqir: () => (/* binding */ Companion_getInstance_18),
/* harmony export */   Companion_instance3fplhgf4ipvld: () => (/* binding */ Companion_instance_14),
/* harmony export */   Comparable198qfk8pnblz0: () => (/* binding */ Comparable),
/* harmony export */   Continuation1aa2oekvx7jm7: () => (/* binding */ Continuation),
/* harmony export */   ContinuationInterceptor2624y0vaqwxwf: () => (/* binding */ ContinuationInterceptor),
/* harmony export */   CoroutineImpl2sn3kjnwmfr10: () => (/* binding */ CoroutineImpl),
/* harmony export */   DeepRecursiveFunction3r49v8igsve1g: () => (/* binding */ DeepRecursiveFunction),
/* harmony export */   DeepRecursiveScope1pqaydvh4vdcu: () => (/* binding */ DeepRecursiveScope),
/* harmony export */   DoubleCompanionObject_instance2yqrcskeqd1tm: () => (/* binding */ DoubleCompanionObject_instance),
/* harmony export */   Duration5ynfiptaqcrg: () => (/* binding */ Duration),
/* harmony export */   Duration__toIsoString_impl_9h6wsm22wke42kgx7qi: () => (/* binding */ Duration__toIsoString_impl_9h6wsm),
/* harmony export */   Element2gr7ezmxqaln7: () => (/* binding */ Element),
/* harmony export */   EmptyCoroutineContext_getInstance2bxophqwsfm9n: () => (/* binding */ EmptyCoroutineContext_getInstance),
/* harmony export */   Entry2xmjmyutzoq3p: () => (/* binding */ Entry),
/* harmony export */   Enum3alwj03lh1n41: () => (/* binding */ Enum),
/* harmony export */   Error3ofk6owajcepa: () => (/* binding */ Error_0),
/* harmony export */   Exceptiondt2hlxn7j7vw: () => (/* binding */ Exception),
/* harmony export */   FloatCompanionObject_instance29smzmmxq0czz: () => (/* binding */ FloatCompanionObject_instance),
/* harmony export */   HashMap1a0ld5kgwhmhv: () => (/* binding */ HashMap),
/* harmony export */   HashSet2dzve9y63nf0v: () => (/* binding */ HashSet),
/* harmony export */   IllegalArgumentException2asla15b5jaob: () => (/* binding */ IllegalArgumentException),
/* harmony export */   IllegalStateExceptionkoljg5n0nrlr: () => (/* binding */ IllegalStateException),
/* harmony export */   IndexOutOfBoundsException1qfr429iumro0: () => (/* binding */ IndexOutOfBoundsException),
/* harmony export */   IntCompanionObject_instance2nvyd29rdzxbs: () => (/* binding */ IntCompanionObject_instance),
/* harmony export */   KClass1cc9rfeybg8hs: () => (/* binding */ KClass),
/* harmony export */   KProperty1ca4yb4wlo496: () => (/* binding */ KProperty1),
/* harmony export */   KTypeParameter1s8efufd4mbj5: () => (/* binding */ KTypeParameter),
/* harmony export */   Key_instance2d3ch37kcwr5h: () => (/* binding */ Key_instance),
/* harmony export */   KtList3hktaavzmj137: () => (/* binding */ KtList),
/* harmony export */   KtMap140uvy3s5zad8: () => (/* binding */ KtMap),
/* harmony export */   KtMutableList1beimitadwkna: () => (/* binding */ KtMutableList),
/* harmony export */   KtMutableMap1kqeifoi36kpz: () => (/* binding */ KtMutableMap),
/* harmony export */   KtMutableSetwuwn7k5m570a: () => (/* binding */ KtMutableSet),
/* harmony export */   KtSetjrjc7fhfd6b9: () => (/* binding */ KtSet),
/* harmony export */   LazyThreadSafetyMode_NONE_getInstance2ezxh11hvaa3w: () => (/* binding */ LazyThreadSafetyMode_NONE_getInstance),
/* harmony export */   LazyThreadSafetyMode_PUBLICATION_getInstance3hlj875zwihx0: () => (/* binding */ LazyThreadSafetyMode_PUBLICATION_getInstance),
/* harmony export */   LinkedHashMap1zhqxkxv3xnkl: () => (/* binding */ LinkedHashMap),
/* harmony export */   LinkedHashSet2tkztfx86kyx2: () => (/* binding */ LinkedHashSet),
/* harmony export */   Long2qws0ah9gnpki: () => (/* binding */ Long),
/* harmony export */   Paire9pteg33gng7: () => (/* binding */ Pair),
/* harmony export */   PrimitiveClasses_getInstance28ukyr6i8fs0q: () => (/* binding */ PrimitiveClasses_getInstance),
/* harmony export */   Result3t1vadv16kmzk: () => (/* binding */ Result),
/* harmony export */   Result__exceptionOrNull_impl_p6xea91phgcskd46fkx: () => (/* binding */ Result__exceptionOrNull_impl_p6xea9),
/* harmony export */   RuntimeException1r3t0zl97011n: () => (/* binding */ RuntimeException),
/* harmony export */   SequenceScope1coiso86pqzq2: () => (/* binding */ SequenceScope),
/* harmony export */   ShortCompanionObject_instanceyg0ko6hbt9iy: () => (/* binding */ ShortCompanionObject_instance),
/* harmony export */   StringBuildermazzzhj6kkai: () => (/* binding */ StringBuilder),
/* harmony export */   StringCompanionObject_instance2odz3s3zbrixa: () => (/* binding */ StringCompanionObject_instance),
/* harmony export */   THROW_CCE2g6jy02ryeudk: () => (/* binding */ THROW_CCE),
/* harmony export */   Triple1vhi3d0dgpnjb: () => (/* binding */ Triple),
/* harmony export */   UByteArray2qu4d6gwssdf9: () => (/* binding */ UByteArray),
/* harmony export */   UByteArray__get_impl_t5f3hv1rti50fc3n28n: () => (/* binding */ UByteArray__get_impl_t5f3hv),
/* harmony export */   UByteArray__set_impl_jvcicn3nfp6z28mafdl: () => (/* binding */ UByteArray__set_impl_jvcicn),
/* harmony export */   UByte__toString_impl_v72jg1vayrpmnw1b83: () => (/* binding */ UByte__toString_impl_v72jg),
/* harmony export */   UBytep4j7r1t64gz1: () => (/* binding */ UByte),
/* harmony export */   UInt1hthisrv6cndi: () => (/* binding */ UInt),
/* harmony export */   UIntArray__get_impl_gp5kza36yup2nd39c4u: () => (/* binding */ UIntArray__get_impl_gp5kza),
/* harmony export */   UIntArray__set_impl_7f2zu2251w30muf87a3: () => (/* binding */ UIntArray__set_impl_7f2zu2),
/* harmony export */   UIntArrayrp6cv44n5v4y: () => (/* binding */ UIntArray),
/* harmony export */   UInt__toString_impl_dbgl21aw2z4ehd4hej: () => (/* binding */ UInt__toString_impl_dbgl21),
/* harmony export */   ULong3f9k7s38t3rfp: () => (/* binding */ ULong),
/* harmony export */   ULongArray3nd0d80mdwjj8: () => (/* binding */ ULongArray),
/* harmony export */   ULongArray__get_impl_pr71q92hw91qq5r8j8r: () => (/* binding */ ULongArray__get_impl_pr71q9),
/* harmony export */   ULongArray__set_impl_z19mvh2aq1j5sku1dmt: () => (/* binding */ ULongArray__set_impl_z19mvh),
/* harmony export */   ULong__toString_impl_f9au7k297tbrrmikmfo: () => (/* binding */ ULong__toString_impl_f9au7k),
/* harmony export */   UShort26xnqty60t7le: () => (/* binding */ UShort),
/* harmony export */   UShortArray11avpmknxdgvv: () => (/* binding */ UShortArray),
/* harmony export */   UShortArray__get_impl_fnbhmx1hkqbtik3ch0r: () => (/* binding */ UShortArray__get_impl_fnbhmx),
/* harmony export */   UShortArray__set_impl_6d8whp278fyjknsyrb1: () => (/* binding */ UShortArray__set_impl_6d8whp),
/* harmony export */   UShort__toString_impl_edaoeen2j89el2cr4q: () => (/* binding */ UShort__toString_impl_edaoee),
/* harmony export */   Unit_instance104q5opgivhr8: () => (/* binding */ Unit_instance),
/* harmony export */   Unitkvevlwgzwiuc: () => (/* binding */ Unit),
/* harmony export */   UnsupportedOperationException2tkumpmhredt3: () => (/* binding */ UnsupportedOperationException),
/* harmony export */   VOID7hggqo3abtya: () => (/* binding */ VOID),
/* harmony export */   _Char___init__impl__6a9atx35f3p1971c8nj: () => (/* binding */ _Char___init__impl__6a9atx),
/* harmony export */   _Result___get_isFailure__impl__jpiriv1ffgeoyqwuzmr: () => (/* binding */ _Result___get_isFailure__impl__jpiriv),
/* harmony export */   _Result___get_value__impl__bjfvqg1uwg4i093qaqh: () => (/* binding */ _Result___get_value__impl__bjfvqg),
/* harmony export */   _Result___init__impl__xyqfz831xktsyjq1qrq: () => (/* binding */ _Result___init__impl__xyqfz8),
/* harmony export */   _UByteArray___get_size__impl__h6pkdv2rtsewp499qpr: () => (/* binding */ _UByteArray___get_size__impl__h6pkdv),
/* harmony export */   _UByteArray___get_storage__impl__d4kctt3s3xst15ytm22: () => (/* binding */ _UByteArray___get_storage__impl__d4kctt),
/* harmony export */   _UByteArray___init__impl__ip4y9ngbudn9tzlaub: () => (/* binding */ _UByteArray___init__impl__ip4y9n_0),
/* harmony export */   _UByteArray___init__impl__ip4y9nsjfjryamagcs: () => (/* binding */ _UByteArray___init__impl__ip4y9n),
/* harmony export */   _UByte___get_data__impl__jof9qr9d98aajdmpjx: () => (/* binding */ _UByte___get_data__impl__jof9qr),
/* harmony export */   _UByte___init__impl__g9hnc41eipfvebfo5lc: () => (/* binding */ _UByte___init__impl__g9hnc4),
/* harmony export */   _UIntArray___get_size__impl__r6l8ci1bugw7olx20y1: () => (/* binding */ _UIntArray___get_size__impl__r6l8ci),
/* harmony export */   _UIntArray___get_storage__impl__92a0v0xnuzo89qkbti: () => (/* binding */ _UIntArray___get_storage__impl__92a0v0),
/* harmony export */   _UIntArray___init__impl__ghjpc61vzqu2w8hzlmo: () => (/* binding */ _UIntArray___init__impl__ghjpc6_0),
/* harmony export */   _UIntArray___init__impl__ghjpc637jks44g8hkay: () => (/* binding */ _UIntArray___init__impl__ghjpc6),
/* harmony export */   _UInt___get_data__impl__f0vqqw1vaw6fgw4kwl0: () => (/* binding */ _UInt___get_data__impl__f0vqqw),
/* harmony export */   _UInt___init__impl__l7qpdl2soskspn8hzmt: () => (/* binding */ _UInt___init__impl__l7qpdl),
/* harmony export */   _ULongArray___get_size__impl__ju6dtr2lupre3hp1i1j: () => (/* binding */ _ULongArray___get_size__impl__ju6dtr),
/* harmony export */   _ULongArray___get_storage__impl__28e64j2vtqnej9gwyzk: () => (/* binding */ _ULongArray___get_storage__impl__28e64j),
/* harmony export */   _ULongArray___init__impl__twm1l3295zpff12hmq5: () => (/* binding */ _ULongArray___init__impl__twm1l3),
/* harmony export */   _ULongArray___init__impl__twm1l3dtyhn7dp1s1o: () => (/* binding */ _ULongArray___init__impl__twm1l3_0),
/* harmony export */   _ULong___get_data__impl__fggpzb1fgc8uwlfcfgw: () => (/* binding */ _ULong___get_data__impl__fggpzb),
/* harmony export */   _ULong___init__impl__c78o9k3sq3egh1wtk64: () => (/* binding */ _ULong___init__impl__c78o9k),
/* harmony export */   _UShortArray___get_size__impl__jqto1b23l9nxz4w47e3: () => (/* binding */ _UShortArray___get_size__impl__jqto1b),
/* harmony export */   _UShortArray___get_storage__impl__t2jpv51ia7tudnx2pys: () => (/* binding */ _UShortArray___get_storage__impl__t2jpv5),
/* harmony export */   _UShortArray___init__impl__9b26ef1qu918hp04ryp: () => (/* binding */ _UShortArray___init__impl__9b26ef_0),
/* harmony export */   _UShortArray___init__impl__9b26ef2dcolj1kwzob7: () => (/* binding */ _UShortArray___init__impl__9b26ef),
/* harmony export */   _UShort___get_data__impl__g02453juyrdkc7n6xd: () => (/* binding */ _UShort___get_data__impl__g0245),
/* harmony export */   _UShort___init__impl__jigrne3hvr35xwb2tau: () => (/* binding */ _UShort___init__impl__jigrne),
/* harmony export */   addAll1k27qatfgp3k5: () => (/* binding */ addAll),
/* harmony export */   addSuppressedu5jwjfvsc039: () => (/* binding */ addSuppressed),
/* harmony export */   anyToString3ho3k49fc56mj: () => (/* binding */ anyToString),
/* harmony export */   arrayIterator3lgwvgteckzhv: () => (/* binding */ arrayIterator),
/* harmony export */   arrayOf1akklvh2at202: () => (/* binding */ arrayOf),
/* harmony export */   asList2ho2pewtsfvv: () => (/* binding */ asList),
/* harmony export */   booleanArray2jdug9b51huk7: () => (/* binding */ booleanArray),
/* harmony export */   boxApply1qmzdb3dh90hg: () => (/* binding */ boxApply),
/* harmony export */   captureStack1fzi4aczwc4hg: () => (/* binding */ captureStack),
/* harmony export */   charArray2ujmm1qusno00: () => (/* binding */ charArray),
/* harmony export */   charArrayOf27f4r3dozbrk1: () => (/* binding */ charArrayOf),
/* harmony export */   charSequenceGet1vxk1y5n17t1z: () => (/* binding */ charSequenceGet),
/* harmony export */   charSequenceLength3278n89t01tmv: () => (/* binding */ charSequenceLength),
/* harmony export */   charSequenceSubSequence1iwpdba8s3jc7: () => (/* binding */ charSequenceSubSequence),
/* harmony export */   coerceAtLeast2bkz8m9ik7hep: () => (/* binding */ coerceAtLeast),
/* harmony export */   coerceAtMost322komnqp70ag: () => (/* binding */ coerceAtMost),
/* harmony export */   coerceAtMostmgknbongtqt: () => (/* binding */ coerceAtMost_0),
/* harmony export */   coerceIn302bduskdb54x: () => (/* binding */ coerceIn),
/* harmony export */   collectionSizeOrDefault36dulx8yinfqm: () => (/* binding */ collectionSizeOrDefault),
/* harmony export */   compareValues1n2ayl87ihzfk: () => (/* binding */ compareValues),
/* harmony export */   concatToString2syawgu50khxi: () => (/* binding */ concatToString),
/* harmony export */   contains2el4s70rdq4ld: () => (/* binding */ contains_5),
/* harmony export */   contains3ue2qo8xhmpf1: () => (/* binding */ contains_6),
/* harmony export */   contentEqualsaf55p28mnw74: () => (/* binding */ contentEquals),
/* harmony export */   contentHashCode2i020q5tbeh2s: () => (/* binding */ contentHashCode),
/* harmony export */   copyOf2ng0t8oizk6it: () => (/* binding */ copyOf_7),
/* harmony export */   copyOf2p23ljc5f5ea3: () => (/* binding */ copyOf),
/* harmony export */   copyOf37mht4mx7mjgh: () => (/* binding */ copyOf_6),
/* harmony export */   copyOf39s58md6y6rn6: () => (/* binding */ copyOf_4),
/* harmony export */   copyOf3rutauicler23: () => (/* binding */ copyOf_3),
/* harmony export */   copyOf9mbsebmgnw4t: () => (/* binding */ copyOf_2),
/* harmony export */   copyOfgossjg6lh6js: () => (/* binding */ copyOf_0),
/* harmony export */   copyOfq9pcgcgbldck: () => (/* binding */ copyOf_1),
/* harmony export */   copyOfwy6h3t5vzqpl: () => (/* binding */ copyOf_5),
/* harmony export */   copyToArray2j022khrow2yi: () => (/* binding */ copyToArray),
/* harmony export */   countTrailingZeroBits1k55x07cygoff: () => (/* binding */ countTrailingZeroBits),
/* harmony export */   createCoroutineUnintercepted3gya308dmbbtg: () => (/* binding */ createCoroutineUnintercepted),
/* harmony export */   createFailure8paxfkfa5dc7: () => (/* binding */ createFailure),
/* harmony export */   createKType1lgox3mzhchp5: () => (/* binding */ createKType),
/* harmony export */   createThis2j2avj17cvnv2: () => (/* binding */ createThis),
/* harmony export */   decodeToString1x4faah2liw2p: () => (/* binding */ decodeToString),
/* harmony export */   downTo39qhfeycepm1j: () => (/* binding */ downTo),
/* harmony export */   dropLast1vpiyky649o34: () => (/* binding */ dropLast),
/* harmony export */   emptyList1g2z5xcrvp2zy: () => (/* binding */ emptyList),
/* harmony export */   emptyMapr06gerzljqtm: () => (/* binding */ emptyMap),
/* harmony export */   emptySetcxexqki71qfa: () => (/* binding */ emptySet),
/* harmony export */   encodeToByteArray1onwao0uakjfh: () => (/* binding */ encodeToByteArray),
/* harmony export */   endsWith3cq61xxngobwh: () => (/* binding */ endsWith),
/* harmony export */   ensureNotNull1e947j3ixpazm: () => (/* binding */ ensureNotNull),
/* harmony export */   equals2au1ep9vhcato: () => (/* binding */ equals),
/* harmony export */   equals2v6cggk171b6e: () => (/* binding */ equals_0),
/* harmony export */   fillArrayVali8eppxapiek4: () => (/* binding */ fillArrayVal),
/* harmony export */   filterNotNull3qfgcwmxhwfxe: () => (/* binding */ filterNotNull),
/* harmony export */   findAssociatedObject1kb88g16k1goa: () => (/* binding */ findAssociatedObject),
/* harmony export */   first3kg261hmihapu: () => (/* binding */ first_1),
/* harmony export */   first58ocm7j58k3q: () => (/* binding */ first),
/* harmony export */   firstOrNull1982767dljvdy: () => (/* binding */ firstOrNull_0),
/* harmony export */   firstOrNull1gk7vzkf4h3nq: () => (/* binding */ firstOrNull),
/* harmony export */   fold36i9psb7d5v48: () => (/* binding */ fold),
/* harmony export */   get6d5x931vk0s: () => (/* binding */ get),
/* harmony export */   getBooleanHashCode1bbj3u6b3v0a7: () => (/* binding */ getBooleanHashCode),
/* harmony export */   getKClass1s3j9wy1cofik: () => (/* binding */ getKClass),
/* harmony export */   getKClassFromExpression3vpejubogshaw: () => (/* binding */ getKClassFromExpression),
/* harmony export */   getPropertyCallableRef1ajb9in178r5r: () => (/* binding */ getPropertyCallableRef),
/* harmony export */   getStringHashCode26igk1bx568vk: () => (/* binding */ getStringHashCode),
/* harmony export */   getValue48kllevslyh6: () => (/* binding */ getValue),
/* harmony export */   get_COROUTINE_SUSPENDED3ujt3p13qm4iy: () => (/* binding */ get_COROUTINE_SUSPENDED),
/* harmony export */   get_EmptyContinuationn1rwa6yr6j5w: () => (/* binding */ get_EmptyContinuation),
/* harmony export */   get_indices377latqcai313: () => (/* binding */ get_indices_0),
/* harmony export */   get_indicesc04v40g017hw: () => (/* binding */ get_indices),
/* harmony export */   get_js1ale1wr4fbvs0: () => (/* binding */ get_js),
/* harmony export */   get_lastIndex1y2f6o9u8hnf7: () => (/* binding */ get_lastIndex_1),
/* harmony export */   get_lastIndex1yw0x4k50k51w: () => (/* binding */ get_lastIndex_2),
/* harmony export */   get_lastIndexld83bqhfgcdd: () => (/* binding */ get_lastIndex_3),
/* harmony export */   getxe4seun860fg: () => (/* binding */ get_0),
/* harmony export */   hashCodeq5arwsb9dgti: () => (/* binding */ hashCode),
/* harmony export */   indexOf1xbs558u7wr52: () => (/* binding */ indexOf_4),
/* harmony export */   indexOfAny2ijjuuzpljsyd: () => (/* binding */ indexOfAny),
/* harmony export */   indexOfwa4w6635jewi: () => (/* binding */ indexOf_5),
/* harmony export */   initMetadataForClassbxx6q50dy2s7: () => (/* binding */ initMetadataForClass),
/* harmony export */   initMetadataForCompanion1wyw17z38v6ac: () => (/* binding */ initMetadataForCompanion),
/* harmony export */   initMetadataForCoroutine1i7lbatuf5bnt: () => (/* binding */ initMetadataForCoroutine),
/* harmony export */   initMetadataForInterface1egvbzx539z91: () => (/* binding */ initMetadataForInterface),
/* harmony export */   initMetadataForLambda3af3he42mmnh: () => (/* binding */ initMetadataForLambda),
/* harmony export */   initMetadataForObject1cxne3s9w65el: () => (/* binding */ initMetadataForObject),
/* harmony export */   intercepted2ogpsikxxj4u0: () => (/* binding */ intercepted),
/* harmony export */   invoke246lvi6tzooz1: () => (/* binding */ invoke),
/* harmony export */   isArray1hxjqtqy632bc: () => (/* binding */ isArray),
/* harmony export */   isBlank1dvkhjjvox3p0: () => (/* binding */ isBlank),
/* harmony export */   isBooleanArray35llghle4c6w1: () => (/* binding */ isBooleanArray),
/* harmony export */   isByteArray4nnzfn1x4o3w: () => (/* binding */ isByteArray),
/* harmony export */   isCharArray21auq5hbrg68m: () => (/* binding */ isCharArray),
/* harmony export */   isCharSequence1ju9jr1w86plq: () => (/* binding */ isCharSequence),
/* harmony export */   isDoubleArray1wyh4nyf7pjxn: () => (/* binding */ isDoubleArray),
/* harmony export */   isFinite1tx0gn65nl9tj: () => (/* binding */ isFinite_0),
/* harmony export */   isFinite2t9l5a275mxm6: () => (/* binding */ isFinite),
/* harmony export */   isFloatArrayjjscnqphw92j: () => (/* binding */ isFloatArray),
/* harmony export */   isHighSurrogate11jfjw70ar0zf: () => (/* binding */ isHighSurrogate),
/* harmony export */   isIntArrayeijsubfngq38: () => (/* binding */ isIntArray),
/* harmony export */   isInterface3d6p8outrmvmk: () => (/* binding */ isInterface),
/* harmony export */   isLongArray2fdt3z7yu3ef: () => (/* binding */ isLongArray),
/* harmony export */   isLowSurrogateujxcv7hjn4ma: () => (/* binding */ isLowSurrogate),
/* harmony export */   isLowerCase16nv9n55l9laa: () => (/* binding */ isLowerCase),
/* harmony export */   isNaNymqb93xtq8w8: () => (/* binding */ isNaN_0),
/* harmony export */   isShortArraywz30zxwtqi8h: () => (/* binding */ isShortArray),
/* harmony export */   isSurrogatewe8xicw8z84n: () => (/* binding */ isSurrogate),
/* harmony export */   isSuspendFunction153vlp5l2npj9: () => (/* binding */ isSuspendFunction),
/* harmony export */   isWhitespace25occ8z1ed1s9: () => (/* binding */ isWhitespace),
/* harmony export */   iterator3f5i676wpaa3g: () => (/* binding */ iterator),
/* harmony export */   joinTo3lkanfaxbzac2: () => (/* binding */ joinTo_0),
/* harmony export */   joinToString1cxrrlmo0chqs: () => (/* binding */ joinToString_0),
/* harmony export */   last1vo29oleiqj36: () => (/* binding */ last),
/* harmony export */   last2n4gf5az1lkn4: () => (/* binding */ last_0),
/* harmony export */   lastIndexOf2d52xhix5ymjr: () => (/* binding */ lastIndexOf),
/* harmony export */   lastOrNull1aq5oz189qoe1: () => (/* binding */ lastOrNull),
/* harmony export */   lazy1261dae0bgscp: () => (/* binding */ lazy_0),
/* harmony export */   lazy2hsh8ze7j6ikd: () => (/* binding */ lazy),
/* harmony export */   listOf1jh22dvmctj1r: () => (/* binding */ listOf_0),
/* harmony export */   listOfvhqybd2zx248: () => (/* binding */ listOf),
/* harmony export */   longArray288a0fctlmjmj: () => (/* binding */ longArray),
/* harmony export */   mapCapacity1h45rc3eh9p2l: () => (/* binding */ mapCapacity),
/* harmony export */   mapOf1xd03cq9cnmy8: () => (/* binding */ mapOf_0),
/* harmony export */   minusKey2uxs00uz5ceqp: () => (/* binding */ minusKey_0),
/* harmony export */   minusKeyyqanvso9aovh: () => (/* binding */ minusKey),
/* harmony export */   mutableListOf6oorvk2mtdmp: () => (/* binding */ mutableListOf),
/* harmony export */   noWhenBranchMatchedException2a6r7ubxgky5j: () => (/* binding */ noWhenBranchMatchedException),
/* harmony export */   numberToChar93r9buh19yek: () => (/* binding */ numberToChar),
/* harmony export */   numberToLong1a4cndvg6c52s: () => (/* binding */ numberToLong),
/* harmony export */   plus17rl43at52ays: () => (/* binding */ plus_4),
/* harmony export */   plus1ogy4liedzq5j: () => (/* binding */ plus_3),
/* harmony export */   plus20p0vtfmu0596: () => (/* binding */ plus_0),
/* harmony export */   plus310ted5e4i90h: () => (/* binding */ plus_1),
/* harmony export */   plus39kp8wyage607: () => (/* binding */ plus_2),
/* harmony export */   plusolev77jfy5r9: () => (/* binding */ plus),
/* harmony export */   println2shhhgwwt4c61: () => (/* binding */ println),
/* harmony export */   protoOf180f3jzyo7rfj: () => (/* binding */ protoOf),
/* harmony export */   removeFirstOrNull15yg2tczrh8a7: () => (/* binding */ removeFirstOrNull),
/* harmony export */   removeLast3759euu1xvfa3: () => (/* binding */ removeLast),
/* harmony export */   replaceqbix900hl8kl: () => (/* binding */ replace),
/* harmony export */   resume1307kgocbn6ch: () => (/* binding */ resume),
/* harmony export */   resumeWithExceptionlaw2x581week: () => (/* binding */ resumeWithException),
/* harmony export */   reversed22y3au42jl32b: () => (/* binding */ reversed),
/* harmony export */   roundToInt1ue8x8yshtznx: () => (/* binding */ roundToInt),
/* harmony export */   setOf1u3mizs95ngxo: () => (/* binding */ setOf),
/* harmony export */   setOf45ia9pnfhe90: () => (/* binding */ setOf_0),
/* harmony export */   setPropertiesToThrowableInstance1w2jjvl9y77yc: () => (/* binding */ setPropertiesToThrowableInstance),
/* harmony export */   single29ec4rh52687r: () => (/* binding */ single_2),
/* harmony export */   singleOrNullrknfaxokm1sl: () => (/* binding */ singleOrNull),
/* harmony export */   sortedWith2csnbbb21k0lg: () => (/* binding */ sortedWith),
/* harmony export */   split3d3yeauc4rm2n: () => (/* binding */ split),
/* harmony export */   startCoroutine327fwvtqvedik: () => (/* binding */ startCoroutine),
/* harmony export */   startsWith1bgirhbedtv2y: () => (/* binding */ startsWith_1),
/* harmony export */   startsWith26w8qjqapeeq6: () => (/* binding */ startsWith),
/* harmony export */   step18s9qzr5xwxat: () => (/* binding */ step),
/* harmony export */   take9j4462mea726: () => (/* binding */ take_0),
/* harmony export */   throwUninitializedPropertyAccessExceptionyynx7gkm73wd: () => (/* binding */ throwUninitializedPropertyAccessException),
/* harmony export */   titlecase36e9fbud5gg4t: () => (/* binding */ titlecase),
/* harmony export */   to2cs3ny02qtbcb: () => (/* binding */ to),
/* harmony export */   toBooleanArray2u3qw7fjwsmuh: () => (/* binding */ toBooleanArray),
/* harmony export */   toByte4i43936u611k: () => (/* binding */ toByte),
/* harmony export */   toDouble1kn912gjoizjp: () => (/* binding */ toDouble),
/* harmony export */   toDoubleOrNullkxwozihadygj: () => (/* binding */ toDoubleOrNull),
/* harmony export */   toHashSet1qrcsl3g8ugc8: () => (/* binding */ toHashSet),
/* harmony export */   toInt2q8uldh7sc951: () => (/* binding */ toInt),
/* harmony export */   toIntOrNull3w2d066r9pvwm: () => (/* binding */ toIntOrNull),
/* harmony export */   toList2zksu85ukrmi: () => (/* binding */ toList_1),
/* harmony export */   toList383f556t1dixk: () => (/* binding */ toList),
/* harmony export */   toList3jhuyej2anx2q: () => (/* binding */ toList_0),
/* harmony export */   toLongOrNullutqivezb0wx1: () => (/* binding */ toLongOrNull),
/* harmony export */   toLongkk4waq8msp1k: () => (/* binding */ toLong_0),
/* harmony export */   toLongw1zpgk99d84b: () => (/* binding */ toLong),
/* harmony export */   toMap1vec9topfei08: () => (/* binding */ toMap),
/* harmony export */   toMutableList20rdgwi7d3cwi: () => (/* binding */ toMutableList_1),
/* harmony export */   toMutableSetjdpdbr9jsqq8: () => (/* binding */ toMutableSet),
/* harmony export */   toSet2orjxp16sotqu: () => (/* binding */ toSet_0),
/* harmony export */   toShort36kaw0zjdq3ex: () => (/* binding */ toShort),
/* harmony export */   toString1h6jjoch8cjt8: () => (/* binding */ toString_2),
/* harmony export */   toString1pkumu07cwy4m: () => (/* binding */ toString_1),
/* harmony export */   toString26mv3gzfo7fn: () => (/* binding */ toString),
/* harmony export */   toString30pk9tzaqopn: () => (/* binding */ toString_0),
/* harmony export */   toUByteh6p4wmqswkrs: () => (/* binding */ toUByte),
/* harmony export */   toUInt21lx0mz8wkp7c: () => (/* binding */ toUInt),
/* harmony export */   toULong266mnyksbttkw: () => (/* binding */ toULong),
/* harmony export */   toULongOrNullojoyxi0i9tgj: () => (/* binding */ toULongOrNull),
/* harmony export */   toUShort7yqspfnhrot4: () => (/* binding */ toUShort),
/* harmony export */   trim11nh7r46at6sx: () => (/* binding */ trim),
/* harmony export */   trimIndent1qytc1wvt8suh: () => (/* binding */ trimIndent),
/* harmony export */   trimMarginhyd3fsmh8iev: () => (/* binding */ trimMargin),
/* harmony export */   until1jbpn0z3f8lbg: () => (/* binding */ until),
/* harmony export */   withIndex3s8q7w1g0hyfn: () => (/* binding */ withIndex)
/* harmony export */ });
//region block: polyfills
if (typeof Math.imul === 'undefined') {
  Math.imul = function imul(a, b) {
    return (a & 4.29490176E9) * (b & 65535) + (a & 65535) * (b | 0) | 0;
  };
}
if (typeof ArrayBuffer.isView === 'undefined') {
  ArrayBuffer.isView = function (a) {
    return a != null && a.__proto__ != null && a.__proto__.__proto__ === Int8Array.prototype.__proto__;
  };
}
if (typeof Array.prototype.fill === 'undefined') {
  // Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill#Polyfill
  Object.defineProperty(Array.prototype, 'fill', {value: function (value) {
    // Steps 1-2.
    if (this == null) {
      throw new TypeError('this is null or not defined');
    }
    var O = Object(this); // Steps 3-5.
    var len = O.length >>> 0; // Steps 6-7.
    var start = arguments[1];
    var relativeStart = start >> 0; // Step 8.
    var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len); // Steps 9-10.
    var end = arguments[2];
    var relativeEnd = end === undefined ? len : end >> 0; // Step 11.
    var finalValue = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len); // Step 12.
    while (k < finalValue) {
      O[k] = value;
      k++;
    }
    ; // Step 13.
    return O;
  }});
}
[Int8Array, Int16Array, Uint16Array, Int32Array, Float32Array, Float64Array].forEach(function (TypedArray) {
  if (typeof TypedArray.prototype.fill === 'undefined') {
    Object.defineProperty(TypedArray.prototype, 'fill', {value: Array.prototype.fill});
  }
});
if (typeof Math.clz32 === 'undefined') {
  Math.clz32 = function (log, LN2) {
    return function (x) {
      var asUint = x >>> 0;
      if (asUint === 0) {
        return 32;
      }
      return 31 - (log(asUint) / LN2 | 0) | 0; // the "| 0" acts like math.floor
    };
  }(Math.log, Math.LN2);
}
if (typeof String.prototype.startsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'startsWith', {value: function (searchString, position) {
    position = position || 0;
    return this.lastIndexOf(searchString, position) === position;
  }});
}
if (typeof String.prototype.endsWith === 'undefined') {
  Object.defineProperty(String.prototype, 'endsWith', {value: function (searchString, position) {
    var subjectString = this.toString();
    if (position === undefined || position > subjectString.length) {
      position = subjectString.length;
    }
    position -= searchString.length;
    var lastIndex = subjectString.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  }});
}
//endregion
//region block: imports
var imul_0 = Math.imul;
var isView = ArrayBuffer.isView;
var clz32 = Math.clz32;
//endregion
//region block: pre-declaration
class CharSequence {}
class Comparable {}
class Number_0 {}
class Unit {
  toString() {
    return 'kotlin.Unit';
  }
}
class _no_name_provided__qut3iv {
  constructor($this_asIterable) {
    this.u1_1 = $this_asIterable;
  }
  w() {
    // Inline function 'kotlin.sequences.asIterable.<anonymous>' call
    return this.u1_1.w();
  }
}
class Companion {
  constructor() {
    Companion_instance = this;
    this.w1_1 = _Char___init__impl__6a9atx(0);
    this.x1_1 = _Char___init__impl__6a9atx(65535);
    this.y1_1 = _Char___init__impl__6a9atx(55296);
    this.z1_1 = _Char___init__impl__6a9atx(56319);
    this.a2_1 = _Char___init__impl__6a9atx(56320);
    this.b2_1 = _Char___init__impl__6a9atx(57343);
    this.c2_1 = _Char___init__impl__6a9atx(55296);
    this.d2_1 = _Char___init__impl__6a9atx(57343);
    this.e2_1 = 2;
    this.f2_1 = 16;
  }
}
class Char {
  constructor(value) {
    Companion_getInstance();
    this.v1_1 = value;
  }
  g2(other) {
    return Char__compareTo_impl_ypi4mb(this.v1_1, other);
  }
  d(other) {
    return Char__compareTo_impl_ypi4mb_0(this, other);
  }
  toString() {
    return toString(this.v1_1);
  }
  equals(other) {
    return Char__equals_impl_x6719k(this.v1_1, other);
  }
  hashCode() {
    return Char__hashCode_impl_otmys(this.v1_1);
  }
}
class Collection {}
class KtList {}
class KtSet {}
class KtMutableSet {}
class KtMutableList {}
class Entry {}
class KtMap {}
class KtMutableMap {}
class Companion_0 {}
class Enum {
  constructor(name, ordinal) {
    this.w2_1 = name;
    this.x2_1 = ordinal;
  }
  y2(other) {
    return compareTo(this.x2_1, other.x2_1);
  }
  d(other) {
    return this.y2(other instanceof Enum ? other : THROW_CCE());
  }
  equals(other) {
    return this === other;
  }
  hashCode() {
    return identityHashCode(this);
  }
  toString() {
    return this.w2_1;
  }
}
class Companion_1 {
  constructor() {
    Companion_instance_1 = this;
    this.z2_1 = new Long(0, -2147483648);
    this.a3_1 = new Long(-1, 2147483647);
    this.b3_1 = 8;
    this.c3_1 = 64;
  }
}
class Long extends Number_0 {
  constructor(low, high) {
    Companion_getInstance_1();
    super();
    this.o1_1 = low;
    this.p1_1 = high;
  }
  q1(other) {
    return compare(this, other);
  }
  d(other) {
    return this.q1(other instanceof Long ? other : THROW_CCE());
  }
  d3(other) {
    return add(this, other);
  }
  e3(other) {
    return subtract(this, other);
  }
  f3(other) {
    return multiply(this, other);
  }
  g3(other) {
    return divide(this, other);
  }
  h3(other) {
    return modulo(this, other);
  }
  i3() {
    return this.d3(new Long(1, 0));
  }
  j3() {
    return this.e3(new Long(1, 0));
  }
  k3() {
    return this.l3().d3(new Long(1, 0));
  }
  m3(bitCount) {
    return shiftLeft(this, bitCount);
  }
  n3(bitCount) {
    return shiftRight(this, bitCount);
  }
  o3(bitCount) {
    return shiftRightUnsigned(this, bitCount);
  }
  p3(other) {
    return new Long(this.o1_1 & other.o1_1, this.p1_1 & other.p1_1);
  }
  q3(other) {
    return new Long(this.o1_1 | other.o1_1, this.p1_1 | other.p1_1);
  }
  r3(other) {
    return new Long(this.o1_1 ^ other.o1_1, this.p1_1 ^ other.p1_1);
  }
  l3() {
    return new Long(~this.o1_1, ~this.p1_1);
  }
  s3() {
    return toByte(this.o1_1);
  }
  t3() {
    return toShort(this.o1_1);
  }
  u3() {
    return this.o1_1;
  }
  v3() {
    return toNumber(this);
  }
  toString() {
    return toStringImpl(this, 10);
  }
  equals(other) {
    var tmp;
    if (other instanceof Long) {
      tmp = equalsLong(this, other);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return hashCode_0(this);
  }
  valueOf() {
    return this.v3();
  }
}
class arrayIterator$1 {
  constructor($array) {
    this.x3_1 = $array;
    this.w3_1 = 0;
  }
  x() {
    return !(this.w3_1 === this.x3_1.length);
  }
  y() {
    var tmp;
    if (!(this.w3_1 === this.x3_1.length)) {
      var tmp1 = this.w3_1;
      this.w3_1 = tmp1 + 1 | 0;
      tmp = this.x3_1[tmp1];
    } else {
      throw NoSuchElementException.k('' + this.w3_1);
    }
    return tmp;
  }
}
class ByteCompanionObject {
  constructor() {
    this.MIN_VALUE = -128;
    this.MAX_VALUE = 127;
    this.SIZE_BYTES = 1;
    this.SIZE_BITS = 8;
  }
  u4() {
    return this.MIN_VALUE;
  }
  v4() {
    return this.MAX_VALUE;
  }
  w4() {
    return this.SIZE_BYTES;
  }
  x4() {
    return this.SIZE_BITS;
  }
}
class ShortCompanionObject {
  constructor() {
    this.MIN_VALUE = -32768;
    this.MAX_VALUE = 32767;
    this.SIZE_BYTES = 2;
    this.SIZE_BITS = 16;
  }
  u4() {
    return this.MIN_VALUE;
  }
  v4() {
    return this.MAX_VALUE;
  }
  w4() {
    return this.SIZE_BYTES;
  }
  x4() {
    return this.SIZE_BITS;
  }
}
class IntCompanionObject {
  constructor() {
    this.MIN_VALUE = -2147483648;
    this.MAX_VALUE = 2147483647;
    this.SIZE_BYTES = 4;
    this.SIZE_BITS = 32;
  }
  u4() {
    return this.MIN_VALUE;
  }
  v4() {
    return this.MAX_VALUE;
  }
  w4() {
    return this.SIZE_BYTES;
  }
  x4() {
    return this.SIZE_BITS;
  }
}
class FloatCompanionObject {
  constructor() {
    this.MIN_VALUE = 1.4E-45;
    this.MAX_VALUE = 3.4028235E38;
    this.POSITIVE_INFINITY = Infinity;
    this.NEGATIVE_INFINITY = -Infinity;
    this.NaN = NaN;
    this.SIZE_BYTES = 4;
    this.SIZE_BITS = 32;
  }
  u4() {
    return this.MIN_VALUE;
  }
  v4() {
    return this.MAX_VALUE;
  }
  y4() {
    return this.POSITIVE_INFINITY;
  }
  z4() {
    return this.NEGATIVE_INFINITY;
  }
  a5() {
    return this.NaN;
  }
  w4() {
    return this.SIZE_BYTES;
  }
  x4() {
    return this.SIZE_BITS;
  }
}
class DoubleCompanionObject {
  constructor() {
    this.MIN_VALUE = 4.9E-324;
    this.MAX_VALUE = 1.7976931348623157E308;
    this.POSITIVE_INFINITY = Infinity;
    this.NEGATIVE_INFINITY = -Infinity;
    this.NaN = NaN;
    this.SIZE_BYTES = 8;
    this.SIZE_BITS = 64;
  }
  u4() {
    return this.MIN_VALUE;
  }
  v4() {
    return this.MAX_VALUE;
  }
  y4() {
    return this.POSITIVE_INFINITY;
  }
  z4() {
    return this.NEGATIVE_INFINITY;
  }
  a5() {
    return this.NaN;
  }
  w4() {
    return this.SIZE_BYTES;
  }
  x4() {
    return this.SIZE_BITS;
  }
}
class StringCompanionObject {}
class BooleanCompanionObject {}
class Digit {
  constructor() {
    Digit_instance = this;
    var tmp = this;
    // Inline function 'kotlin.intArrayOf' call
    tmp.e5_1 = new Int32Array([48, 1632, 1776, 1984, 2406, 2534, 2662, 2790, 2918, 3046, 3174, 3302, 3430, 3558, 3664, 3792, 3872, 4160, 4240, 6112, 6160, 6470, 6608, 6784, 6800, 6992, 7088, 7232, 7248, 42528, 43216, 43264, 43472, 43504, 43600, 44016, 65296]);
  }
}
class Letter {
  constructor() {
    Letter_instance = this;
    var toBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    var fromBase64 = new Int32Array(128);
    var inductionVariable = 0;
    var last = charSequenceLength(toBase64) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.code' call
        var this_0 = charSequenceGet(toBase64, i);
        fromBase64[Char__toInt_impl_vasixd(this_0)] = i;
      }
       while (inductionVariable <= last);
    var rangeStartDiff = 'hCgBpCQGYHZH5BRpBPPPPPPRMP5BPPlCPP6BkEPPPPcPXPzBvBrB3BOiDoBHwD+E3DauCnFmBmB2D6E1BlBTiBmBlBP5BhBiBrBvBjBqBnBPRtBiCmCtBlB0BmB5BiB7BmBgEmChBZgCoEoGVpBSfRhBPqKQ2BwBYoFgB4CJuTiEvBuCuDrF5DgEgFlJ1DgFmBQtBsBRGsB+BPiBlD1EIjDPRPPPQPPPPPGQSQS/DxENVNU+B9zCwBwBPPCkDPNnBPqDYY1R8B7FkFgTgwGgwUwmBgKwBuBScmEP/BPPPPPPrBP8B7F1B/ErBqC6B7BiBmBfQsBUwCw/KwqIwLwETPcPjQgJxFgBlBsD';
    var diff = decodeVarLenBase64(rangeStartDiff, fromBase64, 222);
    var start = new Int32Array(diff.length);
    var inductionVariable_0 = 0;
    var last_0 = diff.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (i_0 === 0) {
          start[i_0] = diff[i_0];
        } else {
          start[i_0] = start[i_0 - 1 | 0] + diff[i_0] | 0;
        }
      }
       while (inductionVariable_0 <= last_0);
    this.f5_1 = start;
    var rangeLength = 'aaMBXHYH5BRpBPPPPPPRMP5BPPlCPPzBDOOPPcPXPzBvBjB3BOhDmBBpB7DoDYxB+EiBP1DoExBkBQhBekBPmBgBhBctBiBMWOOXhCsBpBkBUV3Ba4BkB0DlCgBXgBtD4FSdBfPhBPpKP0BvBXjEQ2CGsT8DhBtCqDpFvD1D3E0IrD2EkBJrBDOBsB+BPiBlB1EIjDPPPPPPPPPPPGPPMNLsBNPNPKCvBvBPPCkDPBmBPhDXXgD4B6FzEgDguG9vUtkB9JcuBSckEP/BPPPPPPBPf4FrBjEhBpC3B5BKaWPrBOwCk/KsCuLqDHPbPxPsFtEaaqDL';
    this.g5_1 = decodeVarLenBase64(rangeLength, fromBase64, 222);
    var rangeCategory = 'GFjgggUHGGFFZZZmzpz5qB6s6020B60ptltB6smt2sB60mz22B1+vv+8BZZ5s2850BW5q1ymtB506smzBF3q1q1qB1q1q1+Bgii4wDTm74g3KiggxqM60q1q1Bq1o1q1BF1qlrqrBZ2q5wprBGFZWWZGHFsjiooLowgmOowjkwCkgoiIk7ligGogiioBkwkiYkzj2oNoi+sbkwj04DghhkQ8wgiYkgoioDsgnkwC4gikQ//v+85BkwvoIsgoyI4yguI0whiwEowri4CoghsJowgqYowgm4DkwgsY/nwnzPowhmYkg6wI8yggZswikwHgxgmIoxgqYkwgk4DkxgmIkgoioBsgssoBgzgyI8g9gL8g9kI0wgwJoxgkoC0wgioFkw/wI0w53iF4gioYowjmgBHGq1qkgwBF1q1q8qBHwghuIwghyKk0goQkwgoQk3goQHGFHkyg0pBgxj6IoinkxDswno7Ikwhz9Bo0gioB8z48Rwli0xN0mpjoX8w78pDwltoqKHFGGwwgsIHFH3q1q16BFHWFZ1q10q1B2qlwq1B1q10q1B2q1yq1B6q1gq1Biq1qhxBir1qp1Bqt1q1qB1g1q1+B//3q16B///q1qBH/qlqq9Bholqq9B1i00a1q10qD1op1HkwmigEigiy6Cptogq1Bixo1kDq7/j00B2qgoBWGFm1lz50B6s5q1+BGWhggzhwBFFhgk4//Bo2jigE8wguI8wguI8wgugUog1qoB4qjmIwwi2KgkYHHH4lBgiFWkgIWoghssMmz5smrBZ3q1y50B5sm7gzBtz1smzB5smz50BqzqtmzB5sgzqzBF2/9//5BowgoIwmnkzPkwgk4C8ys65BkgoqI0wgy6FghquZo2giY0ghiIsgh24B4ghsQ8QF/v1q1OFs0O8iCHHF1qggz/B8wg6Iznv+//B08QgohsjK0QGFk7hsQ4gB';
    this.h5_1 = decodeVarLenBase64(rangeCategory, fromBase64, 222);
  }
}
class OtherLowercase {
  constructor() {
    OtherLowercase_instance = this;
    var tmp = this;
    // Inline function 'kotlin.intArrayOf' call
    tmp.i5_1 = new Int32Array([170, 186, 688, 704, 736, 837, 890, 7468, 7544, 7579, 8305, 8319, 8336, 8560, 9424, 11388, 42652, 42864, 43000, 43868]);
    var tmp_0 = this;
    // Inline function 'kotlin.intArrayOf' call
    tmp_0.j5_1 = new Int32Array([1, 1, 9, 2, 5, 1, 1, 63, 1, 37, 1, 1, 13, 16, 26, 2, 2, 1, 2, 4]);
  }
}
class AbstractCollection {
  static l5($box) {
    return createThis(this, $box);
  }
  h2(element) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var tmp;
      if (isInterface(this, Collection)) {
        tmp = this.f1();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this.w();
      while (tmp0_iterator.x()) {
        var element_0 = tmp0_iterator.y();
        // Inline function 'kotlin.collections.AbstractCollection.contains.<anonymous>' call
        if (equals(element_0, element)) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  }
  i2(elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.f1();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'kotlin.collections.AbstractCollection.containsAll.<anonymous>' call
        if (!this.h2(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  f1() {
    return this.z() === 0;
  }
  toString() {
    return joinToString_0(this, ', ', '[', ']', VOID, VOID, AbstractCollection$toString$lambda(this));
  }
  toArray() {
    return collectionToArray(this);
  }
}
class AbstractMutableCollection extends AbstractCollection {
  static k5() {
    return this.l5();
  }
  b1(elements) {
    this.m5();
    var modified = false;
    var tmp0_iterator = elements.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      if (this.g(element))
        modified = true;
    }
    return modified;
  }
  j2() {
    this.m5();
    var iterator = this.w();
    while (iterator.x()) {
      iterator.y();
      iterator.n5();
    }
  }
  toJSON() {
    return this.toArray();
  }
  m5() {
  }
}
class IteratorImpl {
  constructor($outer, $box) {
    boxApply(this, $box);
    this.q5_1 = $outer;
    this.o5_1 = 0;
    this.p5_1 = -1;
  }
  x() {
    return this.o5_1 < this.q5_1.z();
  }
  y() {
    if (!this.x())
      throw NoSuchElementException.r5();
    var tmp = this;
    var tmp1 = this.o5_1;
    this.o5_1 = tmp1 + 1 | 0;
    tmp.p5_1 = tmp1;
    return this.q5_1.c1(this.p5_1);
  }
  n5() {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.p5_1 === -1)) {
      // Inline function 'kotlin.collections.IteratorImpl.remove.<anonymous>' call
      var message = 'Call next() or previous() before removing element from the iterator.';
      throw IllegalStateException.b4(toString_1(message));
    }
    this.q5_1.m2(this.p5_1);
    this.o5_1 = this.p5_1;
    this.p5_1 = -1;
  }
}
class ListIteratorImpl extends IteratorImpl {
  constructor($outer, index, $box) {
    if ($box === VOID)
      $box = {};
    $box.w5_1 = $outer;
    super($outer, $box);
    Companion_instance_5.x5(index, this.w5_1.z());
    this.o5_1 = index;
  }
}
class AbstractMutableList extends AbstractMutableCollection {
  static y5() {
    var $this = this.k5();
    $this.s5_1 = 0;
    return $this;
  }
  g(element) {
    this.m5();
    this.l2(this.z(), element);
    return true;
  }
  j2() {
    this.m5();
    this.z5(0, this.z());
  }
  w() {
    return new IteratorImpl(this);
  }
  h2(element) {
    return this.a6(element) >= 0;
  }
  a6(element) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.indexOfFirst' call
      var index = 0;
      var tmp0_iterator = this.w();
      while (tmp0_iterator.x()) {
        var item = tmp0_iterator.y();
        // Inline function 'kotlin.collections.AbstractMutableList.indexOf.<anonymous>' call
        if (equals(item, element)) {
          tmp$ret$1 = index;
          break $l$block;
        }
        index = index + 1 | 0;
      }
      tmp$ret$1 = -1;
    }
    return tmp$ret$1;
  }
  n2(index) {
    return new ListIteratorImpl(this, index);
  }
  z5(fromIndex, toIndex) {
    var iterator = this.n2(fromIndex);
    // Inline function 'kotlin.repeat' call
    var times = toIndex - fromIndex | 0;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.collections.AbstractMutableList.removeRange.<anonymous>' call
        iterator.y();
        iterator.n5();
      }
       while (inductionVariable < times);
  }
  equals(other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, KtList) : false))
      return false;
    return Companion_instance_5.b6(this, other);
  }
  hashCode() {
    return Companion_instance_5.c6(this);
  }
}
class AbstractMap {
  static k6() {
    var $this = createThis(this);
    $this.i6_1 = null;
    $this.j6_1 = null;
    return $this;
  }
  o2(key) {
    return !(implFindEntry(this, key) == null);
  }
  p2(value) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.any' call
      var this_0 = this.j1();
      var tmp;
      if (isInterface(this_0, Collection)) {
        tmp = this_0.f1();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
      var tmp0_iterator = this_0.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'kotlin.collections.AbstractMap.containsValue.<anonymous>' call
        if (equals(element.l1(), value)) {
          tmp$ret$0 = true;
          break $l$block_0;
        }
      }
      tmp$ret$0 = false;
    }
    return tmp$ret$0;
  }
  r6(entry) {
    if (!(!(entry == null) ? isInterface(entry, Entry) : false))
      return false;
    var key = entry.k1();
    var value = entry.l1();
    // Inline function 'kotlin.collections.get' call
    var ourValue = (isInterface(this, KtMap) ? this : THROW_CCE()).q2(key);
    if (!equals(value, ourValue)) {
      return false;
    }
    var tmp;
    if (ourValue == null) {
      // Inline function 'kotlin.collections.containsKey' call
      tmp = !(isInterface(this, KtMap) ? this : THROW_CCE()).o2(key);
    } else {
      tmp = false;
    }
    if (tmp) {
      return false;
    }
    return true;
  }
  equals(other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, KtMap) : false))
      return false;
    if (!(this.z() === other.z()))
      return false;
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var this_0 = other.j1();
      var tmp;
      if (isInterface(this_0, Collection)) {
        tmp = this_0.f1();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = this_0.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'kotlin.collections.AbstractMap.equals.<anonymous>' call
        if (!this.r6(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  q2(key) {
    var tmp0_safe_receiver = implFindEntry(this, key);
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.l1();
  }
  hashCode() {
    return hashCode(this.j1());
  }
  f1() {
    return this.z() === 0;
  }
  z() {
    return this.j1().z();
  }
  r2() {
    if (this.i6_1 == null) {
      var tmp = this;
      tmp.i6_1 = AbstractMap$keys$1.rg(this);
    }
    return ensureNotNull(this.i6_1);
  }
  toString() {
    var tmp = this.j1();
    return joinToString_0(tmp, ', ', '{', '}', VOID, VOID, AbstractMap$toString$lambda(this));
  }
  tg(entry) {
    return toString_4(this, entry.k1()) + '=' + toString_4(this, entry.l1());
  }
  s2() {
    if (this.j6_1 == null) {
      var tmp = this;
      tmp.j6_1 = AbstractMap$values$1.vg(this);
    }
    return ensureNotNull(this.j6_1);
  }
}
class AbstractMutableMap extends AbstractMap {
  static h6() {
    var $this = this.k6();
    $this.f6_1 = null;
    $this.g6_1 = null;
    return $this;
  }
  l6() {
    return HashMapKeysDefault.n6(this);
  }
  o6() {
    return HashMapValuesDefault.q6(this);
  }
  r2() {
    var tmp0_elvis_lhs = this.f6_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = this.l6();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.collections.AbstractMutableMap.<get-keys>.<anonymous>' call
      this.f6_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  s2() {
    var tmp0_elvis_lhs = this.g6_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = this.o6();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.collections.AbstractMutableMap.<get-values>.<anonymous>' call
      this.g6_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  j2() {
    this.j1().j2();
  }
  v2(from) {
    this.m5();
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = from.j1().w();
    while (tmp0_iterator.x()) {
      var tmp1_loop_parameter = tmp0_iterator.y();
      // Inline function 'kotlin.collections.component1' call
      var key = tmp1_loop_parameter.k1();
      // Inline function 'kotlin.collections.component2' call
      var value = tmp1_loop_parameter.l1();
      this.t2(key, value);
    }
  }
  u2(key) {
    this.m5();
    var iter = this.j1().w();
    while (iter.x()) {
      var entry = iter.y();
      var k = entry.k1();
      if (equals(key, k)) {
        var value = entry.l1();
        iter.n5();
        return value;
      }
    }
    return null;
  }
  m5() {
  }
}
class AbstractMutableSet extends AbstractMutableCollection {
  static s6() {
    return this.k5();
  }
  equals(other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, KtSet) : false))
      return false;
    return Companion_instance_7.t6(this, other);
  }
  hashCode() {
    return Companion_instance_7.u6(this);
  }
}
class Companion_2 {
  constructor() {
    Companion_instance_2 = this;
    var tmp = this;
    // Inline function 'kotlin.also' call
    var this_0 = ArrayList.a1(0);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.Companion.Empty.<anonymous>' call
    this_0.r_1 = true;
    tmp.v6_1 = this_0;
  }
}
class ArrayList extends AbstractMutableList {
  static d5(array) {
    Companion_getInstance_2();
    var $this = this.y5();
    $this.q_1 = array;
    $this.r_1 = false;
    return $this;
  }
  static e1() {
    Companion_getInstance_2();
    // Inline function 'kotlin.emptyArray' call
    var tmp$ret$0 = [];
    return this.d5(tmp$ret$0);
  }
  static a1(initialCapacity) {
    Companion_getInstance_2();
    // Inline function 'kotlin.emptyArray' call
    var tmp$ret$0 = [];
    var $this = this.d5(tmp$ret$0);
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(initialCapacity >= 0)) {
      // Inline function 'kotlin.collections.ArrayList.<init>.<anonymous>' call
      var message = 'Negative initial capacity: ' + initialCapacity;
      throw IllegalArgumentException.o(toString_1(message));
    }
    return $this;
  }
  static s(elements) {
    Companion_getInstance_2();
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp$ret$0 = copyToArray(elements);
    return this.d5(tmp$ret$0);
  }
  x6(minCapacity) {
  }
  z() {
    return this.q_1.length;
  }
  c1(index) {
    var tmp = this.q_1[rangeCheck(this, index)];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  }
  k2(index, element) {
    this.m5();
    rangeCheck(this, index);
    // Inline function 'kotlin.apply' call
    var this_0 = this.q_1[index];
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.ArrayList.set.<anonymous>' call
    this.q_1[index] = element;
    var tmp = this_0;
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  }
  g(element) {
    this.m5();
    // Inline function 'kotlin.js.asDynamic' call
    this.q_1.push(element);
    this.s5_1 = this.s5_1 + 1 | 0;
    return true;
  }
  l2(index, element) {
    this.m5();
    // Inline function 'kotlin.js.asDynamic' call
    this.q_1.splice(insertionRangeCheck(this, index), 0, element);
    this.s5_1 = this.s5_1 + 1 | 0;
  }
  b1(elements) {
    this.m5();
    if (elements.f1())
      return false;
    var offset = increaseLength(this, elements.z());
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = elements.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'kotlin.collections.ArrayList.addAll.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var index_0 = checkIndexOverflow(tmp1);
      this.q_1[offset + index_0 | 0] = item;
    }
    this.s5_1 = this.s5_1 + 1 | 0;
    return true;
  }
  m2(index) {
    this.m5();
    rangeCheck(this, index);
    this.s5_1 = this.s5_1 + 1 | 0;
    var tmp;
    if (index === get_lastIndex_2(this)) {
      // Inline function 'kotlin.js.asDynamic' call
      tmp = this.q_1.pop();
    } else {
      // Inline function 'kotlin.js.asDynamic' call
      tmp = this.q_1.splice(index, 1)[0];
    }
    return tmp;
  }
  z5(fromIndex, toIndex) {
    this.m5();
    this.s5_1 = this.s5_1 + 1 | 0;
    // Inline function 'kotlin.js.asDynamic' call
    this.q_1.splice(fromIndex, toIndex - fromIndex | 0);
  }
  j2() {
    this.m5();
    var tmp = this;
    // Inline function 'kotlin.emptyArray' call
    tmp.q_1 = [];
    this.s5_1 = this.s5_1 + 1 | 0;
  }
  a6(element) {
    return indexOf(this.q_1, element);
  }
  toString() {
    return arrayToString(this.q_1);
  }
  y6() {
    return [].slice.call(this.q_1);
  }
  toArray() {
    return this.y6();
  }
  m5() {
    if (this.r_1)
      throw UnsupportedOperationException.c7();
  }
}
class HashMap extends AbstractMutableMap {
  static j7(internalMap) {
    var $this = this.h6();
    init_kotlin_collections_HashMap($this);
    $this.h7_1 = internalMap;
    return $this;
  }
  static k7() {
    return this.j7(InternalHashMap.v7());
  }
  static w7(initialCapacity, loadFactor) {
    return this.j7(InternalHashMap.x7(initialCapacity, loadFactor));
  }
  static y7(initialCapacity) {
    return this.w7(initialCapacity, 1.0);
  }
  static z7(original) {
    return this.j7(InternalHashMap.a8(original));
  }
  j2() {
    this.h7_1.j2();
  }
  o2(key) {
    return this.h7_1.b8(key);
  }
  p2(value) {
    return this.h7_1.p2(value);
  }
  l6() {
    return HashMapKeys.d8(this.h7_1);
  }
  o6() {
    return HashMapValues.f8(this.h7_1);
  }
  j1() {
    var tmp0_elvis_lhs = this.i7_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = HashMapEntrySet.h8(this.h7_1);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.collections.HashMap.<get-entries>.<anonymous>' call
      this.i7_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  q2(key) {
    return this.h7_1.q2(key);
  }
  t2(key, value) {
    return this.h7_1.t2(key, value);
  }
  u2(key) {
    return this.h7_1.u2(key);
  }
  z() {
    return this.h7_1.z();
  }
  v2(from) {
    return this.h7_1.v2(from);
  }
}
class HashMapKeys extends AbstractMutableSet {
  static d8(backing) {
    var $this = this.s6();
    $this.c8_1 = backing;
    return $this;
  }
  z() {
    return this.c8_1.z();
  }
  f1() {
    return this.c8_1.z() === 0;
  }
  h2(element) {
    return this.c8_1.b8(element);
  }
  j2() {
    return this.c8_1.j2();
  }
  g(element) {
    throw UnsupportedOperationException.c7();
  }
  b1(elements) {
    throw UnsupportedOperationException.c7();
  }
  w() {
    return this.c8_1.i8();
  }
  m5() {
    return this.c8_1.j8();
  }
}
class HashMapValues extends AbstractMutableCollection {
  static f8(backing) {
    var $this = this.k5();
    $this.e8_1 = backing;
    return $this;
  }
  z() {
    return this.e8_1.z();
  }
  f1() {
    return this.e8_1.z() === 0;
  }
  k8(element) {
    return this.e8_1.p2(element);
  }
  h2(element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.k8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  l8(element) {
    throw UnsupportedOperationException.c7();
  }
  g(element) {
    return this.l8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  m8(elements) {
    throw UnsupportedOperationException.c7();
  }
  b1(elements) {
    return this.m8(elements);
  }
  w() {
    return this.e8_1.n8();
  }
  m5() {
    return this.e8_1.j8();
  }
}
class HashMapEntrySetBase extends AbstractMutableSet {
  static p8(backing) {
    var $this = this.s6();
    $this.o8_1 = backing;
    return $this;
  }
  z() {
    return this.o8_1.z();
  }
  f1() {
    return this.o8_1.z() === 0;
  }
  r8(element) {
    return this.o8_1.t8(element);
  }
  h2(element) {
    if (!(!(element == null) ? isInterface(element, Entry) : false))
      return false;
    return this.r8((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  }
  j2() {
    return this.o8_1.j2();
  }
  s8(element) {
    throw UnsupportedOperationException.c7();
  }
  g(element) {
    return this.s8((!(element == null) ? isInterface(element, Entry) : false) ? element : THROW_CCE());
  }
  b1(elements) {
    throw UnsupportedOperationException.c7();
  }
  i2(elements) {
    return this.o8_1.u8(elements);
  }
  m5() {
    return this.o8_1.j8();
  }
}
class HashMapEntrySet extends HashMapEntrySetBase {
  static h8(backing) {
    return this.p8(backing);
  }
  w() {
    return this.o8_1.q8();
  }
}
class HashMapKeysDefault$iterator$1 {
  constructor($entryIterator) {
    this.v8_1 = $entryIterator;
  }
  x() {
    return this.v8_1.x();
  }
  y() {
    return this.v8_1.y().k1();
  }
  n5() {
    return this.v8_1.n5();
  }
}
class HashMapKeysDefault extends AbstractMutableSet {
  static n6(backingMap) {
    var $this = this.s6();
    $this.m6_1 = backingMap;
    return $this;
  }
  w8(element) {
    throw UnsupportedOperationException.x8('Add is not supported on keys');
  }
  g(element) {
    return this.w8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  j2() {
    return this.m6_1.j2();
  }
  b8(element) {
    return this.m6_1.o2(element);
  }
  h2(element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.b8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  w() {
    var entryIterator = this.m6_1.j1().w();
    return new HashMapKeysDefault$iterator$1(entryIterator);
  }
  z() {
    return this.m6_1.z();
  }
  m5() {
    return this.m6_1.m5();
  }
}
class HashMapValuesDefault$iterator$1 {
  constructor($entryIterator) {
    this.y8_1 = $entryIterator;
  }
  x() {
    return this.y8_1.x();
  }
  y() {
    return this.y8_1.y().l1();
  }
  n5() {
    return this.y8_1.n5();
  }
}
class HashMapValuesDefault extends AbstractMutableCollection {
  static q6(backingMap) {
    var $this = this.k5();
    $this.p6_1 = backingMap;
    return $this;
  }
  l8(element) {
    throw UnsupportedOperationException.x8('Add is not supported on values');
  }
  g(element) {
    return this.l8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  k8(element) {
    return this.p6_1.p2(element);
  }
  h2(element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.k8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  w() {
    var entryIterator = this.p6_1.j1().w();
    return new HashMapValuesDefault$iterator$1(entryIterator);
  }
  z() {
    return this.p6_1.z();
  }
  m5() {
    return this.p6_1.m5();
  }
}
class HashSet extends AbstractMutableSet {
  static z8(map) {
    var $this = this.s6();
    init_kotlin_collections_HashSet($this);
    $this.g1_1 = map;
    return $this;
  }
  static a9() {
    return this.z8(InternalHashMap.v7());
  }
  static b9(elements) {
    var $this = this.z8(InternalHashMap.c9(elements.z()));
    var tmp0_iterator = elements.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      $this.g1_1.t2(element, true);
    }
    return $this;
  }
  static d9(initialCapacity, loadFactor) {
    return this.z8(InternalHashMap.x7(initialCapacity, loadFactor));
  }
  static h1(initialCapacity) {
    return this.d9(initialCapacity, 1.0);
  }
  g(element) {
    return this.g1_1.t2(element, true) == null;
  }
  j2() {
    this.g1_1.j2();
  }
  h2(element) {
    return this.g1_1.b8(element);
  }
  f1() {
    return this.g1_1.z() === 0;
  }
  w() {
    return this.g1_1.i8();
  }
  z() {
    return this.g1_1.z();
  }
}
class Companion_3 {
  constructor() {
    this.i9_1 = -1640531527;
    this.j9_1 = 8;
    this.k9_1 = 2;
    this.l9_1 = -1;
  }
}
class Itr {
  constructor(map) {
    this.m9_1 = map;
    this.n9_1 = 0;
    this.o9_1 = -1;
    this.p9_1 = this.m9_1.s7_1;
    this.q9();
  }
  q9() {
    while (this.n9_1 < this.m9_1.q7_1 && this.m9_1.n7_1[this.n9_1] < 0) {
      this.n9_1 = this.n9_1 + 1 | 0;
    }
  }
  x() {
    return this.n9_1 < this.m9_1.q7_1;
  }
  n5() {
    this.r9();
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(this.o9_1 === -1)) {
      // Inline function 'kotlin.collections.Itr.remove.<anonymous>' call
      var message = 'Call next() before removing element from the iterator.';
      throw IllegalStateException.b4(toString_1(message));
    }
    this.m9_1.j8();
    removeEntryAt(this.m9_1, this.o9_1);
    this.o9_1 = -1;
    this.p9_1 = this.m9_1.s7_1;
  }
  r9() {
    if (!(this.m9_1.s7_1 === this.p9_1))
      throw ConcurrentModificationException.v9();
  }
}
class KeysItr extends Itr {
  y() {
    this.r9();
    if (this.n9_1 >= this.m9_1.q7_1)
      throw NoSuchElementException.r5();
    var tmp = this;
    var tmp1 = this.n9_1;
    this.n9_1 = tmp1 + 1 | 0;
    tmp.o9_1 = tmp1;
    var result = this.m9_1.l7_1[this.o9_1];
    this.q9();
    return result;
  }
}
class ValuesItr extends Itr {
  y() {
    this.r9();
    if (this.n9_1 >= this.m9_1.q7_1)
      throw NoSuchElementException.r5();
    var tmp = this;
    var tmp1 = this.n9_1;
    this.n9_1 = tmp1 + 1 | 0;
    tmp.o9_1 = tmp1;
    var result = ensureNotNull(this.m9_1.m7_1)[this.o9_1];
    this.q9();
    return result;
  }
}
class EntriesItr extends Itr {
  y() {
    this.r9();
    if (this.n9_1 >= this.m9_1.q7_1)
      throw NoSuchElementException.r5();
    var tmp = this;
    var tmp1 = this.n9_1;
    this.n9_1 = tmp1 + 1 | 0;
    tmp.o9_1 = tmp1;
    var result = new EntryRef(this.m9_1, this.o9_1);
    this.q9();
    return result;
  }
  ia() {
    if (this.n9_1 >= this.m9_1.q7_1)
      throw NoSuchElementException.r5();
    var tmp = this;
    var tmp1 = this.n9_1;
    this.n9_1 = tmp1 + 1 | 0;
    tmp.o9_1 = tmp1;
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver = this.m9_1.l7_1[this.o9_1];
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    var tmp_0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver_0 = ensureNotNull(this.m9_1.m7_1)[this.o9_1];
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
    var result = tmp_0 ^ (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0);
    this.q9();
    return result;
  }
  ja(sb) {
    if (this.n9_1 >= this.m9_1.q7_1)
      throw NoSuchElementException.r5();
    var tmp = this;
    var tmp1 = this.n9_1;
    this.n9_1 = tmp1 + 1 | 0;
    tmp.o9_1 = tmp1;
    var key = this.m9_1.l7_1[this.o9_1];
    if (equals(key, this.m9_1)) {
      sb.la('(this Map)');
    } else {
      sb.ka(key);
    }
    sb.ma(_Char___init__impl__6a9atx(61));
    var value = ensureNotNull(this.m9_1.m7_1)[this.o9_1];
    if (equals(value, this.m9_1)) {
      sb.la('(this Map)');
    } else {
      sb.ka(value);
    }
    this.q9();
  }
}
class EntryRef {
  constructor(map, index) {
    this.na_1 = map;
    this.oa_1 = index;
  }
  k1() {
    return this.na_1.l7_1[this.oa_1];
  }
  l1() {
    return ensureNotNull(this.na_1.m7_1)[this.oa_1];
  }
  equals(other) {
    var tmp;
    var tmp_0;
    if (!(other == null) ? isInterface(other, Entry) : false) {
      tmp_0 = equals(other.k1(), this.k1());
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = equals(other.l1(), this.l1());
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver = this.k1();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    var tmp = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    // Inline function 'kotlin.hashCode' call
    var tmp0_safe_receiver_0 = this.l1();
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
    return tmp ^ (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0);
  }
  toString() {
    return toString_0(this.k1()) + '=' + toString_0(this.l1());
  }
}
class InternalMap {}
function containsAllEntries(m) {
  var tmp$ret$0;
  $l$block_0: {
    // Inline function 'kotlin.collections.all' call
    var tmp;
    if (isInterface(m, Collection)) {
      tmp = m.f1();
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$0 = true;
      break $l$block_0;
    }
    var tmp0_iterator = m.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlin.collections.InternalMap.containsAllEntries.<anonymous>' call
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      var entry = element;
      var tmp_0;
      if (!(entry == null) ? isInterface(entry, Entry) : false) {
        tmp_0 = this.ra(entry);
      } else {
        tmp_0 = false;
      }
      if (!tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
    }
    tmp$ret$0 = true;
  }
  return tmp$ret$0;
}
class InternalHashMap {
  static pa(keysArray, valuesArray, presenceArray, hashArray, maxProbeDistance, length) {
    var $this = createThis(this);
    $this.l7_1 = keysArray;
    $this.m7_1 = valuesArray;
    $this.n7_1 = presenceArray;
    $this.o7_1 = hashArray;
    $this.p7_1 = maxProbeDistance;
    $this.q7_1 = length;
    $this.r7_1 = computeShift(Companion_instance_3, _get_hashSize__tftcho($this));
    $this.s7_1 = 0;
    $this.t7_1 = 0;
    $this.u7_1 = false;
    return $this;
  }
  z() {
    return this.t7_1;
  }
  static v7() {
    return this.c9(8);
  }
  static c9(initialCapacity) {
    return this.pa(arrayOfUninitializedElements(initialCapacity), null, new Int32Array(initialCapacity), new Int32Array(computeHashSize(Companion_instance_3, initialCapacity)), 2, 0);
  }
  static a8(original) {
    var $this = this.c9(original.z());
    $this.v2(original);
    return $this;
  }
  static x7(initialCapacity, loadFactor) {
    var $this = this.c9(initialCapacity);
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(loadFactor > 0)) {
      // Inline function 'kotlin.collections.InternalHashMap.<init>.<anonymous>' call
      var message = 'Non-positive load factor: ' + loadFactor;
      throw IllegalArgumentException.o(toString_1(message));
    }
    return $this;
  }
  p2(value) {
    return findValue(this, value) >= 0;
  }
  q2(key) {
    var index = findKey(this, key);
    if (index < 0)
      return null;
    return ensureNotNull(this.m7_1)[index];
  }
  b8(key) {
    return findKey(this, key) >= 0;
  }
  t2(key, value) {
    var index = addKey(this, key);
    var valuesArray = allocateValuesArray(this);
    if (index < 0) {
      var oldValue = valuesArray[(-index | 0) - 1 | 0];
      valuesArray[(-index | 0) - 1 | 0] = value;
      return oldValue;
    } else {
      valuesArray[index] = value;
      return null;
    }
  }
  v2(from) {
    this.j8();
    putAllEntries(this, from.j1());
  }
  u2(key) {
    this.j8();
    var index = findKey(this, key);
    if (index < 0)
      return null;
    var oldValue = ensureNotNull(this.m7_1)[index];
    removeEntryAt(this, index);
    return oldValue;
  }
  j2() {
    this.j8();
    var inductionVariable = 0;
    var last = this.q7_1 - 1 | 0;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var hash = this.n7_1[i];
        if (hash >= 0) {
          this.o7_1[hash] = 0;
          this.n7_1[i] = -1;
        }
      }
       while (!(i === last));
    resetRange(this.l7_1, 0, this.q7_1);
    var tmp1_safe_receiver = this.m7_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      resetRange(tmp1_safe_receiver, 0, this.q7_1);
    }
    this.t7_1 = 0;
    this.q7_1 = 0;
    registerModification(this);
  }
  equals(other) {
    var tmp;
    if (other === this) {
      tmp = true;
    } else {
      var tmp_0;
      if (!(other == null) ? isInterface(other, KtMap) : false) {
        tmp_0 = contentEquals_0(this, other);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  hashCode() {
    var result = 0;
    var it = this.q8();
    while (it.x()) {
      result = result + it.ia() | 0;
    }
    return result;
  }
  toString() {
    var sb = StringBuilder.qa(2 + imul_0(this.t7_1, 3) | 0);
    sb.la('{');
    var i = 0;
    var it = this.q8();
    while (it.x()) {
      if (i > 0) {
        sb.la(', ');
      }
      it.ja(sb);
      i = i + 1 | 0;
    }
    sb.la('}');
    return sb.toString();
  }
  j8() {
    if (this.u7_1)
      throw UnsupportedOperationException.c7();
  }
  t8(entry) {
    var index = findKey(this, entry.k1());
    if (index < 0)
      return false;
    return equals(ensureNotNull(this.m7_1)[index], entry.l1());
  }
  ra(entry) {
    return this.t8(isInterface(entry, Entry) ? entry : THROW_CCE());
  }
  i8() {
    return new KeysItr(this);
  }
  n8() {
    return new ValuesItr(this);
  }
  q8() {
    return new EntriesItr(this);
  }
}
class LinkedHashMap extends HashMap {
  static ya() {
    var $this = this.k7();
    init_kotlin_collections_LinkedHashMap($this);
    return $this;
  }
  static za(initialCapacity) {
    var $this = this.y7(initialCapacity);
    init_kotlin_collections_LinkedHashMap($this);
    return $this;
  }
  static ab(original) {
    var $this = this.z7(original);
    init_kotlin_collections_LinkedHashMap($this);
    return $this;
  }
  m5() {
    return this.h7_1.j8();
  }
}
class LinkedHashSet extends HashSet {
  static d1() {
    var $this = this.a9();
    init_kotlin_collections_LinkedHashSet($this);
    return $this;
  }
  static i1(elements) {
    var $this = this.b9(elements);
    init_kotlin_collections_LinkedHashSet($this);
    return $this;
  }
  static bb(initialCapacity, loadFactor) {
    var $this = this.d9(initialCapacity, loadFactor);
    init_kotlin_collections_LinkedHashSet($this);
    return $this;
  }
  static f(initialCapacity) {
    return this.bb(initialCapacity, 1.0);
  }
  m5() {
    return this.g1_1.j8();
  }
}
class BaseOutput {
  cb() {
    this.db('\n');
  }
  eb(message) {
    this.db(message);
    this.cb();
  }
}
class NodeJsOutput extends BaseOutput {
  constructor(outputStream) {
    super();
    this.fb_1 = outputStream;
  }
  db(message) {
    // Inline function 'kotlin.io.String' call
    var messageString = String(message);
    this.fb_1.write(messageString);
  }
}
class BufferedOutput extends BaseOutput {
  constructor() {
    super();
    this.hb_1 = '';
  }
  db(message) {
    var tmp = this;
    var tmp_0 = this.hb_1;
    // Inline function 'kotlin.io.String' call
    tmp.hb_1 = tmp_0 + String(message);
  }
}
class BufferedOutputToConsoleLog extends BufferedOutput {
  db(message) {
    // Inline function 'kotlin.io.String' call
    var s = String(message);
    // Inline function 'kotlin.text.nativeLastIndexOf' call
    // Inline function 'kotlin.js.asDynamic' call
    var i = s.lastIndexOf('\n', 0);
    if (i >= 0) {
      var tmp = this;
      var tmp_0 = this.hb_1;
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp.hb_1 = tmp_0 + s.substring(0, i);
      this.ib();
      // Inline function 'kotlin.text.substring' call
      var this_0 = s;
      var startIndex = i + 1 | 0;
      // Inline function 'kotlin.js.asDynamic' call
      s = this_0.substring(startIndex);
    }
    this.hb_1 = this.hb_1 + s;
  }
  ib() {
    console.log(this.hb_1);
    this.hb_1 = '';
  }
}
class Continuation {}
class InterceptedCoroutine {
  constructor($box) {
    boxApply(this, $box);
    this.ub_1 = null;
  }
  xb() {
    var tmp2_elvis_lhs = this.ub_1;
    var tmp;
    if (tmp2_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var tmp0_safe_receiver = this.rb().yb(Key_instance);
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.zb(this);
      var this_0 = tmp1_elvis_lhs == null ? this : tmp1_elvis_lhs;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.coroutines.InterceptedCoroutine.intercepted.<anonymous>' call
      this.ub_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp2_elvis_lhs;
    }
    return tmp;
  }
  vb() {
    var intercepted = this.ub_1;
    if (!(intercepted == null) && !(intercepted === this)) {
      ensureNotNull(this.rb().yb(Key_instance)).ac(intercepted);
    }
    this.ub_1 = CompletedContinuation_instance;
  }
}
class CoroutineImpl extends InterceptedCoroutine {
  constructor(resultContinuation, $box) {
    super($box);
    this.kb_1 = resultContinuation;
    this.lb_1 = 0;
    this.mb_1 = 0;
    this.nb_1 = null;
    this.ob_1 = null;
    this.pb_1 = null;
    var tmp = this;
    var tmp0_safe_receiver = this.kb_1;
    tmp.qb_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.rb();
  }
  rb() {
    return ensureNotNull(this.qb_1);
  }
  sb(result) {
    var current = this;
    // Inline function 'kotlin.Result.getOrNull' call
    var tmp;
    if (_Result___get_isFailure__impl__jpiriv(result)) {
      tmp = null;
    } else {
      var tmp_0 = _Result___get_value__impl__bjfvqg(result);
      tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
    }
    var currentResult = tmp;
    var currentException = Result__exceptionOrNull_impl_p6xea9(result);
    while (true) {
      // Inline function 'kotlin.with' call
      // Inline function 'kotlin.contracts.contract' call
      var $this$with = current;
      if (currentException == null) {
        $this$with.nb_1 = currentResult;
      } else {
        $this$with.lb_1 = $this$with.mb_1;
        $this$with.ob_1 = currentException;
      }
      try {
        var outcome = $this$with.tb();
        if (outcome === get_COROUTINE_SUSPENDED())
          return Unit_instance;
        currentResult = outcome;
        currentException = null;
      } catch ($p) {
        var exception = $p;
        currentResult = null;
        // Inline function 'kotlin.js.unsafeCast' call
        currentException = exception;
      }
      $this$with.vb();
      var completion = ensureNotNull($this$with.kb_1);
      if (completion instanceof CoroutineImpl) {
        current = completion;
      } else {
        if (!(currentException == null)) {
          // Inline function 'kotlin.coroutines.resumeWithException' call
          // Inline function 'kotlin.Companion.failure' call
          var exception_0 = ensureNotNull(currentException);
          var tmp$ret$2 = _Result___init__impl__xyqfz8(createFailure(exception_0));
          completion.wb(tmp$ret$2);
        } else {
          // Inline function 'kotlin.coroutines.resume' call
          // Inline function 'kotlin.Companion.success' call
          var value = currentResult;
          var tmp$ret$4 = _Result___init__impl__xyqfz8(value);
          completion.wb(tmp$ret$4);
        }
        return Unit_instance;
      }
    }
  }
  wb(result) {
    return this.sb(result);
  }
}
class CompletedContinuation {
  rb() {
    var message = 'This continuation is already complete';
    throw IllegalStateException.b4(toString_1(message));
  }
  sb(result) {
    // Inline function 'kotlin.error' call
    var message = 'This continuation is already complete';
    throw IllegalStateException.b4(toString_1(message));
  }
  wb(result) {
    return this.sb(result);
  }
  toString() {
    return 'This continuation is already complete';
  }
}
class Exception extends Error {
  static cd() {
    var $this = createThis(this);
    init_kotlin_Exception($this);
    setPropertiesToThrowableInstance($this);
    return $this;
  }
  static t4(message) {
    var $this = createThis(this);
    init_kotlin_Exception($this);
    setPropertiesToThrowableInstance($this, message);
    return $this;
  }
  static dd(message, cause) {
    var $this = createThis(this);
    init_kotlin_Exception($this);
    setPropertiesToThrowableInstance($this, message, cause);
    return $this;
  }
}
class RuntimeException extends Exception {
  static fd() {
    var $this = this.cd();
    init_kotlin_RuntimeException($this);
    return $this;
  }
  static g9(message) {
    var $this = this.t4(message);
    init_kotlin_RuntimeException($this);
    return $this;
  }
  static hd(message, cause) {
    var $this = this.dd(message, cause);
    init_kotlin_RuntimeException($this);
    return $this;
  }
}
class IllegalStateException extends RuntimeException {
  static gc() {
    var $this = this.fd();
    init_kotlin_IllegalStateException($this);
    return $this;
  }
  static b4(message) {
    var $this = this.g9(message);
    init_kotlin_IllegalStateException($this);
    return $this;
  }
  static jc(message, cause) {
    var $this = this.hd(message, cause);
    init_kotlin_IllegalStateException($this);
    return $this;
  }
}
class CancellationException extends IllegalStateException {
  static fc() {
    var $this = this.gc();
    init_kotlin_coroutines_cancellation_CancellationException($this);
    return $this;
  }
  static hc(message) {
    var $this = this.b4(message);
    init_kotlin_coroutines_cancellation_CancellationException($this);
    return $this;
  }
  static ic(message, cause) {
    var $this = this.jc(message, cause);
    init_kotlin_coroutines_cancellation_CancellationException($this);
    return $this;
  }
}
class _no_name_provided__qut3iv_0 extends CoroutineImpl {
  constructor($completion, $this_createCoroutineUnintercepted, $receiver, $completion$1, $box) {
    if ($box === VOID)
      $box = {};
    $box.xc_1 = $this_createCoroutineUnintercepted;
    $box.yc_1 = $receiver;
    $box.zc_1 = $completion$1;
    super(isInterface($completion, Continuation) ? $completion : THROW_CCE(), $box);
  }
  tb() {
    if (this.ob_1 != null)
      throw this.ob_1;
    // Inline function 'kotlin.coroutines.intrinsics.createCoroutineUnintercepted.<anonymous>' call
    // Inline function 'kotlin.js.asDynamic' call
    var a = this.xc_1;
    return typeof a === 'function' ? a(this.yc_1, this.zc_1) : this.xc_1.ad(this.yc_1, this.zc_1);
  }
}
class _no_name_provided__qut3iv_1 {
  constructor($context) {
    this.bd_1 = $context;
  }
  rb() {
    return this.bd_1;
  }
  sb(result) {
    // Inline function 'kotlin.getOrThrow' call
    throwOnFailure(result);
    var tmp = _Result___get_value__impl__bjfvqg(result);
    (tmp == null ? true : !(tmp == null)) || THROW_CCE();
    return Unit_instance;
  }
  wb(result) {
    return this.sb(result);
  }
}
class IllegalArgumentException extends RuntimeException {
  static ed() {
    var $this = this.fd();
    init_kotlin_IllegalArgumentException($this);
    return $this;
  }
  static o(message) {
    var $this = this.g9(message);
    init_kotlin_IllegalArgumentException($this);
    return $this;
  }
  static gd(message, cause) {
    var $this = this.hd(message, cause);
    init_kotlin_IllegalArgumentException($this);
    return $this;
  }
}
class IndexOutOfBoundsException extends RuntimeException {
  static ld() {
    var $this = this.fd();
    init_kotlin_IndexOutOfBoundsException($this);
    return $this;
  }
  static md(message) {
    var $this = this.g9(message);
    init_kotlin_IndexOutOfBoundsException($this);
    return $this;
  }
}
class UnsupportedOperationException extends RuntimeException {
  static c7() {
    var $this = this.fd();
    init_kotlin_UnsupportedOperationException($this);
    return $this;
  }
  static x8(message) {
    var $this = this.g9(message);
    init_kotlin_UnsupportedOperationException($this);
    return $this;
  }
}
class NoSuchElementException extends RuntimeException {
  static r5() {
    var $this = this.fd();
    init_kotlin_NoSuchElementException($this);
    return $this;
  }
  static k(message) {
    var $this = this.g9(message);
    init_kotlin_NoSuchElementException($this);
    return $this;
  }
}
class Error_0 extends Error {
  static od() {
    var $this = createThis(this);
    init_kotlin_Error($this);
    setPropertiesToThrowableInstance($this);
    return $this;
  }
  static pd(message) {
    var $this = createThis(this);
    init_kotlin_Error($this);
    setPropertiesToThrowableInstance($this, message);
    return $this;
  }
  static qd(message, cause) {
    var $this = createThis(this);
    init_kotlin_Error($this);
    setPropertiesToThrowableInstance($this, message, cause);
    return $this;
  }
}
class AssertionError extends Error_0 {
  static td() {
    var $this = this.od();
    init_kotlin_AssertionError($this);
    return $this;
  }
  static ud(message) {
    var $this = this.pd(message);
    init_kotlin_AssertionError($this);
    return $this;
  }
}
class ArithmeticException extends RuntimeException {
  static yd() {
    var $this = this.fd();
    init_kotlin_ArithmeticException($this);
    return $this;
  }
  static zd(message) {
    var $this = this.g9(message);
    init_kotlin_ArithmeticException($this);
    return $this;
  }
}
class ConcurrentModificationException extends RuntimeException {
  static v9() {
    var $this = this.fd();
    init_kotlin_ConcurrentModificationException($this);
    return $this;
  }
}
class NumberFormatException extends IllegalArgumentException {
  static ee() {
    var $this = this.ed();
    init_kotlin_NumberFormatException($this);
    return $this;
  }
  static fe(message) {
    var $this = this.o(message);
    init_kotlin_NumberFormatException($this);
    return $this;
  }
}
class NullPointerException extends RuntimeException {
  static f4() {
    var $this = this.fd();
    init_kotlin_NullPointerException($this);
    return $this;
  }
}
class NoWhenBranchMatchedException extends RuntimeException {
  static j4() {
    var $this = this.fd();
    init_kotlin_NoWhenBranchMatchedException($this);
    return $this;
  }
}
class ClassCastException extends RuntimeException {
  static n4() {
    var $this = this.fd();
    init_kotlin_ClassCastException($this);
    return $this;
  }
}
class UninitializedPropertyAccessException extends RuntimeException {
  static ge() {
    var $this = this.fd();
    init_kotlin_UninitializedPropertyAccessException($this);
    return $this;
  }
  static r4(message) {
    var $this = this.g9(message);
    init_kotlin_UninitializedPropertyAccessException($this);
    return $this;
  }
}
class KClass {}
class KClassImpl {
  constructor(jClass) {
    this.he_1 = jClass;
  }
  ie() {
    return this.he_1;
  }
  equals(other) {
    var tmp;
    if (other instanceof NothingKClassImpl) {
      tmp = false;
    } else {
      if (other instanceof ErrorKClass) {
        tmp = false;
      } else {
        if (other instanceof KClassImpl) {
          tmp = equals(this.ie(), other.ie());
        } else {
          tmp = false;
        }
      }
    }
    return tmp;
  }
  hashCode() {
    var tmp0_safe_receiver = this.je();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : getStringHashCode(tmp0_safe_receiver);
    return tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
  }
  toString() {
    return 'class ' + this.je();
  }
}
class NothingKClassImpl extends KClassImpl {
  constructor() {
    NothingKClassImpl_instance = null;
    super(Object);
    NothingKClassImpl_instance = this;
    this.me_1 = 'Nothing';
  }
  je() {
    return this.me_1;
  }
  ke(value) {
    return false;
  }
  ie() {
    throw UnsupportedOperationException.x8("There's no native JS class for Nothing type");
  }
  equals(other) {
    return other === this;
  }
  hashCode() {
    return 0;
  }
}
class ErrorKClass {
  je() {
    var message = 'Unknown simpleName for ErrorKClass';
    throw IllegalStateException.b4(toString_1(message));
  }
  ke(value) {
    var message = "Can's check isInstance on ErrorKClass";
    throw IllegalStateException.b4(toString_1(message));
  }
  equals(other) {
    return other === this;
  }
  hashCode() {
    return 0;
  }
}
class PrimitiveKClassImpl extends KClassImpl {
  constructor(jClass, givenSimpleName, isInstanceFunction) {
    super(jClass);
    this.oe_1 = givenSimpleName;
    this.pe_1 = isInstanceFunction;
  }
  equals(other) {
    if (!(other instanceof PrimitiveKClassImpl))
      return false;
    return super.equals(other) && this.oe_1 === other.oe_1;
  }
  je() {
    return this.oe_1;
  }
  ke(value) {
    return this.pe_1(value);
  }
}
class SimpleKClassImpl extends KClassImpl {
  constructor(jClass) {
    super(jClass);
    var tmp = this;
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_safe_receiver = jClass.$metadata$;
    tmp.re_1 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.simpleName;
  }
  je() {
    return this.re_1;
  }
  ke(value) {
    return jsIsType(value, this.ie());
  }
}
class KProperty1 {}
class KTypeImpl {
  constructor(classifier, arguments_0, isMarkedNullable) {
    this.se_1 = classifier;
    this.te_1 = arguments_0;
    this.ue_1 = isMarkedNullable;
  }
  ve() {
    return this.se_1;
  }
  we() {
    return this.te_1;
  }
  xe() {
    return this.ue_1;
  }
  equals(other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof KTypeImpl) {
      tmp_1 = equals(this.se_1, other.se_1);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = equals(this.te_1, other.te_1);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.ue_1 === other.ue_1;
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return imul_0(imul_0(hashCode(this.se_1), 31) + hashCode(this.te_1) | 0, 31) + getBooleanHashCode(this.ue_1) | 0;
  }
  toString() {
    var tmp = this.se_1;
    var kClass = isInterface(tmp, KClass) ? tmp : null;
    var classifierName = kClass == null ? toString_1(this.se_1) : !(kClass.je() == null) ? kClass.je() : '(non-denotable type)';
    var args = this.te_1.f1() ? '' : joinToString_0(this.te_1, ', ', '<', '>');
    var nullable = this.ue_1 ? '?' : '';
    return plus_4(classifierName, args) + nullable;
  }
}
class PrimitiveClasses {
  constructor() {
    PrimitiveClasses_instance = this;
    var tmp = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_0 = Object;
    tmp.anyClass = new PrimitiveKClassImpl(tmp_0, 'Any', PrimitiveClasses$anyClass$lambda);
    var tmp_1 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_2 = Number;
    tmp_1.numberClass = new PrimitiveKClassImpl(tmp_2, 'Number', PrimitiveClasses$numberClass$lambda);
    this.nothingClass = NothingKClassImpl_getInstance();
    var tmp_3 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_4 = Boolean;
    tmp_3.booleanClass = new PrimitiveKClassImpl(tmp_4, 'Boolean', PrimitiveClasses$booleanClass$lambda);
    var tmp_5 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_6 = Number;
    tmp_5.byteClass = new PrimitiveKClassImpl(tmp_6, 'Byte', PrimitiveClasses$byteClass$lambda);
    var tmp_7 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_8 = Number;
    tmp_7.shortClass = new PrimitiveKClassImpl(tmp_8, 'Short', PrimitiveClasses$shortClass$lambda);
    var tmp_9 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_10 = Number;
    tmp_9.intClass = new PrimitiveKClassImpl(tmp_10, 'Int', PrimitiveClasses$intClass$lambda);
    var tmp_11 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_12 = Number;
    tmp_11.floatClass = new PrimitiveKClassImpl(tmp_12, 'Float', PrimitiveClasses$floatClass$lambda);
    var tmp_13 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_14 = Number;
    tmp_13.doubleClass = new PrimitiveKClassImpl(tmp_14, 'Double', PrimitiveClasses$doubleClass$lambda);
    var tmp_15 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_16 = Array;
    tmp_15.arrayClass = new PrimitiveKClassImpl(tmp_16, 'Array', PrimitiveClasses$arrayClass$lambda);
    var tmp_17 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_18 = String;
    tmp_17.stringClass = new PrimitiveKClassImpl(tmp_18, 'String', PrimitiveClasses$stringClass$lambda);
    var tmp_19 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_20 = Error;
    tmp_19.throwableClass = new PrimitiveKClassImpl(tmp_20, 'Throwable', PrimitiveClasses$throwableClass$lambda);
    var tmp_21 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_22 = Array;
    tmp_21.booleanArrayClass = new PrimitiveKClassImpl(tmp_22, 'BooleanArray', PrimitiveClasses$booleanArrayClass$lambda);
    var tmp_23 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_24 = Uint16Array;
    tmp_23.charArrayClass = new PrimitiveKClassImpl(tmp_24, 'CharArray', PrimitiveClasses$charArrayClass$lambda);
    var tmp_25 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_26 = Int8Array;
    tmp_25.byteArrayClass = new PrimitiveKClassImpl(tmp_26, 'ByteArray', PrimitiveClasses$byteArrayClass$lambda);
    var tmp_27 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_28 = Int16Array;
    tmp_27.shortArrayClass = new PrimitiveKClassImpl(tmp_28, 'ShortArray', PrimitiveClasses$shortArrayClass$lambda);
    var tmp_29 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_30 = Int32Array;
    tmp_29.intArrayClass = new PrimitiveKClassImpl(tmp_30, 'IntArray', PrimitiveClasses$intArrayClass$lambda);
    var tmp_31 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_32 = Array;
    tmp_31.longArrayClass = new PrimitiveKClassImpl(tmp_32, 'LongArray', PrimitiveClasses$longArrayClass$lambda);
    var tmp_33 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_34 = Float32Array;
    tmp_33.floatArrayClass = new PrimitiveKClassImpl(tmp_34, 'FloatArray', PrimitiveClasses$floatArrayClass$lambda);
    var tmp_35 = this;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp_36 = Float64Array;
    tmp_35.doubleArrayClass = new PrimitiveKClassImpl(tmp_36, 'DoubleArray', PrimitiveClasses$doubleArrayClass$lambda);
  }
  ye() {
    return this.anyClass;
  }
  ze() {
    return this.numberClass;
  }
  af() {
    return this.nothingClass;
  }
  bf() {
    return this.booleanClass;
  }
  cf() {
    return this.byteClass;
  }
  df() {
    return this.shortClass;
  }
  ef() {
    return this.intClass;
  }
  ff() {
    return this.floatClass;
  }
  gf() {
    return this.doubleClass;
  }
  hf() {
    return this.arrayClass;
  }
  if() {
    return this.stringClass;
  }
  jf() {
    return this.throwableClass;
  }
  kf() {
    return this.booleanArrayClass;
  }
  lf() {
    return this.charArrayClass;
  }
  mf() {
    return this.byteArrayClass;
  }
  nf() {
    return this.shortArrayClass;
  }
  of() {
    return this.intArrayClass;
  }
  pf() {
    return this.longArrayClass;
  }
  qf() {
    return this.floatArrayClass;
  }
  rf() {
    return this.doubleArrayClass;
  }
  functionClass(arity) {
    var tmp0_elvis_lhs = get_functionClasses()[arity];
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.run' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.reflect.js.internal.PrimitiveClasses.functionClass.<anonymous>' call
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp_0 = Function;
      var tmp_1 = 'Function' + arity;
      var result = new PrimitiveKClassImpl(tmp_0, tmp_1, PrimitiveClasses$functionClass$lambda(arity));
      // Inline function 'kotlin.js.asDynamic' call
      get_functionClasses()[arity] = result;
      tmp = result;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
}
class CharacterCodingException extends Exception {
  static uf(message) {
    var $this = this.t4(message);
    captureStack($this, $this.tf_1);
    return $this;
  }
  static vf() {
    return this.uf(null);
  }
}
class StringBuilder {
  static wf(content) {
    var $this = createThis(this);
    $this.t_1 = !(content === undefined) ? content : '';
    return $this;
  }
  static qa(capacity) {
    return this.u();
  }
  static u() {
    return this.wf('');
  }
  a() {
    // Inline function 'kotlin.js.asDynamic' call
    return this.t_1.length;
  }
  b(index) {
    // Inline function 'kotlin.text.getOrElse' call
    var this_0 = this.t_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    if (0 <= index ? index <= (charSequenceLength(this_0) - 1 | 0) : false) {
      tmp = charSequenceGet(this_0, index);
    } else {
      throw IndexOutOfBoundsException.md('index: ' + index + ', length: ' + this.a() + '}');
    }
    return tmp;
  }
  c(startIndex, endIndex) {
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this.t_1.substring(startIndex, endIndex);
  }
  ma(value) {
    this.t_1 = this.t_1 + toString(value);
    return this;
  }
  v(value) {
    this.t_1 = this.t_1 + toString_0(value);
    return this;
  }
  xf(value, startIndex, endIndex) {
    return this.yf(value == null ? 'null' : value, startIndex, endIndex);
  }
  ka(value) {
    this.t_1 = this.t_1 + toString_0(value);
    return this;
  }
  zf(value) {
    return this.la(value.toString());
  }
  ag(value) {
    return this.la(value.toString());
  }
  la(value) {
    var tmp = this;
    var tmp_0 = this.t_1;
    tmp.t_1 = tmp_0 + (value == null ? 'null' : value);
    return this;
  }
  bg(index, value) {
    Companion_instance_5.x5(index, this.a());
    var tmp = this;
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = this.t_1.substring(0, index) + toString(value);
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp.t_1 = tmp_0 + this.t_1.substring(index);
    return this;
  }
  cg(newLength) {
    if (newLength < 0) {
      throw IllegalArgumentException.o('Negative new length: ' + newLength + '.');
    }
    if (newLength <= this.a()) {
      var tmp = this;
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp.t_1 = this.t_1.substring(0, newLength);
    } else {
      var inductionVariable = this.a();
      if (inductionVariable < newLength)
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          this.t_1 = this.t_1 + toString(_Char___init__impl__6a9atx(0));
        }
         while (inductionVariable < newLength);
    }
  }
  toString() {
    return this.t_1;
  }
  dg() {
    this.t_1 = '';
    return this;
  }
  yf(value, startIndex, endIndex) {
    var stringCsq = toString_1(value);
    Companion_instance_5.eg(startIndex, endIndex, stringCsq.length);
    var tmp = this;
    var tmp_0 = this.t_1;
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp.t_1 = tmp_0 + stringCsq.substring(startIndex, endIndex);
    return this;
  }
}
class Companion_4 {
  constructor() {
    Companion_instance_4 = this;
    this.fg_1 = new RegExp('[\\\\^$*+?.()|[\\]{}]', 'g');
    this.gg_1 = new RegExp('[\\\\$]', 'g');
    this.hg_1 = new RegExp('\\$', 'g');
  }
  ig(literal) {
    // Inline function 'kotlin.text.nativeReplace' call
    var pattern = this.fg_1;
    // Inline function 'kotlin.js.asDynamic' call
    return literal.replace(pattern, '\\$&');
  }
}
class sam$kotlin_Comparator$0 {
  constructor(function_0) {
    this.jg_1 = function_0;
  }
  kg(a, b) {
    return this.jg_1(a, b);
  }
  compare(a, b) {
    return this.kg(a, b);
  }
}
class DurationUnit extends Enum {
  constructor(name, ordinal, scale) {
    super(name, ordinal);
    this.ng_1 = scale;
  }
}
class Companion_5 {
  constructor() {
    this.b5_1 = 2147483639;
  }
  w6(index, size) {
    if (index < 0 || index >= size) {
      throw IndexOutOfBoundsException.md('index: ' + index + ', size: ' + size);
    }
  }
  x5(index, size) {
    if (index < 0 || index > size) {
      throw IndexOutOfBoundsException.md('index: ' + index + ', size: ' + size);
    }
  }
  c5(fromIndex, toIndex, size) {
    if (fromIndex < 0 || toIndex > size) {
      throw IndexOutOfBoundsException.md('fromIndex: ' + fromIndex + ', toIndex: ' + toIndex + ', size: ' + size);
    }
    if (fromIndex > toIndex) {
      throw IllegalArgumentException.o('fromIndex: ' + fromIndex + ' > toIndex: ' + toIndex);
    }
  }
  eg(startIndex, endIndex, size) {
    if (startIndex < 0 || endIndex > size) {
      throw IndexOutOfBoundsException.md('startIndex: ' + startIndex + ', endIndex: ' + endIndex + ', size: ' + size);
    }
    if (startIndex > endIndex) {
      throw IllegalArgumentException.o('startIndex: ' + startIndex + ' > endIndex: ' + endIndex);
    }
  }
  h9(oldCapacity, minCapacity) {
    var newCapacity = oldCapacity + (oldCapacity >> 1) | 0;
    if ((newCapacity - minCapacity | 0) < 0)
      newCapacity = minCapacity;
    if ((newCapacity - 2147483639 | 0) > 0)
      newCapacity = minCapacity > 2147483639 ? 2147483647 : 2147483639;
    return newCapacity;
  }
  c6(c) {
    var hashCode_0 = 1;
    var tmp0_iterator = c.w();
    while (tmp0_iterator.x()) {
      var e = tmp0_iterator.y();
      var tmp = imul_0(31, hashCode_0);
      var tmp2_elvis_lhs = e == null ? null : hashCode(e);
      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_0;
  }
  b6(c, other) {
    if (!(c.z() === other.z()))
      return false;
    var otherIterator = other.w();
    var tmp0_iterator = c.w();
    while (tmp0_iterator.x()) {
      var elem = tmp0_iterator.y();
      var elemOther = otherIterator.y();
      if (!equals(elem, elemOther)) {
        return false;
      }
    }
    return true;
  }
}
class AbstractMap$keys$1$iterator$1 {
  constructor($entryIterator) {
    this.og_1 = $entryIterator;
  }
  x() {
    return this.og_1.x();
  }
  y() {
    return this.og_1.y().k1();
  }
}
class AbstractMap$values$1$iterator$1 {
  constructor($entryIterator) {
    this.pg_1 = $entryIterator;
  }
  x() {
    return this.pg_1.x();
  }
  y() {
    return this.pg_1.y().l1();
  }
}
class Companion_6 {}
class AbstractSet extends AbstractCollection {
  static sg($box) {
    return this.l5($box);
  }
  equals(other) {
    if (other === this)
      return true;
    if (!(!(other == null) ? isInterface(other, KtSet) : false))
      return false;
    return Companion_instance_7.t6(this, other);
  }
  hashCode() {
    return Companion_instance_7.u6(this);
  }
}
class AbstractMap$keys$1 extends AbstractSet {
  static rg(this$0, $box) {
    if ($box === VOID)
      $box = {};
    $box.qg_1 = this$0;
    return this.sg($box);
  }
  b8(element) {
    return this.qg_1.o2(element);
  }
  h2(element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.b8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  w() {
    var entryIterator = this.qg_1.j1().w();
    return new AbstractMap$keys$1$iterator$1(entryIterator);
  }
  z() {
    return this.qg_1.z();
  }
}
class AbstractMap$values$1 extends AbstractCollection {
  static vg(this$0, $box) {
    if ($box === VOID)
      $box = {};
    $box.ug_1 = this$0;
    return this.l5($box);
  }
  k8(element) {
    return this.ug_1.p2(element);
  }
  h2(element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.k8((element == null ? true : !(element == null)) ? element : THROW_CCE());
  }
  w() {
    var entryIterator = this.ug_1.j1().w();
    return new AbstractMap$values$1$iterator$1(entryIterator);
  }
  z() {
    return this.ug_1.z();
  }
}
class Companion_7 {
  u6(c) {
    var hashCode_0 = 0;
    var tmp0_iterator = c.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      var tmp = hashCode_0;
      var tmp2_elvis_lhs = element == null ? null : hashCode(element);
      hashCode_0 = tmp + (tmp2_elvis_lhs == null ? 0 : tmp2_elvis_lhs) | 0;
    }
    return hashCode_0;
  }
  t6(c, other) {
    if (!(c.z() === other.z()))
      return false;
    // Inline function 'kotlin.collections.containsAll' call
    return c.i2(other);
  }
}
class Companion_8 {
  constructor() {
    Companion_instance_8 = this;
    var tmp = this;
    // Inline function 'kotlin.emptyArray' call
    tmp.ah_1 = [];
    this.bh_1 = 10;
  }
}
class ArrayDeque extends AbstractMutableList {
  z() {
    return this.zg_1;
  }
  static ch() {
    Companion_getInstance_8();
    var $this = this.y5();
    init_kotlin_collections_ArrayDeque($this);
    $this.yg_1 = Companion_getInstance_8().ah_1;
    return $this;
  }
  f1() {
    return this.zg_1 === 0;
  }
  dh(element) {
    registerModification_0(this);
    ensureCapacity_0(this, this.zg_1 + 1 | 0);
    this.xg_1 = decremented(this, this.xg_1);
    this.yg_1[this.xg_1] = element;
    this.zg_1 = this.zg_1 + 1 | 0;
  }
  eh(element) {
    registerModification_0(this);
    ensureCapacity_0(this, this.zg_1 + 1 | 0);
    var tmp = this.yg_1;
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var index = this.zg_1;
    tmp[positiveMod(this, this.xg_1 + index | 0)] = element;
    this.zg_1 = this.zg_1 + 1 | 0;
  }
  fh() {
    if (this.f1())
      throw NoSuchElementException.k('ArrayDeque is empty.');
    registerModification_0(this);
    // Inline function 'kotlin.collections.ArrayDeque.internalGet' call
    var internalIndex = this.xg_1;
    var tmp = this.yg_1[internalIndex];
    var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    this.yg_1[this.xg_1] = null;
    this.xg_1 = incremented(this, this.xg_1);
    this.zg_1 = this.zg_1 - 1 | 0;
    return element;
  }
  gh() {
    return this.f1() ? null : this.fh();
  }
  hh() {
    if (this.f1())
      throw NoSuchElementException.k('ArrayDeque is empty.');
    registerModification_0(this);
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var index = get_lastIndex_2(this);
    var internalLastIndex = positiveMod(this, this.xg_1 + index | 0);
    // Inline function 'kotlin.collections.ArrayDeque.internalGet' call
    var tmp = this.yg_1[internalLastIndex];
    var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    this.yg_1[internalLastIndex] = null;
    this.zg_1 = this.zg_1 - 1 | 0;
    return element;
  }
  g(element) {
    this.eh(element);
    return true;
  }
  l2(index, element) {
    Companion_instance_5.x5(index, this.zg_1);
    if (index === this.zg_1) {
      this.eh(element);
      return Unit_instance;
    } else if (index === 0) {
      this.dh(element);
      return Unit_instance;
    }
    registerModification_0(this);
    ensureCapacity_0(this, this.zg_1 + 1 | 0);
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var internalIndex = positiveMod(this, this.xg_1 + index | 0);
    if (index < (this.zg_1 + 1 | 0) >> 1) {
      var decrementedInternalIndex = decremented(this, internalIndex);
      var decrementedHead = decremented(this, this.xg_1);
      if (decrementedInternalIndex >= this.xg_1) {
        this.yg_1[decrementedHead] = this.yg_1[this.xg_1];
        // Inline function 'kotlin.collections.copyInto' call
        var this_0 = this.yg_1;
        var destination = this.yg_1;
        var destinationOffset = this.xg_1;
        var startIndex = this.xg_1 + 1 | 0;
        var endIndex = decrementedInternalIndex + 1 | 0;
        arrayCopy(this_0, destination, destinationOffset, startIndex, endIndex);
      } else {
        // Inline function 'kotlin.collections.copyInto' call
        var this_1 = this.yg_1;
        var destination_0 = this.yg_1;
        var destinationOffset_0 = this.xg_1 - 1 | 0;
        var startIndex_0 = this.xg_1;
        var endIndex_0 = this.yg_1.length;
        arrayCopy(this_1, destination_0, destinationOffset_0, startIndex_0, endIndex_0);
        this.yg_1[this.yg_1.length - 1 | 0] = this.yg_1[0];
        // Inline function 'kotlin.collections.copyInto' call
        var this_2 = this.yg_1;
        var destination_1 = this.yg_1;
        var endIndex_1 = decrementedInternalIndex + 1 | 0;
        arrayCopy(this_2, destination_1, 0, 1, endIndex_1);
      }
      this.yg_1[decrementedInternalIndex] = element;
      this.xg_1 = decrementedHead;
    } else {
      // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
      var index_0 = this.zg_1;
      var tail = positiveMod(this, this.xg_1 + index_0 | 0);
      if (internalIndex < tail) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_3 = this.yg_1;
        var destination_2 = this.yg_1;
        var destinationOffset_1 = internalIndex + 1 | 0;
        arrayCopy(this_3, destination_2, destinationOffset_1, internalIndex, tail);
      } else {
        // Inline function 'kotlin.collections.copyInto' call
        var this_4 = this.yg_1;
        var destination_3 = this.yg_1;
        arrayCopy(this_4, destination_3, 1, 0, tail);
        this.yg_1[0] = this.yg_1[this.yg_1.length - 1 | 0];
        // Inline function 'kotlin.collections.copyInto' call
        var this_5 = this.yg_1;
        var destination_4 = this.yg_1;
        var destinationOffset_2 = internalIndex + 1 | 0;
        var endIndex_2 = this.yg_1.length - 1 | 0;
        arrayCopy(this_5, destination_4, destinationOffset_2, internalIndex, endIndex_2);
      }
      this.yg_1[internalIndex] = element;
    }
    this.zg_1 = this.zg_1 + 1 | 0;
  }
  b1(elements) {
    if (elements.f1())
      return false;
    registerModification_0(this);
    ensureCapacity_0(this, this.zg_1 + elements.z() | 0);
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var index = this.zg_1;
    var tmp$ret$0 = positiveMod(this, this.xg_1 + index | 0);
    copyCollectionElements(this, tmp$ret$0, elements);
    return true;
  }
  c1(index) {
    Companion_instance_5.w6(index, this.zg_1);
    // Inline function 'kotlin.collections.ArrayDeque.internalGet' call
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var internalIndex = positiveMod(this, this.xg_1 + index | 0);
    var tmp = this.yg_1[internalIndex];
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  }
  k2(index, element) {
    Companion_instance_5.w6(index, this.zg_1);
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var internalIndex = positiveMod(this, this.xg_1 + index | 0);
    // Inline function 'kotlin.collections.ArrayDeque.internalGet' call
    var tmp = this.yg_1[internalIndex];
    var oldElement = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    this.yg_1[internalIndex] = element;
    return oldElement;
  }
  h2(element) {
    return !(this.a6(element) === -1);
  }
  a6(element) {
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var index = this.zg_1;
    var tail = positiveMod(this, this.xg_1 + index | 0);
    if (this.xg_1 < tail) {
      var inductionVariable = this.xg_1;
      if (inductionVariable < tail)
        do {
          var index_0 = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (equals(element, this.yg_1[index_0]))
            return index_0 - this.xg_1 | 0;
        }
         while (inductionVariable < tail);
    } else if (this.xg_1 >= tail) {
      var inductionVariable_0 = this.xg_1;
      var last = this.yg_1.length;
      if (inductionVariable_0 < last)
        do {
          var index_1 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          if (equals(element, this.yg_1[index_1]))
            return index_1 - this.xg_1 | 0;
        }
         while (inductionVariable_0 < last);
      var inductionVariable_1 = 0;
      if (inductionVariable_1 < tail)
        do {
          var index_2 = inductionVariable_1;
          inductionVariable_1 = inductionVariable_1 + 1 | 0;
          if (equals(element, this.yg_1[index_2]))
            return (index_2 + this.yg_1.length | 0) - this.xg_1 | 0;
        }
         while (inductionVariable_1 < tail);
    }
    return -1;
  }
  m2(index) {
    Companion_instance_5.w6(index, this.zg_1);
    if (index === get_lastIndex_2(this)) {
      return this.hh();
    } else if (index === 0) {
      return this.fh();
    }
    registerModification_0(this);
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var internalIndex = positiveMod(this, this.xg_1 + index | 0);
    // Inline function 'kotlin.collections.ArrayDeque.internalGet' call
    var tmp = this.yg_1[internalIndex];
    var element = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
    if (index < this.zg_1 >> 1) {
      if (internalIndex >= this.xg_1) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_0 = this.yg_1;
        var destination = this.yg_1;
        var destinationOffset = this.xg_1 + 1 | 0;
        var startIndex = this.xg_1;
        arrayCopy(this_0, destination, destinationOffset, startIndex, internalIndex);
      } else {
        // Inline function 'kotlin.collections.copyInto' call
        var this_1 = this.yg_1;
        var destination_0 = this.yg_1;
        arrayCopy(this_1, destination_0, 1, 0, internalIndex);
        this.yg_1[0] = this.yg_1[this.yg_1.length - 1 | 0];
        // Inline function 'kotlin.collections.copyInto' call
        var this_2 = this.yg_1;
        var destination_1 = this.yg_1;
        var destinationOffset_0 = this.xg_1 + 1 | 0;
        var startIndex_0 = this.xg_1;
        var endIndex = this.yg_1.length - 1 | 0;
        arrayCopy(this_2, destination_1, destinationOffset_0, startIndex_0, endIndex);
      }
      this.yg_1[this.xg_1] = null;
      this.xg_1 = incremented(this, this.xg_1);
    } else {
      // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
      var index_0 = get_lastIndex_2(this);
      var internalLastIndex = positiveMod(this, this.xg_1 + index_0 | 0);
      if (internalIndex <= internalLastIndex) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_3 = this.yg_1;
        var destination_2 = this.yg_1;
        var startIndex_1 = internalIndex + 1 | 0;
        var endIndex_0 = internalLastIndex + 1 | 0;
        arrayCopy(this_3, destination_2, internalIndex, startIndex_1, endIndex_0);
      } else {
        // Inline function 'kotlin.collections.copyInto' call
        var this_4 = this.yg_1;
        var destination_3 = this.yg_1;
        var startIndex_2 = internalIndex + 1 | 0;
        var endIndex_1 = this.yg_1.length;
        arrayCopy(this_4, destination_3, internalIndex, startIndex_2, endIndex_1);
        this.yg_1[this.yg_1.length - 1 | 0] = this.yg_1[0];
        // Inline function 'kotlin.collections.copyInto' call
        var this_5 = this.yg_1;
        var destination_4 = this.yg_1;
        var endIndex_2 = internalLastIndex + 1 | 0;
        arrayCopy(this_5, destination_4, 0, 1, endIndex_2);
      }
      this.yg_1[internalLastIndex] = null;
    }
    this.zg_1 = this.zg_1 - 1 | 0;
    return element;
  }
  j2() {
    // Inline function 'kotlin.collections.isNotEmpty' call
    if (!this.f1()) {
      registerModification_0(this);
      // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
      var index = this.zg_1;
      var tail = positiveMod(this, this.xg_1 + index | 0);
      nullifyNonEmpty(this, this.xg_1, tail);
    }
    this.xg_1 = 0;
    this.zg_1 = 0;
  }
  ih(array) {
    var tmp = array.length >= this.zg_1 ? array : arrayOfNulls(array, this.zg_1);
    var dest = isArray(tmp) ? tmp : THROW_CCE();
    // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
    var index = this.zg_1;
    var tail = positiveMod(this, this.xg_1 + index | 0);
    if (this.xg_1 < tail) {
      // Inline function 'kotlin.collections.copyInto' call
      var this_0 = this.yg_1;
      var startIndex = this.xg_1;
      arrayCopy(this_0, dest, 0, startIndex, tail);
    } else {
      // Inline function 'kotlin.collections.isNotEmpty' call
      if (!this.f1()) {
        // Inline function 'kotlin.collections.copyInto' call
        var this_1 = this.yg_1;
        var startIndex_0 = this.xg_1;
        var endIndex = this.yg_1.length;
        arrayCopy(this_1, dest, 0, startIndex_0, endIndex);
        // Inline function 'kotlin.collections.copyInto' call
        var this_2 = this.yg_1;
        var destinationOffset = this.yg_1.length - this.xg_1 | 0;
        arrayCopy(this_2, dest, destinationOffset, 0, tail);
      }
    }
    var tmp_0 = terminateCollectionToArray(this.zg_1, dest);
    return isArray(tmp_0) ? tmp_0 : THROW_CCE();
  }
  y6() {
    // Inline function 'kotlin.arrayOfNulls' call
    var size = this.zg_1;
    var tmp$ret$0 = fillArrayVal(Array(size), null);
    return this.ih(tmp$ret$0);
  }
  toArray() {
    return this.y6();
  }
  z5(fromIndex, toIndex) {
    Companion_instance_5.c5(fromIndex, toIndex, this.zg_1);
    var length = toIndex - fromIndex | 0;
    if (length === 0)
      return Unit_instance;
    else if (length === this.zg_1) {
      this.j2();
      return Unit_instance;
    } else if (length === 1) {
      this.m2(fromIndex);
      return Unit_instance;
    }
    registerModification_0(this);
    if (fromIndex < (this.zg_1 - toIndex | 0)) {
      removeRangeShiftPreceding(this, fromIndex, toIndex);
      var newHead = positiveMod(this, this.xg_1 + length | 0);
      nullifyNonEmpty(this, this.xg_1, newHead);
      this.xg_1 = newHead;
    } else {
      removeRangeShiftSucceeding(this, fromIndex, toIndex);
      // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
      var index = this.zg_1;
      var tail = positiveMod(this, this.xg_1 + index | 0);
      nullifyNonEmpty(this, negativeMod(this, tail - length | 0), tail);
    }
    this.zg_1 = this.zg_1 - length | 0;
  }
}
class EmptyList {
  constructor() {
    EmptyList_instance = this;
    this.jh_1 = new Long(-1478467534, -1720727600);
  }
  equals(other) {
    var tmp;
    if (!(other == null) ? isInterface(other, KtList) : false) {
      tmp = other.f1();
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return 1;
  }
  toString() {
    return '[]';
  }
  z() {
    return 0;
  }
  f1() {
    return true;
  }
  kh(element) {
    return false;
  }
  h2(element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.kh(tmp);
  }
  lh(elements) {
    return elements.f1();
  }
  i2(elements) {
    return this.lh(elements);
  }
  c1(index) {
    throw IndexOutOfBoundsException.md("Empty list doesn't contain element at index " + index + '.');
  }
  w() {
    return EmptyIterator_instance;
  }
}
class ArrayAsCollection {
  constructor(values, isVarargs) {
    this.mh_1 = values;
    this.nh_1 = isVarargs;
  }
  z() {
    return this.mh_1.length;
  }
  f1() {
    // Inline function 'kotlin.collections.isEmpty' call
    return this.mh_1.length === 0;
  }
  oh(element) {
    return contains(this.mh_1, element);
  }
  ph(elements) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var tmp;
      if (isInterface(elements, Collection)) {
        tmp = elements.f1();
      } else {
        tmp = false;
      }
      if (tmp) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = elements.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'kotlin.collections.ArrayAsCollection.containsAll.<anonymous>' call
        if (!this.oh(element)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  i2(elements) {
    return this.ph(elements);
  }
  w() {
    return arrayIterator(this.mh_1);
  }
}
class EmptyIterator {
  x() {
    return false;
  }
  y() {
    throw NoSuchElementException.r5();
  }
}
class IndexedValue {
  constructor(index, value) {
    this.qh_1 = index;
    this.rh_1 = value;
  }
  toString() {
    return 'IndexedValue(index=' + this.qh_1 + ', value=' + toString_0(this.rh_1) + ')';
  }
  hashCode() {
    var result = this.qh_1;
    result = imul_0(result, 31) + (this.rh_1 == null ? 0 : hashCode(this.rh_1)) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof IndexedValue))
      return false;
    var tmp0_other_with_cast = other instanceof IndexedValue ? other : THROW_CCE();
    if (!(this.qh_1 === tmp0_other_with_cast.qh_1))
      return false;
    if (!equals(this.rh_1, tmp0_other_with_cast.rh_1))
      return false;
    return true;
  }
}
class IndexingIterable {
  constructor(iteratorFactory) {
    this.sh_1 = iteratorFactory;
  }
  w() {
    return new IndexingIterator(this.sh_1());
  }
}
class IndexingIterator {
  constructor(iterator) {
    this.th_1 = iterator;
    this.uh_1 = 0;
  }
  x() {
    return this.th_1.x();
  }
  y() {
    var tmp1 = this.uh_1;
    this.uh_1 = tmp1 + 1 | 0;
    return new IndexedValue(checkIndexOverflow(tmp1), this.th_1.y());
  }
}
class MapWithDefault {}
class EmptyMap {
  constructor() {
    EmptyMap_instance = this;
    this.wh_1 = new Long(-888910638, 1920087921);
  }
  equals(other) {
    var tmp;
    if (!(other == null) ? isInterface(other, KtMap) : false) {
      tmp = other.f1();
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return 0;
  }
  toString() {
    return '{}';
  }
  z() {
    return 0;
  }
  f1() {
    return true;
  }
  xh(key) {
    return false;
  }
  o2(key) {
    if (!(key == null ? true : !(key == null)))
      return false;
    return this.xh((key == null ? true : !(key == null)) ? key : THROW_CCE());
  }
  yh(key) {
    return null;
  }
  q2(key) {
    if (!(key == null ? true : !(key == null)))
      return null;
    return this.yh((key == null ? true : !(key == null)) ? key : THROW_CCE());
  }
  j1() {
    return EmptySet_getInstance();
  }
  r2() {
    return EmptySet_getInstance();
  }
  s2() {
    return EmptyList_getInstance();
  }
}
class IntIterator {
  y() {
    return this.di();
  }
}
class CharIterator {
  ei() {
    return this.fi();
  }
  y() {
    return new Char(this.ei());
  }
}
class SequenceScope {}
class SequenceBuilderIterator extends SequenceScope {
  constructor() {
    super();
    this.hi_1 = 0;
    this.ii_1 = null;
    this.ji_1 = null;
    this.ki_1 = null;
  }
  x() {
    while (true) {
      switch (this.hi_1) {
        case 0:
          break;
        case 1:
          if (ensureNotNull(this.ji_1).x()) {
            this.hi_1 = 2;
            return true;
          } else {
            this.ji_1 = null;
          }

          break;
        case 4:
          return false;
        case 3:
        case 2:
          return true;
        default:
          throw exceptionalState(this);
      }
      this.hi_1 = 5;
      var step = ensureNotNull(this.ki_1);
      this.ki_1 = null;
      // Inline function 'kotlin.coroutines.resume' call
      // Inline function 'kotlin.Companion.success' call
      var tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_instance);
      step.wb(tmp$ret$0);
    }
  }
  y() {
    switch (this.hi_1) {
      case 0:
      case 1:
        return nextNotReady(this);
      case 2:
        this.hi_1 = 1;
        return ensureNotNull(this.ji_1).y();
      case 3:
        this.hi_1 = 0;
        var tmp = this.ii_1;
        var result = (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
        this.ii_1 = null;
        return result;
      default:
        throw exceptionalState(this);
    }
  }
  gi(value, $completion) {
    this.ii_1 = value;
    this.hi_1 = 3;
    // Inline function 'kotlin.sequences.SequenceBuilderIterator.yield.<anonymous>' call
    this.ki_1 = $completion;
    return get_COROUTINE_SUSPENDED();
  }
  li(result) {
    // Inline function 'kotlin.getOrThrow' call
    throwOnFailure(result);
    var tmp = _Result___get_value__impl__bjfvqg(result);
    (tmp == null ? true : !(tmp == null)) || THROW_CCE();
    this.hi_1 = 4;
  }
  wb(result) {
    return this.li(result);
  }
  rb() {
    return EmptyCoroutineContext_getInstance();
  }
}
class TransformingSequence$iterator$1 {
  constructor(this$0) {
    this.ni_1 = this$0;
    this.mi_1 = this$0.oi_1.w();
  }
  y() {
    return this.ni_1.pi_1(this.mi_1.y());
  }
  x() {
    return this.mi_1.x();
  }
}
class TransformingSequence {
  constructor(sequence, transformer) {
    this.oi_1 = sequence;
    this.pi_1 = transformer;
  }
  w() {
    return new TransformingSequence$iterator$1(this);
  }
}
class EmptySet {
  constructor() {
    EmptySet_instance = this;
    this.qi_1 = new Long(1993859828, 793161749);
  }
  equals(other) {
    var tmp;
    if (!(other == null) ? isInterface(other, KtSet) : false) {
      tmp = other.f1();
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return 0;
  }
  toString() {
    return '[]';
  }
  z() {
    return 0;
  }
  f1() {
    return true;
  }
  kh(element) {
    return false;
  }
  h2(element) {
    if (true)
      return false;
    var tmp;
    if (false) {} else {
      tmp = THROW_CCE();
    }
    return this.kh(tmp);
  }
  lh(elements) {
    return elements.f1();
  }
  i2(elements) {
    return this.lh(elements);
  }
  w() {
    return EmptyIterator_instance;
  }
}
class Key {}
class CoroutineContext {}
function plus(context) {
  var tmp;
  if (context === EmptyCoroutineContext_getInstance()) {
    tmp = this;
  } else {
    tmp = context.wi(this, CoroutineContext$plus$lambda);
  }
  return tmp;
}
class Element {}
function get(key) {
  var tmp;
  if (equals(this.k1(), key)) {
    tmp = isInterface(this, Element) ? this : THROW_CCE();
  } else {
    tmp = null;
  }
  return tmp;
}
function fold(initial, operation) {
  return operation(initial, this);
}
function minusKey(key) {
  return equals(this.k1(), key) ? EmptyCoroutineContext_getInstance() : this;
}
class ContinuationInterceptor {}
function releaseInterceptedContinuation(continuation) {
}
function get_0(key) {
  if (key instanceof AbstractCoroutineContextKey) {
    var tmp;
    if (key.ui(this.k1())) {
      var tmp_0 = key.ti(this);
      tmp = (!(tmp_0 == null) ? isInterface(tmp_0, Element) : false) ? tmp_0 : null;
    } else {
      tmp = null;
    }
    return tmp;
  }
  var tmp_1;
  if (Key_instance === key) {
    tmp_1 = isInterface(this, Element) ? this : THROW_CCE();
  } else {
    tmp_1 = null;
  }
  return tmp_1;
}
function minusKey_0(key) {
  if (key instanceof AbstractCoroutineContextKey) {
    return key.ui(this.k1()) && !(key.ti(this) == null) ? EmptyCoroutineContext_getInstance() : this;
  }
  return Key_instance === key ? EmptyCoroutineContext_getInstance() : this;
}
class EmptyCoroutineContext {
  constructor() {
    EmptyCoroutineContext_instance = this;
    this.yi_1 = new Long(0, 0);
  }
  yb(key) {
    return null;
  }
  wi(initial, operation) {
    return initial;
  }
  xi(context) {
    return context;
  }
  vi(key) {
    return this;
  }
  hashCode() {
    return 0;
  }
  toString() {
    return 'EmptyCoroutineContext';
  }
}
class CombinedContext {
  constructor(left, element) {
    this.zi_1 = left;
    this.aj_1 = element;
  }
  yb(key) {
    var cur = this;
    while (true) {
      var tmp0_safe_receiver = cur.aj_1.yb(key);
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        return tmp0_safe_receiver;
      }
      var next = cur.zi_1;
      if (next instanceof CombinedContext) {
        cur = next;
      } else {
        return next.yb(key);
      }
    }
  }
  wi(initial, operation) {
    return operation(this.zi_1.wi(initial, operation), this.aj_1);
  }
  vi(key) {
    if (this.aj_1.yb(key) == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return this.zi_1;
    }
    var newLeft = this.zi_1.vi(key);
    return newLeft === this.zi_1 ? this : newLeft === EmptyCoroutineContext_getInstance() ? this.aj_1 : new CombinedContext(newLeft, this.aj_1);
  }
  equals(other) {
    var tmp;
    if (this === other) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      if (other instanceof CombinedContext) {
        tmp_1 = size(other) === size(this);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = containsAll(other, this);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  hashCode() {
    return hashCode(this.zi_1) + hashCode(this.aj_1) | 0;
  }
  toString() {
    return '[' + this.wi('', CombinedContext$toString$lambda) + ']';
  }
}
class AbstractCoroutineContextKey {
  constructor(baseKey, safeCast) {
    this.ri_1 = safeCast;
    var tmp = this;
    var tmp_0;
    if (baseKey instanceof AbstractCoroutineContextKey) {
      tmp_0 = baseKey.si_1;
    } else {
      tmp_0 = baseKey;
    }
    tmp.si_1 = tmp_0;
  }
  ti(element) {
    return this.ri_1(element);
  }
  ui(key) {
    return key === this || this.si_1 === key;
  }
}
class AbstractCoroutineContextElement {
  constructor(key) {
    this.bj_1 = key;
  }
  k1() {
    return this.bj_1;
  }
}
class CoroutineSingletons extends Enum {}
class Companion_9 {
  constructor() {
    Companion_instance_9 = this;
    this.m1_1 = new IntRange(1, 0);
  }
}
class IntProgression {
  constructor(start, endInclusive, step) {
    if (step === 0)
      throw IllegalArgumentException.o('Step must be non-zero.');
    if (step === -2147483648)
      throw IllegalArgumentException.o('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.r1_1 = start;
    this.s1_1 = getProgressionLastElement(start, endInclusive, step);
    this.t1_1 = step;
  }
  w() {
    return new IntProgressionIterator(this.r1_1, this.s1_1, this.t1_1);
  }
  f1() {
    return this.t1_1 > 0 ? this.r1_1 > this.s1_1 : this.r1_1 < this.s1_1;
  }
  equals(other) {
    var tmp;
    if (other instanceof IntProgression) {
      tmp = this.f1() && other.f1() || (this.r1_1 === other.r1_1 && this.s1_1 === other.s1_1 && this.t1_1 === other.t1_1);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return this.f1() ? -1 : imul_0(31, imul_0(31, this.r1_1) + this.s1_1 | 0) + this.t1_1 | 0;
  }
  toString() {
    return this.t1_1 > 0 ? '' + this.r1_1 + '..' + this.s1_1 + ' step ' + this.t1_1 : '' + this.r1_1 + ' downTo ' + this.s1_1 + ' step ' + (-this.t1_1 | 0);
  }
}
class IntRange extends IntProgression {
  constructor(start, endInclusive) {
    Companion_getInstance_9();
    super(start, endInclusive, 1);
  }
  fj() {
    return this.r1_1;
  }
  gj() {
    return this.s1_1;
  }
  f1() {
    return this.r1_1 > this.s1_1;
  }
  equals(other) {
    var tmp;
    if (other instanceof IntRange) {
      tmp = this.f1() && other.f1() || (this.r1_1 === other.r1_1 && this.s1_1 === other.s1_1);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return this.f1() ? -1 : imul_0(31, this.r1_1) + this.s1_1 | 0;
  }
  toString() {
    return '' + this.r1_1 + '..' + this.s1_1;
  }
}
class Companion_10 {
  constructor() {
    Companion_instance_10 = this;
    this.hj_1 = new CharRange(_Char___init__impl__6a9atx(1), _Char___init__impl__6a9atx(0));
  }
}
class CharProgression {
  constructor(start, endInclusive, step) {
    if (step === 0)
      throw IllegalArgumentException.o('Step must be non-zero.');
    if (step === -2147483648)
      throw IllegalArgumentException.o('Step must be greater than Int.MIN_VALUE to avoid overflow on negation.');
    this.lj_1 = start;
    var tmp = this;
    // Inline function 'kotlin.code' call
    var tmp_0 = Char__toInt_impl_vasixd(start);
    // Inline function 'kotlin.code' call
    var tmp$ret$1 = Char__toInt_impl_vasixd(endInclusive);
    tmp.mj_1 = numberToChar(getProgressionLastElement(tmp_0, tmp$ret$1, step));
    this.nj_1 = step;
  }
  w() {
    return new CharProgressionIterator(this.lj_1, this.mj_1, this.nj_1);
  }
  f1() {
    return this.nj_1 > 0 ? Char__compareTo_impl_ypi4mb(this.lj_1, this.mj_1) > 0 : Char__compareTo_impl_ypi4mb(this.lj_1, this.mj_1) < 0;
  }
  equals(other) {
    var tmp;
    if (other instanceof CharProgression) {
      tmp = this.f1() && other.f1() || (this.lj_1 === other.lj_1 && this.mj_1 === other.mj_1 && this.nj_1 === other.nj_1);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    var tmp;
    if (this.f1()) {
      tmp = -1;
    } else {
      // Inline function 'kotlin.code' call
      var this_0 = this.lj_1;
      var tmp$ret$0 = Char__toInt_impl_vasixd(this_0);
      var tmp_0 = imul_0(31, tmp$ret$0);
      // Inline function 'kotlin.code' call
      var this_1 = this.mj_1;
      var tmp$ret$1 = Char__toInt_impl_vasixd(this_1);
      tmp = imul_0(31, tmp_0 + tmp$ret$1 | 0) + this.nj_1 | 0;
    }
    return tmp;
  }
  toString() {
    return this.nj_1 > 0 ? toString(this.lj_1) + '..' + toString(this.mj_1) + ' step ' + this.nj_1 : toString(this.lj_1) + ' downTo ' + toString(this.mj_1) + ' step ' + (-this.nj_1 | 0);
  }
}
class CharRange extends CharProgression {
  constructor(start, endInclusive) {
    Companion_getInstance_10();
    super(start, endInclusive, 1);
  }
  f1() {
    return Char__compareTo_impl_ypi4mb(this.lj_1, this.mj_1) > 0;
  }
  equals(other) {
    var tmp;
    if (other instanceof CharRange) {
      tmp = this.f1() && other.f1() || (this.lj_1 === other.lj_1 && this.mj_1 === other.mj_1);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    var tmp;
    if (this.f1()) {
      tmp = -1;
    } else {
      // Inline function 'kotlin.code' call
      var this_0 = this.lj_1;
      var tmp$ret$0 = Char__toInt_impl_vasixd(this_0);
      var tmp_0 = imul_0(31, tmp$ret$0);
      // Inline function 'kotlin.code' call
      var this_1 = this.mj_1;
      tmp = tmp_0 + Char__toInt_impl_vasixd(this_1) | 0;
    }
    return tmp;
  }
  toString() {
    return toString(this.lj_1) + '..' + toString(this.mj_1);
  }
}
class IntProgressionIterator extends IntIterator {
  constructor(first, last, step) {
    super();
    this.oj_1 = step;
    this.pj_1 = last;
    this.qj_1 = this.oj_1 > 0 ? first <= last : first >= last;
    this.rj_1 = this.qj_1 ? first : this.pj_1;
  }
  x() {
    return this.qj_1;
  }
  di() {
    var value = this.rj_1;
    if (value === this.pj_1) {
      if (!this.qj_1)
        throw NoSuchElementException.r5();
      this.qj_1 = false;
    } else {
      this.rj_1 = this.rj_1 + this.oj_1 | 0;
    }
    return value;
  }
}
class CharProgressionIterator extends CharIterator {
  constructor(first, last, step) {
    super();
    this.sj_1 = step;
    var tmp = this;
    // Inline function 'kotlin.code' call
    tmp.tj_1 = Char__toInt_impl_vasixd(last);
    this.uj_1 = this.sj_1 > 0 ? Char__compareTo_impl_ypi4mb(first, last) <= 0 : Char__compareTo_impl_ypi4mb(first, last) >= 0;
    var tmp_0 = this;
    var tmp_1;
    if (this.uj_1) {
      // Inline function 'kotlin.code' call
      tmp_1 = Char__toInt_impl_vasixd(first);
    } else {
      tmp_1 = this.tj_1;
    }
    tmp_0.vj_1 = tmp_1;
  }
  x() {
    return this.uj_1;
  }
  fi() {
    var value = this.vj_1;
    if (value === this.tj_1) {
      if (!this.uj_1)
        throw NoSuchElementException.r5();
      this.uj_1 = false;
    } else {
      this.vj_1 = this.vj_1 + this.sj_1 | 0;
    }
    return numberToChar(value);
  }
}
class Companion_11 {
  n1(rangeStart, rangeEnd, step) {
    return new IntProgression(rangeStart, rangeEnd, step);
  }
}
class Companion_12 {}
class KTypeParameter {}
class DelimitedRangesSequence$iterator$1 {
  constructor(this$0) {
    this.bk_1 = this$0;
    this.wj_1 = -1;
    this.xj_1 = coerceIn_0(this$0.dk_1, 0, charSequenceLength(this$0.ck_1));
    this.yj_1 = this.xj_1;
    this.zj_1 = null;
    this.ak_1 = 0;
  }
  y() {
    if (this.wj_1 === -1) {
      calcNext(this);
    }
    if (this.wj_1 === 0)
      throw NoSuchElementException.r5();
    var tmp = this.zj_1;
    var result = tmp instanceof IntRange ? tmp : THROW_CCE();
    this.zj_1 = null;
    this.wj_1 = -1;
    return result;
  }
  x() {
    if (this.wj_1 === -1) {
      calcNext(this);
    }
    return this.wj_1 === 1;
  }
}
class DelimitedRangesSequence {
  constructor(input, startIndex, limit, getNextMatch) {
    this.ck_1 = input;
    this.dk_1 = startIndex;
    this.ek_1 = limit;
    this.fk_1 = getNextMatch;
  }
  w() {
    return new DelimitedRangesSequence$iterator$1(this);
  }
}
class Companion_13 {
  constructor() {
    Companion_instance_13 = this;
    this.gk_1 = _Duration___init__impl__kdtzql(new Long(0, 0));
    this.hk_1 = durationOfMillis(new Long(-1, 1073741823));
    this.ik_1 = durationOfMillis(new Long(1, -1073741824));
  }
  jk(value) {
    var tmp;
    try {
      tmp = parseDuration(value, true);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof IllegalArgumentException) {
        var e = $p;
        throw IllegalArgumentException.gd("Invalid ISO duration string format: '" + value + "'.", e);
      } else {
        throw $p;
      }
    }
    return tmp;
  }
}
class Duration {
  constructor(rawValue) {
    Companion_getInstance_13();
    this.kk_1 = rawValue;
  }
  lk(other) {
    return Duration__compareTo_impl_pchp0f(this.kk_1, other);
  }
  d(other) {
    return Duration__compareTo_impl_pchp0f_0(this, other);
  }
  toString() {
    return Duration__toString_impl_8d916b(this.kk_1);
  }
  hashCode() {
    return Duration__hashCode_impl_u4exz6(this.kk_1);
  }
  equals(other) {
    return Duration__equals_impl_ygj6w6(this.kk_1, other);
  }
}
class DeepRecursiveScope {}
class DeepRecursiveFunction {
  constructor(block) {
    this.nk_1 = block;
  }
}
class DeepRecursiveScopeImpl extends DeepRecursiveScope {
  constructor(block, value) {
    super();
    var tmp = this;
    tmp.ok_1 = isSuspendFunction(block, 2) ? block : THROW_CCE();
    this.pk_1 = value;
    var tmp_0 = this;
    tmp_0.qk_1 = isInterface(this, Continuation) ? this : THROW_CCE();
    this.rk_1 = get_UNDEFINED_RESULT();
  }
  rb() {
    return EmptyCoroutineContext_getInstance();
  }
  tk(result) {
    this.qk_1 = null;
    this.rk_1 = result;
  }
  wb(result) {
    return this.tk(result);
  }
  mk(value, $completion) {
    // Inline function 'kotlin.DeepRecursiveScopeImpl.callRecursive.<anonymous>' call
    var tmp = this;
    tmp.qk_1 = isInterface($completion, Continuation) ? $completion : THROW_CCE();
    this.pk_1 = value;
    return get_COROUTINE_SUSPENDED();
  }
  sk() {
    $l$loop: while (true) {
      var result = this.rk_1;
      var tmp0_elvis_lhs = this.qk_1;
      var tmp;
      if (tmp0_elvis_lhs == null) {
        // Inline function 'kotlin.getOrThrow' call
        var this_0 = new Result(result) instanceof Result ? result : THROW_CCE();
        throwOnFailure(this_0);
        var tmp_0 = _Result___get_value__impl__bjfvqg(this_0);
        return (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : THROW_CCE();
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var cont = tmp;
      if (equals(get_UNDEFINED_RESULT(), result)) {
        var tmp_1;
        try {
          // Inline function 'kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn' call
          var this_1 = this.ok_1;
          var param = this.pk_1;
          // Inline function 'kotlin.js.asDynamic' call
          var a = this_1;
          tmp_1 = typeof a === 'function' ? a(this, param, cont) : this_1.uk(this, param, cont);
        } catch ($p) {
          var tmp_2;
          if ($p instanceof Error) {
            var e = $p;
            // Inline function 'kotlin.coroutines.resumeWithException' call
            // Inline function 'kotlin.Companion.failure' call
            var tmp$ret$3 = _Result___init__impl__xyqfz8(createFailure(e));
            cont.wb(tmp$ret$3);
            continue $l$loop;
          } else {
            throw $p;
          }
        }
        var r = tmp_1;
        if (!(r === get_COROUTINE_SUSPENDED())) {
          // Inline function 'kotlin.coroutines.resume' call
          // Inline function 'kotlin.Companion.success' call
          var value = (r == null ? true : !(r == null)) ? r : THROW_CCE();
          var tmp$ret$5 = _Result___init__impl__xyqfz8(value);
          cont.wb(tmp$ret$5);
        }
      } else {
        this.rk_1 = get_UNDEFINED_RESULT();
        cont.wb(result);
      }
    }
  }
}
class LazyThreadSafetyMode extends Enum {}
class UnsafeLazyImpl {
  constructor(initializer) {
    this.vk_1 = initializer;
    this.wk_1 = UNINITIALIZED_VALUE_instance;
  }
  l1() {
    if (this.wk_1 === UNINITIALIZED_VALUE_instance) {
      this.wk_1 = ensureNotNull(this.vk_1)();
      this.vk_1 = null;
    }
    var tmp = this.wk_1;
    return (tmp == null ? true : !(tmp == null)) ? tmp : THROW_CCE();
  }
  xk() {
    return !(this.wk_1 === UNINITIALIZED_VALUE_instance);
  }
  toString() {
    return this.xk() ? toString_0(this.l1()) : 'Lazy value not initialized yet.';
  }
}
class UNINITIALIZED_VALUE {}
class Companion_14 {}
class Failure {
  constructor(exception) {
    this.yk_1 = exception;
  }
  equals(other) {
    var tmp;
    if (other instanceof Failure) {
      tmp = equals(this.yk_1, other.yk_1);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return hashCode(this.yk_1);
  }
  toString() {
    return 'Failure(' + this.yk_1.toString() + ')';
  }
}
class Result {
  constructor(value) {
    this.zk_1 = value;
  }
  toString() {
    return Result__toString_impl_yu5r8k(this.zk_1);
  }
  hashCode() {
    return Result__hashCode_impl_d2zufp(this.zk_1);
  }
  equals(other) {
    return Result__equals_impl_bxgmep(this.zk_1, other);
  }
}
class NotImplementedError extends Error_0 {
  static oc(message) {
    message = message === VOID ? 'An operation is not implemented.' : message;
    var $this = this.pd(message);
    captureStack($this, $this.nc_1);
    return $this;
  }
}
class Pair {
  constructor(first, second) {
    this.zh_1 = first;
    this.ai_1 = second;
  }
  toString() {
    return '(' + toString_0(this.zh_1) + ', ' + toString_0(this.ai_1) + ')';
  }
  bi() {
    return this.zh_1;
  }
  ci() {
    return this.ai_1;
  }
  hashCode() {
    var result = this.zh_1 == null ? 0 : hashCode(this.zh_1);
    result = imul_0(result, 31) + (this.ai_1 == null ? 0 : hashCode(this.ai_1)) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof Pair))
      return false;
    var tmp0_other_with_cast = other instanceof Pair ? other : THROW_CCE();
    if (!equals(this.zh_1, tmp0_other_with_cast.zh_1))
      return false;
    if (!equals(this.ai_1, tmp0_other_with_cast.ai_1))
      return false;
    return true;
  }
}
class Triple {
  constructor(first, second, third) {
    this.al_1 = first;
    this.bl_1 = second;
    this.cl_1 = third;
  }
  toString() {
    return '(' + toString_0(this.al_1) + ', ' + toString_0(this.bl_1) + ', ' + toString_0(this.cl_1) + ')';
  }
  hashCode() {
    var result = this.al_1 == null ? 0 : hashCode(this.al_1);
    result = imul_0(result, 31) + (this.bl_1 == null ? 0 : hashCode(this.bl_1)) | 0;
    result = imul_0(result, 31) + (this.cl_1 == null ? 0 : hashCode(this.cl_1)) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof Triple))
      return false;
    var tmp0_other_with_cast = other instanceof Triple ? other : THROW_CCE();
    if (!equals(this.al_1, tmp0_other_with_cast.al_1))
      return false;
    if (!equals(this.bl_1, tmp0_other_with_cast.bl_1))
      return false;
    if (!equals(this.cl_1, tmp0_other_with_cast.cl_1))
      return false;
    return true;
  }
}
class Companion_15 {
  constructor() {
    Companion_instance_15 = this;
    this.dl_1 = _UByte___init__impl__g9hnc4(0);
    this.el_1 = _UByte___init__impl__g9hnc4(-1);
    this.fl_1 = 1;
    this.gl_1 = 8;
  }
}
class UByte {
  constructor(data) {
    Companion_getInstance_15();
    this.hl_1 = data;
  }
  il(other) {
    return UByte__compareTo_impl_5w5192(this.hl_1, other);
  }
  d(other) {
    return UByte__compareTo_impl_5w5192_0(this, other);
  }
  toString() {
    return UByte__toString_impl_v72jg(this.hl_1);
  }
  hashCode() {
    return UByte__hashCode_impl_mmczcb(this.hl_1);
  }
  equals(other) {
    return UByte__equals_impl_nvqtsf(this.hl_1, other);
  }
}
class Iterator {
  constructor(array) {
    this.jl_1 = array;
    this.kl_1 = 0;
  }
  x() {
    return this.kl_1 < this.jl_1.length;
  }
  ll() {
    var tmp;
    if (this.kl_1 < this.jl_1.length) {
      // Inline function 'kotlin.toUByte' call
      var tmp1 = this.kl_1;
      this.kl_1 = tmp1 + 1 | 0;
      var this_0 = this.jl_1[tmp1];
      tmp = _UByte___init__impl__g9hnc4(this_0);
    } else {
      throw NoSuchElementException.k(this.kl_1.toString());
    }
    return tmp;
  }
  y() {
    return new UByte(this.ll());
  }
}
class UByteArray {
  constructor(storage) {
    this.ml_1 = storage;
  }
  z() {
    return _UByteArray___get_size__impl__h6pkdv(this.ml_1);
  }
  w() {
    return UByteArray__iterator_impl_509y1p(this.ml_1);
  }
  nl(elements) {
    return UByteArray__containsAll_impl_v9s6dj(this.ml_1, elements);
  }
  i2(elements) {
    return UByteArray__containsAll_impl_v9s6dj_0(this, elements);
  }
  f1() {
    return UByteArray__isEmpty_impl_nbfqsa(this.ml_1);
  }
  toString() {
    return UByteArray__toString_impl_ukpl97(this.ml_1);
  }
  hashCode() {
    return UByteArray__hashCode_impl_ip8jx2(this.ml_1);
  }
  equals(other) {
    return UByteArray__equals_impl_roka4u(this.ml_1, other);
  }
}
class Companion_16 {
  constructor() {
    Companion_instance_16 = this;
    this.ol_1 = _UInt___init__impl__l7qpdl(0);
    this.pl_1 = _UInt___init__impl__l7qpdl(-1);
    this.ql_1 = 4;
    this.rl_1 = 32;
  }
}
class UInt {
  constructor(data) {
    Companion_getInstance_16();
    this.sl_1 = data;
  }
  tl(other) {
    return UInt__compareTo_impl_yacclj(this.sl_1, other);
  }
  d(other) {
    return UInt__compareTo_impl_yacclj_0(this, other);
  }
  toString() {
    return UInt__toString_impl_dbgl21(this.sl_1);
  }
  hashCode() {
    return UInt__hashCode_impl_z2mhuw(this.sl_1);
  }
  equals(other) {
    return UInt__equals_impl_ffdoxg(this.sl_1, other);
  }
}
class Iterator_0 {
  constructor(array) {
    this.ul_1 = array;
    this.vl_1 = 0;
  }
  x() {
    return this.vl_1 < this.ul_1.length;
  }
  wl() {
    var tmp;
    if (this.vl_1 < this.ul_1.length) {
      // Inline function 'kotlin.toUInt' call
      var tmp1 = this.vl_1;
      this.vl_1 = tmp1 + 1 | 0;
      var this_0 = this.ul_1[tmp1];
      tmp = _UInt___init__impl__l7qpdl(this_0);
    } else {
      throw NoSuchElementException.k(this.vl_1.toString());
    }
    return tmp;
  }
  y() {
    return new UInt(this.wl());
  }
}
class UIntArray {
  constructor(storage) {
    this.xl_1 = storage;
  }
  z() {
    return _UIntArray___get_size__impl__r6l8ci(this.xl_1);
  }
  w() {
    return UIntArray__iterator_impl_tkdv7k(this.xl_1);
  }
  yl(elements) {
    return UIntArray__containsAll_impl_414g22(this.xl_1, elements);
  }
  i2(elements) {
    return UIntArray__containsAll_impl_414g22_0(this, elements);
  }
  f1() {
    return UIntArray__isEmpty_impl_vd8j4n(this.xl_1);
  }
  toString() {
    return UIntArray__toString_impl_3zy802(this.xl_1);
  }
  hashCode() {
    return UIntArray__hashCode_impl_hr7ost(this.xl_1);
  }
  equals(other) {
    return UIntArray__equals_impl_flcmof(this.xl_1, other);
  }
}
class Companion_17 {
  constructor() {
    Companion_instance_17 = this;
    this.zl_1 = _ULong___init__impl__c78o9k(new Long(0, 0));
    this.am_1 = _ULong___init__impl__c78o9k(new Long(-1, -1));
    this.bm_1 = 8;
    this.cm_1 = 64;
  }
}
class ULong {
  constructor(data) {
    Companion_getInstance_17();
    this.dm_1 = data;
  }
  em(other) {
    return ULong__compareTo_impl_38i7tu(this.dm_1, other);
  }
  d(other) {
    return ULong__compareTo_impl_38i7tu_0(this, other);
  }
  toString() {
    return ULong__toString_impl_f9au7k(this.dm_1);
  }
  hashCode() {
    return ULong__hashCode_impl_6hv2lb(this.dm_1);
  }
  equals(other) {
    return ULong__equals_impl_o0gnyb(this.dm_1, other);
  }
}
class Iterator_1 {
  constructor(array) {
    this.fm_1 = array;
    this.gm_1 = 0;
  }
  x() {
    return this.gm_1 < this.fm_1.length;
  }
  hm() {
    var tmp;
    if (this.gm_1 < this.fm_1.length) {
      // Inline function 'kotlin.toULong' call
      var tmp1 = this.gm_1;
      this.gm_1 = tmp1 + 1 | 0;
      var this_0 = this.fm_1[tmp1];
      tmp = _ULong___init__impl__c78o9k(this_0);
    } else {
      throw NoSuchElementException.k(this.gm_1.toString());
    }
    return tmp;
  }
  y() {
    return new ULong(this.hm());
  }
}
class ULongArray {
  constructor(storage) {
    this.im_1 = storage;
  }
  z() {
    return _ULongArray___get_size__impl__ju6dtr(this.im_1);
  }
  w() {
    return ULongArray__iterator_impl_cq4d2h(this.im_1);
  }
  jm(elements) {
    return ULongArray__containsAll_impl_xx8ztf(this.im_1, elements);
  }
  i2(elements) {
    return ULongArray__containsAll_impl_xx8ztf_0(this, elements);
  }
  f1() {
    return ULongArray__isEmpty_impl_c3yngu(this.im_1);
  }
  toString() {
    return ULongArray__toString_impl_wqk1p5(this.im_1);
  }
  hashCode() {
    return ULongArray__hashCode_impl_aze4wa(this.im_1);
  }
  equals(other) {
    return ULongArray__equals_impl_vwitwa(this.im_1, other);
  }
}
class Companion_18 {
  constructor() {
    Companion_instance_18 = this;
    this.km_1 = _UShort___init__impl__jigrne(0);
    this.lm_1 = _UShort___init__impl__jigrne(-1);
    this.mm_1 = 2;
    this.nm_1 = 16;
  }
}
class UShort {
  constructor(data) {
    Companion_getInstance_18();
    this.om_1 = data;
  }
  pm(other) {
    return UShort__compareTo_impl_1pfgyc(this.om_1, other);
  }
  d(other) {
    return UShort__compareTo_impl_1pfgyc_0(this, other);
  }
  toString() {
    return UShort__toString_impl_edaoee(this.om_1);
  }
  hashCode() {
    return UShort__hashCode_impl_ywngrv(this.om_1);
  }
  equals(other) {
    return UShort__equals_impl_7t9pdz(this.om_1, other);
  }
}
class Iterator_2 {
  constructor(array) {
    this.qm_1 = array;
    this.rm_1 = 0;
  }
  x() {
    return this.rm_1 < this.qm_1.length;
  }
  sm() {
    var tmp;
    if (this.rm_1 < this.qm_1.length) {
      // Inline function 'kotlin.toUShort' call
      var tmp1 = this.rm_1;
      this.rm_1 = tmp1 + 1 | 0;
      var this_0 = this.qm_1[tmp1];
      tmp = _UShort___init__impl__jigrne(this_0);
    } else {
      throw NoSuchElementException.k(this.rm_1.toString());
    }
    return tmp;
  }
  y() {
    return new UShort(this.sm());
  }
}
class UShortArray {
  constructor(storage) {
    this.tm_1 = storage;
  }
  z() {
    return _UShortArray___get_size__impl__jqto1b(this.tm_1);
  }
  w() {
    return UShortArray__iterator_impl_ktpenn(this.tm_1);
  }
  um(elements) {
    return UShortArray__containsAll_impl_vlaaxp(this.tm_1, elements);
  }
  i2(elements) {
    return UShortArray__containsAll_impl_vlaaxp_0(this, elements);
  }
  f1() {
    return UShortArray__isEmpty_impl_cdd9l0(this.tm_1);
  }
  toString() {
    return UShortArray__toString_impl_omz03z(this.tm_1);
  }
  hashCode() {
    return UShortArray__hashCode_impl_2vt3b4(this.tm_1);
  }
  equals(other) {
    return UShortArray__equals_impl_tyc3mk(this.tm_1, other);
  }
}
//endregion
var Unit_instance;
function Unit_getInstance() {
  return Unit_instance;
}
function toList(_this__u8e3s4) {
  switch (_this__u8e3s4.length) {
    case 0:
      return emptyList();
    case 1:
      return listOf(_this__u8e3s4[0]);
    default:
      return toMutableList(_this__u8e3s4);
  }
}
function withIndex(_this__u8e3s4) {
  return new IndexingIterable(withIndex$lambda(_this__u8e3s4));
}
function get_indices(_this__u8e3s4) {
  return new IntRange(0, get_lastIndex(_this__u8e3s4));
}
function get_indices_0(_this__u8e3s4) {
  return new IntRange(0, get_lastIndex_0(_this__u8e3s4));
}
function indexOf(_this__u8e3s4, element) {
  if (element == null) {
    var inductionVariable = 0;
    var last = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (_this__u8e3s4[index] == null) {
          return index;
        }
      }
       while (inductionVariable <= last);
  } else {
    var inductionVariable_0 = 0;
    var last_0 = _this__u8e3s4.length - 1 | 0;
    if (inductionVariable_0 <= last_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        if (equals(element, _this__u8e3s4[index_0])) {
          return index_0;
        }
      }
       while (inductionVariable_0 <= last_0);
  }
  return -1;
}
function contains(_this__u8e3s4, element) {
  return indexOf(_this__u8e3s4, element) >= 0;
}
function toSet(_this__u8e3s4) {
  switch (_this__u8e3s4.length) {
    case 0:
      return emptySet();
    case 1:
      return setOf(_this__u8e3s4[0]);
    default:
      return toCollection(_this__u8e3s4, LinkedHashSet.f(mapCapacity(_this__u8e3s4.length)));
  }
}
function toCollection(_this__u8e3s4, destination) {
  var inductionVariable = 0;
  var last = _this__u8e3s4.length;
  while (inductionVariable < last) {
    var item = _this__u8e3s4[inductionVariable];
    inductionVariable = inductionVariable + 1 | 0;
    destination.g(item);
  }
  return destination;
}
function get_lastIndex(_this__u8e3s4) {
  return _this__u8e3s4.length - 1 | 0;
}
function single(_this__u8e3s4) {
  var tmp;
  switch (_this__u8e3s4.length) {
    case 0:
      throw NoSuchElementException.k('Array is empty.');
    case 1:
      tmp = _this__u8e3s4[0];
      break;
    default:
      throw IllegalArgumentException.o('Array has more than one element.');
  }
  return tmp;
}
function toMutableList(_this__u8e3s4) {
  return ArrayList.s(asCollection(_this__u8e3s4));
}
function get_lastIndex_0(_this__u8e3s4) {
  return _this__u8e3s4.length - 1 | 0;
}
function contains_0(_this__u8e3s4, element) {
  return indexOf_0(_this__u8e3s4, element) >= 0;
}
function contains_1(_this__u8e3s4, element) {
  return indexOf_1(_this__u8e3s4, element) >= 0;
}
function contains_2(_this__u8e3s4, element) {
  return indexOf_2(_this__u8e3s4, element) >= 0;
}
function contains_3(_this__u8e3s4, element) {
  return indexOf_3(_this__u8e3s4, element) >= 0;
}
function joinToString(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
  separator = separator === VOID ? ', ' : separator;
  prefix = prefix === VOID ? '' : prefix;
  postfix = postfix === VOID ? '' : postfix;
  limit = limit === VOID ? -1 : limit;
  truncated = truncated === VOID ? '...' : truncated;
  transform = transform === VOID ? null : transform;
  return joinTo(_this__u8e3s4, StringBuilder.u(), separator, prefix, postfix, limit, truncated, transform).toString();
}
function indexOf_0(_this__u8e3s4, element) {
  var inductionVariable = 0;
  var last = _this__u8e3s4.length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (element.equals(_this__u8e3s4[index])) {
        return index;
      }
    }
     while (inductionVariable <= last);
  return -1;
}
function indexOf_1(_this__u8e3s4, element) {
  var inductionVariable = 0;
  var last = _this__u8e3s4.length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (element === _this__u8e3s4[index]) {
        return index;
      }
    }
     while (inductionVariable <= last);
  return -1;
}
function indexOf_2(_this__u8e3s4, element) {
  var inductionVariable = 0;
  var last = _this__u8e3s4.length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (element === _this__u8e3s4[index]) {
        return index;
      }
    }
     while (inductionVariable <= last);
  return -1;
}
function indexOf_3(_this__u8e3s4, element) {
  var inductionVariable = 0;
  var last = _this__u8e3s4.length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (element === _this__u8e3s4[index]) {
        return index;
      }
    }
     while (inductionVariable <= last);
  return -1;
}
function joinTo(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
  separator = separator === VOID ? ', ' : separator;
  prefix = prefix === VOID ? '' : prefix;
  postfix = postfix === VOID ? '' : postfix;
  limit = limit === VOID ? -1 : limit;
  truncated = truncated === VOID ? '...' : truncated;
  transform = transform === VOID ? null : transform;
  buffer.v(prefix);
  var count = 0;
  var inductionVariable = 0;
  var last = _this__u8e3s4.length;
  $l$loop: while (inductionVariable < last) {
    var element = _this__u8e3s4[inductionVariable];
    inductionVariable = inductionVariable + 1 | 0;
    count = count + 1 | 0;
    if (count > 1) {
      buffer.v(separator);
    }
    if (limit < 0 || count <= limit) {
      appendElement(buffer, element, transform);
    } else
      break $l$loop;
  }
  if (limit >= 0 && count > limit) {
    buffer.v(truncated);
  }
  buffer.v(postfix);
  return buffer;
}
function get_lastIndex_1(_this__u8e3s4) {
  return _this__u8e3s4.length - 1 | 0;
}
function firstOrNull(_this__u8e3s4) {
  var tmp;
  // Inline function 'kotlin.collections.isEmpty' call
  if (_this__u8e3s4.length === 0) {
    tmp = null;
  } else {
    tmp = _this__u8e3s4[0];
  }
  return tmp;
}
function withIndex$lambda($this_withIndex) {
  return function () {
    return arrayIterator($this_withIndex);
  };
}
function joinToString_0(_this__u8e3s4, separator, prefix, postfix, limit, truncated, transform) {
  separator = separator === VOID ? ', ' : separator;
  prefix = prefix === VOID ? '' : prefix;
  postfix = postfix === VOID ? '' : postfix;
  limit = limit === VOID ? -1 : limit;
  truncated = truncated === VOID ? '...' : truncated;
  transform = transform === VOID ? null : transform;
  return joinTo_0(_this__u8e3s4, StringBuilder.u(), separator, prefix, postfix, limit, truncated, transform).toString();
}
function joinTo_0(_this__u8e3s4, buffer, separator, prefix, postfix, limit, truncated, transform) {
  separator = separator === VOID ? ', ' : separator;
  prefix = prefix === VOID ? '' : prefix;
  postfix = postfix === VOID ? '' : postfix;
  limit = limit === VOID ? -1 : limit;
  truncated = truncated === VOID ? '...' : truncated;
  transform = transform === VOID ? null : transform;
  buffer.v(prefix);
  var count = 0;
  var tmp0_iterator = _this__u8e3s4.w();
  $l$loop: while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    count = count + 1 | 0;
    if (count > 1) {
      buffer.v(separator);
    }
    if (limit < 0 || count <= limit) {
      appendElement(buffer, element, transform);
    } else
      break $l$loop;
  }
  if (limit >= 0 && count > limit) {
    buffer.v(truncated);
  }
  buffer.v(postfix);
  return buffer;
}
function plus_0(_this__u8e3s4, element) {
  var result = ArrayList.a1(_this__u8e3s4.z() + 1 | 0);
  result.b1(_this__u8e3s4);
  result.g(element);
  return result;
}
function toSet_0(_this__u8e3s4) {
  if (isInterface(_this__u8e3s4, Collection)) {
    var tmp;
    switch (_this__u8e3s4.z()) {
      case 0:
        tmp = emptySet();
        break;
      case 1:
        var tmp_0;
        if (isInterface(_this__u8e3s4, KtList)) {
          tmp_0 = _this__u8e3s4.c1(0);
        } else {
          tmp_0 = _this__u8e3s4.w().y();
        }

        tmp = setOf(tmp_0);
        break;
      default:
        tmp = toCollection_0(_this__u8e3s4, LinkedHashSet.f(mapCapacity(_this__u8e3s4.z())));
        break;
    }
    return tmp;
  }
  return optimizeReadOnlySet(toCollection_0(_this__u8e3s4, LinkedHashSet.d1()));
}
function plus_1(_this__u8e3s4, elements) {
  if (isInterface(elements, Collection)) {
    var result = ArrayList.a1(_this__u8e3s4.z() + elements.z() | 0);
    result.b1(_this__u8e3s4);
    result.b1(elements);
    return result;
  } else {
    var result_0 = ArrayList.s(_this__u8e3s4);
    addAll(result_0, elements);
    return result_0;
  }
}
function plus_2(_this__u8e3s4, elements) {
  if (isInterface(_this__u8e3s4, Collection))
    return plus_1(_this__u8e3s4, elements);
  var result = ArrayList.e1();
  addAll(result, _this__u8e3s4);
  addAll(result, elements);
  return result;
}
function firstOrNull_0(_this__u8e3s4) {
  return _this__u8e3s4.f1() ? null : _this__u8e3s4.c1(0);
}
function last(_this__u8e3s4) {
  if (_this__u8e3s4.f1())
    throw NoSuchElementException.k('List is empty.');
  return _this__u8e3s4.c1(get_lastIndex_2(_this__u8e3s4));
}
function reversed(_this__u8e3s4) {
  var tmp;
  if (isInterface(_this__u8e3s4, Collection)) {
    tmp = _this__u8e3s4.z() <= 1;
  } else {
    tmp = false;
  }
  if (tmp)
    return toList_0(_this__u8e3s4);
  var list = toMutableList_0(_this__u8e3s4);
  reverse(list);
  return list;
}
function toHashSet(_this__u8e3s4) {
  return toCollection_0(_this__u8e3s4, HashSet.h1(mapCapacity(collectionSizeOrDefault(_this__u8e3s4, 12))));
}
function toBooleanArray(_this__u8e3s4) {
  var result = booleanArray(_this__u8e3s4.z());
  var index = 0;
  var tmp0_iterator = _this__u8e3s4.w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    var tmp1 = index;
    index = tmp1 + 1 | 0;
    result[tmp1] = element;
  }
  return result;
}
function toCollection_0(_this__u8e3s4, destination) {
  var tmp0_iterator = _this__u8e3s4.w();
  while (tmp0_iterator.x()) {
    var item = tmp0_iterator.y();
    destination.g(item);
  }
  return destination;
}
function toList_0(_this__u8e3s4) {
  if (isInterface(_this__u8e3s4, Collection)) {
    var tmp;
    switch (_this__u8e3s4.z()) {
      case 0:
        tmp = emptyList();
        break;
      case 1:
        var tmp_0;
        if (isInterface(_this__u8e3s4, KtList)) {
          tmp_0 = _this__u8e3s4.c1(0);
        } else {
          tmp_0 = _this__u8e3s4.w().y();
        }

        tmp = listOf(tmp_0);
        break;
      default:
        tmp = toMutableList_1(_this__u8e3s4);
        break;
    }
    return tmp;
  }
  return optimizeReadOnlyList(toMutableList_0(_this__u8e3s4));
}
function toMutableList_0(_this__u8e3s4) {
  if (isInterface(_this__u8e3s4, Collection))
    return toMutableList_1(_this__u8e3s4);
  return toCollection_0(_this__u8e3s4, ArrayList.e1());
}
function sortedWith(_this__u8e3s4, comparator) {
  if (isInterface(_this__u8e3s4, Collection)) {
    if (_this__u8e3s4.z() <= 1)
      return toList_0(_this__u8e3s4);
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.collections.toTypedArray' call
    var tmp = copyToArray(_this__u8e3s4);
    var this_0 = isArray(tmp) ? tmp : THROW_CCE();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.sortedWith.<anonymous>' call
    sortWith(this_0, comparator);
    return asList(this_0);
  }
  // Inline function 'kotlin.apply' call
  var this_1 = toMutableList_0(_this__u8e3s4);
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.collections.sortedWith.<anonymous>' call
  sortWith_0(this_1, comparator);
  return this_1;
}
function toMutableList_1(_this__u8e3s4) {
  return ArrayList.s(_this__u8e3s4);
}
function single_0(_this__u8e3s4) {
  if (isInterface(_this__u8e3s4, KtList))
    return single_1(_this__u8e3s4);
  else {
    var iterator = _this__u8e3s4.w();
    if (!iterator.x())
      throw NoSuchElementException.k('Collection is empty.');
    var single = iterator.y();
    if (iterator.x())
      throw IllegalArgumentException.o('Collection has more than one element.');
    return single;
  }
}
function minOrNull(_this__u8e3s4) {
  var iterator = _this__u8e3s4.w();
  if (!iterator.x())
    return null;
  var min = iterator.y();
  while (iterator.x()) {
    var e = iterator.y();
    if (compareTo(min, e) > 0)
      min = e;
  }
  return min;
}
function single_1(_this__u8e3s4) {
  var tmp;
  switch (_this__u8e3s4.z()) {
    case 0:
      throw NoSuchElementException.k('List is empty.');
    case 1:
      tmp = _this__u8e3s4.c1(0);
      break;
    default:
      throw IllegalArgumentException.o('List has more than one element.');
  }
  return tmp;
}
function first(_this__u8e3s4) {
  if (_this__u8e3s4.f1())
    throw NoSuchElementException.k('List is empty.');
  return _this__u8e3s4.c1(0);
}
function dropLast(_this__u8e3s4, n) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(n >= 0)) {
    // Inline function 'kotlin.collections.dropLast.<anonymous>' call
    var message = 'Requested element count ' + n + ' is less than zero.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  return take(_this__u8e3s4, coerceAtLeast(_this__u8e3s4.z() - n | 0, 0));
}
function toMutableSet(_this__u8e3s4) {
  var tmp;
  if (isInterface(_this__u8e3s4, Collection)) {
    tmp = LinkedHashSet.i1(_this__u8e3s4);
  } else {
    tmp = toCollection_0(_this__u8e3s4, LinkedHashSet.d1());
  }
  return tmp;
}
function singleOrNull(_this__u8e3s4) {
  return _this__u8e3s4.z() === 1 ? _this__u8e3s4.c1(0) : null;
}
function take(_this__u8e3s4, n) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(n >= 0)) {
    // Inline function 'kotlin.collections.take.<anonymous>' call
    var message = 'Requested element count ' + n + ' is less than zero.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  if (n === 0)
    return emptyList();
  if (isInterface(_this__u8e3s4, Collection)) {
    if (n >= _this__u8e3s4.z())
      return toList_0(_this__u8e3s4);
    if (n === 1)
      return listOf(first_0(_this__u8e3s4));
  }
  var count = 0;
  var list = ArrayList.a1(n);
  var tmp0_iterator = _this__u8e3s4.w();
  $l$loop: while (tmp0_iterator.x()) {
    var item = tmp0_iterator.y();
    list.g(item);
    count = count + 1 | 0;
    if (count === n)
      break $l$loop;
  }
  return optimizeReadOnlyList(list);
}
function first_0(_this__u8e3s4) {
  if (isInterface(_this__u8e3s4, KtList))
    return first(_this__u8e3s4);
  else {
    var iterator = _this__u8e3s4.w();
    if (!iterator.x())
      throw NoSuchElementException.k('Collection is empty.');
    return iterator.y();
  }
}
function lastOrNull(_this__u8e3s4) {
  return _this__u8e3s4.f1() ? null : _this__u8e3s4.c1(_this__u8e3s4.z() - 1 | 0);
}
function filterNotNull(_this__u8e3s4) {
  return filterNotNullTo(_this__u8e3s4, ArrayList.e1());
}
function filterNotNullTo(_this__u8e3s4, destination) {
  var tmp0_iterator = _this__u8e3s4.w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    if (!(element == null)) {
      destination.g(element);
    }
  }
  return destination;
}
function toList_1(_this__u8e3s4) {
  if (_this__u8e3s4.z() === 0)
    return emptyList();
  var iterator = _this__u8e3s4.j1().w();
  if (!iterator.x())
    return emptyList();
  var first = iterator.y();
  if (!iterator.x()) {
    // Inline function 'kotlin.collections.toPair' call
    var tmp$ret$0 = new Pair(first.k1(), first.l1());
    return listOf(tmp$ret$0);
  }
  var result = ArrayList.a1(_this__u8e3s4.z());
  // Inline function 'kotlin.collections.toPair' call
  var tmp$ret$1 = new Pair(first.k1(), first.l1());
  result.g(tmp$ret$1);
  do {
    // Inline function 'kotlin.collections.toPair' call
    var this_0 = iterator.y();
    var tmp$ret$2 = new Pair(this_0.k1(), this_0.l1());
    result.g(tmp$ret$2);
  }
   while (iterator.x());
  return result;
}
function titlecaseImpl(_this__u8e3s4) {
  // Inline function 'kotlin.text.uppercase' call
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  var uppercase = toString(_this__u8e3s4).toUpperCase();
  if (uppercase.length > 1) {
    var tmp;
    if (_this__u8e3s4 === _Char___init__impl__6a9atx(329)) {
      tmp = uppercase;
    } else {
      // Inline function 'kotlin.text.plus' call
      var this_0 = charSequenceGet(uppercase, 0);
      // Inline function 'kotlin.text.lowercase' call
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      // Inline function 'kotlin.js.asDynamic' call
      var other = uppercase.substring(1).toLowerCase();
      tmp = toString(this_0) + other;
    }
    return tmp;
  }
  return toString(titlecaseChar(_this__u8e3s4));
}
function until(_this__u8e3s4, to) {
  if (to <= -2147483648)
    return Companion_getInstance_9().m1_1;
  return numberRangeToNumber(_this__u8e3s4, to - 1 | 0);
}
function downTo(_this__u8e3s4, to) {
  return Companion_instance_11.n1(_this__u8e3s4, to, -1);
}
function coerceIn(_this__u8e3s4, minimumValue, maximumValue) {
  if (minimumValue.q1(maximumValue) > 0)
    throw IllegalArgumentException.o('Cannot coerce value to an empty range: maximum ' + maximumValue.toString() + ' is less than minimum ' + minimumValue.toString() + '.');
  if (_this__u8e3s4.q1(minimumValue) < 0)
    return minimumValue;
  if (_this__u8e3s4.q1(maximumValue) > 0)
    return maximumValue;
  return _this__u8e3s4;
}
function step(_this__u8e3s4, step) {
  checkStepIsPositive(step > 0, step);
  return Companion_instance_11.n1(_this__u8e3s4.r1_1, _this__u8e3s4.s1_1, _this__u8e3s4.t1_1 > 0 ? step : -step | 0);
}
function coerceAtLeast(_this__u8e3s4, minimumValue) {
  return _this__u8e3s4 < minimumValue ? minimumValue : _this__u8e3s4;
}
function coerceIn_0(_this__u8e3s4, minimumValue, maximumValue) {
  if (minimumValue > maximumValue)
    throw IllegalArgumentException.o('Cannot coerce value to an empty range: maximum ' + maximumValue + ' is less than minimum ' + minimumValue + '.');
  if (_this__u8e3s4 < minimumValue)
    return minimumValue;
  if (_this__u8e3s4 > maximumValue)
    return maximumValue;
  return _this__u8e3s4;
}
function coerceAtMost(_this__u8e3s4, maximumValue) {
  return _this__u8e3s4 > maximumValue ? maximumValue : _this__u8e3s4;
}
function coerceAtMost_0(_this__u8e3s4, maximumValue) {
  return _this__u8e3s4.q1(maximumValue) > 0 ? maximumValue : _this__u8e3s4;
}
function map(_this__u8e3s4, transform) {
  return new TransformingSequence(_this__u8e3s4, transform);
}
function toList_2(_this__u8e3s4) {
  var it = _this__u8e3s4.w();
  if (!it.x())
    return emptyList();
  var element = it.y();
  if (!it.x())
    return listOf(element);
  var dst = ArrayList.e1();
  dst.g(element);
  while (it.x()) {
    dst.g(it.y());
  }
  return dst;
}
function asIterable(_this__u8e3s4) {
  // Inline function 'kotlin.collections.Iterable' call
  return new _no_name_provided__qut3iv(_this__u8e3s4);
}
function plus_3(_this__u8e3s4, elements) {
  var tmp0_safe_receiver = collectionSizeOrNull(elements);
  var tmp;
  if (tmp0_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.collections.plus.<anonymous>' call
    tmp = _this__u8e3s4.z() + tmp0_safe_receiver | 0;
  }
  var tmp1_elvis_lhs = tmp;
  var result = LinkedHashSet.f(mapCapacity(tmp1_elvis_lhs == null ? imul_0(_this__u8e3s4.z(), 2) : tmp1_elvis_lhs));
  result.b1(_this__u8e3s4);
  addAll(result, elements);
  return result;
}
function last_0(_this__u8e3s4) {
  // Inline function 'kotlin.text.isEmpty' call
  if (charSequenceLength(_this__u8e3s4) === 0)
    throw NoSuchElementException.k('Char sequence is empty.');
  return charSequenceGet(_this__u8e3s4, get_lastIndex_3(_this__u8e3s4));
}
function first_1(_this__u8e3s4) {
  // Inline function 'kotlin.text.isEmpty' call
  if (charSequenceLength(_this__u8e3s4) === 0)
    throw NoSuchElementException.k('Char sequence is empty.');
  return charSequenceGet(_this__u8e3s4, 0);
}
function drop(_this__u8e3s4, n) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(n >= 0)) {
    // Inline function 'kotlin.text.drop.<anonymous>' call
    var message = 'Requested character count ' + n + ' is less than zero.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  // Inline function 'kotlin.text.substring' call
  var startIndex = coerceAtMost(n, _this__u8e3s4.length);
  // Inline function 'kotlin.js.asDynamic' call
  return _this__u8e3s4.substring(startIndex);
}
function take_0(_this__u8e3s4, n) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(n >= 0)) {
    // Inline function 'kotlin.text.take.<anonymous>' call
    var message = 'Requested character count ' + n + ' is less than zero.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  // Inline function 'kotlin.text.substring' call
  var endIndex = coerceAtMost(n, _this__u8e3s4.length);
  // Inline function 'kotlin.js.asDynamic' call
  return _this__u8e3s4.substring(0, endIndex);
}
function single_2(_this__u8e3s4) {
  var tmp;
  switch (charSequenceLength(_this__u8e3s4)) {
    case 0:
      throw NoSuchElementException.k('Char sequence is empty.');
    case 1:
      tmp = charSequenceGet(_this__u8e3s4, 0);
      break;
    default:
      throw IllegalArgumentException.o('Char sequence has more than one element.');
  }
  return tmp;
}
function asUByteArray(_this__u8e3s4) {
  return _UByteArray___init__impl__ip4y9n(_this__u8e3s4);
}
function _Char___init__impl__6a9atx(value) {
  return value;
}
function _get_value__a43j40($this) {
  return $this;
}
function _Char___init__impl__6a9atx_0(code) {
  // Inline function 'kotlin.UShort.toInt' call
  var tmp$ret$0 = _UShort___get_data__impl__g0245(code) & 65535;
  return _Char___init__impl__6a9atx(tmp$ret$0);
}
function Char__compareTo_impl_ypi4mb($this, other) {
  return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
}
function Char__compareTo_impl_ypi4mb_0($this, other) {
  return Char__compareTo_impl_ypi4mb($this.v1_1, other instanceof Char ? other.v1_1 : THROW_CCE());
}
function Char__plus_impl_qi7pgj($this, other) {
  return numberToChar(_get_value__a43j40($this) + other | 0);
}
function Char__minus_impl_a2frrh($this, other) {
  return _get_value__a43j40($this) - _get_value__a43j40(other) | 0;
}
function Char__minus_impl_a2frrh_0($this, other) {
  return numberToChar(_get_value__a43j40($this) - other | 0);
}
function Char__rangeTo_impl_tkncvp($this, other) {
  return new CharRange($this, other);
}
function Char__toInt_impl_vasixd($this) {
  return _get_value__a43j40($this);
}
function toString($this) {
  // Inline function 'kotlin.js.unsafeCast' call
  return String.fromCharCode(_get_value__a43j40($this));
}
function Char__equals_impl_x6719k($this, other) {
  if (!(other instanceof Char))
    return false;
  return _get_value__a43j40($this) === _get_value__a43j40(other.v1_1);
}
function Char__hashCode_impl_otmys($this) {
  return _get_value__a43j40($this);
}
var Companion_instance;
function Companion_getInstance() {
  if (Companion_instance === VOID)
    new Companion();
  return Companion_instance;
}
var Companion_instance_0;
function Companion_getInstance_0() {
  return Companion_instance_0;
}
function arrayOf(elements) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  return elements;
}
function toString_0(_this__u8e3s4) {
  var tmp1_elvis_lhs = _this__u8e3s4 == null ? null : toString_1(_this__u8e3s4);
  return tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs;
}
function plus_4(_this__u8e3s4, other) {
  var tmp3_elvis_lhs = _this__u8e3s4 == null ? null : toString_1(_this__u8e3s4);
  var tmp = tmp3_elvis_lhs == null ? 'null' : tmp3_elvis_lhs;
  var tmp1_elvis_lhs = other == null ? null : toString_1(other);
  return tmp + (tmp1_elvis_lhs == null ? 'null' : tmp1_elvis_lhs);
}
var Companion_instance_1;
function Companion_getInstance_1() {
  if (Companion_instance_1 === VOID)
    new Companion_1();
  return Companion_instance_1;
}
function implement(interfaces) {
  var maxSize = 1;
  var masks = [];
  var inductionVariable = 0;
  var last = interfaces.length;
  while (inductionVariable < last) {
    var i = interfaces[inductionVariable];
    inductionVariable = inductionVariable + 1 | 0;
    var currentSize = maxSize;
    var tmp1_elvis_lhs = i.prototype.$imask$;
    var imask = tmp1_elvis_lhs == null ? i.$imask$ : tmp1_elvis_lhs;
    if (!(imask == null)) {
      masks.push(imask);
      currentSize = imask.length;
    }
    var iid = i.$metadata$.iid;
    var tmp;
    if (iid == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.js.implement.<anonymous>' call
      tmp = bitMaskWith(iid);
    }
    var iidImask = tmp;
    if (!(iidImask == null)) {
      masks.push(iidImask);
      currentSize = Math.max(currentSize, iidImask.length);
    }
    if (currentSize > maxSize) {
      maxSize = currentSize;
    }
  }
  return compositeBitMask(maxSize, masks);
}
function bitMaskWith(activeBit) {
  var numberIndex = activeBit >> 5;
  var intArray = new Int32Array(numberIndex + 1 | 0);
  var positionInNumber = activeBit & 31;
  var numberWithSettledBit = 1 << positionInNumber;
  intArray[numberIndex] = intArray[numberIndex] | numberWithSettledBit;
  return intArray;
}
function compositeBitMask(capacity, masks) {
  var tmp = 0;
  var tmp_0 = new Int32Array(capacity);
  while (tmp < capacity) {
    var tmp_1 = tmp;
    var result = 0;
    var inductionVariable = 0;
    var last = masks.length;
    while (inductionVariable < last) {
      var mask = masks[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      if (tmp_1 < mask.length) {
        result = result | mask[tmp_1];
      }
    }
    tmp_0[tmp_1] = result;
    tmp = tmp + 1 | 0;
  }
  return tmp_0;
}
function isBitSet(_this__u8e3s4, possibleActiveBit) {
  var numberIndex = possibleActiveBit >> 5;
  if (numberIndex > _this__u8e3s4.length)
    return false;
  var positionInNumber = possibleActiveBit & 31;
  var numberWithSettledBit = 1 << positionInNumber;
  return !((_this__u8e3s4[numberIndex] & numberWithSettledBit) === 0);
}
function fillArrayVal(array, initValue) {
  var inductionVariable = 0;
  var last = array.length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      array[i] = initValue;
    }
     while (!(i === last));
  return array;
}
function arrayIterator(array) {
  return new arrayIterator$1(array);
}
function booleanArray(size) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'withType' call
  var type = 'BooleanArray';
  var array = fillArrayVal(Array(size), false);
  array.$type$ = type;
  return array;
}
function charArray(size) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'withType' call
  var type = 'CharArray';
  var array = new Uint16Array(size);
  array.$type$ = type;
  return array;
}
function longArray(size) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'withType' call
  var type = 'LongArray';
  var array = fillArrayVal(Array(size), new Long(0, 0));
  array.$type$ = type;
  return array;
}
function charArrayOf(arr) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'withType' call
  var type = 'CharArray';
  var array = new Uint16Array(arr);
  array.$type$ = type;
  return array;
}
function get_buf() {
  _init_properties_bitUtils_kt__nfcg4k();
  return buf;
}
var buf;
function get_bufFloat64() {
  _init_properties_bitUtils_kt__nfcg4k();
  return bufFloat64;
}
var bufFloat64;
var bufFloat32;
function get_bufInt32() {
  _init_properties_bitUtils_kt__nfcg4k();
  return bufInt32;
}
var bufInt32;
function get_lowIndex() {
  _init_properties_bitUtils_kt__nfcg4k();
  return lowIndex;
}
var lowIndex;
function get_highIndex() {
  _init_properties_bitUtils_kt__nfcg4k();
  return highIndex;
}
var highIndex;
function getNumberHashCode(obj) {
  _init_properties_bitUtils_kt__nfcg4k();
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.jsBitwiseOr' call
  // Inline function 'kotlin.js.asDynamic' call
  if ((obj | 0) === obj) {
    return numberToInt(obj);
  }
  get_bufFloat64()[0] = obj;
  return imul_0(get_bufInt32()[get_highIndex()], 31) + get_bufInt32()[get_lowIndex()] | 0;
}
var properties_initialized_bitUtils_kt_i2bo3e;
function _init_properties_bitUtils_kt__nfcg4k() {
  if (!properties_initialized_bitUtils_kt_i2bo3e) {
    properties_initialized_bitUtils_kt_i2bo3e = true;
    buf = new ArrayBuffer(8);
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    bufFloat64 = new Float64Array(get_buf());
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    bufFloat32 = new Float32Array(get_buf());
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    bufInt32 = new Int32Array(get_buf());
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.js.lowIndex.<anonymous>' call
    get_bufFloat64()[0] = -1.0;
    lowIndex = !(get_bufInt32()[0] === 0) ? 1 : 0;
    highIndex = 1 - get_lowIndex() | 0;
  }
}
function charSequenceGet(a, index) {
  var tmp;
  if (isString(a)) {
    // Inline function 'kotlin.Char' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var code = a.charCodeAt(index);
    var tmp_0;
    // Inline function 'kotlin.code' call
    var this_0 = _Char___init__impl__6a9atx(0);
    if (code < Char__toInt_impl_vasixd(this_0)) {
      tmp_0 = true;
    } else {
      // Inline function 'kotlin.code' call
      var this_1 = _Char___init__impl__6a9atx(65535);
      tmp_0 = code > Char__toInt_impl_vasixd(this_1);
    }
    if (tmp_0) {
      throw IllegalArgumentException.o('Invalid Char code: ' + code);
    }
    tmp = numberToChar(code);
  } else {
    tmp = a.b(index);
  }
  return tmp;
}
function isString(a) {
  return typeof a === 'string';
}
function charSequenceLength(a) {
  var tmp;
  if (isString(a)) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = a.length;
  } else {
    tmp = a.a();
  }
  return tmp;
}
function charSequenceSubSequence(a, startIndex, endIndex) {
  var tmp;
  if (isString(a)) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = a.substring(startIndex, endIndex);
  } else {
    tmp = a.c(startIndex, endIndex);
  }
  return tmp;
}
function arrayToString(array) {
  return joinToString(array, ', ', '[', ']', VOID, VOID, arrayToString$lambda);
}
function contentEqualsInternal(_this__u8e3s4, other) {
  // Inline function 'kotlin.js.asDynamic' call
  var a = _this__u8e3s4;
  // Inline function 'kotlin.js.asDynamic' call
  var b = other;
  if (a === b)
    return true;
  if (a == null || b == null || !isArrayish(b) || a.length != b.length)
    return false;
  var inductionVariable = 0;
  var last = a.length;
  if (inductionVariable < last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (!equals(a[i], b[i])) {
        return false;
      }
    }
     while (inductionVariable < last);
  return true;
}
function contentHashCodeInternal(_this__u8e3s4) {
  // Inline function 'kotlin.js.asDynamic' call
  var a = _this__u8e3s4;
  if (a == null)
    return 0;
  var result = 1;
  var inductionVariable = 0;
  var last = a.length;
  if (inductionVariable < last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      result = imul_0(result, 31) + hashCode(a[i]) | 0;
    }
     while (inductionVariable < last);
  return result;
}
function arrayToString$lambda(it) {
  return toString_1(it);
}
function compareTo(a, b) {
  var tmp;
  switch (typeof a) {
    case 'number':
      var tmp_0;
      if (typeof b === 'number') {
        tmp_0 = doubleCompareTo(a, b);
      } else {
        if (b instanceof Long) {
          tmp_0 = doubleCompareTo(a, b.v3());
        } else {
          tmp_0 = primitiveCompareTo(a, b);
        }
      }

      tmp = tmp_0;
      break;
    case 'string':
    case 'boolean':
      tmp = primitiveCompareTo(a, b);
      break;
    default:
      tmp = compareToDoNotIntrinsicify(a, b);
      break;
  }
  return tmp;
}
function doubleCompareTo(a, b) {
  var tmp;
  if (a < b) {
    tmp = -1;
  } else if (a > b) {
    tmp = 1;
  } else if (a === b) {
    var tmp_0;
    if (a !== 0) {
      tmp_0 = 0;
    } else {
      // Inline function 'kotlin.js.asDynamic' call
      var ia = 1 / a;
      var tmp_1;
      // Inline function 'kotlin.js.asDynamic' call
      if (ia === 1 / b) {
        tmp_1 = 0;
      } else {
        if (ia < 0) {
          tmp_1 = -1;
        } else {
          tmp_1 = 1;
        }
      }
      tmp_0 = tmp_1;
    }
    tmp = tmp_0;
  } else if (a !== a) {
    tmp = b !== b ? 0 : 1;
  } else {
    tmp = -1;
  }
  return tmp;
}
function primitiveCompareTo(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
}
function compareToDoNotIntrinsicify(a, b) {
  return a.d(b);
}
function identityHashCode(obj) {
  return getObjectHashCode(obj);
}
function getObjectHashCode(obj) {
  // Inline function 'kotlin.js.jsIn' call
  if (!('kotlinHashCodeValue$' in obj)) {
    var hash = calculateRandomHash();
    var descriptor = new Object();
    descriptor.value = hash;
    descriptor.enumerable = false;
    Object.defineProperty(obj, 'kotlinHashCodeValue$', descriptor);
  }
  // Inline function 'kotlin.js.unsafeCast' call
  return obj['kotlinHashCodeValue$'];
}
function calculateRandomHash() {
  // Inline function 'kotlin.js.jsBitwiseOr' call
  return Math.random() * 4.294967296E9 | 0;
}
function defineProp(obj, name, getter, setter) {
  return Object.defineProperty(obj, name, {configurable: true, get: getter, set: setter});
}
function toString_1(o) {
  var tmp;
  if (o == null) {
    tmp = 'null';
  } else if (isArrayish(o)) {
    tmp = '[...]';
  } else if (!(typeof o.toString === 'function')) {
    tmp = anyToString(o);
  } else {
    // Inline function 'kotlin.js.unsafeCast' call
    tmp = o.toString();
  }
  return tmp;
}
function equals(obj1, obj2) {
  if (obj1 == null) {
    return obj2 == null;
  }
  if (obj2 == null) {
    return false;
  }
  if (typeof obj1 === 'object' && typeof obj1.equals === 'function') {
    return obj1.equals(obj2);
  }
  if (obj1 !== obj1) {
    return obj2 !== obj2;
  }
  if (typeof obj1 === 'number' && typeof obj2 === 'number') {
    var tmp;
    if (obj1 === obj2) {
      var tmp_0;
      if (obj1 !== 0) {
        tmp_0 = true;
      } else {
        // Inline function 'kotlin.js.asDynamic' call
        var tmp_1 = 1 / obj1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp_0 = tmp_1 === 1 / obj2;
      }
      tmp = tmp_0;
    } else {
      tmp = false;
    }
    return tmp;
  }
  return obj1 === obj2;
}
function hashCode(obj) {
  if (obj == null)
    return 0;
  var typeOf = typeof obj;
  var tmp;
  switch (typeOf) {
    case 'object':
      tmp = 'function' === typeof obj.hashCode ? obj.hashCode() : getObjectHashCode(obj);
      break;
    case 'function':
      tmp = getObjectHashCode(obj);
      break;
    case 'number':
      tmp = getNumberHashCode(obj);
      break;
    case 'boolean':
      // Inline function 'kotlin.js.unsafeCast' call

      tmp = getBooleanHashCode(obj);
      break;
    case 'string':
      tmp = getStringHashCode(String(obj));
      break;
    case 'bigint':
      tmp = getBigIntHashCode(obj);
      break;
    case 'symbol':
      tmp = getSymbolHashCode(obj);
      break;
    default:
      tmp = function () {
        throw new Error('Unexpected typeof `' + typeOf + '`');
      }();
      break;
  }
  return tmp;
}
function anyToString(o) {
  return Object.prototype.toString.call(o);
}
function getBooleanHashCode(value) {
  return value ? 1231 : 1237;
}
function getStringHashCode(str) {
  var hash = 0;
  var length = str.length;
  var inductionVariable = 0;
  var last = length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.js.asDynamic' call
      var code = str.charCodeAt(i);
      hash = imul_0(hash, 31) + code | 0;
    }
     while (!(i === last));
  return hash;
}
function getBigIntHashCode(value) {
  var shiftNumber = BigInt(32);
  var MASK = BigInt(4.294967295E9);
  var bigNumber = value < 0 ? -value : value;
  var hashCode = 0;
  var signum = value < 0 ? -1 : 1;
  while (bigNumber != 0) {
    // Inline function 'kotlin.js.unsafeCast' call
    var chunk = Number(bigNumber & MASK);
    hashCode = imul_0(31, hashCode) + chunk | 0;
    bigNumber = bigNumber >> shiftNumber;
  }
  return imul_0(hashCode, signum);
}
function getSymbolHashCode(value) {
  var hashCodeMap = symbolIsSharable(value) ? getSymbolMap() : getSymbolWeakMap();
  var cachedHashCode = hashCodeMap.get(value);
  if (cachedHashCode !== VOID)
    return cachedHashCode;
  var hash = calculateRandomHash();
  hashCodeMap.set(value, hash);
  return hash;
}
function symbolIsSharable(symbol) {
  return Symbol.keyFor(symbol) != VOID;
}
function getSymbolMap() {
  if (symbolMap === VOID) {
    symbolMap = new Map();
  }
  return symbolMap;
}
function getSymbolWeakMap() {
  if (symbolWeakMap === VOID) {
    symbolWeakMap = new WeakMap();
  }
  return symbolWeakMap;
}
var symbolMap;
var symbolWeakMap;
function boxIntrinsic(x) {
  var message = 'Should be lowered';
  throw IllegalStateException.b4(toString_1(message));
}
function unboxIntrinsic(x) {
  var message = 'Should be lowered';
  throw IllegalStateException.b4(toString_1(message));
}
function captureStack(instance, constructorFunction) {
  if (Error.captureStackTrace != null) {
    Error.captureStackTrace(instance, constructorFunction);
  } else {
    // Inline function 'kotlin.js.asDynamic' call
    instance.stack = (new Error()).stack;
  }
}
function protoOf(constructor) {
  return constructor.prototype;
}
function createThis(ctor, box) {
  var self_0 = Object.create(ctor.prototype);
  boxApply(self_0, box);
  return self_0;
}
function boxApply(self_0, box) {
  if (box !== VOID)
    Object.assign(self_0, box);
}
function setPropertiesToThrowableInstance(this_, message, cause) {
  var errorInfo = calculateErrorInfo(Object.getPrototypeOf(this_));
  if ((errorInfo & 1) === 0) {
    var tmp;
    if (message == null) {
      var tmp_0;
      if (!(message === null)) {
        var tmp1_elvis_lhs = cause == null ? null : cause.toString();
        tmp_0 = tmp1_elvis_lhs == null ? VOID : tmp1_elvis_lhs;
      } else {
        tmp_0 = VOID;
      }
      tmp = tmp_0;
    } else {
      tmp = message;
    }
    this_.message = tmp;
  }
  if ((errorInfo & 2) === 0) {
    this_.cause = cause;
  }
  this_.name = Object.getPrototypeOf(this_).constructor.name;
}
function ensureNotNull(v) {
  var tmp;
  if (v == null) {
    THROW_NPE();
  } else {
    tmp = v;
  }
  return tmp;
}
function THROW_NPE() {
  throw NullPointerException.f4();
}
function noWhenBranchMatchedException() {
  throw NoWhenBranchMatchedException.j4();
}
function THROW_CCE() {
  throw ClassCastException.n4();
}
function throwUninitializedPropertyAccessException(name) {
  throw UninitializedPropertyAccessException.r4('lateinit property ' + name + ' has not been initialized');
}
function get_ZERO() {
  _init_properties_longJs_kt__elc2w5();
  return ZERO;
}
var ZERO;
function get_ONE() {
  _init_properties_longJs_kt__elc2w5();
  return ONE;
}
var ONE;
function get_NEG_ONE() {
  _init_properties_longJs_kt__elc2w5();
  return NEG_ONE;
}
var NEG_ONE;
function get_MAX_VALUE() {
  _init_properties_longJs_kt__elc2w5();
  return MAX_VALUE;
}
var MAX_VALUE;
function get_MIN_VALUE() {
  _init_properties_longJs_kt__elc2w5();
  return MIN_VALUE;
}
var MIN_VALUE;
function get_TWO_PWR_24_() {
  _init_properties_longJs_kt__elc2w5();
  return TWO_PWR_24_;
}
var TWO_PWR_24_;
function compare(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  if (equalsLong(_this__u8e3s4, other)) {
    return 0;
  }
  var thisNeg = isNegative(_this__u8e3s4);
  var otherNeg = isNegative(other);
  return thisNeg && !otherNeg ? -1 : !thisNeg && otherNeg ? 1 : isNegative(subtract(_this__u8e3s4, other)) ? -1 : 1;
}
function add(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  var a48 = _this__u8e3s4.p1_1 >>> 16 | 0;
  var a32 = _this__u8e3s4.p1_1 & 65535;
  var a16 = _this__u8e3s4.o1_1 >>> 16 | 0;
  var a00 = _this__u8e3s4.o1_1 & 65535;
  var b48 = other.p1_1 >>> 16 | 0;
  var b32 = other.p1_1 & 65535;
  var b16 = other.o1_1 >>> 16 | 0;
  var b00 = other.o1_1 & 65535;
  var c48 = 0;
  var c32 = 0;
  var c16 = 0;
  var c00 = 0;
  c00 = c00 + (a00 + b00 | 0) | 0;
  c16 = c16 + (c00 >>> 16 | 0) | 0;
  c00 = c00 & 65535;
  c16 = c16 + (a16 + b16 | 0) | 0;
  c32 = c32 + (c16 >>> 16 | 0) | 0;
  c16 = c16 & 65535;
  c32 = c32 + (a32 + b32 | 0) | 0;
  c48 = c48 + (c32 >>> 16 | 0) | 0;
  c32 = c32 & 65535;
  c48 = c48 + (a48 + b48 | 0) | 0;
  c48 = c48 & 65535;
  return new Long(c16 << 16 | c00, c48 << 16 | c32);
}
function subtract(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  return add(_this__u8e3s4, other.k3());
}
function multiply(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  if (isZero(_this__u8e3s4)) {
    return get_ZERO();
  } else if (isZero(other)) {
    return get_ZERO();
  }
  if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
    return isOdd(other) ? get_MIN_VALUE() : get_ZERO();
  } else if (equalsLong(other, get_MIN_VALUE())) {
    return isOdd(_this__u8e3s4) ? get_MIN_VALUE() : get_ZERO();
  }
  if (isNegative(_this__u8e3s4)) {
    var tmp;
    if (isNegative(other)) {
      tmp = multiply(negate(_this__u8e3s4), negate(other));
    } else {
      tmp = negate(multiply(negate(_this__u8e3s4), other));
    }
    return tmp;
  } else if (isNegative(other)) {
    return negate(multiply(_this__u8e3s4, negate(other)));
  }
  if (lessThan(_this__u8e3s4, get_TWO_PWR_24_()) && lessThan(other, get_TWO_PWR_24_())) {
    return fromNumber(toNumber(_this__u8e3s4) * toNumber(other));
  }
  var a48 = _this__u8e3s4.p1_1 >>> 16 | 0;
  var a32 = _this__u8e3s4.p1_1 & 65535;
  var a16 = _this__u8e3s4.o1_1 >>> 16 | 0;
  var a00 = _this__u8e3s4.o1_1 & 65535;
  var b48 = other.p1_1 >>> 16 | 0;
  var b32 = other.p1_1 & 65535;
  var b16 = other.o1_1 >>> 16 | 0;
  var b00 = other.o1_1 & 65535;
  var c48 = 0;
  var c32 = 0;
  var c16 = 0;
  var c00 = 0;
  c00 = c00 + imul_0(a00, b00) | 0;
  c16 = c16 + (c00 >>> 16 | 0) | 0;
  c00 = c00 & 65535;
  c16 = c16 + imul_0(a16, b00) | 0;
  c32 = c32 + (c16 >>> 16 | 0) | 0;
  c16 = c16 & 65535;
  c16 = c16 + imul_0(a00, b16) | 0;
  c32 = c32 + (c16 >>> 16 | 0) | 0;
  c16 = c16 & 65535;
  c32 = c32 + imul_0(a32, b00) | 0;
  c48 = c48 + (c32 >>> 16 | 0) | 0;
  c32 = c32 & 65535;
  c32 = c32 + imul_0(a16, b16) | 0;
  c48 = c48 + (c32 >>> 16 | 0) | 0;
  c32 = c32 & 65535;
  c32 = c32 + imul_0(a00, b32) | 0;
  c48 = c48 + (c32 >>> 16 | 0) | 0;
  c32 = c32 & 65535;
  c48 = c48 + (((imul_0(a48, b00) + imul_0(a32, b16) | 0) + imul_0(a16, b32) | 0) + imul_0(a00, b48) | 0) | 0;
  c48 = c48 & 65535;
  return new Long(c16 << 16 | c00, c48 << 16 | c32);
}
function divide(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  if (isZero(other)) {
    throw Exception.t4('division by zero');
  } else if (isZero(_this__u8e3s4)) {
    return get_ZERO();
  }
  if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
    if (equalsLong(other, get_ONE()) || equalsLong(other, get_NEG_ONE())) {
      return get_MIN_VALUE();
    } else if (equalsLong(other, get_MIN_VALUE())) {
      return get_ONE();
    } else {
      var halfThis = shiftRight(_this__u8e3s4, 1);
      var approx = shiftLeft(halfThis.g3(other), 1);
      if (equalsLong(approx, get_ZERO())) {
        return isNegative(other) ? get_ONE() : get_NEG_ONE();
      } else {
        var rem = subtract(_this__u8e3s4, multiply(other, approx));
        return add(approx, rem.g3(other));
      }
    }
  } else if (equalsLong(other, get_MIN_VALUE())) {
    return get_ZERO();
  }
  if (isNegative(_this__u8e3s4)) {
    var tmp;
    if (isNegative(other)) {
      tmp = negate(_this__u8e3s4).g3(negate(other));
    } else {
      tmp = negate(negate(_this__u8e3s4).g3(other));
    }
    return tmp;
  } else if (isNegative(other)) {
    return negate(_this__u8e3s4.g3(negate(other)));
  }
  var res = get_ZERO();
  var rem_0 = _this__u8e3s4;
  while (greaterThanOrEqual(rem_0, other)) {
    var approxDouble = toNumber(rem_0) / toNumber(other);
    var approx2 = Math.max(1.0, Math.floor(approxDouble));
    var log2 = Math.ceil(Math.log(approx2) / Math.LN2);
    var delta = log2 <= 48 ? 1.0 : Math.pow(2.0, log2 - 48);
    var approxRes = fromNumber(approx2);
    var approxRem = multiply(approxRes, other);
    while (isNegative(approxRem) || greaterThan(approxRem, rem_0)) {
      approx2 = approx2 - delta;
      approxRes = fromNumber(approx2);
      approxRem = multiply(approxRes, other);
    }
    if (isZero(approxRes)) {
      approxRes = get_ONE();
    }
    res = add(res, approxRes);
    rem_0 = subtract(rem_0, approxRem);
  }
  return res;
}
function modulo(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  return subtract(_this__u8e3s4, multiply(_this__u8e3s4.g3(other), other));
}
function shiftLeft(_this__u8e3s4, numBits) {
  _init_properties_longJs_kt__elc2w5();
  var numBits_0 = numBits & 63;
  if (numBits_0 === 0) {
    return _this__u8e3s4;
  } else {
    if (numBits_0 < 32) {
      return new Long(_this__u8e3s4.o1_1 << numBits_0, _this__u8e3s4.p1_1 << numBits_0 | (_this__u8e3s4.o1_1 >>> (32 - numBits_0 | 0) | 0));
    } else {
      return new Long(0, _this__u8e3s4.o1_1 << (numBits_0 - 32 | 0));
    }
  }
}
function shiftRight(_this__u8e3s4, numBits) {
  _init_properties_longJs_kt__elc2w5();
  var numBits_0 = numBits & 63;
  if (numBits_0 === 0) {
    return _this__u8e3s4;
  } else {
    if (numBits_0 < 32) {
      return new Long(_this__u8e3s4.o1_1 >>> numBits_0 | 0 | _this__u8e3s4.p1_1 << (32 - numBits_0 | 0), _this__u8e3s4.p1_1 >> numBits_0);
    } else {
      return new Long(_this__u8e3s4.p1_1 >> (numBits_0 - 32 | 0), _this__u8e3s4.p1_1 >= 0 ? 0 : -1);
    }
  }
}
function shiftRightUnsigned(_this__u8e3s4, numBits) {
  _init_properties_longJs_kt__elc2w5();
  var numBits_0 = numBits & 63;
  if (numBits_0 === 0) {
    return _this__u8e3s4;
  } else {
    if (numBits_0 < 32) {
      return new Long(_this__u8e3s4.o1_1 >>> numBits_0 | 0 | _this__u8e3s4.p1_1 << (32 - numBits_0 | 0), _this__u8e3s4.p1_1 >>> numBits_0 | 0);
    } else {
      var tmp;
      if (numBits_0 === 32) {
        tmp = new Long(_this__u8e3s4.p1_1, 0);
      } else {
        tmp = new Long(_this__u8e3s4.p1_1 >>> (numBits_0 - 32 | 0) | 0, 0);
      }
      return tmp;
    }
  }
}
function toNumber(_this__u8e3s4) {
  _init_properties_longJs_kt__elc2w5();
  return _this__u8e3s4.p1_1 * 4.294967296E9 + getLowBitsUnsigned(_this__u8e3s4);
}
function toStringImpl(_this__u8e3s4, radix) {
  _init_properties_longJs_kt__elc2w5();
  if (radix < 2 || 36 < radix) {
    throw Exception.t4('radix out of range: ' + radix);
  }
  if (isZero(_this__u8e3s4)) {
    return '0';
  }
  if (isNegative(_this__u8e3s4)) {
    if (equalsLong(_this__u8e3s4, get_MIN_VALUE())) {
      var radixLong = fromInt(radix);
      var div = _this__u8e3s4.g3(radixLong);
      var rem = subtract(multiply(div, radixLong), _this__u8e3s4).u3();
      var tmp = toStringImpl(div, radix);
      // Inline function 'kotlin.js.unsafeCast' call
      // Inline function 'kotlin.js.asDynamic' call
      return tmp + rem.toString(radix);
    } else {
      return '-' + toStringImpl(negate(_this__u8e3s4), radix);
    }
  }
  var digitsPerTime = radix === 2 ? 31 : radix <= 10 ? 9 : radix <= 21 ? 7 : radix <= 35 ? 6 : 5;
  var radixToPower = fromNumber(Math.pow(radix, digitsPerTime));
  var rem_0 = _this__u8e3s4;
  var result = '';
  while (true) {
    var remDiv = rem_0.g3(radixToPower);
    var intval = subtract(rem_0, multiply(remDiv, radixToPower)).u3();
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var digits = intval.toString(radix);
    rem_0 = remDiv;
    if (isZero(rem_0)) {
      return digits + result;
    } else {
      while (digits.length < digitsPerTime) {
        digits = '0' + digits;
      }
      result = digits + result;
    }
  }
}
function equalsLong(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  return _this__u8e3s4.p1_1 === other.p1_1 && _this__u8e3s4.o1_1 === other.o1_1;
}
function hashCode_0(l) {
  _init_properties_longJs_kt__elc2w5();
  return l.o1_1 ^ l.p1_1;
}
function fromInt(value) {
  _init_properties_longJs_kt__elc2w5();
  return new Long(value, value < 0 ? -1 : 0);
}
function isNegative(_this__u8e3s4) {
  _init_properties_longJs_kt__elc2w5();
  return _this__u8e3s4.p1_1 < 0;
}
function isZero(_this__u8e3s4) {
  _init_properties_longJs_kt__elc2w5();
  return _this__u8e3s4.p1_1 === 0 && _this__u8e3s4.o1_1 === 0;
}
function isOdd(_this__u8e3s4) {
  _init_properties_longJs_kt__elc2w5();
  return (_this__u8e3s4.o1_1 & 1) === 1;
}
function negate(_this__u8e3s4) {
  _init_properties_longJs_kt__elc2w5();
  return _this__u8e3s4.k3();
}
function lessThan(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  return compare(_this__u8e3s4, other) < 0;
}
function fromNumber(value) {
  _init_properties_longJs_kt__elc2w5();
  if (isNaN_0(value)) {
    return get_ZERO();
  } else if (value <= -9.223372036854776E18) {
    return get_MIN_VALUE();
  } else if (value + 1 >= 9.223372036854776E18) {
    return get_MAX_VALUE();
  } else if (value < 0) {
    return negate(fromNumber(-value));
  } else {
    var twoPwr32 = 4.294967296E9;
    // Inline function 'kotlin.js.jsBitwiseOr' call
    var tmp = value % twoPwr32 | 0;
    // Inline function 'kotlin.js.jsBitwiseOr' call
    var tmp$ret$1 = value / twoPwr32 | 0;
    return new Long(tmp, tmp$ret$1);
  }
}
function greaterThan(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  return compare(_this__u8e3s4, other) > 0;
}
function greaterThanOrEqual(_this__u8e3s4, other) {
  _init_properties_longJs_kt__elc2w5();
  return compare(_this__u8e3s4, other) >= 0;
}
function getLowBitsUnsigned(_this__u8e3s4) {
  _init_properties_longJs_kt__elc2w5();
  return _this__u8e3s4.o1_1 >= 0 ? _this__u8e3s4.o1_1 : 4.294967296E9 + _this__u8e3s4.o1_1;
}
var properties_initialized_longJs_kt_4syf89;
function _init_properties_longJs_kt__elc2w5() {
  if (!properties_initialized_longJs_kt_4syf89) {
    properties_initialized_longJs_kt_4syf89 = true;
    ZERO = fromInt(0);
    ONE = fromInt(1);
    NEG_ONE = fromInt(-1);
    MAX_VALUE = new Long(-1, 2147483647);
    MIN_VALUE = new Long(0, -2147483648);
    TWO_PWR_24_ = fromInt(16777216);
  }
}
function createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity) {
  var undef = VOID;
  var iid = kind === 'interface' ? generateInterfaceId() : VOID;
  return {kind: kind, simpleName: name, associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, $kClass$: undef, defaultConstructor: defaultConstructor, iid: iid};
}
function generateInterfaceId() {
  if (globalInterfaceId === VOID) {
    globalInterfaceId = 0;
  }
  // Inline function 'kotlin.js.unsafeCast' call
  globalInterfaceId = globalInterfaceId + 1 | 0;
  // Inline function 'kotlin.js.unsafeCast' call
  return globalInterfaceId;
}
var globalInterfaceId;
function initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
  if (!(parent == null)) {
    ctor.prototype = Object.create(parent.prototype);
    ctor.prototype.constructor = ctor;
  }
  var metadata = createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity);
  ctor.$metadata$ = metadata;
  if (!(interfaces == null)) {
    var receiver = !equals(metadata.iid, VOID) ? ctor : ctor.prototype;
    receiver.$imask$ = implement(interfaces);
  }
}
function initMetadataForClass(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
  var kind = 'class';
  initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);
}
function initMetadataForObject(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
  var kind = 'object';
  initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);
}
function initMetadataForInterface(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {
  var kind = 'interface';
  initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);
}
function initMetadataForLambda(ctor, parent, interfaces, suspendArity) {
  initMetadataForClass(ctor, 'Lambda', VOID, parent, interfaces, suspendArity, VOID, VOID);
}
function initMetadataForCoroutine(ctor, parent, interfaces, suspendArity) {
  initMetadataForClass(ctor, 'Coroutine', VOID, parent, interfaces, suspendArity, VOID, VOID);
}
function initMetadataForFunctionReference(ctor, parent, interfaces, suspendArity) {
  initMetadataForClass(ctor, 'FunctionReference', VOID, parent, interfaces, suspendArity, VOID, VOID);
}
function initMetadataForCompanion(ctor, parent, interfaces, suspendArity) {
  initMetadataForObject(ctor, 'Companion', VOID, parent, interfaces, suspendArity, VOID, VOID);
}
function classMeta(name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity) {
  return createMetadata('class', name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity);
}
function toByte(a) {
  // Inline function 'kotlin.js.unsafeCast' call
  return a << 24 >> 24;
}
function numberToInt(a) {
  var tmp;
  if (a instanceof Long) {
    tmp = a.u3();
  } else {
    tmp = doubleToInt(a);
  }
  return tmp;
}
function doubleToInt(a) {
  var tmp;
  if (a > 2147483647) {
    tmp = 2147483647;
  } else if (a < -2147483648) {
    tmp = -2147483648;
  } else {
    // Inline function 'kotlin.js.jsBitwiseOr' call
    tmp = a | 0;
  }
  return tmp;
}
function toShort(a) {
  // Inline function 'kotlin.js.unsafeCast' call
  return a << 16 >> 16;
}
function numberToLong(a) {
  var tmp;
  if (a instanceof Long) {
    tmp = a;
  } else {
    tmp = fromNumber(a);
  }
  return tmp;
}
function numberToChar(a) {
  // Inline function 'kotlin.toUShort' call
  var this_0 = numberToInt(a);
  var tmp$ret$0 = _UShort___init__impl__jigrne(toShort(this_0));
  return _Char___init__impl__6a9atx_0(tmp$ret$0);
}
function toLong(a) {
  return fromInt(a);
}
var ByteCompanionObject_instance;
function ByteCompanionObject_getInstance() {
  return ByteCompanionObject_instance;
}
var ShortCompanionObject_instance;
function ShortCompanionObject_getInstance() {
  return ShortCompanionObject_instance;
}
var IntCompanionObject_instance;
function IntCompanionObject_getInstance() {
  return IntCompanionObject_instance;
}
var FloatCompanionObject_instance;
function FloatCompanionObject_getInstance() {
  return FloatCompanionObject_instance;
}
var DoubleCompanionObject_instance;
function DoubleCompanionObject_getInstance() {
  return DoubleCompanionObject_instance;
}
var StringCompanionObject_instance;
function StringCompanionObject_getInstance() {
  return StringCompanionObject_instance;
}
var BooleanCompanionObject_instance;
function BooleanCompanionObject_getInstance() {
  return BooleanCompanionObject_instance;
}
function numberRangeToNumber(start, endInclusive) {
  return new IntRange(start, endInclusive);
}
function get_propertyRefClassMetadataCache() {
  _init_properties_reflectRuntime_kt__5r4uu3();
  return propertyRefClassMetadataCache;
}
var propertyRefClassMetadataCache;
function metadataObject() {
  _init_properties_reflectRuntime_kt__5r4uu3();
  return classMeta(VOID, VOID, VOID, VOID, VOID);
}
function getPropertyCallableRef(name, paramCount, superType, getter, setter) {
  _init_properties_reflectRuntime_kt__5r4uu3();
  getter.get = getter;
  getter.set = setter;
  getter.callableName = name;
  // Inline function 'kotlin.js.unsafeCast' call
  return getPropertyRefClass(getter, getKPropMetadata(paramCount, setter), getInterfaceMaskFor(getter, superType));
}
function getPropertyRefClass(obj, metadata, imask) {
  _init_properties_reflectRuntime_kt__5r4uu3();
  obj.$metadata$ = metadata;
  obj.constructor = obj;
  obj.$imask$ = imask;
  return obj;
}
function getKPropMetadata(paramCount, setter) {
  _init_properties_reflectRuntime_kt__5r4uu3();
  return get_propertyRefClassMetadataCache()[paramCount][setter == null ? 0 : 1];
}
function getInterfaceMaskFor(obj, superType) {
  _init_properties_reflectRuntime_kt__5r4uu3();
  var tmp0_elvis_lhs = obj.$imask$;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$2 = [superType];
    tmp = implement(tmp$ret$2);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
var properties_initialized_reflectRuntime_kt_inkhwd;
function _init_properties_reflectRuntime_kt__5r4uu3() {
  if (!properties_initialized_reflectRuntime_kt_inkhwd) {
    properties_initialized_reflectRuntime_kt_inkhwd = true;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp = [metadataObject(), metadataObject()];
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp_0 = [metadataObject(), metadataObject()];
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    propertyRefClassMetadataCache = [tmp, tmp_0, [metadataObject(), metadataObject()]];
  }
}
function isArrayish(o) {
  return isJsArray(o) || isView(o);
}
function isJsArray(obj) {
  // Inline function 'kotlin.js.unsafeCast' call
  return Array.isArray(obj);
}
function isInterface(obj, iface) {
  return isInterfaceImpl(obj, iface.$metadata$.iid);
}
function isInterfaceImpl(obj, iface) {
  // Inline function 'kotlin.js.unsafeCast' call
  var tmp0_elvis_lhs = obj.$imask$;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    return false;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var mask = tmp;
  return isBitSet(mask, iface);
}
function isArray(obj) {
  var tmp;
  if (isJsArray(obj)) {
    // Inline function 'kotlin.js.asDynamic' call
    tmp = !obj.$type$;
  } else {
    tmp = false;
  }
  return tmp;
}
function isSuspendFunction(obj, arity) {
  var objTypeOf = typeof obj;
  if (objTypeOf === 'function') {
    // Inline function 'kotlin.js.unsafeCast' call
    return obj.$arity === arity;
  }
  // Inline function 'kotlin.js.unsafeCast' call
  var tmp1_safe_receiver = obj == null ? null : obj.constructor;
  var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.$metadata$;
  var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.suspendArity;
  var tmp;
  if (tmp3_elvis_lhs == null) {
    return false;
  } else {
    tmp = tmp3_elvis_lhs;
  }
  var suspendArity = tmp;
  var result = false;
  var inductionVariable = 0;
  var last = suspendArity.length;
  $l$loop: while (inductionVariable < last) {
    var item = suspendArity[inductionVariable];
    inductionVariable = inductionVariable + 1 | 0;
    if (arity === item) {
      result = true;
      break $l$loop;
    }
  }
  return result;
}
function isNumber(a) {
  var tmp;
  if (typeof a === 'number') {
    tmp = true;
  } else {
    tmp = a instanceof Long;
  }
  return tmp;
}
function isComparable(value) {
  var type = typeof value;
  return type === 'string' || type === 'boolean' || isNumber(value) || isInterface(value, Comparable);
}
function isCharSequence(value) {
  return typeof value === 'string' || isInterface(value, CharSequence);
}
function isBooleanArray(a) {
  return isJsArray(a) && a.$type$ === 'BooleanArray';
}
function isByteArray(a) {
  // Inline function 'kotlin.js.jsInstanceOf' call
  return a instanceof Int8Array;
}
function isShortArray(a) {
  // Inline function 'kotlin.js.jsInstanceOf' call
  return a instanceof Int16Array;
}
function isCharArray(a) {
  var tmp;
  // Inline function 'kotlin.js.jsInstanceOf' call
  if (a instanceof Uint16Array) {
    tmp = a.$type$ === 'CharArray';
  } else {
    tmp = false;
  }
  return tmp;
}
function isIntArray(a) {
  // Inline function 'kotlin.js.jsInstanceOf' call
  return a instanceof Int32Array;
}
function isFloatArray(a) {
  // Inline function 'kotlin.js.jsInstanceOf' call
  return a instanceof Float32Array;
}
function isLongArray(a) {
  return isJsArray(a) && a.$type$ === 'LongArray';
}
function isDoubleArray(a) {
  // Inline function 'kotlin.js.jsInstanceOf' call
  return a instanceof Float64Array;
}
function jsIsType(obj, jsClass) {
  if (jsClass === Object) {
    return obj != null;
  }
  var objType = typeof obj;
  var jsClassType = typeof jsClass;
  if (obj == null || jsClass == null || (!(objType === 'object') && !(objType === 'function'))) {
    return false;
  }
  var constructor = jsClassType === 'object' ? jsGetPrototypeOf(jsClass) : jsClass;
  var klassMetadata = constructor.$metadata$;
  if ((klassMetadata == null ? null : klassMetadata.kind) === 'interface') {
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_elvis_lhs = klassMetadata.iid;
    var tmp;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp1_elvis_lhs;
    }
    var iid = tmp;
    return isInterfaceImpl(obj, iid);
  }
  // Inline function 'kotlin.js.jsInstanceOf' call
  return obj instanceof constructor;
}
function jsGetPrototypeOf(jsClass) {
  return Object.getPrototypeOf(jsClass);
}
function calculateErrorInfo(proto) {
  var tmp0_safe_receiver = proto.constructor;
  var metadata = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.$metadata$;
  var tmp2_safe_receiver = metadata == null ? null : metadata.errorInfo;
  if (tmp2_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    return tmp2_safe_receiver;
  }
  var result = 0;
  if (hasProp(proto, 'message'))
    result = result | 1;
  if (hasProp(proto, 'cause'))
    result = result | 2;
  if (!(result === 3)) {
    var parentProto = getPrototypeOf(proto);
    if (parentProto != Error.prototype) {
      result = result | calculateErrorInfo(parentProto);
    }
  }
  if (!(metadata == null)) {
    metadata.errorInfo = result;
  }
  return result;
}
function hasProp(proto, propName) {
  return proto.hasOwnProperty(propName);
}
function getPrototypeOf(obj) {
  return Object.getPrototypeOf(obj);
}
function get_VOID() {
  _init_properties_void_kt__3zg9as();
  return VOID;
}
var VOID;
var properties_initialized_void_kt_e4ret2;
function _init_properties_void_kt__3zg9as() {
  if (!properties_initialized_void_kt_e4ret2) {
    properties_initialized_void_kt_e4ret2 = true;
    VOID = void 0;
  }
}
function fill(_this__u8e3s4, element, fromIndex, toIndex) {
  fromIndex = fromIndex === VOID ? 0 : fromIndex;
  toIndex = toIndex === VOID ? _this__u8e3s4.length : toIndex;
  Companion_instance_5.c5(fromIndex, toIndex, _this__u8e3s4.length);
  // Inline function 'kotlin.js.nativeFill' call
  // Inline function 'kotlin.js.asDynamic' call
  _this__u8e3s4.fill(element, fromIndex, toIndex);
}
function asList(_this__u8e3s4) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  return ArrayList.d5(_this__u8e3s4);
}
function copyOf(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  // Inline function 'withType' call
  var type = 'CharArray';
  var array = fillFrom(_this__u8e3s4, charArray(newSize));
  array.$type$ = type;
  return array;
}
function copyOf_0(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  return fillFrom(_this__u8e3s4, new Float64Array(newSize));
}
function copyOf_1(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  return fillFrom(_this__u8e3s4, new Float32Array(newSize));
}
function copyOf_2(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  // Inline function 'withType' call
  var type = 'LongArray';
  var array = arrayCopyResize(_this__u8e3s4, newSize, new Long(0, 0));
  array.$type$ = type;
  return array;
}
function copyOf_3(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  return fillFrom(_this__u8e3s4, new Int32Array(newSize));
}
function copyOf_4(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  return fillFrom(_this__u8e3s4, new Int16Array(newSize));
}
function copyOf_5(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  return fillFrom(_this__u8e3s4, new Int8Array(newSize));
}
function copyOf_6(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  // Inline function 'withType' call
  var type = 'BooleanArray';
  var array = arrayCopyResize(_this__u8e3s4, newSize, false);
  array.$type$ = type;
  return array;
}
function contentEquals(_this__u8e3s4, other) {
  return contentEqualsInternal(_this__u8e3s4, other);
}
function contentHashCode(_this__u8e3s4) {
  return contentHashCodeInternal(_this__u8e3s4);
}
function sortWith(_this__u8e3s4, comparator) {
  if (_this__u8e3s4.length > 1) {
    sortArrayWith(_this__u8e3s4, comparator);
  }
}
function fill_0(_this__u8e3s4, element, fromIndex, toIndex) {
  fromIndex = fromIndex === VOID ? 0 : fromIndex;
  toIndex = toIndex === VOID ? _this__u8e3s4.length : toIndex;
  Companion_instance_5.c5(fromIndex, toIndex, _this__u8e3s4.length);
  // Inline function 'kotlin.js.nativeFill' call
  // Inline function 'kotlin.js.asDynamic' call
  _this__u8e3s4.fill(element, fromIndex, toIndex);
}
function copyOf_7(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(newSize >= 0)) {
    // Inline function 'kotlin.collections.copyOf.<anonymous>' call
    var message = 'Invalid new array size: ' + newSize + '.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  return arrayCopyResize(_this__u8e3s4, newSize, null);
}
function decodeVarLenBase64(base64, fromBase64, resultLength) {
  var result = new Int32Array(resultLength);
  var index = 0;
  var int = 0;
  var shift = 0;
  var inductionVariable = 0;
  var last = base64.length;
  while (inductionVariable < last) {
    var char = charSequenceGet(base64, inductionVariable);
    inductionVariable = inductionVariable + 1 | 0;
    // Inline function 'kotlin.code' call
    var sixBit = fromBase64[Char__toInt_impl_vasixd(char)];
    int = int | (sixBit & 31) << shift;
    if (sixBit < 32) {
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      result[tmp1] = int;
      int = 0;
      shift = 0;
    } else {
      shift = shift + 5 | 0;
    }
  }
  return result;
}
function reverse(_this__u8e3s4) {
  var midPoint = (_this__u8e3s4.z() / 2 | 0) - 1 | 0;
  if (midPoint < 0)
    return Unit_instance;
  var reverseIndex = get_lastIndex_2(_this__u8e3s4);
  var inductionVariable = 0;
  if (inductionVariable <= midPoint)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var tmp = _this__u8e3s4.c1(index);
      _this__u8e3s4.k2(index, _this__u8e3s4.c1(reverseIndex));
      _this__u8e3s4.k2(reverseIndex, tmp);
      reverseIndex = reverseIndex - 1 | 0;
    }
     while (!(index === midPoint));
}
function digitToIntImpl(_this__u8e3s4) {
  // Inline function 'kotlin.code' call
  var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
  var index = binarySearchRange(Digit_getInstance().e5_1, ch);
  var diff = ch - Digit_getInstance().e5_1[index] | 0;
  return diff < 10 ? diff : -1;
}
function binarySearchRange(array, needle) {
  var bottom = 0;
  var top = array.length - 1 | 0;
  var middle = -1;
  var value = 0;
  while (bottom <= top) {
    middle = (bottom + top | 0) / 2 | 0;
    value = array[middle];
    if (needle > value)
      bottom = middle + 1 | 0;
    else if (needle === value)
      return middle;
    else
      top = middle - 1 | 0;
  }
  return middle - (needle < value ? 1 : 0) | 0;
}
var Digit_instance;
function Digit_getInstance() {
  if (Digit_instance === VOID)
    new Digit();
  return Digit_instance;
}
function getLetterType(_this__u8e3s4) {
  // Inline function 'kotlin.code' call
  var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
  var index = binarySearchRange(Letter_getInstance().f5_1, ch);
  var rangeStart = Letter_getInstance().f5_1[index];
  var rangeEnd = (rangeStart + Letter_getInstance().g5_1[index] | 0) - 1 | 0;
  var code = Letter_getInstance().h5_1[index];
  if (ch > rangeEnd) {
    return 0;
  }
  var lastTwoBits = code & 3;
  if (lastTwoBits === 0) {
    var shift = 2;
    var threshold = rangeStart;
    var inductionVariable = 0;
    if (inductionVariable <= 1)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        threshold = threshold + (code >> shift & 127) | 0;
        if (threshold > ch) {
          return 3;
        }
        shift = shift + 7 | 0;
        threshold = threshold + (code >> shift & 127) | 0;
        if (threshold > ch) {
          return 0;
        }
        shift = shift + 7 | 0;
      }
       while (inductionVariable <= 1);
    return 3;
  }
  if (code <= 7) {
    return lastTwoBits;
  }
  var distance = ch - rangeStart | 0;
  var shift_0 = code <= 31 ? distance % 2 | 0 : distance;
  return code >> imul_0(2, shift_0) & 3;
}
var Letter_instance;
function Letter_getInstance() {
  if (Letter_instance === VOID)
    new Letter();
  return Letter_instance;
}
function isLowerCaseImpl(_this__u8e3s4) {
  var tmp;
  if (getLetterType(_this__u8e3s4) === 1) {
    tmp = true;
  } else {
    // Inline function 'kotlin.code' call
    var tmp$ret$0 = Char__toInt_impl_vasixd(_this__u8e3s4);
    tmp = isOtherLowercase(tmp$ret$0);
  }
  return tmp;
}
function isOtherLowercase(_this__u8e3s4) {
  var index = binarySearchRange(OtherLowercase_getInstance().i5_1, _this__u8e3s4);
  return index >= 0 && _this__u8e3s4 < (OtherLowercase_getInstance().i5_1[index] + OtherLowercase_getInstance().j5_1[index] | 0);
}
var OtherLowercase_instance;
function OtherLowercase_getInstance() {
  if (OtherLowercase_instance === VOID)
    new OtherLowercase();
  return OtherLowercase_instance;
}
function titlecaseCharImpl(_this__u8e3s4) {
  // Inline function 'kotlin.code' call
  var code = Char__toInt_impl_vasixd(_this__u8e3s4);
  if ((452 <= code ? code <= 460 : false) || (497 <= code ? code <= 499 : false)) {
    return numberToChar(imul_0(3, (code + 1 | 0) / 3 | 0));
  }
  if ((4304 <= code ? code <= 4346 : false) || (4349 <= code ? code <= 4351 : false)) {
    return _this__u8e3s4;
  }
  return uppercaseChar(_this__u8e3s4);
}
function isWhitespaceImpl(_this__u8e3s4) {
  // Inline function 'kotlin.code' call
  var ch = Char__toInt_impl_vasixd(_this__u8e3s4);
  return (9 <= ch ? ch <= 13 : false) || (28 <= ch ? ch <= 32 : false) || ch === 160 || (ch > 4096 && (ch === 5760 || (8192 <= ch ? ch <= 8202 : false) || ch === 8232 || ch === 8233 || ch === 8239 || ch === 8287 || ch === 12288));
}
function isNaN_0(_this__u8e3s4) {
  return !(_this__u8e3s4 === _this__u8e3s4);
}
function isInfinite(_this__u8e3s4) {
  var tmp;
  if (_this__u8e3s4 === Infinity) {
    tmp = true;
  } else {
    tmp = _this__u8e3s4 === -Infinity;
  }
  return tmp;
}
function isFinite(_this__u8e3s4) {
  return !isInfinite(_this__u8e3s4) && !isNaN_0(_this__u8e3s4);
}
function takeHighestOneBit(_this__u8e3s4) {
  var tmp;
  if (_this__u8e3s4 === 0) {
    tmp = 0;
  } else {
    // Inline function 'kotlin.countLeadingZeroBits' call
    tmp = 1 << (31 - clz32(_this__u8e3s4) | 0);
  }
  return tmp;
}
function isFinite_0(_this__u8e3s4) {
  return !isInfinite_0(_this__u8e3s4) && !isNaN_1(_this__u8e3s4);
}
function isInfinite_0(_this__u8e3s4) {
  var tmp;
  if (_this__u8e3s4 === Infinity) {
    tmp = true;
  } else {
    tmp = _this__u8e3s4 === -Infinity;
  }
  return tmp;
}
function isNaN_1(_this__u8e3s4) {
  return !(_this__u8e3s4 === _this__u8e3s4);
}
function countTrailingZeroBits(_this__u8e3s4) {
  var low = _this__u8e3s4.o1_1;
  return low === 0 ? 32 + countTrailingZeroBits_0(_this__u8e3s4.p1_1) | 0 : countTrailingZeroBits_0(low);
}
function countTrailingZeroBits_0(_this__u8e3s4) {
  // Inline function 'kotlin.countLeadingZeroBits' call
  var this_0 = ~(_this__u8e3s4 | (-_this__u8e3s4 | 0));
  return 32 - clz32(this_0) | 0;
}
function uintCompare(v1, v2) {
  return compareTo(v1 ^ -2147483648, v2 ^ -2147483648);
}
function uintDivide(v1, v2) {
  // Inline function 'kotlin.toUInt' call
  // Inline function 'kotlin.UInt.toLong' call
  // Inline function 'kotlin.uintToLong' call
  var value = _UInt___get_data__impl__f0vqqw(v1);
  var tmp = toLong(value).p3(new Long(-1, 0));
  // Inline function 'kotlin.UInt.toLong' call
  // Inline function 'kotlin.uintToLong' call
  var value_0 = _UInt___get_data__impl__f0vqqw(v2);
  var tmp$ret$3 = toLong(value_0).p3(new Long(-1, 0));
  var this_0 = tmp.g3(tmp$ret$3);
  return _UInt___init__impl__l7qpdl(this_0.u3());
}
function ulongCompare(v1, v2) {
  return v1.r3(new Long(0, -2147483648)).q1(v2.r3(new Long(0, -2147483648)));
}
function ulongDivide(v1, v2) {
  // Inline function 'kotlin.ULong.toLong' call
  var dividend = _ULong___get_data__impl__fggpzb(v1);
  // Inline function 'kotlin.ULong.toLong' call
  var divisor = _ULong___get_data__impl__fggpzb(v2);
  if (divisor.q1(new Long(0, 0)) < 0) {
    var tmp;
    // Inline function 'kotlin.ULong.compareTo' call
    if (ulongCompare(_ULong___get_data__impl__fggpzb(v1), _ULong___get_data__impl__fggpzb(v2)) < 0) {
      tmp = _ULong___init__impl__c78o9k(new Long(0, 0));
    } else {
      tmp = _ULong___init__impl__c78o9k(new Long(1, 0));
    }
    return tmp;
  }
  if (dividend.q1(new Long(0, 0)) >= 0) {
    return _ULong___init__impl__c78o9k(dividend.g3(divisor));
  }
  var quotient = dividend.o3(1).g3(divisor).m3(1);
  var rem = dividend.e3(quotient.f3(divisor));
  // Inline function 'kotlin.Long.plus' call
  var tmp_0;
  // Inline function 'kotlin.ULong.compareTo' call
  var this_0 = _ULong___init__impl__c78o9k(rem);
  var other = _ULong___init__impl__c78o9k(divisor);
  if (ulongCompare(_ULong___get_data__impl__fggpzb(this_0), _ULong___get_data__impl__fggpzb(other)) >= 0) {
    tmp_0 = 1;
  } else {
    tmp_0 = 0;
  }
  var other_0 = tmp_0;
  var tmp$ret$4 = quotient.d3(toLong(other_0));
  return _ULong___init__impl__c78o9k(tmp$ret$4);
}
function ulongToString(value, base) {
  if (value.q1(new Long(0, 0)) >= 0)
    return toString_3(value, base);
  // Inline function 'kotlin.Long.div' call
  var quotient = value.o3(1).g3(toLong(base)).m3(1);
  // Inline function 'kotlin.Long.times' call
  var tmp$ret$1 = quotient.f3(toLong(base));
  var rem = value.e3(tmp$ret$1);
  if (rem.q1(toLong(base)) >= 0) {
    // Inline function 'kotlin.Long.minus' call
    rem = rem.e3(toLong(base));
    // Inline function 'kotlin.Long.plus' call
    quotient = quotient.d3(toLong(1));
  }
  return toString_3(quotient, base) + toString_3(rem, base);
}
function collectionToArray(collection) {
  return collectionToArrayCommonImpl(collection);
}
function terminateCollectionToArray(collectionSize, array) {
  return array;
}
function arrayOfNulls(reference, size) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.arrayOfNulls' call
  // Inline function 'kotlin.js.asDynamic' call
  return fillArrayVal(Array(size), null);
}
function listOf(element) {
  return arrayListOf([element]);
}
function setOf(element) {
  return hashSetOf([element]);
}
function mapCapacity(expectedSize) {
  return expectedSize;
}
function checkIndexOverflow(index) {
  if (index < 0) {
    throwIndexOverflow();
  }
  return index;
}
function sortWith_0(_this__u8e3s4, comparator) {
  collectionsSort(_this__u8e3s4, comparator);
}
function copyToArray(collection) {
  var tmp;
  // Inline function 'kotlin.js.asDynamic' call
  if (collection.toArray !== undefined) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = collection.toArray();
  } else {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = collectionToArray(collection);
  }
  return tmp;
}
function collectionsSort(list, comparator) {
  if (list.z() <= 1)
    return Unit_instance;
  var array = copyToArray(list);
  sortArrayWith(array, comparator);
  var inductionVariable = 0;
  var last = array.length;
  if (inductionVariable < last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      list.k2(i, array[i]);
    }
     while (inductionVariable < last);
}
function mapOf(pair) {
  return hashMapOf([pair]);
}
function arrayCopy(source, destination, destinationOffset, startIndex, endIndex) {
  Companion_instance_5.c5(startIndex, endIndex, source.length);
  var rangeSize = endIndex - startIndex | 0;
  Companion_instance_5.c5(destinationOffset, destinationOffset + rangeSize | 0, destination.length);
  if (isView(destination) && isView(source)) {
    // Inline function 'kotlin.js.asDynamic' call
    var subrange = source.subarray(startIndex, endIndex);
    // Inline function 'kotlin.js.asDynamic' call
    destination.set(subrange, destinationOffset);
  } else {
    if (!(source === destination) || destinationOffset <= startIndex) {
      var inductionVariable = 0;
      if (inductionVariable < rangeSize)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          destination[destinationOffset + index | 0] = source[startIndex + index | 0];
        }
         while (inductionVariable < rangeSize);
    } else {
      var inductionVariable_0 = rangeSize - 1 | 0;
      if (0 <= inductionVariable_0)
        do {
          var index_0 = inductionVariable_0;
          inductionVariable_0 = inductionVariable_0 + -1 | 0;
          destination[destinationOffset + index_0 | 0] = source[startIndex + index_0 | 0];
        }
         while (0 <= inductionVariable_0);
    }
  }
}
function arrayOfUninitializedElements(capacity) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(capacity >= 0)) {
    // Inline function 'kotlin.collections.arrayOfUninitializedElements.<anonymous>' call
    var message = 'capacity must be non-negative.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.arrayOfNulls' call
  // Inline function 'kotlin.js.asDynamic' call
  return fillArrayVal(Array(capacity), null);
}
function resetRange(_this__u8e3s4, fromIndex, toIndex) {
  // Inline function 'kotlin.js.nativeFill' call
  // Inline function 'kotlin.js.asDynamic' call
  _this__u8e3s4.fill(null, fromIndex, toIndex);
}
function copyOfUninitializedElements(_this__u8e3s4, newSize) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  return copyOf_7(_this__u8e3s4, newSize);
}
function resetAt(_this__u8e3s4, index) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  _this__u8e3s4[index] = null;
}
var Companion_instance_2;
function Companion_getInstance_2() {
  if (Companion_instance_2 === VOID)
    new Companion_2();
  return Companion_instance_2;
}
function increaseLength($this, amount) {
  var previous = $this.z();
  // Inline function 'kotlin.js.asDynamic' call
  $this.q_1.length = $this.z() + amount | 0;
  return previous;
}
function rangeCheck($this, index) {
  // Inline function 'kotlin.apply' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.collections.ArrayList.rangeCheck.<anonymous>' call
  Companion_instance_5.w6(index, $this.z());
  return index;
}
function insertionRangeCheck($this, index) {
  // Inline function 'kotlin.apply' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.collections.ArrayList.insertionRangeCheck.<anonymous>' call
  Companion_instance_5.x5(index, $this.z());
  return index;
}
var _stableSortingIsSupported;
function sortArrayWith(array, comparator) {
  if (getStableSortingIsSupported()) {
    var comparison = sortArrayWith$lambda(comparator);
    // Inline function 'kotlin.js.asDynamic' call
    array.sort(comparison);
  } else {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    mergeSort(array, 0, get_lastIndex(array), comparator);
  }
}
function getStableSortingIsSupported() {
  var tmp0_safe_receiver = _stableSortingIsSupported;
  if (tmp0_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    return tmp0_safe_receiver;
  }
  _stableSortingIsSupported = false;
  // Inline function 'kotlin.js.unsafeCast' call
  var array = [];
  var inductionVariable = 0;
  if (inductionVariable < 600)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.js.asDynamic' call
      array.push(index);
    }
     while (inductionVariable < 600);
  var comparison = getStableSortingIsSupported$lambda;
  // Inline function 'kotlin.js.asDynamic' call
  array.sort(comparison);
  var inductionVariable_0 = 1;
  var last = array.length;
  if (inductionVariable_0 < last)
    do {
      var index_0 = inductionVariable_0;
      inductionVariable_0 = inductionVariable_0 + 1 | 0;
      var a = array[index_0 - 1 | 0];
      var b = array[index_0];
      if ((a & 3) === (b & 3) && a >= b)
        return false;
    }
     while (inductionVariable_0 < last);
  _stableSortingIsSupported = true;
  return true;
}
function mergeSort(array, start, endInclusive, comparator) {
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.arrayOfNulls' call
  var size = array.length;
  // Inline function 'kotlin.js.asDynamic' call
  var buffer = fillArrayVal(Array(size), null);
  var result = mergeSort_0(array, buffer, start, endInclusive, comparator);
  if (!(result === array)) {
    var inductionVariable = start;
    if (inductionVariable <= endInclusive)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        array[i] = result[i];
      }
       while (!(i === endInclusive));
  }
}
function mergeSort_0(array, buffer, start, end, comparator) {
  if (start === end) {
    return array;
  }
  var median = (start + end | 0) / 2 | 0;
  var left = mergeSort_0(array, buffer, start, median, comparator);
  var right = mergeSort_0(array, buffer, median + 1 | 0, end, comparator);
  var target = left === buffer ? array : buffer;
  var leftIndex = start;
  var rightIndex = median + 1 | 0;
  var inductionVariable = start;
  if (inductionVariable <= end)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (leftIndex <= median && rightIndex <= end) {
        var leftValue = left[leftIndex];
        var rightValue = right[rightIndex];
        if (comparator.compare(leftValue, rightValue) <= 0) {
          target[i] = leftValue;
          leftIndex = leftIndex + 1 | 0;
        } else {
          target[i] = rightValue;
          rightIndex = rightIndex + 1 | 0;
        }
      } else if (leftIndex <= median) {
        target[i] = left[leftIndex];
        leftIndex = leftIndex + 1 | 0;
      } else {
        target[i] = right[rightIndex];
        rightIndex = rightIndex + 1 | 0;
      }
    }
     while (!(i === end));
  return target;
}
function sortArrayWith$lambda($comparator) {
  return function (a, b) {
    return $comparator.compare(a, b);
  };
}
function getStableSortingIsSupported$lambda(a, b) {
  return (a & 3) - (b & 3) | 0;
}
function init_kotlin_collections_HashMap(_this__u8e3s4) {
  _this__u8e3s4.i7_1 = null;
}
function init_kotlin_collections_HashSet(_this__u8e3s4) {
}
function computeHashSize($this, capacity) {
  return takeHighestOneBit(imul_0(coerceAtLeast(capacity, 1), 3));
}
function computeShift($this, hashSize) {
  // Inline function 'kotlin.countLeadingZeroBits' call
  return clz32(hashSize) + 1 | 0;
}
function _get_capacity__a9k9f3($this) {
  return $this.l7_1.length;
}
function _get_hashSize__tftcho($this) {
  return $this.o7_1.length;
}
function registerModification($this) {
  $this.s7_1 = $this.s7_1 + 1 | 0;
}
function ensureExtraCapacity($this, n) {
  if (shouldCompact($this, n)) {
    rehash($this, _get_hashSize__tftcho($this));
  } else {
    ensureCapacity($this, $this.q7_1 + n | 0);
  }
}
function shouldCompact($this, extraCapacity) {
  var spareCapacity = _get_capacity__a9k9f3($this) - $this.q7_1 | 0;
  var gaps = $this.q7_1 - $this.z() | 0;
  return spareCapacity < extraCapacity && (gaps + spareCapacity | 0) >= extraCapacity && gaps >= (_get_capacity__a9k9f3($this) / 4 | 0);
}
function ensureCapacity($this, minCapacity) {
  if (minCapacity < 0)
    throw RuntimeException.g9('too many elements');
  if (minCapacity > _get_capacity__a9k9f3($this)) {
    var newSize = Companion_instance_5.h9(_get_capacity__a9k9f3($this), minCapacity);
    $this.l7_1 = copyOfUninitializedElements($this.l7_1, newSize);
    var tmp = $this;
    var tmp0_safe_receiver = $this.m7_1;
    tmp.m7_1 = tmp0_safe_receiver == null ? null : copyOfUninitializedElements(tmp0_safe_receiver, newSize);
    $this.n7_1 = copyOf_3($this.n7_1, newSize);
    var newHashSize = computeHashSize(Companion_instance_3, newSize);
    if (newHashSize > _get_hashSize__tftcho($this)) {
      rehash($this, newHashSize);
    }
  }
}
function allocateValuesArray($this) {
  var curValuesArray = $this.m7_1;
  if (!(curValuesArray == null))
    return curValuesArray;
  var newValuesArray = arrayOfUninitializedElements(_get_capacity__a9k9f3($this));
  $this.m7_1 = newValuesArray;
  return newValuesArray;
}
function hash($this, key) {
  return key == null ? 0 : imul_0(hashCode(key), -1640531527) >>> $this.r7_1 | 0;
}
function compact($this) {
  var i = 0;
  var j = 0;
  var valuesArray = $this.m7_1;
  while (i < $this.q7_1) {
    if ($this.n7_1[i] >= 0) {
      $this.l7_1[j] = $this.l7_1[i];
      if (!(valuesArray == null)) {
        valuesArray[j] = valuesArray[i];
      }
      j = j + 1 | 0;
    }
    i = i + 1 | 0;
  }
  resetRange($this.l7_1, j, $this.q7_1);
  if (valuesArray == null)
    null;
  else {
    resetRange(valuesArray, j, $this.q7_1);
  }
  $this.q7_1 = j;
}
function rehash($this, newHashSize) {
  registerModification($this);
  if ($this.q7_1 > $this.t7_1) {
    compact($this);
  }
  if (!(newHashSize === _get_hashSize__tftcho($this))) {
    $this.o7_1 = new Int32Array(newHashSize);
    $this.r7_1 = computeShift(Companion_instance_3, newHashSize);
  } else {
    fill($this.o7_1, 0, 0, _get_hashSize__tftcho($this));
  }
  var i = 0;
  while (i < $this.q7_1) {
    var tmp0 = i;
    i = tmp0 + 1 | 0;
    if (!putRehash($this, tmp0)) {
      throw IllegalStateException.b4('This cannot happen with fixed magic multiplier and grow-only hash array. Have object hashCodes changed?');
    }
  }
}
function putRehash($this, i) {
  var hash_0 = hash($this, $this.l7_1[i]);
  var probesLeft = $this.p7_1;
  while (true) {
    var index = $this.o7_1[hash_0];
    if (index === 0) {
      $this.o7_1[hash_0] = i + 1 | 0;
      $this.n7_1[i] = hash_0;
      return true;
    }
    probesLeft = probesLeft - 1 | 0;
    if (probesLeft < 0)
      return false;
    var tmp0 = hash_0;
    hash_0 = tmp0 - 1 | 0;
    if (tmp0 === 0)
      hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
  }
}
function findKey($this, key) {
  var hash_0 = hash($this, key);
  var probesLeft = $this.p7_1;
  while (true) {
    var index = $this.o7_1[hash_0];
    if (index === 0)
      return -1;
    if (index > 0 && equals($this.l7_1[index - 1 | 0], key))
      return index - 1 | 0;
    probesLeft = probesLeft - 1 | 0;
    if (probesLeft < 0)
      return -1;
    var tmp0 = hash_0;
    hash_0 = tmp0 - 1 | 0;
    if (tmp0 === 0)
      hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
  }
}
function findValue($this, value) {
  var i = $this.q7_1;
  $l$loop: while (true) {
    i = i - 1 | 0;
    if (!(i >= 0)) {
      break $l$loop;
    }
    if ($this.n7_1[i] >= 0 && equals(ensureNotNull($this.m7_1)[i], value))
      return i;
  }
  return -1;
}
function addKey($this, key) {
  $this.j8();
  retry: while (true) {
    var hash_0 = hash($this, key);
    var tentativeMaxProbeDistance = coerceAtMost(imul_0($this.p7_1, 2), _get_hashSize__tftcho($this) / 2 | 0);
    var probeDistance = 0;
    while (true) {
      var index = $this.o7_1[hash_0];
      if (index <= 0) {
        if ($this.q7_1 >= _get_capacity__a9k9f3($this)) {
          ensureExtraCapacity($this, 1);
          continue retry;
        }
        var tmp1 = $this.q7_1;
        $this.q7_1 = tmp1 + 1 | 0;
        var putIndex = tmp1;
        $this.l7_1[putIndex] = key;
        $this.n7_1[putIndex] = hash_0;
        $this.o7_1[hash_0] = putIndex + 1 | 0;
        $this.t7_1 = $this.t7_1 + 1 | 0;
        registerModification($this);
        if (probeDistance > $this.p7_1)
          $this.p7_1 = probeDistance;
        return putIndex;
      }
      if (equals($this.l7_1[index - 1 | 0], key)) {
        return -index | 0;
      }
      probeDistance = probeDistance + 1 | 0;
      if (probeDistance > tentativeMaxProbeDistance) {
        rehash($this, imul_0(_get_hashSize__tftcho($this), 2));
        continue retry;
      }
      var tmp4 = hash_0;
      hash_0 = tmp4 - 1 | 0;
      if (tmp4 === 0)
        hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
    }
  }
}
function removeEntryAt($this, index) {
  resetAt($this.l7_1, index);
  var tmp0_safe_receiver = $this.m7_1;
  if (tmp0_safe_receiver == null)
    null;
  else {
    resetAt(tmp0_safe_receiver, index);
  }
  removeHashAt($this, $this.n7_1[index]);
  $this.n7_1[index] = -1;
  $this.t7_1 = $this.t7_1 - 1 | 0;
  registerModification($this);
}
function removeHashAt($this, removedHash) {
  var hash_0 = removedHash;
  var hole = removedHash;
  var probeDistance = 0;
  var patchAttemptsLeft = coerceAtMost(imul_0($this.p7_1, 2), _get_hashSize__tftcho($this) / 2 | 0);
  while (true) {
    var tmp0 = hash_0;
    hash_0 = tmp0 - 1 | 0;
    if (tmp0 === 0)
      hash_0 = _get_hashSize__tftcho($this) - 1 | 0;
    probeDistance = probeDistance + 1 | 0;
    if (probeDistance > $this.p7_1) {
      $this.o7_1[hole] = 0;
      return Unit_instance;
    }
    var index = $this.o7_1[hash_0];
    if (index === 0) {
      $this.o7_1[hole] = 0;
      return Unit_instance;
    }
    if (index < 0) {
      $this.o7_1[hole] = -1;
      hole = hash_0;
      probeDistance = 0;
    } else {
      var otherHash = hash($this, $this.l7_1[index - 1 | 0]);
      if (((otherHash - hash_0 | 0) & (_get_hashSize__tftcho($this) - 1 | 0)) >= probeDistance) {
        $this.o7_1[hole] = index;
        $this.n7_1[index - 1 | 0] = hole;
        hole = hash_0;
        probeDistance = 0;
      }
    }
    patchAttemptsLeft = patchAttemptsLeft - 1 | 0;
    if (patchAttemptsLeft < 0) {
      $this.o7_1[hole] = -1;
      return Unit_instance;
    }
  }
}
function contentEquals_0($this, other) {
  return $this.t7_1 === other.z() && $this.u8(other.j1());
}
function putEntry($this, entry) {
  var index = addKey($this, entry.k1());
  var valuesArray = allocateValuesArray($this);
  if (index >= 0) {
    valuesArray[index] = entry.l1();
    return true;
  }
  var oldValue = valuesArray[(-index | 0) - 1 | 0];
  if (!equals(entry.l1(), oldValue)) {
    valuesArray[(-index | 0) - 1 | 0] = entry.l1();
    return true;
  }
  return false;
}
function putAllEntries($this, from) {
  if (from.f1())
    return false;
  ensureExtraCapacity($this, from.z());
  var it = from.w();
  var updated = false;
  while (it.x()) {
    if (putEntry($this, it.y()))
      updated = true;
  }
  return updated;
}
var Companion_instance_3;
function Companion_getInstance_3() {
  return Companion_instance_3;
}
function init_kotlin_collections_LinkedHashMap(_this__u8e3s4) {
}
function init_kotlin_collections_LinkedHashSet(_this__u8e3s4) {
}
function get_output() {
  _init_properties_console_kt__rfg7jv();
  return output;
}
var output;
function println(message) {
  _init_properties_console_kt__rfg7jv();
  get_output().eb(message);
}
var properties_initialized_console_kt_gll9dl;
function _init_properties_console_kt__rfg7jv() {
  if (!properties_initialized_console_kt_gll9dl) {
    properties_initialized_console_kt_gll9dl = true;
    // Inline function 'kotlin.run' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.io.output.<anonymous>' call
    var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;
    output = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();
  }
}
var CompletedContinuation_instance;
function CompletedContinuation_getInstance() {
  return CompletedContinuation_instance;
}
function init_kotlin_coroutines_cancellation_CancellationException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.ec_1);
}
function intercepted(_this__u8e3s4) {
  var tmp0_safe_receiver = _this__u8e3s4 instanceof InterceptedCoroutine ? _this__u8e3s4 : null;
  var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.xb();
  return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
}
function createCoroutineUnintercepted(_this__u8e3s4, receiver, completion) {
  // Inline function 'kotlin.coroutines.intrinsics.createCoroutineFromSuspendFunction' call
  return new _no_name_provided__qut3iv_0(completion, _this__u8e3s4, receiver, completion);
}
function invokeSuspendSuperTypeWithReceiver(_this__u8e3s4, receiver, completion) {
  throw NotImplementedError.oc('It is intrinsic method');
}
function invokeSuspendSuperTypeWithReceiverAndParam(_this__u8e3s4, receiver, param, completion) {
  throw NotImplementedError.oc('It is intrinsic method');
}
function get_EmptyContinuation() {
  _init_properties_EmptyContinuation_kt__o181ce();
  return EmptyContinuation;
}
var EmptyContinuation;
var properties_initialized_EmptyContinuation_kt_4jdb9w;
function _init_properties_EmptyContinuation_kt__o181ce() {
  if (!properties_initialized_EmptyContinuation_kt_4jdb9w) {
    properties_initialized_EmptyContinuation_kt_4jdb9w = true;
    // Inline function 'kotlin.coroutines.Continuation' call
    var context = EmptyCoroutineContext_getInstance();
    EmptyContinuation = new _no_name_provided__qut3iv_1(context);
  }
}
function unsafeCast(_this__u8e3s4) {
  // Inline function 'kotlin.js.asDynamic' call
  return _this__u8e3s4;
}
function asDynamic(_this__u8e3s4) {
  return _this__u8e3s4;
}
function init_kotlin_Exception(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.s4_1);
}
function init_kotlin_IllegalArgumentException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.n_1);
}
function init_kotlin_IndexOutOfBoundsException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.kd_1);
}
function init_kotlin_IllegalStateException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.a4_1);
}
function init_kotlin_UnsupportedOperationException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.b7_1);
}
function init_kotlin_RuntimeException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.f9_1);
}
function init_kotlin_NoSuchElementException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.j_1);
}
function init_kotlin_Error(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.nd_1);
}
function init_kotlin_AssertionError(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.sd_1);
}
function init_kotlin_ArithmeticException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.xd_1);
}
function init_kotlin_ConcurrentModificationException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.u9_1);
}
function init_kotlin_NumberFormatException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.de_1);
}
function init_kotlin_NullPointerException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.e4_1);
}
function init_kotlin_NoWhenBranchMatchedException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.i4_1);
}
function init_kotlin_ClassCastException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.m4_1);
}
function init_kotlin_UninitializedPropertyAccessException(_this__u8e3s4) {
  captureStack(_this__u8e3s4, _this__u8e3s4.q4_1);
}
function lazy(initializer) {
  return new UnsafeLazyImpl(initializer);
}
function lazy_0(mode, initializer) {
  return new UnsafeLazyImpl(initializer);
}
function fillFrom(src, dst) {
  var srcLen = src.length;
  var dstLen = dst.length;
  var index = 0;
  // Inline function 'kotlin.js.unsafeCast' call
  var arr = dst;
  while (index < srcLen && index < dstLen) {
    var tmp = index;
    var tmp0 = index;
    index = tmp0 + 1 | 0;
    arr[tmp] = src[tmp0];
  }
  return dst;
}
function arrayCopyResize(source, newSize, defaultValue) {
  // Inline function 'kotlin.js.unsafeCast' call
  var result = source.slice(0, newSize);
  // Inline function 'kotlin.copyArrayType' call
  if (source.$type$ !== undefined) {
    result.$type$ = source.$type$;
  }
  var index = source.length;
  if (newSize > index) {
    // Inline function 'kotlin.js.asDynamic' call
    result.length = newSize;
    while (index < newSize) {
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      result[tmp0] = defaultValue;
    }
  }
  return result;
}
function roundToInt(_this__u8e3s4) {
  var tmp;
  if (isNaN_0(_this__u8e3s4)) {
    throw IllegalArgumentException.o('Cannot round NaN value.');
  } else if (_this__u8e3s4 > 2147483647) {
    tmp = 2147483647;
  } else if (_this__u8e3s4 < -2147483648) {
    tmp = -2147483648;
  } else {
    tmp = numberToInt(Math.round(_this__u8e3s4));
  }
  return tmp;
}
function roundToLong(_this__u8e3s4) {
  var tmp;
  if (isNaN_0(_this__u8e3s4)) {
    throw IllegalArgumentException.o('Cannot round NaN value.');
  } else if (_this__u8e3s4 > (new Long(-1, 2147483647)).v3()) {
    tmp = new Long(-1, 2147483647);
  } else if (_this__u8e3s4 < (new Long(0, -2147483648)).v3()) {
    tmp = new Long(0, -2147483648);
  } else {
    tmp = numberToLong(Math.round(_this__u8e3s4));
  }
  return tmp;
}
function get_js(_this__u8e3s4) {
  return (_this__u8e3s4 instanceof KClassImpl ? _this__u8e3s4 : THROW_CCE()).ie();
}
var NothingKClassImpl_instance;
function NothingKClassImpl_getInstance() {
  if (NothingKClassImpl_instance === VOID)
    new NothingKClassImpl();
  return NothingKClassImpl_instance;
}
function createKType(classifier, arguments_0, isMarkedNullable) {
  return new KTypeImpl(classifier, asList(arguments_0), isMarkedNullable);
}
function get_functionClasses() {
  _init_properties_primitives_kt__3fums4();
  return functionClasses;
}
var functionClasses;
function PrimitiveClasses$anyClass$lambda(it) {
  return !(it == null);
}
function PrimitiveClasses$numberClass$lambda(it) {
  return isNumber(it);
}
function PrimitiveClasses$booleanClass$lambda(it) {
  return !(it == null) ? typeof it === 'boolean' : false;
}
function PrimitiveClasses$byteClass$lambda(it) {
  return !(it == null) ? typeof it === 'number' : false;
}
function PrimitiveClasses$shortClass$lambda(it) {
  return !(it == null) ? typeof it === 'number' : false;
}
function PrimitiveClasses$intClass$lambda(it) {
  return !(it == null) ? typeof it === 'number' : false;
}
function PrimitiveClasses$floatClass$lambda(it) {
  return !(it == null) ? typeof it === 'number' : false;
}
function PrimitiveClasses$doubleClass$lambda(it) {
  return !(it == null) ? typeof it === 'number' : false;
}
function PrimitiveClasses$arrayClass$lambda(it) {
  return !(it == null) ? isArray(it) : false;
}
function PrimitiveClasses$stringClass$lambda(it) {
  return !(it == null) ? typeof it === 'string' : false;
}
function PrimitiveClasses$throwableClass$lambda(it) {
  return it instanceof Error;
}
function PrimitiveClasses$booleanArrayClass$lambda(it) {
  return !(it == null) ? isBooleanArray(it) : false;
}
function PrimitiveClasses$charArrayClass$lambda(it) {
  return !(it == null) ? isCharArray(it) : false;
}
function PrimitiveClasses$byteArrayClass$lambda(it) {
  return !(it == null) ? isByteArray(it) : false;
}
function PrimitiveClasses$shortArrayClass$lambda(it) {
  return !(it == null) ? isShortArray(it) : false;
}
function PrimitiveClasses$intArrayClass$lambda(it) {
  return !(it == null) ? isIntArray(it) : false;
}
function PrimitiveClasses$longArrayClass$lambda(it) {
  return !(it == null) ? isLongArray(it) : false;
}
function PrimitiveClasses$floatArrayClass$lambda(it) {
  return !(it == null) ? isFloatArray(it) : false;
}
function PrimitiveClasses$doubleArrayClass$lambda(it) {
  return !(it == null) ? isDoubleArray(it) : false;
}
function PrimitiveClasses$functionClass$lambda($arity) {
  return function (it) {
    var tmp;
    if (typeof it === 'function') {
      // Inline function 'kotlin.js.asDynamic' call
      tmp = it.length === $arity;
    } else {
      tmp = false;
    }
    return tmp;
  };
}
var PrimitiveClasses_instance;
function PrimitiveClasses_getInstance() {
  if (PrimitiveClasses_instance === VOID)
    new PrimitiveClasses();
  return PrimitiveClasses_instance;
}
var properties_initialized_primitives_kt_jle18u;
function _init_properties_primitives_kt__3fums4() {
  if (!properties_initialized_primitives_kt_jle18u) {
    properties_initialized_primitives_kt_jle18u = true;
    // Inline function 'kotlin.arrayOfNulls' call
    functionClasses = fillArrayVal(Array(0), null);
  }
}
function getKClass(jClass) {
  var tmp;
  if (Array.isArray(jClass)) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = getKClassM(jClass);
  } else {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = getKClass1(jClass);
  }
  return tmp;
}
function getKClassM(jClasses) {
  var tmp;
  switch (jClasses.length) {
    case 1:
      tmp = getKClass1(jClasses[0]);
      break;
    case 0:
      // Inline function 'kotlin.js.unsafeCast' call

      // Inline function 'kotlin.js.asDynamic' call

      tmp = NothingKClassImpl_getInstance();
      break;
    default:
      // Inline function 'kotlin.js.unsafeCast' call

      // Inline function 'kotlin.js.asDynamic' call

      tmp = new ErrorKClass();
      break;
  }
  return tmp;
}
function getKClass1(jClass) {
  if (jClass === String) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return PrimitiveClasses_getInstance().stringClass;
  }
  // Inline function 'kotlin.js.asDynamic' call
  var metadata = jClass.$metadata$;
  var tmp;
  if (metadata != null) {
    var tmp_0;
    if (metadata.$kClass$ == null) {
      var kClass = new SimpleKClassImpl(jClass);
      metadata.$kClass$ = kClass;
      tmp_0 = kClass;
    } else {
      tmp_0 = metadata.$kClass$;
    }
    tmp = tmp_0;
  } else {
    tmp = new SimpleKClassImpl(jClass);
  }
  return tmp;
}
function getKClassFromExpression(e) {
  // Inline function 'kotlin.js.unsafeCast' call
  var tmp;
  switch (typeof e) {
    case 'string':
      tmp = PrimitiveClasses_getInstance().stringClass;
      break;
    case 'number':
      var tmp_0;
      // Inline function 'kotlin.js.asDynamic' call

      // Inline function 'kotlin.js.jsBitwiseOr' call

      if ((e | 0) === e) {
        tmp_0 = PrimitiveClasses_getInstance().intClass;
      } else {
        tmp_0 = PrimitiveClasses_getInstance().doubleClass;
      }

      tmp = tmp_0;
      break;
    case 'boolean':
      tmp = PrimitiveClasses_getInstance().booleanClass;
      break;
    case 'function':
      var tmp_1 = PrimitiveClasses_getInstance();
      // Inline function 'kotlin.js.asDynamic' call

      tmp = tmp_1.functionClass(e.length);
      break;
    default:
      var tmp_2;
      if (isBooleanArray(e)) {
        tmp_2 = PrimitiveClasses_getInstance().booleanArrayClass;
      } else {
        if (isCharArray(e)) {
          tmp_2 = PrimitiveClasses_getInstance().charArrayClass;
        } else {
          if (isByteArray(e)) {
            tmp_2 = PrimitiveClasses_getInstance().byteArrayClass;
          } else {
            if (isShortArray(e)) {
              tmp_2 = PrimitiveClasses_getInstance().shortArrayClass;
            } else {
              if (isIntArray(e)) {
                tmp_2 = PrimitiveClasses_getInstance().intArrayClass;
              } else {
                if (isLongArray(e)) {
                  tmp_2 = PrimitiveClasses_getInstance().longArrayClass;
                } else {
                  if (isFloatArray(e)) {
                    tmp_2 = PrimitiveClasses_getInstance().floatArrayClass;
                  } else {
                    if (isDoubleArray(e)) {
                      tmp_2 = PrimitiveClasses_getInstance().doubleArrayClass;
                    } else {
                      if (isInterface(e, KClass)) {
                        tmp_2 = getKClass(KClass);
                      } else {
                        if (isArray(e)) {
                          tmp_2 = PrimitiveClasses_getInstance().arrayClass;
                        } else {
                          var constructor = Object.getPrototypeOf(e).constructor;
                          var tmp_3;
                          if (constructor === Object) {
                            tmp_3 = PrimitiveClasses_getInstance().anyClass;
                          } else if (constructor === Error) {
                            tmp_3 = PrimitiveClasses_getInstance().throwableClass;
                          } else {
                            var jsClass = constructor;
                            tmp_3 = getKClass1(jsClass);
                          }
                          tmp_2 = tmp_3;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      tmp = tmp_2;
      break;
  }
  // Inline function 'kotlin.js.asDynamic' call
  return tmp;
}
function findAssociatedObject(_this__u8e3s4, annotationClass) {
  var tmp;
  var tmp_0;
  if (_this__u8e3s4 instanceof KClassImpl) {
    tmp_0 = annotationClass instanceof KClassImpl;
  } else {
    tmp_0 = false;
  }
  if (tmp_0) {
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_safe_receiver = annotationClass.ie().$metadata$;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.associatedObjectKey;
    var tmp_1;
    if (tmp1_safe_receiver == null) {
      tmp_1 = null;
    } else {
      // Inline function 'kotlin.js.unsafeCast' call
      tmp_1 = tmp1_safe_receiver;
    }
    var tmp2_elvis_lhs = tmp_1;
    var tmp_2;
    if (tmp2_elvis_lhs == null) {
      return null;
    } else {
      tmp_2 = tmp2_elvis_lhs;
    }
    var key = tmp_2;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp3_safe_receiver = _this__u8e3s4.ie().$metadata$;
    var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.associatedObjects;
    var tmp_3;
    if (tmp4_elvis_lhs == null) {
      return null;
    } else {
      tmp_3 = tmp4_elvis_lhs;
    }
    var map = tmp_3;
    var tmp5_elvis_lhs = map[key];
    var tmp_4;
    if (tmp5_elvis_lhs == null) {
      return null;
    } else {
      tmp_4 = tmp5_elvis_lhs;
    }
    var factory = tmp_4;
    return factory();
  } else {
    tmp = null;
  }
  return tmp;
}
function uppercaseChar(_this__u8e3s4) {
  // Inline function 'kotlin.text.uppercase' call
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  var uppercase = toString(_this__u8e3s4).toUpperCase();
  return uppercase.length > 1 ? _this__u8e3s4 : charSequenceGet(uppercase, 0);
}
function isLowSurrogate(_this__u8e3s4) {
  return _Char___init__impl__6a9atx(56320) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(57343) : false;
}
function isHighSurrogate(_this__u8e3s4) {
  return _Char___init__impl__6a9atx(55296) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(56319) : false;
}
function isWhitespace(_this__u8e3s4) {
  return isWhitespaceImpl(_this__u8e3s4);
}
function isLowerCase(_this__u8e3s4) {
  if (_Char___init__impl__6a9atx(97) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(122) : false) {
    return true;
  }
  if (Char__compareTo_impl_ypi4mb(_this__u8e3s4, _Char___init__impl__6a9atx(128)) < 0) {
    return false;
  }
  return isLowerCaseImpl(_this__u8e3s4);
}
function titlecaseChar(_this__u8e3s4) {
  return titlecaseCharImpl(_this__u8e3s4);
}
function toString_2(_this__u8e3s4, radix) {
  // Inline function 'kotlin.js.asDynamic' call
  return _this__u8e3s4.toString(checkRadix(radix));
}
function checkRadix(radix) {
  if (!(2 <= radix ? radix <= 36 : false)) {
    throw IllegalArgumentException.o('radix ' + radix + ' was not in valid range 2..36');
  }
  return radix;
}
function toString_3(_this__u8e3s4, radix) {
  return toStringImpl(_this__u8e3s4, checkRadix(radix));
}
function toDoubleOrNull(_this__u8e3s4) {
  // Inline function 'kotlin.takeIf' call
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  var this_0 = +_this__u8e3s4;
  // Inline function 'kotlin.contracts.contract' call
  var tmp;
  // Inline function 'kotlin.text.toDoubleOrNull.<anonymous>' call
  if (!(isNaN_0(this_0) && !isNaN_2(_this__u8e3s4) || (this_0 === 0.0 && isBlank(_this__u8e3s4)))) {
    tmp = this_0;
  } else {
    tmp = null;
  }
  return tmp;
}
function toLong_0(_this__u8e3s4) {
  var tmp0_elvis_lhs = toLongOrNull(_this__u8e3s4);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    numberFormatError(_this__u8e3s4);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function toInt(_this__u8e3s4) {
  var tmp0_elvis_lhs = toIntOrNull(_this__u8e3s4);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    numberFormatError(_this__u8e3s4);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function digitOf(char, radix) {
  // Inline function 'kotlin.let' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.text.digitOf.<anonymous>' call
  var it = Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(48)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(57)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(48)) : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(90)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(97)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(122)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(97)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(128)) < 0 ? -1 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65313)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65338)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65313)) + 10 | 0 : Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65345)) >= 0 && Char__compareTo_impl_ypi4mb(char, _Char___init__impl__6a9atx(65370)) <= 0 ? Char__minus_impl_a2frrh(char, _Char___init__impl__6a9atx(65345)) + 10 | 0 : digitToIntImpl(char);
  return it >= radix ? -1 : it;
}
function isNaN_2(_this__u8e3s4) {
  // Inline function 'kotlin.text.lowercase' call
  // Inline function 'kotlin.js.asDynamic' call
  switch (_this__u8e3s4.toLowerCase()) {
    case 'nan':
    case '+nan':
    case '-nan':
      return true;
    default:
      return false;
  }
}
function toDouble(_this__u8e3s4) {
  // Inline function 'kotlin.also' call
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  var this_0 = +_this__u8e3s4;
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.text.toDouble.<anonymous>' call
  if (isNaN_0(this_0) && !isNaN_2(_this__u8e3s4) || (this_0 === 0.0 && isBlank(_this__u8e3s4))) {
    numberFormatError(_this__u8e3s4);
  }
  return this_0;
}
var Companion_instance_4;
function Companion_getInstance_4() {
  if (Companion_instance_4 === VOID)
    new Companion_4();
  return Companion_instance_4;
}
var STRING_CASE_INSENSITIVE_ORDER;
function compareTo_0(_this__u8e3s4, other, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  _init_properties_stringJs_kt__bg7zye();
  if (ignoreCase) {
    var n1 = _this__u8e3s4.length;
    var n2 = other.length;
    // Inline function 'kotlin.comparisons.minOf' call
    var min = Math.min(n1, n2);
    if (min === 0)
      return n1 - n2 | 0;
    var inductionVariable = 0;
    if (inductionVariable < min)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var thisChar = charSequenceGet(_this__u8e3s4, index);
        var otherChar = charSequenceGet(other, index);
        if (!(thisChar === otherChar)) {
          thisChar = uppercaseChar(thisChar);
          otherChar = uppercaseChar(otherChar);
          if (!(thisChar === otherChar)) {
            // Inline function 'kotlin.text.lowercaseChar' call
            // Inline function 'kotlin.text.lowercase' call
            var this_0 = thisChar;
            // Inline function 'kotlin.js.unsafeCast' call
            // Inline function 'kotlin.js.asDynamic' call
            var tmp$ret$3 = toString(this_0).toLowerCase();
            thisChar = charSequenceGet(tmp$ret$3, 0);
            // Inline function 'kotlin.text.lowercaseChar' call
            // Inline function 'kotlin.text.lowercase' call
            var this_1 = otherChar;
            // Inline function 'kotlin.js.unsafeCast' call
            // Inline function 'kotlin.js.asDynamic' call
            var tmp$ret$7 = toString(this_1).toLowerCase();
            otherChar = charSequenceGet(tmp$ret$7, 0);
            if (!(thisChar === otherChar)) {
              return Char__compareTo_impl_ypi4mb(thisChar, otherChar);
            }
          }
        }
      }
       while (inductionVariable < min);
    return n1 - n2 | 0;
  } else {
    return compareTo(_this__u8e3s4, other);
  }
}
function concatToString(_this__u8e3s4) {
  _init_properties_stringJs_kt__bg7zye();
  var result = '';
  var inductionVariable = 0;
  var last = _this__u8e3s4.length;
  while (inductionVariable < last) {
    var char = _this__u8e3s4[inductionVariable];
    inductionVariable = inductionVariable + 1 | 0;
    result = result + toString(char);
  }
  return result;
}
function encodeToByteArray(_this__u8e3s4) {
  _init_properties_stringJs_kt__bg7zye();
  return encodeUtf8(_this__u8e3s4, 0, _this__u8e3s4.length, false);
}
function decodeToString(_this__u8e3s4) {
  _init_properties_stringJs_kt__bg7zye();
  return decodeUtf8(_this__u8e3s4, 0, _this__u8e3s4.length, false);
}
function STRING_CASE_INSENSITIVE_ORDER$lambda(a, b) {
  _init_properties_stringJs_kt__bg7zye();
  return compareTo_0(a, b, true);
}
var properties_initialized_stringJs_kt_nta8o4;
function _init_properties_stringJs_kt__bg7zye() {
  if (!properties_initialized_stringJs_kt_nta8o4) {
    properties_initialized_stringJs_kt_nta8o4 = true;
    var tmp = STRING_CASE_INSENSITIVE_ORDER$lambda;
    STRING_CASE_INSENSITIVE_ORDER = new sam$kotlin_Comparator$0(tmp);
  }
}
function equals_0(_this__u8e3s4, other, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  if (_this__u8e3s4 == null)
    return other == null;
  if (other == null)
    return false;
  if (!ignoreCase)
    return _this__u8e3s4 == other;
  if (!(_this__u8e3s4.length === other.length))
    return false;
  var inductionVariable = 0;
  var last = _this__u8e3s4.length;
  if (inductionVariable < last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var thisChar = charSequenceGet(_this__u8e3s4, index);
      var otherChar = charSequenceGet(other, index);
      if (!equals_1(thisChar, otherChar, ignoreCase)) {
        return false;
      }
    }
     while (inductionVariable < last);
  return true;
}
function startsWith(_this__u8e3s4, prefix, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  if (!ignoreCase) {
    // Inline function 'kotlin.text.nativeStartsWith' call
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.startsWith(prefix, 0);
  } else
    return regionMatches(_this__u8e3s4, 0, prefix, 0, prefix.length, ignoreCase);
}
function regionMatches(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  return regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase);
}
function startsWith_0(_this__u8e3s4, prefix, startIndex, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  if (!ignoreCase) {
    // Inline function 'kotlin.text.nativeStartsWith' call
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.startsWith(prefix, startIndex);
  } else
    return regionMatches(_this__u8e3s4, startIndex, prefix, 0, prefix.length, ignoreCase);
}
function replace(_this__u8e3s4, oldChar, newChar, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  // Inline function 'kotlin.text.nativeReplace' call
  var pattern = new RegExp(Companion_getInstance_4().ig(toString(oldChar)), ignoreCase ? 'gui' : 'gu');
  var replacement = toString(newChar);
  // Inline function 'kotlin.js.asDynamic' call
  return _this__u8e3s4.replace(pattern, replacement);
}
function endsWith(_this__u8e3s4, suffix, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  if (!ignoreCase) {
    // Inline function 'kotlin.text.nativeEndsWith' call
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.endsWith(suffix);
  } else
    return regionMatches(_this__u8e3s4, _this__u8e3s4.length - suffix.length | 0, suffix, 0, suffix.length, ignoreCase);
}
function get_REPLACEMENT_BYTE_SEQUENCE() {
  _init_properties_utf8Encoding_kt__9thjs4();
  return REPLACEMENT_BYTE_SEQUENCE;
}
var REPLACEMENT_BYTE_SEQUENCE;
function encodeUtf8(string, startIndex, endIndex, throwOnMalformed) {
  _init_properties_utf8Encoding_kt__9thjs4();
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(startIndex >= 0 && endIndex <= string.length && startIndex <= endIndex)) {
    // Inline function 'kotlin.require.<anonymous>' call
    var message = 'Failed requirement.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  var bytes = new Int8Array(imul_0(endIndex - startIndex | 0, 3));
  var byteIndex = 0;
  var charIndex = startIndex;
  while (charIndex < endIndex) {
    // Inline function 'kotlin.code' call
    var tmp0 = charIndex;
    charIndex = tmp0 + 1 | 0;
    var this_0 = charSequenceGet(string, tmp0);
    var code = Char__toInt_impl_vasixd(this_0);
    if (code < 128) {
      var tmp1 = byteIndex;
      byteIndex = tmp1 + 1 | 0;
      bytes[tmp1] = toByte(code);
    } else if (code < 2048) {
      var tmp2 = byteIndex;
      byteIndex = tmp2 + 1 | 0;
      bytes[tmp2] = toByte(code >> 6 | 192);
      var tmp3 = byteIndex;
      byteIndex = tmp3 + 1 | 0;
      bytes[tmp3] = toByte(code & 63 | 128);
    } else if (code < 55296 || code >= 57344) {
      var tmp4 = byteIndex;
      byteIndex = tmp4 + 1 | 0;
      bytes[tmp4] = toByte(code >> 12 | 224);
      var tmp5 = byteIndex;
      byteIndex = tmp5 + 1 | 0;
      bytes[tmp5] = toByte(code >> 6 & 63 | 128);
      var tmp6 = byteIndex;
      byteIndex = tmp6 + 1 | 0;
      bytes[tmp6] = toByte(code & 63 | 128);
    } else {
      var codePoint = codePointFromSurrogate(string, code, charIndex, endIndex, throwOnMalformed);
      if (codePoint <= 0) {
        var tmp7 = byteIndex;
        byteIndex = tmp7 + 1 | 0;
        bytes[tmp7] = get_REPLACEMENT_BYTE_SEQUENCE()[0];
        var tmp8 = byteIndex;
        byteIndex = tmp8 + 1 | 0;
        bytes[tmp8] = get_REPLACEMENT_BYTE_SEQUENCE()[1];
        var tmp9 = byteIndex;
        byteIndex = tmp9 + 1 | 0;
        bytes[tmp9] = get_REPLACEMENT_BYTE_SEQUENCE()[2];
      } else {
        var tmp10 = byteIndex;
        byteIndex = tmp10 + 1 | 0;
        bytes[tmp10] = toByte(codePoint >> 18 | 240);
        var tmp11 = byteIndex;
        byteIndex = tmp11 + 1 | 0;
        bytes[tmp11] = toByte(codePoint >> 12 & 63 | 128);
        var tmp12 = byteIndex;
        byteIndex = tmp12 + 1 | 0;
        bytes[tmp12] = toByte(codePoint >> 6 & 63 | 128);
        var tmp13 = byteIndex;
        byteIndex = tmp13 + 1 | 0;
        bytes[tmp13] = toByte(codePoint & 63 | 128);
        charIndex = charIndex + 1 | 0;
      }
    }
  }
  return bytes.length === byteIndex ? bytes : copyOf_5(bytes, byteIndex);
}
function decodeUtf8(bytes, startIndex, endIndex, throwOnMalformed) {
  _init_properties_utf8Encoding_kt__9thjs4();
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(startIndex >= 0 && endIndex <= bytes.length && startIndex <= endIndex)) {
    // Inline function 'kotlin.require.<anonymous>' call
    var message = 'Failed requirement.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  var byteIndex = startIndex;
  var stringBuilder = StringBuilder.u();
  while (byteIndex < endIndex) {
    var tmp0 = byteIndex;
    byteIndex = tmp0 + 1 | 0;
    var byte = bytes[tmp0];
    if (byte >= 0) {
      stringBuilder.ma(numberToChar(byte));
    } else if (byte >> 5 === -2) {
      var code = codePointFrom2(bytes, byte, byteIndex, endIndex, throwOnMalformed);
      if (code <= 0) {
        stringBuilder.ma(_Char___init__impl__6a9atx(65533));
        byteIndex = byteIndex + (-code | 0) | 0;
      } else {
        stringBuilder.ma(numberToChar(code));
        byteIndex = byteIndex + 1 | 0;
      }
    } else if (byte >> 4 === -2) {
      var code_0 = codePointFrom3(bytes, byte, byteIndex, endIndex, throwOnMalformed);
      if (code_0 <= 0) {
        stringBuilder.ma(_Char___init__impl__6a9atx(65533));
        byteIndex = byteIndex + (-code_0 | 0) | 0;
      } else {
        stringBuilder.ma(numberToChar(code_0));
        byteIndex = byteIndex + 2 | 0;
      }
    } else if (byte >> 3 === -2) {
      var code_1 = codePointFrom4(bytes, byte, byteIndex, endIndex, throwOnMalformed);
      if (code_1 <= 0) {
        stringBuilder.ma(_Char___init__impl__6a9atx(65533));
        byteIndex = byteIndex + (-code_1 | 0) | 0;
      } else {
        var high = (code_1 - 65536 | 0) >> 10 | 55296;
        var low = code_1 & 1023 | 56320;
        stringBuilder.ma(numberToChar(high));
        stringBuilder.ma(numberToChar(low));
        byteIndex = byteIndex + 3 | 0;
      }
    } else {
      malformed(0, byteIndex, throwOnMalformed);
      stringBuilder.ma(_Char___init__impl__6a9atx(65533));
    }
  }
  return stringBuilder.toString();
}
function codePointFromSurrogate(string, high, index, endIndex, throwOnMalformed) {
  _init_properties_utf8Encoding_kt__9thjs4();
  if (!(55296 <= high ? high <= 56319 : false) || index >= endIndex) {
    return malformed(0, index, throwOnMalformed);
  }
  // Inline function 'kotlin.code' call
  var this_0 = charSequenceGet(string, index);
  var low = Char__toInt_impl_vasixd(this_0);
  if (!(56320 <= low ? low <= 57343 : false)) {
    return malformed(0, index, throwOnMalformed);
  }
  return 65536 + ((high & 1023) << 10) | 0 | low & 1023;
}
function codePointFrom2(bytes, byte1, index, endIndex, throwOnMalformed) {
  _init_properties_utf8Encoding_kt__9thjs4();
  if ((byte1 & 30) === 0 || index >= endIndex) {
    return malformed(0, index, throwOnMalformed);
  }
  var byte2 = bytes[index];
  if (!((byte2 & 192) === 128)) {
    return malformed(0, index, throwOnMalformed);
  }
  return byte1 << 6 ^ byte2 ^ 3968;
}
function codePointFrom3(bytes, byte1, index, endIndex, throwOnMalformed) {
  _init_properties_utf8Encoding_kt__9thjs4();
  if (index >= endIndex) {
    return malformed(0, index, throwOnMalformed);
  }
  var byte2 = bytes[index];
  if ((byte1 & 15) === 0) {
    if (!((byte2 & 224) === 160)) {
      return malformed(0, index, throwOnMalformed);
    }
  } else if ((byte1 & 15) === 13) {
    if (!((byte2 & 224) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
  } else if (!((byte2 & 192) === 128)) {
    return malformed(0, index, throwOnMalformed);
  }
  if ((index + 1 | 0) === endIndex) {
    return malformed(1, index, throwOnMalformed);
  }
  var byte3 = bytes[index + 1 | 0];
  if (!((byte3 & 192) === 128)) {
    return malformed(1, index, throwOnMalformed);
  }
  return byte1 << 12 ^ byte2 << 6 ^ byte3 ^ -123008;
}
function codePointFrom4(bytes, byte1, index, endIndex, throwOnMalformed) {
  _init_properties_utf8Encoding_kt__9thjs4();
  if (index >= endIndex) {
    malformed(0, index, throwOnMalformed);
  }
  var byte2 = bytes[index];
  if ((byte1 & 15) === 0) {
    if ((byte2 & 240) <= 128) {
      return malformed(0, index, throwOnMalformed);
    }
  } else if ((byte1 & 15) === 4) {
    if (!((byte2 & 240) === 128)) {
      return malformed(0, index, throwOnMalformed);
    }
  } else if ((byte1 & 15) > 4) {
    return malformed(0, index, throwOnMalformed);
  } else if (!((byte2 & 192) === 128)) {
    return malformed(0, index, throwOnMalformed);
  }
  if ((index + 1 | 0) === endIndex) {
    return malformed(1, index, throwOnMalformed);
  }
  var byte3 = bytes[index + 1 | 0];
  if (!((byte3 & 192) === 128)) {
    return malformed(1, index, throwOnMalformed);
  }
  if ((index + 2 | 0) === endIndex) {
    return malformed(2, index, throwOnMalformed);
  }
  var byte4 = bytes[index + 2 | 0];
  if (!((byte4 & 192) === 128)) {
    return malformed(2, index, throwOnMalformed);
  }
  return byte1 << 18 ^ byte2 << 12 ^ byte3 << 6 ^ byte4 ^ 3678080;
}
function malformed(size, index, throwOnMalformed) {
  _init_properties_utf8Encoding_kt__9thjs4();
  if (throwOnMalformed)
    throw CharacterCodingException.uf('Malformed sequence starting at ' + (index - 1 | 0));
  return -size | 0;
}
var properties_initialized_utf8Encoding_kt_eee1vq;
function _init_properties_utf8Encoding_kt__9thjs4() {
  if (!properties_initialized_utf8Encoding_kt_eee1vq) {
    properties_initialized_utf8Encoding_kt_eee1vq = true;
    // Inline function 'kotlin.byteArrayOf' call
    REPLACEMENT_BYTE_SEQUENCE = new Int8Array([-17, -65, -67]);
  }
}
function addSuppressed(_this__u8e3s4, exception) {
  if (!(_this__u8e3s4 === exception)) {
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var suppressed = _this__u8e3s4._suppressed;
    if (suppressed == null) {
      // Inline function 'kotlin.js.asDynamic' call
      _this__u8e3s4._suppressed = mutableListOf([exception]);
    } else {
      suppressed.g(exception);
    }
  }
}
var DurationUnit_NANOSECONDS_instance;
var DurationUnit_MICROSECONDS_instance;
var DurationUnit_MILLISECONDS_instance;
var DurationUnit_SECONDS_instance;
var DurationUnit_MINUTES_instance;
var DurationUnit_HOURS_instance;
var DurationUnit_DAYS_instance;
var DurationUnit_entriesInitialized;
function DurationUnit_initEntries() {
  if (DurationUnit_entriesInitialized)
    return Unit_instance;
  DurationUnit_entriesInitialized = true;
  DurationUnit_NANOSECONDS_instance = new DurationUnit('NANOSECONDS', 0, 1.0);
  DurationUnit_MICROSECONDS_instance = new DurationUnit('MICROSECONDS', 1, 1000.0);
  DurationUnit_MILLISECONDS_instance = new DurationUnit('MILLISECONDS', 2, 1000000.0);
  DurationUnit_SECONDS_instance = new DurationUnit('SECONDS', 3, 1.0E9);
  DurationUnit_MINUTES_instance = new DurationUnit('MINUTES', 4, 6.0E10);
  DurationUnit_HOURS_instance = new DurationUnit('HOURS', 5, 3.6E12);
  DurationUnit_DAYS_instance = new DurationUnit('DAYS', 6, 8.64E13);
}
function convertDurationUnit(value, sourceUnit, targetUnit) {
  var sourceCompareTarget = compareTo(sourceUnit.ng_1, targetUnit.ng_1);
  return sourceCompareTarget > 0 ? value * (sourceUnit.ng_1 / targetUnit.ng_1) : sourceCompareTarget < 0 ? value / (targetUnit.ng_1 / sourceUnit.ng_1) : value;
}
function convertDurationUnit_0(value, sourceUnit, targetUnit) {
  var sourceCompareTarget = compareTo(sourceUnit.ng_1, targetUnit.ng_1);
  var tmp;
  if (sourceCompareTarget > 0) {
    var scale = numberToLong(sourceUnit.ng_1 / targetUnit.ng_1);
    var result = value.f3(scale);
    tmp = result.g3(scale).equals(value) ? result : value.q1(new Long(0, 0)) > 0 ? new Long(-1, 2147483647) : new Long(0, -2147483648);
  } else if (sourceCompareTarget < 0) {
    tmp = value.g3(numberToLong(targetUnit.ng_1 / sourceUnit.ng_1));
  } else {
    tmp = value;
  }
  return tmp;
}
function convertDurationUnitOverflow(value, sourceUnit, targetUnit) {
  var sourceCompareTarget = compareTo(sourceUnit.ng_1, targetUnit.ng_1);
  return sourceCompareTarget > 0 ? value.f3(numberToLong(sourceUnit.ng_1 / targetUnit.ng_1)) : sourceCompareTarget < 0 ? value.g3(numberToLong(targetUnit.ng_1 / sourceUnit.ng_1)) : value;
}
function DurationUnit_NANOSECONDS_getInstance() {
  DurationUnit_initEntries();
  return DurationUnit_NANOSECONDS_instance;
}
function DurationUnit_MICROSECONDS_getInstance() {
  DurationUnit_initEntries();
  return DurationUnit_MICROSECONDS_instance;
}
function DurationUnit_MILLISECONDS_getInstance() {
  DurationUnit_initEntries();
  return DurationUnit_MILLISECONDS_instance;
}
function DurationUnit_SECONDS_getInstance() {
  DurationUnit_initEntries();
  return DurationUnit_SECONDS_instance;
}
function DurationUnit_MINUTES_getInstance() {
  DurationUnit_initEntries();
  return DurationUnit_MINUTES_instance;
}
function DurationUnit_HOURS_getInstance() {
  DurationUnit_initEntries();
  return DurationUnit_HOURS_instance;
}
function DurationUnit_DAYS_getInstance() {
  DurationUnit_initEntries();
  return DurationUnit_DAYS_instance;
}
function AbstractCollection$toString$lambda(this$0) {
  return function (it) {
    return it === this$0 ? '(this Collection)' : toString_0(it);
  };
}
var Companion_instance_5;
function Companion_getInstance_5() {
  return Companion_instance_5;
}
function toString_4($this, o) {
  return o === $this ? '(this Map)' : toString_0(o);
}
function implFindEntry($this, key) {
  var tmp$ret$1;
  $l$block: {
    // Inline function 'kotlin.collections.firstOrNull' call
    var tmp0_iterator = $this.j1().w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlin.collections.AbstractMap.implFindEntry.<anonymous>' call
      if (equals(element.k1(), key)) {
        tmp$ret$1 = element;
        break $l$block;
      }
    }
    tmp$ret$1 = null;
  }
  return tmp$ret$1;
}
var Companion_instance_6;
function Companion_getInstance_6() {
  return Companion_instance_6;
}
function AbstractMap$toString$lambda(this$0) {
  return function (it) {
    return this$0.tg(it);
  };
}
var Companion_instance_7;
function Companion_getInstance_7() {
  return Companion_instance_7;
}
function ensureCapacity_0($this, minCapacity) {
  if (minCapacity < 0)
    throw IllegalStateException.b4('Deque is too big.');
  if (minCapacity <= $this.yg_1.length)
    return Unit_instance;
  if ($this.yg_1 === Companion_getInstance_8().ah_1) {
    var tmp = $this;
    // Inline function 'kotlin.arrayOfNulls' call
    var size = coerceAtLeast(minCapacity, 10);
    tmp.yg_1 = fillArrayVal(Array(size), null);
    return Unit_instance;
  }
  var newCapacity = Companion_instance_5.h9($this.yg_1.length, minCapacity);
  copyElements($this, newCapacity);
}
function copyElements($this, newCapacity) {
  // Inline function 'kotlin.arrayOfNulls' call
  var newElements = fillArrayVal(Array(newCapacity), null);
  // Inline function 'kotlin.collections.copyInto' call
  var this_0 = $this.yg_1;
  var startIndex = $this.xg_1;
  var endIndex = $this.yg_1.length;
  arrayCopy(this_0, newElements, 0, startIndex, endIndex);
  // Inline function 'kotlin.collections.copyInto' call
  var this_1 = $this.yg_1;
  var destinationOffset = $this.yg_1.length - $this.xg_1 | 0;
  var endIndex_0 = $this.xg_1;
  arrayCopy(this_1, newElements, destinationOffset, 0, endIndex_0);
  $this.xg_1 = 0;
  $this.yg_1 = newElements;
}
function positiveMod($this, index) {
  return index >= $this.yg_1.length ? index - $this.yg_1.length | 0 : index;
}
function negativeMod($this, index) {
  return index < 0 ? index + $this.yg_1.length | 0 : index;
}
function incremented($this, index) {
  return index === get_lastIndex($this.yg_1) ? 0 : index + 1 | 0;
}
function decremented($this, index) {
  return index === 0 ? get_lastIndex($this.yg_1) : index - 1 | 0;
}
function copyCollectionElements($this, internalIndex, elements) {
  var iterator = elements.w();
  var inductionVariable = internalIndex;
  var last = $this.yg_1.length;
  if (inductionVariable < last)
    $l$loop: do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (!iterator.x())
        break $l$loop;
      $this.yg_1[index] = iterator.y();
    }
     while (inductionVariable < last);
  var inductionVariable_0 = 0;
  var last_0 = $this.xg_1;
  if (inductionVariable_0 < last_0)
    $l$loop_0: do {
      var index_0 = inductionVariable_0;
      inductionVariable_0 = inductionVariable_0 + 1 | 0;
      if (!iterator.x())
        break $l$loop_0;
      $this.yg_1[index_0] = iterator.y();
    }
     while (inductionVariable_0 < last_0);
  $this.zg_1 = $this.zg_1 + elements.z() | 0;
}
function removeRangeShiftPreceding($this, fromIndex, toIndex) {
  // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
  var index = fromIndex - 1 | 0;
  var copyFromIndex = positiveMod($this, $this.xg_1 + index | 0);
  // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
  var index_0 = toIndex - 1 | 0;
  var copyToIndex = positiveMod($this, $this.xg_1 + index_0 | 0);
  var copyCount = fromIndex;
  while (copyCount > 0) {
    // Inline function 'kotlin.comparisons.minOf' call
    var a = copyCount;
    var b = copyFromIndex + 1 | 0;
    var c = copyToIndex + 1 | 0;
    var segmentLength = Math.min(a, b, c);
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = $this.yg_1;
    var destination = $this.yg_1;
    var destinationOffset = (copyToIndex - segmentLength | 0) + 1 | 0;
    var startIndex = (copyFromIndex - segmentLength | 0) + 1 | 0;
    var endIndex = copyFromIndex + 1 | 0;
    arrayCopy(this_0, destination, destinationOffset, startIndex, endIndex);
    copyFromIndex = negativeMod($this, copyFromIndex - segmentLength | 0);
    copyToIndex = negativeMod($this, copyToIndex - segmentLength | 0);
    copyCount = copyCount - segmentLength | 0;
  }
}
function removeRangeShiftSucceeding($this, fromIndex, toIndex) {
  // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
  var copyFromIndex = positiveMod($this, $this.xg_1 + toIndex | 0);
  // Inline function 'kotlin.collections.ArrayDeque.internalIndex' call
  var copyToIndex = positiveMod($this, $this.xg_1 + fromIndex | 0);
  var copyCount = $this.zg_1 - toIndex | 0;
  while (copyCount > 0) {
    // Inline function 'kotlin.comparisons.minOf' call
    var a = copyCount;
    var b = $this.yg_1.length - copyFromIndex | 0;
    var c = $this.yg_1.length - copyToIndex | 0;
    var segmentLength = Math.min(a, b, c);
    // Inline function 'kotlin.collections.copyInto' call
    var this_0 = $this.yg_1;
    var destination = $this.yg_1;
    var destinationOffset = copyToIndex;
    var startIndex = copyFromIndex;
    var endIndex = copyFromIndex + segmentLength | 0;
    arrayCopy(this_0, destination, destinationOffset, startIndex, endIndex);
    copyFromIndex = positiveMod($this, copyFromIndex + segmentLength | 0);
    copyToIndex = positiveMod($this, copyToIndex + segmentLength | 0);
    copyCount = copyCount - segmentLength | 0;
  }
}
function nullifyNonEmpty($this, internalFromIndex, internalToIndex) {
  if (internalFromIndex < internalToIndex) {
    fill_0($this.yg_1, null, internalFromIndex, internalToIndex);
  } else {
    fill_0($this.yg_1, null, internalFromIndex, $this.yg_1.length);
    fill_0($this.yg_1, null, 0, internalToIndex);
  }
}
function registerModification_0($this) {
  $this.s5_1 = $this.s5_1 + 1 | 0;
}
var Companion_instance_8;
function Companion_getInstance_8() {
  if (Companion_instance_8 === VOID)
    new Companion_8();
  return Companion_instance_8;
}
function init_kotlin_collections_ArrayDeque(_this__u8e3s4) {
  Companion_getInstance_8();
  _this__u8e3s4.xg_1 = 0;
  _this__u8e3s4.zg_1 = 0;
}
function collectionToArrayCommonImpl(collection) {
  if (collection.f1()) {
    // Inline function 'kotlin.emptyArray' call
    return [];
  }
  // Inline function 'kotlin.arrayOfNulls' call
  var size = collection.z();
  var destination = fillArrayVal(Array(size), null);
  var iterator = collection.w();
  var index = 0;
  while (iterator.x()) {
    var tmp0 = index;
    index = tmp0 + 1 | 0;
    destination[tmp0] = iterator.y();
  }
  return destination;
}
function listOf_0(elements) {
  return elements.length > 0 ? asList(elements) : emptyList();
}
function emptyList() {
  return EmptyList_getInstance();
}
function get_lastIndex_2(_this__u8e3s4) {
  return _this__u8e3s4.z() - 1 | 0;
}
function optimizeReadOnlyList(_this__u8e3s4) {
  switch (_this__u8e3s4.z()) {
    case 0:
      return emptyList();
    case 1:
      return listOf(_this__u8e3s4.c1(0));
    default:
      return _this__u8e3s4;
  }
}
function mutableListOf(elements) {
  return elements.length === 0 ? ArrayList.e1() : ArrayList.s(new ArrayAsCollection(elements, true));
}
var EmptyList_instance;
function EmptyList_getInstance() {
  if (EmptyList_instance === VOID)
    new EmptyList();
  return EmptyList_instance;
}
var EmptyIterator_instance;
function EmptyIterator_getInstance() {
  return EmptyIterator_instance;
}
function arrayListOf(elements) {
  return elements.length === 0 ? ArrayList.e1() : ArrayList.s(new ArrayAsCollection(elements, true));
}
function throwIndexOverflow() {
  throw ArithmeticException.zd('Index overflow has happened.');
}
function asCollection(_this__u8e3s4) {
  return new ArrayAsCollection(_this__u8e3s4, false);
}
function collectionSizeOrDefault(_this__u8e3s4, default_0) {
  var tmp;
  if (isInterface(_this__u8e3s4, Collection)) {
    tmp = _this__u8e3s4.z();
  } else {
    tmp = default_0;
  }
  return tmp;
}
function collectionSizeOrNull(_this__u8e3s4) {
  var tmp;
  if (isInterface(_this__u8e3s4, Collection)) {
    tmp = _this__u8e3s4.z();
  } else {
    tmp = null;
  }
  return tmp;
}
function getOrImplicitDefault(_this__u8e3s4, key) {
  if (isInterface(_this__u8e3s4, MapWithDefault))
    return _this__u8e3s4.vh(key);
  var tmp$ret$0;
  $l$block: {
    // Inline function 'kotlin.collections.getOrElseNullable' call
    var value = _this__u8e3s4.q2(key);
    if (value == null && !_this__u8e3s4.o2(key)) {
      throw NoSuchElementException.k('Key ' + toString_0(key) + ' is missing in the map.');
    } else {
      tmp$ret$0 = (value == null ? true : !(value == null)) ? value : THROW_CCE();
      break $l$block;
    }
  }
  return tmp$ret$0;
}
function emptyMap() {
  var tmp = EmptyMap_getInstance();
  return isInterface(tmp, KtMap) ? tmp : THROW_CCE();
}
function mapOf_0(pairs) {
  return pairs.length > 0 ? toMap_0(pairs, LinkedHashMap.za(mapCapacity(pairs.length))) : emptyMap();
}
function getValue(_this__u8e3s4, key) {
  return getOrImplicitDefault(_this__u8e3s4, key);
}
function toMap(_this__u8e3s4) {
  if (isInterface(_this__u8e3s4, Collection)) {
    var tmp;
    switch (_this__u8e3s4.z()) {
      case 0:
        tmp = emptyMap();
        break;
      case 1:
        var tmp_0;
        if (isInterface(_this__u8e3s4, KtList)) {
          tmp_0 = _this__u8e3s4.c1(0);
        } else {
          tmp_0 = _this__u8e3s4.w().y();
        }

        tmp = mapOf(tmp_0);
        break;
      default:
        tmp = toMap_1(_this__u8e3s4, LinkedHashMap.za(mapCapacity(_this__u8e3s4.z())));
        break;
    }
    return tmp;
  }
  return optimizeReadOnlyMap(toMap_1(_this__u8e3s4, LinkedHashMap.ya()));
}
var EmptyMap_instance;
function EmptyMap_getInstance() {
  if (EmptyMap_instance === VOID)
    new EmptyMap();
  return EmptyMap_instance;
}
function toMap_0(_this__u8e3s4, destination) {
  // Inline function 'kotlin.apply' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.collections.toMap.<anonymous>' call
  putAll(destination, _this__u8e3s4);
  return destination;
}
function toMap_1(_this__u8e3s4, destination) {
  // Inline function 'kotlin.apply' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.collections.toMap.<anonymous>' call
  putAll_0(destination, _this__u8e3s4);
  return destination;
}
function optimizeReadOnlyMap(_this__u8e3s4) {
  var tmp;
  switch (_this__u8e3s4.z()) {
    case 0:
      tmp = emptyMap();
      break;
    case 1:
      // Inline function 'kotlin.collections.toSingletonMapOrSelf' call

      tmp = _this__u8e3s4;
      break;
    default:
      tmp = _this__u8e3s4;
      break;
  }
  return tmp;
}
function putAll(_this__u8e3s4, pairs) {
  var inductionVariable = 0;
  var last = pairs.length;
  while (inductionVariable < last) {
    var tmp1_loop_parameter = pairs[inductionVariable];
    inductionVariable = inductionVariable + 1 | 0;
    var key = tmp1_loop_parameter.bi();
    var value = tmp1_loop_parameter.ci();
    _this__u8e3s4.t2(key, value);
  }
}
function putAll_0(_this__u8e3s4, pairs) {
  var tmp0_iterator = pairs.w();
  while (tmp0_iterator.x()) {
    var tmp1_loop_parameter = tmp0_iterator.y();
    var key = tmp1_loop_parameter.bi();
    var value = tmp1_loop_parameter.ci();
    _this__u8e3s4.t2(key, value);
  }
}
function hashMapOf(pairs) {
  // Inline function 'kotlin.apply' call
  var this_0 = HashMap.y7(mapCapacity(pairs.length));
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.collections.hashMapOf.<anonymous>' call
  putAll(this_0, pairs);
  return this_0;
}
function removeFirstOrNull(_this__u8e3s4) {
  return _this__u8e3s4.f1() ? null : _this__u8e3s4.m2(0);
}
function addAll(_this__u8e3s4, elements) {
  if (isInterface(elements, Collection))
    return _this__u8e3s4.b1(elements);
  else {
    var result = false;
    var tmp1_iterator = elements.w();
    while (tmp1_iterator.x()) {
      var item = tmp1_iterator.y();
      if (_this__u8e3s4.g(item))
        result = true;
    }
    return result;
  }
}
function removeLast(_this__u8e3s4) {
  var tmp;
  if (_this__u8e3s4.f1()) {
    throw NoSuchElementException.k('List is empty.');
  } else {
    tmp = _this__u8e3s4.m2(get_lastIndex_2(_this__u8e3s4));
  }
  return tmp;
}
function iterator(block) {
  var iterator = new SequenceBuilderIterator();
  iterator.ki_1 = createCoroutineUnintercepted(block, iterator, iterator);
  return iterator;
}
function nextNotReady($this) {
  if (!$this.x())
    throw NoSuchElementException.r5();
  else
    return $this.y();
}
function exceptionalState($this) {
  switch ($this.hi_1) {
    case 4:
      return NoSuchElementException.r5();
    case 5:
      return IllegalStateException.b4('Iterator has failed.');
    default:
      return IllegalStateException.b4('Unexpected state of the iterator: ' + $this.hi_1);
  }
}
function setOf_0(elements) {
  return toSet(elements);
}
function emptySet() {
  return EmptySet_getInstance();
}
function optimizeReadOnlySet(_this__u8e3s4) {
  switch (_this__u8e3s4.z()) {
    case 0:
      return emptySet();
    case 1:
      return setOf(_this__u8e3s4.w().y());
    default:
      return _this__u8e3s4;
  }
}
function hashSetOf(elements) {
  return toCollection(elements, HashSet.h1(mapCapacity(elements.length)));
}
var EmptySet_instance;
function EmptySet_getInstance() {
  if (EmptySet_instance === VOID)
    new EmptySet();
  return EmptySet_instance;
}
function compareValues(a, b) {
  if (a === b)
    return 0;
  if (a == null)
    return -1;
  if (b == null)
    return 1;
  return compareTo((!(a == null) ? isComparable(a) : false) ? a : THROW_CCE(), b);
}
function resume(_this__u8e3s4, value) {
  // Inline function 'kotlin.Companion.success' call
  var tmp$ret$0 = _Result___init__impl__xyqfz8(value);
  return _this__u8e3s4.wb(tmp$ret$0);
}
function resumeWithException(_this__u8e3s4, exception) {
  // Inline function 'kotlin.Companion.failure' call
  var tmp$ret$0 = _Result___init__impl__xyqfz8(createFailure(exception));
  return _this__u8e3s4.wb(tmp$ret$0);
}
function startCoroutine(_this__u8e3s4, receiver, completion) {
  // Inline function 'kotlin.coroutines.resume' call
  var this_0 = intercepted(createCoroutineUnintercepted(_this__u8e3s4, receiver, completion));
  // Inline function 'kotlin.Companion.success' call
  var tmp$ret$0 = _Result___init__impl__xyqfz8(Unit_instance);
  this_0.wb(tmp$ret$0);
}
var Key_instance;
function Key_getInstance() {
  return Key_instance;
}
function CoroutineContext$plus$lambda(acc, element) {
  var removed = acc.vi(element.k1());
  var tmp;
  if (removed === EmptyCoroutineContext_getInstance()) {
    tmp = element;
  } else {
    var interceptor = removed.yb(Key_instance);
    var tmp_0;
    if (interceptor == null) {
      tmp_0 = new CombinedContext(removed, element);
    } else {
      var left = removed.vi(Key_instance);
      tmp_0 = left === EmptyCoroutineContext_getInstance() ? new CombinedContext(element, interceptor) : new CombinedContext(new CombinedContext(left, element), interceptor);
    }
    tmp = tmp_0;
  }
  return tmp;
}
var EmptyCoroutineContext_instance;
function EmptyCoroutineContext_getInstance() {
  if (EmptyCoroutineContext_instance === VOID)
    new EmptyCoroutineContext();
  return EmptyCoroutineContext_instance;
}
function size($this) {
  var cur = $this;
  var size = 2;
  while (true) {
    var tmp = cur.zi_1;
    var tmp0_elvis_lhs = tmp instanceof CombinedContext ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return size;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    cur = tmp_0;
    size = size + 1 | 0;
  }
}
function contains_4($this, element) {
  return equals($this.yb(element.k1()), element);
}
function containsAll($this, context) {
  var cur = context;
  while (true) {
    if (!contains_4($this, cur.aj_1))
      return false;
    var next = cur.zi_1;
    if (next instanceof CombinedContext) {
      cur = next;
    } else {
      return contains_4($this, isInterface(next, Element) ? next : THROW_CCE());
    }
  }
}
function CombinedContext$toString$lambda(acc, element) {
  var tmp;
  // Inline function 'kotlin.text.isEmpty' call
  if (charSequenceLength(acc) === 0) {
    tmp = toString_1(element);
  } else {
    tmp = acc + ', ' + toString_1(element);
  }
  return tmp;
}
function get_COROUTINE_SUSPENDED() {
  return CoroutineSingletons_COROUTINE_SUSPENDED_getInstance();
}
var CoroutineSingletons_COROUTINE_SUSPENDED_instance;
var CoroutineSingletons_UNDECIDED_instance;
var CoroutineSingletons_RESUMED_instance;
var CoroutineSingletons_entriesInitialized;
function CoroutineSingletons_initEntries() {
  if (CoroutineSingletons_entriesInitialized)
    return Unit_instance;
  CoroutineSingletons_entriesInitialized = true;
  CoroutineSingletons_COROUTINE_SUSPENDED_instance = new CoroutineSingletons('COROUTINE_SUSPENDED', 0);
  CoroutineSingletons_UNDECIDED_instance = new CoroutineSingletons('UNDECIDED', 1);
  CoroutineSingletons_RESUMED_instance = new CoroutineSingletons('RESUMED', 2);
}
function CoroutineSingletons_COROUTINE_SUSPENDED_getInstance() {
  CoroutineSingletons_initEntries();
  return CoroutineSingletons_COROUTINE_SUSPENDED_instance;
}
function getProgressionLastElement(start, end, step) {
  var tmp;
  if (step > 0) {
    tmp = start >= end ? end : end - differenceModulo(end, start, step) | 0;
  } else if (step < 0) {
    tmp = start <= end ? end : end + differenceModulo(start, end, -step | 0) | 0;
  } else {
    throw IllegalArgumentException.o('Step is zero.');
  }
  return tmp;
}
function differenceModulo(a, b, c) {
  return mod(mod(a, c) - mod(b, c) | 0, c);
}
function mod(a, b) {
  var mod = a % b | 0;
  return mod >= 0 ? mod : mod + b | 0;
}
var Companion_instance_9;
function Companion_getInstance_9() {
  if (Companion_instance_9 === VOID)
    new Companion_9();
  return Companion_instance_9;
}
var Companion_instance_10;
function Companion_getInstance_10() {
  if (Companion_instance_10 === VOID)
    new Companion_10();
  return Companion_instance_10;
}
var Companion_instance_11;
function Companion_getInstance_11() {
  return Companion_instance_11;
}
var Companion_instance_12;
function Companion_getInstance_12() {
  return Companion_instance_12;
}
function checkStepIsPositive(isPositive, step) {
  if (!isPositive)
    throw IllegalArgumentException.o('Step must be positive, was: ' + toString_1(step) + '.');
}
function appendElement(_this__u8e3s4, element, transform) {
  if (!(transform == null)) {
    _this__u8e3s4.v(transform(element));
  } else {
    if (element == null ? true : isCharSequence(element)) {
      _this__u8e3s4.v(element);
    } else {
      if (element instanceof Char) {
        _this__u8e3s4.ma(element.v1_1);
      } else {
        _this__u8e3s4.v(toString_0(element));
      }
    }
  }
}
function equals_1(_this__u8e3s4, other, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  if (_this__u8e3s4 === other)
    return true;
  if (!ignoreCase)
    return false;
  var thisUpper = uppercaseChar(_this__u8e3s4);
  var otherUpper = uppercaseChar(other);
  var tmp;
  if (thisUpper === otherUpper) {
    tmp = true;
  } else {
    // Inline function 'kotlin.text.lowercaseChar' call
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$2 = toString(thisUpper).toLowerCase();
    var tmp_0 = charSequenceGet(tmp$ret$2, 0);
    // Inline function 'kotlin.text.lowercaseChar' call
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$6 = toString(otherUpper).toLowerCase();
    tmp = tmp_0 === charSequenceGet(tmp$ret$6, 0);
  }
  return tmp;
}
function isSurrogate(_this__u8e3s4) {
  return _Char___init__impl__6a9atx(55296) <= _this__u8e3s4 ? _this__u8e3s4 <= _Char___init__impl__6a9atx(57343) : false;
}
function titlecase(_this__u8e3s4) {
  return titlecaseImpl(_this__u8e3s4);
}
function trimMargin(_this__u8e3s4, marginPrefix) {
  marginPrefix = marginPrefix === VOID ? '|' : marginPrefix;
  return replaceIndentByMargin(_this__u8e3s4, '', marginPrefix);
}
function trimIndent(_this__u8e3s4) {
  return replaceIndent(_this__u8e3s4, '');
}
function replaceIndentByMargin(_this__u8e3s4, newIndent, marginPrefix) {
  newIndent = newIndent === VOID ? '' : newIndent;
  marginPrefix = marginPrefix === VOID ? '|' : marginPrefix;
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.text.isNotBlank' call
  // Inline function 'kotlin.contracts.contract' call
  if (!!isBlank(marginPrefix)) {
    // Inline function 'kotlin.text.replaceIndentByMargin.<anonymous>' call
    var message = 'marginPrefix must be non-blank string.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  var lines_0 = lines(_this__u8e3s4);
  // Inline function 'kotlin.text.reindent' call
  var resultSizeEstimate = _this__u8e3s4.length + imul_0(newIndent.length, lines_0.z()) | 0;
  var indentAddFunction = getIndentFunction(newIndent);
  var lastIndex = get_lastIndex_2(lines_0);
  // Inline function 'kotlin.collections.mapIndexedNotNull' call
  // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
  var destination = ArrayList.e1();
  // Inline function 'kotlin.collections.forEachIndexed' call
  var index = 0;
  var tmp0_iterator = lines_0.w();
  while (tmp0_iterator.x()) {
    var item = tmp0_iterator.y();
    // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
    var tmp1 = index;
    index = tmp1 + 1 | 0;
    // Inline function 'kotlin.text.reindent.<anonymous>' call
    var index_0 = checkIndexOverflow(tmp1);
    var tmp;
    if ((index_0 === 0 || index_0 === lastIndex) && isBlank(item)) {
      tmp = null;
    } else {
      // Inline function 'kotlin.text.replaceIndentByMargin.<anonymous>' call
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.indexOfFirst' call
        var inductionVariable = 0;
        var last = charSequenceLength(item) - 1 | 0;
        if (inductionVariable <= last)
          do {
            var index_1 = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            // Inline function 'kotlin.text.replaceIndentByMargin.<anonymous>.<anonymous>' call
            var it = charSequenceGet(item, index_1);
            if (!isWhitespace(it)) {
              tmp$ret$3 = index_1;
              break $l$block;
            }
          }
           while (inductionVariable <= last);
        tmp$ret$3 = -1;
      }
      var firstNonWhitespaceIndex = tmp$ret$3;
      var tmp_0;
      if (firstNonWhitespaceIndex === -1) {
        tmp_0 = null;
      } else if (startsWith_0(item, marginPrefix, firstNonWhitespaceIndex)) {
        // Inline function 'kotlin.text.substring' call
        var startIndex = firstNonWhitespaceIndex + marginPrefix.length | 0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp_0 = item.substring(startIndex);
      } else {
        tmp_0 = null;
      }
      var tmp0_safe_receiver = tmp_0;
      var tmp_1;
      if (tmp0_safe_receiver == null) {
        tmp_1 = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp_1 = indentAddFunction(tmp0_safe_receiver);
      }
      var tmp1_elvis_lhs = tmp_1;
      tmp = tmp1_elvis_lhs == null ? item : tmp1_elvis_lhs;
    }
    var tmp0_safe_receiver_0 = tmp;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      destination.g(tmp0_safe_receiver_0);
    }
  }
  return joinTo_0(destination, StringBuilder.qa(resultSizeEstimate), '\n').toString();
}
function replaceIndent(_this__u8e3s4, newIndent) {
  newIndent = newIndent === VOID ? '' : newIndent;
  var lines_0 = lines(_this__u8e3s4);
  // Inline function 'kotlin.collections.map' call
  // Inline function 'kotlin.collections.filter' call
  // Inline function 'kotlin.collections.filterTo' call
  var destination = ArrayList.e1();
  var tmp0_iterator = lines_0.w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'kotlin.text.isNotBlank' call
    if (!isBlank(element)) {
      destination.g(element);
    }
  }
  // Inline function 'kotlin.collections.mapTo' call
  var destination_0 = ArrayList.a1(collectionSizeOrDefault(destination, 10));
  var tmp0_iterator_0 = destination.w();
  while (tmp0_iterator_0.x()) {
    var item = tmp0_iterator_0.y();
    var tmp$ret$3 = indentWidth(item);
    destination_0.g(tmp$ret$3);
  }
  var tmp0_elvis_lhs = minOrNull(destination_0);
  var minCommonIndent = tmp0_elvis_lhs == null ? 0 : tmp0_elvis_lhs;
  // Inline function 'kotlin.text.reindent' call
  var resultSizeEstimate = _this__u8e3s4.length + imul_0(newIndent.length, lines_0.z()) | 0;
  var indentAddFunction = getIndentFunction(newIndent);
  var lastIndex = get_lastIndex_2(lines_0);
  // Inline function 'kotlin.collections.mapIndexedNotNull' call
  // Inline function 'kotlin.collections.mapIndexedNotNullTo' call
  var destination_1 = ArrayList.e1();
  // Inline function 'kotlin.collections.forEachIndexed' call
  var index = 0;
  var tmp0_iterator_1 = lines_0.w();
  while (tmp0_iterator_1.x()) {
    var item_0 = tmp0_iterator_1.y();
    // Inline function 'kotlin.collections.mapIndexedNotNullTo.<anonymous>' call
    var tmp1 = index;
    index = tmp1 + 1 | 0;
    // Inline function 'kotlin.text.reindent.<anonymous>' call
    var index_0 = checkIndexOverflow(tmp1);
    var tmp;
    if ((index_0 === 0 || index_0 === lastIndex) && isBlank(item_0)) {
      tmp = null;
    } else {
      // Inline function 'kotlin.text.replaceIndent.<anonymous>' call
      var tmp0_safe_receiver = drop(item_0, minCommonIndent);
      var tmp_0;
      if (tmp0_safe_receiver == null) {
        tmp_0 = null;
      } else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp_0 = indentAddFunction(tmp0_safe_receiver);
      }
      var tmp1_elvis_lhs = tmp_0;
      tmp = tmp1_elvis_lhs == null ? item_0 : tmp1_elvis_lhs;
    }
    var tmp0_safe_receiver_0 = tmp;
    if (tmp0_safe_receiver_0 == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      destination_1.g(tmp0_safe_receiver_0);
    }
  }
  return joinTo_0(destination_1, StringBuilder.qa(resultSizeEstimate), '\n').toString();
}
function getIndentFunction(indent) {
  var tmp;
  // Inline function 'kotlin.text.isEmpty' call
  if (charSequenceLength(indent) === 0) {
    tmp = getIndentFunction$lambda;
  } else {
    tmp = getIndentFunction$lambda_0(indent);
  }
  return tmp;
}
function indentWidth(_this__u8e3s4) {
  // Inline function 'kotlin.let' call
  var tmp$ret$1;
  $l$block: {
    // Inline function 'kotlin.text.indexOfFirst' call
    var inductionVariable = 0;
    var last = charSequenceLength(_this__u8e3s4) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlin.text.indentWidth.<anonymous>' call
        var it = charSequenceGet(_this__u8e3s4, index);
        if (!isWhitespace(it)) {
          tmp$ret$1 = index;
          break $l$block;
        }
      }
       while (inductionVariable <= last);
    tmp$ret$1 = -1;
  }
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.text.indentWidth.<anonymous>' call
  var it_0 = tmp$ret$1;
  return it_0 === -1 ? _this__u8e3s4.length : it_0;
}
function getIndentFunction$lambda(line) {
  return line;
}
function getIndentFunction$lambda_0($indent) {
  return function (line) {
    return $indent + line;
  };
}
function toLongOrNull(_this__u8e3s4) {
  return toLongOrNull_0(_this__u8e3s4, 10);
}
function toIntOrNull(_this__u8e3s4) {
  return toIntOrNull_0(_this__u8e3s4, 10);
}
function toLongOrNull_0(_this__u8e3s4, radix) {
  checkRadix(radix);
  var length = _this__u8e3s4.length;
  if (length === 0)
    return null;
  var start;
  var isNegative;
  var limit;
  var firstChar = charSequenceGet(_this__u8e3s4, 0);
  if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
    if (length === 1)
      return null;
    start = 1;
    if (firstChar === _Char___init__impl__6a9atx(45)) {
      isNegative = true;
      limit = new Long(0, -2147483648);
    } else if (firstChar === _Char___init__impl__6a9atx(43)) {
      isNegative = false;
      limit = new Long(1, -2147483648);
    } else
      return null;
  } else {
    start = 0;
    isNegative = false;
    limit = new Long(1, -2147483648);
  }
  // Inline function 'kotlin.Long.div' call
  var limitForMaxRadix = (new Long(1, -2147483648)).g3(toLong(36));
  var limitBeforeMul = limitForMaxRadix;
  var result = new Long(0, 0);
  var inductionVariable = start;
  if (inductionVariable < length)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
      if (digit < 0)
        return null;
      if (result.q1(limitBeforeMul) < 0) {
        if (limitBeforeMul.equals(limitForMaxRadix)) {
          // Inline function 'kotlin.Long.div' call
          limitBeforeMul = limit.g3(toLong(radix));
          if (result.q1(limitBeforeMul) < 0) {
            return null;
          }
        } else {
          return null;
        }
      }
      // Inline function 'kotlin.Long.times' call
      result = result.f3(toLong(radix));
      var tmp = result;
      // Inline function 'kotlin.Long.plus' call
      var tmp$ret$3 = limit.d3(toLong(digit));
      if (tmp.q1(tmp$ret$3) < 0)
        return null;
      // Inline function 'kotlin.Long.minus' call
      result = result.e3(toLong(digit));
    }
     while (inductionVariable < length);
  return isNegative ? result : result.k3();
}
function toIntOrNull_0(_this__u8e3s4, radix) {
  checkRadix(radix);
  var length = _this__u8e3s4.length;
  if (length === 0)
    return null;
  var start;
  var isNegative;
  var limit;
  var firstChar = charSequenceGet(_this__u8e3s4, 0);
  if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
    if (length === 1)
      return null;
    start = 1;
    if (firstChar === _Char___init__impl__6a9atx(45)) {
      isNegative = true;
      limit = -2147483648;
    } else if (firstChar === _Char___init__impl__6a9atx(43)) {
      isNegative = false;
      limit = -2147483647;
    } else
      return null;
  } else {
    start = 0;
    isNegative = false;
    limit = -2147483647;
  }
  var limitForMaxRadix = -59652323;
  var limitBeforeMul = limitForMaxRadix;
  var result = 0;
  var inductionVariable = start;
  if (inductionVariable < length)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
      if (digit < 0)
        return null;
      if (result < limitBeforeMul) {
        if (limitBeforeMul === limitForMaxRadix) {
          limitBeforeMul = limit / radix | 0;
          if (result < limitBeforeMul) {
            return null;
          }
        } else {
          return null;
        }
      }
      result = imul_0(result, radix);
      if (result < (limit + digit | 0))
        return null;
      result = result - digit | 0;
    }
     while (inductionVariable < length);
  return isNegative ? result : -result | 0;
}
function numberFormatError(input) {
  throw NumberFormatException.fe("Invalid number format: '" + input + "'");
}
function indexOf_4(_this__u8e3s4, char, startIndex, ignoreCase) {
  startIndex = startIndex === VOID ? 0 : startIndex;
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  var tmp;
  var tmp_0;
  if (ignoreCase) {
    tmp_0 = true;
  } else {
    tmp_0 = !(typeof _this__u8e3s4 === 'string');
  }
  if (tmp_0) {
    // Inline function 'kotlin.charArrayOf' call
    var tmp$ret$0 = charArrayOf([char]);
    tmp = indexOfAny(_this__u8e3s4, tmp$ret$0, startIndex, ignoreCase);
  } else {
    // Inline function 'kotlin.text.nativeIndexOf' call
    // Inline function 'kotlin.text.nativeIndexOf' call
    var str = toString(char);
    // Inline function 'kotlin.js.asDynamic' call
    tmp = _this__u8e3s4.indexOf(str, startIndex);
  }
  return tmp;
}
function lineSequence(_this__u8e3s4) {
  return splitToSequence(_this__u8e3s4, ['\r\n', '\n', '\r']);
}
function isBlank(_this__u8e3s4) {
  var tmp$ret$1;
  $l$block: {
    // Inline function 'kotlin.text.all' call
    var inductionVariable = 0;
    while (inductionVariable < charSequenceLength(_this__u8e3s4)) {
      var element = charSequenceGet(_this__u8e3s4, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.text.isBlank.<anonymous>' call
      if (!isWhitespace(element)) {
        tmp$ret$1 = false;
        break $l$block;
      }
    }
    tmp$ret$1 = true;
  }
  return tmp$ret$1;
}
function contains_5(_this__u8e3s4, char, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  return indexOf_4(_this__u8e3s4, char, VOID, ignoreCase) >= 0;
}
function get_lastIndex_3(_this__u8e3s4) {
  return charSequenceLength(_this__u8e3s4) - 1 | 0;
}
function indexOfAny(_this__u8e3s4, chars, startIndex, ignoreCase) {
  startIndex = startIndex === VOID ? 0 : startIndex;
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  var tmp;
  if (!ignoreCase && chars.length === 1) {
    tmp = typeof _this__u8e3s4 === 'string';
  } else {
    tmp = false;
  }
  if (tmp) {
    var char = single(chars);
    // Inline function 'kotlin.text.nativeIndexOf' call
    // Inline function 'kotlin.text.nativeIndexOf' call
    var str = toString(char);
    // Inline function 'kotlin.js.asDynamic' call
    return _this__u8e3s4.indexOf(str, startIndex);
  }
  var inductionVariable = coerceAtLeast(startIndex, 0);
  var last = get_lastIndex_3(_this__u8e3s4);
  if (inductionVariable <= last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var charAtIndex = charSequenceGet(_this__u8e3s4, index);
      var tmp$ret$4;
      $l$block: {
        // Inline function 'kotlin.collections.any' call
        var inductionVariable_0 = 0;
        var last_0 = chars.length;
        while (inductionVariable_0 < last_0) {
          var element = chars[inductionVariable_0];
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          // Inline function 'kotlin.text.indexOfAny.<anonymous>' call
          if (equals_1(element, charAtIndex, ignoreCase)) {
            tmp$ret$4 = true;
            break $l$block;
          }
        }
        tmp$ret$4 = false;
      }
      if (tmp$ret$4)
        return index;
    }
     while (!(index === last));
  return -1;
}
function trim(_this__u8e3s4) {
  // Inline function 'kotlin.text.trim' call
  var startIndex = 0;
  var endIndex = charSequenceLength(_this__u8e3s4) - 1 | 0;
  var startFound = false;
  $l$loop: while (startIndex <= endIndex) {
    var index = !startFound ? startIndex : endIndex;
    var match = isWhitespace(charSequenceGet(_this__u8e3s4, index));
    if (!startFound) {
      if (!match)
        startFound = true;
      else
        startIndex = startIndex + 1 | 0;
    } else {
      if (!match)
        break $l$loop;
      else
        endIndex = endIndex - 1 | 0;
    }
  }
  return charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex + 1 | 0);
}
function splitToSequence(_this__u8e3s4, delimiters, ignoreCase, limit) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  limit = limit === VOID ? 0 : limit;
  var tmp = rangesDelimitedBy(_this__u8e3s4, delimiters, VOID, ignoreCase, limit);
  return map(tmp, splitToSequence$lambda(_this__u8e3s4));
}
function regionMatchesImpl(_this__u8e3s4, thisOffset, other, otherOffset, length, ignoreCase) {
  if (otherOffset < 0 || thisOffset < 0 || thisOffset > (charSequenceLength(_this__u8e3s4) - length | 0) || otherOffset > (charSequenceLength(other) - length | 0)) {
    return false;
  }
  var inductionVariable = 0;
  if (inductionVariable < length)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (!equals_1(charSequenceGet(_this__u8e3s4, thisOffset + index | 0), charSequenceGet(other, otherOffset + index | 0), ignoreCase))
        return false;
    }
     while (inductionVariable < length);
  return true;
}
function substring(_this__u8e3s4, range) {
  return toString_1(charSequenceSubSequence(_this__u8e3s4, range.fj(), range.gj() + 1 | 0));
}
function rangesDelimitedBy(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
  startIndex = startIndex === VOID ? 0 : startIndex;
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  limit = limit === VOID ? 0 : limit;
  requireNonNegativeLimit(limit);
  var delimitersList = asList(delimiters);
  return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda(delimitersList, ignoreCase));
}
function requireNonNegativeLimit(limit) {
  // Inline function 'kotlin.contracts.contract' call
  var tmp;
  if (!(limit >= 0)) {
    // Inline function 'kotlin.text.requireNonNegativeLimit.<anonymous>' call
    var message = 'Limit must be non-negative, but was ' + limit;
    throw IllegalArgumentException.o(toString_1(message));
  }
  return tmp;
}
function calcNext($this) {
  if ($this.yj_1 < 0) {
    $this.wj_1 = 0;
    $this.zj_1 = null;
  } else {
    var tmp;
    var tmp_0;
    if ($this.bk_1.ek_1 > 0) {
      $this.ak_1 = $this.ak_1 + 1 | 0;
      tmp_0 = $this.ak_1 >= $this.bk_1.ek_1;
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = $this.yj_1 > charSequenceLength($this.bk_1.ck_1);
    }
    if (tmp) {
      $this.zj_1 = numberRangeToNumber($this.xj_1, get_lastIndex_3($this.bk_1.ck_1));
      $this.yj_1 = -1;
    } else {
      var match = $this.bk_1.fk_1($this.bk_1.ck_1, $this.yj_1);
      if (match == null) {
        $this.zj_1 = numberRangeToNumber($this.xj_1, get_lastIndex_3($this.bk_1.ck_1));
        $this.yj_1 = -1;
      } else {
        var index = match.bi();
        var length = match.ci();
        $this.zj_1 = until($this.xj_1, index);
        $this.xj_1 = index + length | 0;
        $this.yj_1 = $this.xj_1 + (length === 0 ? 1 : 0) | 0;
      }
    }
    $this.wj_1 = 1;
  }
}
function findAnyOf(_this__u8e3s4, strings, startIndex, ignoreCase, last) {
  if (!ignoreCase && strings.z() === 1) {
    var string = single_0(strings);
    var index = !last ? indexOf_5(_this__u8e3s4, string, startIndex) : lastIndexOf(_this__u8e3s4, string, startIndex);
    return index < 0 ? null : to(index, string);
  }
  var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), charSequenceLength(_this__u8e3s4)) : downTo(coerceAtMost(startIndex, get_lastIndex_3(_this__u8e3s4)), 0);
  if (typeof _this__u8e3s4 === 'string') {
    var inductionVariable = indices.r1_1;
    var last_0 = indices.s1_1;
    var step = indices.t1_1;
    if (step > 0 && inductionVariable <= last_0 || (step < 0 && last_0 <= inductionVariable))
      do {
        var index_0 = inductionVariable;
        inductionVariable = inductionVariable + step | 0;
        var tmp$ret$1;
        $l$block: {
          // Inline function 'kotlin.collections.firstOrNull' call
          var tmp0_iterator = strings.w();
          while (tmp0_iterator.x()) {
            var element = tmp0_iterator.y();
            // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
            if (regionMatches(element, 0, _this__u8e3s4, index_0, element.length, ignoreCase)) {
              tmp$ret$1 = element;
              break $l$block;
            }
          }
          tmp$ret$1 = null;
        }
        var matchingString = tmp$ret$1;
        if (!(matchingString == null))
          return to(index_0, matchingString);
      }
       while (!(index_0 === last_0));
  } else {
    var inductionVariable_0 = indices.r1_1;
    var last_1 = indices.s1_1;
    var step_0 = indices.t1_1;
    if (step_0 > 0 && inductionVariable_0 <= last_1 || (step_0 < 0 && last_1 <= inductionVariable_0))
      do {
        var index_1 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + step_0 | 0;
        var tmp$ret$3;
        $l$block_0: {
          // Inline function 'kotlin.collections.firstOrNull' call
          var tmp0_iterator_0 = strings.w();
          while (tmp0_iterator_0.x()) {
            var element_0 = tmp0_iterator_0.y();
            // Inline function 'kotlin.text.findAnyOf.<anonymous>' call
            if (regionMatchesImpl(element_0, 0, _this__u8e3s4, index_1, element_0.length, ignoreCase)) {
              tmp$ret$3 = element_0;
              break $l$block_0;
            }
          }
          tmp$ret$3 = null;
        }
        var matchingString_0 = tmp$ret$3;
        if (!(matchingString_0 == null))
          return to(index_1, matchingString_0);
      }
       while (!(index_1 === last_1));
  }
  return null;
}
function indexOf_5(_this__u8e3s4, string, startIndex, ignoreCase) {
  startIndex = startIndex === VOID ? 0 : startIndex;
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  var tmp;
  var tmp_0;
  if (ignoreCase) {
    tmp_0 = true;
  } else {
    tmp_0 = !(typeof _this__u8e3s4 === 'string');
  }
  if (tmp_0) {
    tmp = indexOf_6(_this__u8e3s4, string, startIndex, charSequenceLength(_this__u8e3s4), ignoreCase);
  } else {
    // Inline function 'kotlin.text.nativeIndexOf' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = _this__u8e3s4.indexOf(string, startIndex);
  }
  return tmp;
}
function lastIndexOf(_this__u8e3s4, string, startIndex, ignoreCase) {
  startIndex = startIndex === VOID ? get_lastIndex_3(_this__u8e3s4) : startIndex;
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  var tmp;
  var tmp_0;
  if (ignoreCase) {
    tmp_0 = true;
  } else {
    tmp_0 = !(typeof _this__u8e3s4 === 'string');
  }
  if (tmp_0) {
    tmp = indexOf_6(_this__u8e3s4, string, startIndex, 0, ignoreCase, true);
  } else {
    // Inline function 'kotlin.text.nativeLastIndexOf' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = _this__u8e3s4.lastIndexOf(string, startIndex);
  }
  return tmp;
}
function indexOf_6(_this__u8e3s4, other, startIndex, endIndex, ignoreCase, last) {
  last = last === VOID ? false : last;
  var indices = !last ? numberRangeToNumber(coerceAtLeast(startIndex, 0), coerceAtMost(endIndex, charSequenceLength(_this__u8e3s4))) : downTo(coerceAtMost(startIndex, get_lastIndex_3(_this__u8e3s4)), coerceAtLeast(endIndex, 0));
  var tmp;
  if (typeof _this__u8e3s4 === 'string') {
    tmp = typeof other === 'string';
  } else {
    tmp = false;
  }
  if (tmp) {
    var inductionVariable = indices.r1_1;
    var last_0 = indices.s1_1;
    var step = indices.t1_1;
    if (step > 0 && inductionVariable <= last_0 || (step < 0 && last_0 <= inductionVariable))
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step | 0;
        if (regionMatches(other, 0, _this__u8e3s4, index, charSequenceLength(other), ignoreCase))
          return index;
      }
       while (!(index === last_0));
  } else {
    var inductionVariable_0 = indices.r1_1;
    var last_1 = indices.s1_1;
    var step_0 = indices.t1_1;
    if (step_0 > 0 && inductionVariable_0 <= last_1 || (step_0 < 0 && last_1 <= inductionVariable_0))
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + step_0 | 0;
        if (regionMatchesImpl(other, 0, _this__u8e3s4, index_0, charSequenceLength(other), ignoreCase))
          return index_0;
      }
       while (!(index_0 === last_1));
  }
  return -1;
}
function startsWith_1(_this__u8e3s4, char, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  return charSequenceLength(_this__u8e3s4) > 0 && equals_1(charSequenceGet(_this__u8e3s4, 0), char, ignoreCase);
}
function lines(_this__u8e3s4) {
  return toList_2(lineSequence(_this__u8e3s4));
}
function padStart(_this__u8e3s4, length, padChar) {
  padChar = padChar === VOID ? _Char___init__impl__6a9atx(32) : padChar;
  return toString_1(padStart_0(isCharSequence(_this__u8e3s4) ? _this__u8e3s4 : THROW_CCE(), length, padChar));
}
function padStart_0(_this__u8e3s4, length, padChar) {
  padChar = padChar === VOID ? _Char___init__impl__6a9atx(32) : padChar;
  if (length < 0)
    throw IllegalArgumentException.o('Desired length ' + length + ' is less than zero.');
  if (length <= charSequenceLength(_this__u8e3s4))
    return charSequenceSubSequence(_this__u8e3s4, 0, charSequenceLength(_this__u8e3s4));
  var sb = StringBuilder.qa(length);
  var inductionVariable = 1;
  var last = length - charSequenceLength(_this__u8e3s4) | 0;
  if (inductionVariable <= last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      sb.ma(padChar);
    }
     while (!(i === last));
  sb.v(_this__u8e3s4);
  return sb;
}
function split(_this__u8e3s4, delimiters, ignoreCase, limit) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  limit = limit === VOID ? 0 : limit;
  if (delimiters.length === 1) {
    return split_0(_this__u8e3s4, toString(delimiters[0]), ignoreCase, limit);
  }
  // Inline function 'kotlin.collections.map' call
  var this_0 = asIterable(rangesDelimitedBy_0(_this__u8e3s4, delimiters, VOID, ignoreCase, limit));
  // Inline function 'kotlin.collections.mapTo' call
  var destination = ArrayList.a1(collectionSizeOrDefault(this_0, 10));
  var tmp0_iterator = this_0.w();
  while (tmp0_iterator.x()) {
    var item = tmp0_iterator.y();
    // Inline function 'kotlin.text.split.<anonymous>' call
    var tmp$ret$0 = substring(_this__u8e3s4, item);
    destination.g(tmp$ret$0);
  }
  return destination;
}
function contains_6(_this__u8e3s4, other, ignoreCase) {
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  var tmp;
  if (typeof other === 'string') {
    tmp = indexOf_5(_this__u8e3s4, other, VOID, ignoreCase) >= 0;
  } else {
    tmp = indexOf_6(_this__u8e3s4, other, 0, charSequenceLength(_this__u8e3s4), ignoreCase) >= 0;
  }
  return tmp;
}
function split_0(_this__u8e3s4, delimiter, ignoreCase, limit) {
  requireNonNegativeLimit(limit);
  var currentOffset = 0;
  var nextIndex = indexOf_5(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
  if (nextIndex === -1 || limit === 1) {
    return listOf(toString_1(_this__u8e3s4));
  }
  var isLimited = limit > 0;
  var result = ArrayList.a1(isLimited ? coerceAtMost(limit, 10) : 10);
  $l$loop: do {
    // Inline function 'kotlin.text.substring' call
    var startIndex = currentOffset;
    var endIndex = nextIndex;
    var tmp$ret$0 = toString_1(charSequenceSubSequence(_this__u8e3s4, startIndex, endIndex));
    result.g(tmp$ret$0);
    currentOffset = nextIndex + delimiter.length | 0;
    if (isLimited && result.z() === (limit - 1 | 0))
      break $l$loop;
    nextIndex = indexOf_5(_this__u8e3s4, delimiter, currentOffset, ignoreCase);
  }
   while (!(nextIndex === -1));
  // Inline function 'kotlin.text.substring' call
  var startIndex_0 = currentOffset;
  var endIndex_0 = charSequenceLength(_this__u8e3s4);
  var tmp$ret$1 = toString_1(charSequenceSubSequence(_this__u8e3s4, startIndex_0, endIndex_0));
  result.g(tmp$ret$1);
  return result;
}
function rangesDelimitedBy_0(_this__u8e3s4, delimiters, startIndex, ignoreCase, limit) {
  startIndex = startIndex === VOID ? 0 : startIndex;
  ignoreCase = ignoreCase === VOID ? false : ignoreCase;
  limit = limit === VOID ? 0 : limit;
  requireNonNegativeLimit(limit);
  return new DelimitedRangesSequence(_this__u8e3s4, startIndex, limit, rangesDelimitedBy$lambda_0(delimiters, ignoreCase));
}
function splitToSequence$lambda($this_splitToSequence) {
  return function (it) {
    return substring($this_splitToSequence, it);
  };
}
function rangesDelimitedBy$lambda($delimitersList, $ignoreCase) {
  return function ($this$$receiver, currentIndex) {
    var tmp0_safe_receiver = findAnyOf($this$$receiver, $delimitersList, currentIndex, $ignoreCase, false);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
      tmp = to(tmp0_safe_receiver.zh_1, tmp0_safe_receiver.ai_1.length);
    }
    return tmp;
  };
}
function rangesDelimitedBy$lambda_0($delimiters, $ignoreCase) {
  return function ($this$$receiver, currentIndex) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.text.rangesDelimitedBy.<anonymous>.<anonymous>' call
    var it = indexOfAny($this$$receiver, $delimiters, currentIndex, $ignoreCase);
    return it < 0 ? null : to(it, 1);
  };
}
function _Duration___init__impl__kdtzql(rawValue) {
  // Inline function 'kotlin.time.durationAssertionsEnabled' call
  if (true) {
    if (isInNanos(rawValue)) {
      var containsArg = _get_value__a43j40_0(rawValue);
      if (!((new Long(387905, -1073741824)).q1(containsArg) <= 0 ? containsArg.q1(new Long(-387905, 1073741823)) <= 0 : false))
        throw AssertionError.ud(_get_value__a43j40_0(rawValue).toString() + ' ns is out of nanoseconds range');
    } else {
      var containsArg_0 = _get_value__a43j40_0(rawValue);
      if (!((new Long(1, -1073741824)).q1(containsArg_0) <= 0 ? containsArg_0.q1(new Long(-1, 1073741823)) <= 0 : false))
        throw AssertionError.ud(_get_value__a43j40_0(rawValue).toString() + ' ms is out of milliseconds range');
      var containsArg_1 = _get_value__a43j40_0(rawValue);
      if ((new Long(1108857478, -1074)).q1(containsArg_1) <= 0 ? containsArg_1.q1(new Long(-1108857478, 1073)) <= 0 : false)
        throw AssertionError.ud(_get_value__a43j40_0(rawValue).toString() + ' ms is denormalized');
    }
  }
  return rawValue;
}
function _get_rawValue__5zfu4e($this) {
  return $this;
}
function _get_value__a43j40_0($this) {
  return _get_rawValue__5zfu4e($this).n3(1);
}
function isInNanos($this) {
  // Inline function 'kotlin.time.Duration.unitDiscriminator' call
  return (_get_rawValue__5zfu4e($this).u3() & 1) === 0;
}
function isInMillis($this) {
  // Inline function 'kotlin.time.Duration.unitDiscriminator' call
  return (_get_rawValue__5zfu4e($this).u3() & 1) === 1;
}
function _get_storageUnit__szjgha($this) {
  return isInNanos($this) ? DurationUnit_NANOSECONDS_getInstance() : DurationUnit_MILLISECONDS_getInstance();
}
var Companion_instance_13;
function Companion_getInstance_13() {
  if (Companion_instance_13 === VOID)
    new Companion_13();
  return Companion_instance_13;
}
function Duration__unaryMinus_impl_x2k1y0($this) {
  var tmp = _get_value__a43j40_0($this).k3();
  // Inline function 'kotlin.time.Duration.unitDiscriminator' call
  var tmp$ret$0 = _get_rawValue__5zfu4e($this).u3() & 1;
  return durationOf(tmp, tmp$ret$0);
}
function Duration__plus_impl_yu9v8f($this, other) {
  if (Duration__isInfinite_impl_tsn9y3($this)) {
    if (Duration__isFinite_impl_rzjsps(other) || _get_rawValue__5zfu4e($this).r3(_get_rawValue__5zfu4e(other)).q1(new Long(0, 0)) >= 0)
      return $this;
    else
      throw IllegalArgumentException.o('Summing infinite durations of different signs yields an undefined result.');
  } else if (Duration__isInfinite_impl_tsn9y3(other))
    return other;
  var tmp;
  // Inline function 'kotlin.time.Duration.unitDiscriminator' call
  var tmp_0 = _get_rawValue__5zfu4e($this).u3() & 1;
  // Inline function 'kotlin.time.Duration.unitDiscriminator' call
  if (tmp_0 === (_get_rawValue__5zfu4e(other).u3() & 1)) {
    var result = _get_value__a43j40_0($this).d3(_get_value__a43j40_0(other));
    tmp = isInNanos($this) ? durationOfNanosNormalized(result) : durationOfMillisNormalized(result);
  } else {
    if (isInMillis($this)) {
      tmp = addValuesMixedRanges($this, _get_value__a43j40_0($this), _get_value__a43j40_0(other));
    } else {
      tmp = addValuesMixedRanges($this, _get_value__a43j40_0(other), _get_value__a43j40_0($this));
    }
  }
  return tmp;
}
function addValuesMixedRanges($this, thisMillis, otherNanos) {
  var otherMillis = nanosToMillis(otherNanos);
  var resultMillis = thisMillis.d3(otherMillis);
  var tmp;
  if ((new Long(1108857478, -1074)).q1(resultMillis) <= 0 ? resultMillis.q1(new Long(-1108857478, 1073)) <= 0 : false) {
    var otherNanoRemainder = otherNanos.e3(millisToNanos(otherMillis));
    tmp = durationOfNanos(millisToNanos(resultMillis).d3(otherNanoRemainder));
  } else {
    tmp = durationOfMillis(coerceIn(resultMillis, new Long(1, -1073741824), new Long(-1, 1073741823)));
  }
  return tmp;
}
function Duration__isNegative_impl_pbysfa($this) {
  return _get_rawValue__5zfu4e($this).q1(new Long(0, 0)) < 0;
}
function Duration__isInfinite_impl_tsn9y3($this) {
  return _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_13().hk_1)) || _get_rawValue__5zfu4e($this).equals(_get_rawValue__5zfu4e(Companion_getInstance_13().ik_1));
}
function Duration__isFinite_impl_rzjsps($this) {
  return !Duration__isInfinite_impl_tsn9y3($this);
}
function _Duration___get_absoluteValue__impl__vr7i6w($this) {
  return Duration__isNegative_impl_pbysfa($this) ? Duration__unaryMinus_impl_x2k1y0($this) : $this;
}
function Duration__compareTo_impl_pchp0f($this, other) {
  var compareBits = _get_rawValue__5zfu4e($this).r3(_get_rawValue__5zfu4e(other));
  if (compareBits.q1(new Long(0, 0)) < 0 || (compareBits.u3() & 1) === 0)
    return _get_rawValue__5zfu4e($this).q1(_get_rawValue__5zfu4e(other));
  // Inline function 'kotlin.time.Duration.unitDiscriminator' call
  var tmp = _get_rawValue__5zfu4e($this).u3() & 1;
  // Inline function 'kotlin.time.Duration.unitDiscriminator' call
  var r = tmp - (_get_rawValue__5zfu4e(other).u3() & 1) | 0;
  return Duration__isNegative_impl_pbysfa($this) ? -r | 0 : r;
}
function Duration__compareTo_impl_pchp0f_0($this, other) {
  return Duration__compareTo_impl_pchp0f($this.kk_1, other instanceof Duration ? other.kk_1 : THROW_CCE());
}
function _Duration___get_hoursComponent__impl__7hllxa($this) {
  var tmp;
  if (Duration__isInfinite_impl_tsn9y3($this)) {
    tmp = 0;
  } else {
    // Inline function 'kotlin.Long.rem' call
    tmp = _Duration___get_inWholeHours__impl__kb9f3j($this).h3(toLong(24)).u3();
  }
  return tmp;
}
function _Duration___get_minutesComponent__impl__ctvd8u($this) {
  var tmp;
  if (Duration__isInfinite_impl_tsn9y3($this)) {
    tmp = 0;
  } else {
    // Inline function 'kotlin.Long.rem' call
    tmp = _Duration___get_inWholeMinutes__impl__dognoh($this).h3(toLong(60)).u3();
  }
  return tmp;
}
function _Duration___get_secondsComponent__impl__if34a6($this) {
  var tmp;
  if (Duration__isInfinite_impl_tsn9y3($this)) {
    tmp = 0;
  } else {
    // Inline function 'kotlin.Long.rem' call
    tmp = _Duration___get_inWholeSeconds__impl__hpy7b3($this).h3(toLong(60)).u3();
  }
  return tmp;
}
function _Duration___get_nanosecondsComponent__impl__nh19kq($this) {
  var tmp;
  if (Duration__isInfinite_impl_tsn9y3($this)) {
    tmp = 0;
  } else if (isInMillis($this)) {
    // Inline function 'kotlin.Long.rem' call
    var tmp$ret$0 = _get_value__a43j40_0($this).h3(toLong(1000));
    tmp = millisToNanos(tmp$ret$0).u3();
  } else {
    // Inline function 'kotlin.Long.rem' call
    var this_0 = _get_value__a43j40_0($this);
    var other = 1000000000;
    tmp = this_0.h3(toLong(other)).u3();
  }
  return tmp;
}
function Duration__toLong_impl_shr43i($this, unit) {
  var tmp0_subject = _get_rawValue__5zfu4e($this);
  return tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_13().hk_1)) ? new Long(-1, 2147483647) : tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_13().ik_1)) ? new Long(0, -2147483648) : convertDurationUnit_0(_get_value__a43j40_0($this), _get_storageUnit__szjgha($this), unit);
}
function _Duration___get_inWholeDays__impl__7bvpxz($this) {
  return Duration__toLong_impl_shr43i($this, DurationUnit_DAYS_getInstance());
}
function _Duration___get_inWholeHours__impl__kb9f3j($this) {
  return Duration__toLong_impl_shr43i($this, DurationUnit_HOURS_getInstance());
}
function _Duration___get_inWholeMinutes__impl__dognoh($this) {
  return Duration__toLong_impl_shr43i($this, DurationUnit_MINUTES_getInstance());
}
function _Duration___get_inWholeSeconds__impl__hpy7b3($this) {
  return Duration__toLong_impl_shr43i($this, DurationUnit_SECONDS_getInstance());
}
function Duration__toString_impl_8d916b($this) {
  var tmp0_subject = _get_rawValue__5zfu4e($this);
  var tmp;
  if (tmp0_subject.equals(new Long(0, 0))) {
    tmp = '0s';
  } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_13().hk_1))) {
    tmp = 'Infinity';
  } else if (tmp0_subject.equals(_get_rawValue__5zfu4e(Companion_getInstance_13().ik_1))) {
    tmp = '-Infinity';
  } else {
    var isNegative = Duration__isNegative_impl_pbysfa($this);
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = StringBuilder.u();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.time.Duration.toString.<anonymous>' call
    if (isNegative) {
      this_0.ma(_Char___init__impl__6a9atx(45));
    }
    // Inline function 'kotlin.time.Duration.toComponents' call
    var this_1 = _Duration___get_absoluteValue__impl__vr7i6w($this);
    // Inline function 'kotlin.contracts.contract' call
    var days = _Duration___get_inWholeDays__impl__7bvpxz(this_1);
    var hours = _Duration___get_hoursComponent__impl__7hllxa(this_1);
    var minutes = _Duration___get_minutesComponent__impl__ctvd8u(this_1);
    var seconds = _Duration___get_secondsComponent__impl__if34a6(this_1);
    var nanoseconds = _Duration___get_nanosecondsComponent__impl__nh19kq(this_1);
    var hasDays = !days.equals(new Long(0, 0));
    var hasHours = !(hours === 0);
    var hasMinutes = !(minutes === 0);
    var hasSeconds = !(seconds === 0) || !(nanoseconds === 0);
    var components = 0;
    if (hasDays) {
      this_0.ag(days).ma(_Char___init__impl__6a9atx(100));
      components = components + 1 | 0;
    }
    if (hasHours || (hasDays && (hasMinutes || hasSeconds))) {
      var tmp1 = components;
      components = tmp1 + 1 | 0;
      if (tmp1 > 0) {
        this_0.ma(_Char___init__impl__6a9atx(32));
      }
      this_0.zf(hours).ma(_Char___init__impl__6a9atx(104));
    }
    if (hasMinutes || (hasSeconds && (hasHours || hasDays))) {
      var tmp2 = components;
      components = tmp2 + 1 | 0;
      if (tmp2 > 0) {
        this_0.ma(_Char___init__impl__6a9atx(32));
      }
      this_0.zf(minutes).ma(_Char___init__impl__6a9atx(109));
    }
    if (hasSeconds) {
      var tmp3 = components;
      components = tmp3 + 1 | 0;
      if (tmp3 > 0) {
        this_0.ma(_Char___init__impl__6a9atx(32));
      }
      if (!(seconds === 0) || hasDays || hasHours || hasMinutes) {
        appendFractional(this_0, $this, seconds, nanoseconds, 9, 's', false);
      } else if (nanoseconds >= 1000000) {
        appendFractional(this_0, $this, nanoseconds / 1000000 | 0, nanoseconds % 1000000 | 0, 6, 'ms', false);
      } else if (nanoseconds >= 1000) {
        appendFractional(this_0, $this, nanoseconds / 1000 | 0, nanoseconds % 1000 | 0, 3, 'us', false);
      } else {
        this_0.zf(nanoseconds).la('ns');
      }
    }
    if (isNegative && components > 1) {
      this_0.bg(1, _Char___init__impl__6a9atx(40)).ma(_Char___init__impl__6a9atx(41));
    }
    tmp = this_0.toString();
  }
  return tmp;
}
function appendFractional(_this__u8e3s4, $this, whole, fractional, fractionalSize, unit, isoZeroes) {
  _this__u8e3s4.zf(whole);
  if (!(fractional === 0)) {
    _this__u8e3s4.ma(_Char___init__impl__6a9atx(46));
    var fracString = padStart(fractional.toString(), fractionalSize, _Char___init__impl__6a9atx(48));
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.text.indexOfLast' call
      var inductionVariable = charSequenceLength(fracString) - 1 | 0;
      if (0 <= inductionVariable)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + -1 | 0;
          // Inline function 'kotlin.time.Duration.appendFractional.<anonymous>' call
          if (!(charSequenceGet(fracString, index) === _Char___init__impl__6a9atx(48))) {
            tmp$ret$1 = index;
            break $l$block;
          }
        }
         while (0 <= inductionVariable);
      tmp$ret$1 = -1;
    }
    var nonZeroDigits = tmp$ret$1 + 1 | 0;
    if (!isoZeroes && nonZeroDigits < 3) {
      _this__u8e3s4.yf(fracString, 0, nonZeroDigits);
    } else {
      _this__u8e3s4.yf(fracString, 0, imul_0((nonZeroDigits + 2 | 0) / 3 | 0, 3));
    }
  }
  _this__u8e3s4.la(unit);
}
function Duration__toIsoString_impl_9h6wsm($this) {
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = StringBuilder.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.time.Duration.toIsoString.<anonymous>' call
  if (Duration__isNegative_impl_pbysfa($this)) {
    this_0.ma(_Char___init__impl__6a9atx(45));
  }
  this_0.la('PT');
  // Inline function 'kotlin.time.Duration.toComponents' call
  var this_1 = _Duration___get_absoluteValue__impl__vr7i6w($this);
  // Inline function 'kotlin.contracts.contract' call
  var hours = _Duration___get_inWholeHours__impl__kb9f3j(this_1);
  var minutes = _Duration___get_minutesComponent__impl__ctvd8u(this_1);
  var seconds = _Duration___get_secondsComponent__impl__if34a6(this_1);
  var nanoseconds = _Duration___get_nanosecondsComponent__impl__nh19kq(this_1);
  var hours_0 = hours;
  if (Duration__isInfinite_impl_tsn9y3($this)) {
    hours_0 = new Long(1316134911, 2328);
  }
  var hasHours = !hours_0.equals(new Long(0, 0));
  var hasSeconds = !(seconds === 0) || !(nanoseconds === 0);
  var hasMinutes = !(minutes === 0) || (hasSeconds && hasHours);
  if (hasHours) {
    this_0.ag(hours_0).ma(_Char___init__impl__6a9atx(72));
  }
  if (hasMinutes) {
    this_0.zf(minutes).ma(_Char___init__impl__6a9atx(77));
  }
  if (hasSeconds || (!hasHours && !hasMinutes)) {
    appendFractional(this_0, $this, seconds, nanoseconds, 9, 'S', true);
  }
  return this_0.toString();
}
function Duration__hashCode_impl_u4exz6($this) {
  return $this.hashCode();
}
function Duration__equals_impl_ygj6w6($this, other) {
  if (!(other instanceof Duration))
    return false;
  var tmp0_other_with_cast = other instanceof Duration ? other.kk_1 : THROW_CCE();
  if (!$this.equals(tmp0_other_with_cast))
    return false;
  return true;
}
function durationOfMillis(normalMillis) {
  // Inline function 'kotlin.Long.plus' call
  var tmp$ret$0 = normalMillis.m3(1).d3(toLong(1));
  return _Duration___init__impl__kdtzql(tmp$ret$0);
}
function toDuration(_this__u8e3s4, unit) {
  var maxNsInUnit = convertDurationUnitOverflow(new Long(-387905, 1073741823), DurationUnit_NANOSECONDS_getInstance(), unit);
  if (maxNsInUnit.k3().q1(_this__u8e3s4) <= 0 ? _this__u8e3s4.q1(maxNsInUnit) <= 0 : false) {
    return durationOfNanos(convertDurationUnitOverflow(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance()));
  } else {
    var millis = convertDurationUnit_0(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance());
    return durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
  }
}
function toDuration_0(_this__u8e3s4, unit) {
  var valueInNs = convertDurationUnit(_this__u8e3s4, unit, DurationUnit_NANOSECONDS_getInstance());
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!!isNaN_0(valueInNs)) {
    // Inline function 'kotlin.time.toDuration.<anonymous>' call
    var message = 'Duration value cannot be NaN.';
    throw IllegalArgumentException.o(toString_1(message));
  }
  var nanos = roundToLong(valueInNs);
  var tmp;
  if ((new Long(387905, -1073741824)).q1(nanos) <= 0 ? nanos.q1(new Long(-387905, 1073741823)) <= 0 : false) {
    tmp = durationOfNanos(nanos);
  } else {
    var millis = roundToLong(convertDurationUnit(_this__u8e3s4, unit, DurationUnit_MILLISECONDS_getInstance()));
    tmp = durationOfMillisNormalized(millis);
  }
  return tmp;
}
function parseDuration(value, strictIso) {
  var length = value.length;
  if (length === 0)
    throw IllegalArgumentException.o('The string is empty');
  var index = 0;
  var result = Companion_getInstance_13().gk_1;
  var infinityString = 'Infinity';
  var tmp0_subject = charSequenceGet(value, index);
  if (tmp0_subject === _Char___init__impl__6a9atx(43) ? true : tmp0_subject === _Char___init__impl__6a9atx(45)) {
    index = index + 1 | 0;
  }
  var hasSign = index > 0;
  var isNegative = hasSign && startsWith_1(value, _Char___init__impl__6a9atx(45));
  if (length <= index)
    throw IllegalArgumentException.o('No components');
  else {
    if (charSequenceGet(value, index) === _Char___init__impl__6a9atx(80)) {
      index = index + 1 | 0;
      if (index === length)
        throw IllegalArgumentException.ed();
      var nonDigitSymbols = '+-.';
      var isTimeComponent = false;
      var prevUnit = null;
      $l$loop: while (index < length) {
        if (charSequenceGet(value, index) === _Char___init__impl__6a9atx(84)) {
          var tmp;
          if (isTimeComponent) {
            tmp = true;
          } else {
            index = index + 1 | 0;
            tmp = index === length;
          }
          if (tmp)
            throw IllegalArgumentException.ed();
          isTimeComponent = true;
          continue $l$loop;
        }
        // Inline function 'kotlin.time.substringWhile' call
        var startIndex = index;
        // Inline function 'kotlin.text.substring' call
        // Inline function 'kotlin.time.skipWhile' call
        var i = startIndex;
        $l$loop_0: while (true) {
          var tmp_0;
          if (i < value.length) {
            // Inline function 'kotlin.time.parseDuration.<anonymous>' call
            var it = charSequenceGet(value, i);
            tmp_0 = (_Char___init__impl__6a9atx(48) <= it ? it <= _Char___init__impl__6a9atx(57) : false) || contains_5(nonDigitSymbols, it);
          } else {
            tmp_0 = false;
          }
          if (!tmp_0) {
            break $l$loop_0;
          }
          i = i + 1 | 0;
        }
        var endIndex = i;
        // Inline function 'kotlin.js.asDynamic' call
        var component = value.substring(startIndex, endIndex);
        // Inline function 'kotlin.text.isEmpty' call
        if (charSequenceLength(component) === 0)
          throw IllegalArgumentException.ed();
        index = index + component.length | 0;
        // Inline function 'kotlin.text.getOrElse' call
        var index_0 = index;
        // Inline function 'kotlin.contracts.contract' call
        var tmp_1;
        if (0 <= index_0 ? index_0 <= (charSequenceLength(value) - 1 | 0) : false) {
          tmp_1 = charSequenceGet(value, index_0);
        } else {
          throw IllegalArgumentException.o('Missing unit for value ' + component);
        }
        var unitChar = tmp_1;
        index = index + 1 | 0;
        var unit = durationUnitByIsoChar(unitChar, isTimeComponent);
        if (!(prevUnit == null) && prevUnit.y2(unit) <= 0)
          throw IllegalArgumentException.o('Unexpected order of duration components');
        prevUnit = unit;
        var dotIndex = indexOf_4(component, _Char___init__impl__6a9atx(46));
        if (unit.equals(DurationUnit_SECONDS_getInstance()) && dotIndex > 0) {
          // Inline function 'kotlin.text.substring' call
          // Inline function 'kotlin.js.asDynamic' call
          var whole = component.substring(0, dotIndex);
          result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(whole), unit));
          var tmp_2 = result;
          // Inline function 'kotlin.text.substring' call
          // Inline function 'kotlin.js.asDynamic' call
          var tmp$ret$10 = component.substring(dotIndex);
          result = Duration__plus_impl_yu9v8f(tmp_2, toDuration_0(toDouble(tmp$ret$10), unit));
        } else {
          result = Duration__plus_impl_yu9v8f(result, toDuration(parseOverLongIsoComponent(component), unit));
        }
      }
    } else {
      if (strictIso)
        throw IllegalArgumentException.ed();
      else {
        var tmp_3 = index;
        // Inline function 'kotlin.comparisons.maxOf' call
        var a = length - index | 0;
        var b = infinityString.length;
        var tmp$ret$11 = Math.max(a, b);
        if (regionMatches(value, tmp_3, infinityString, 0, tmp$ret$11, true)) {
          result = Companion_getInstance_13().hk_1;
        } else {
          var prevUnit_0 = null;
          var afterFirst = false;
          var allowSpaces = !hasSign;
          if (hasSign && charSequenceGet(value, index) === _Char___init__impl__6a9atx(40) && last_0(value) === _Char___init__impl__6a9atx(41)) {
            allowSpaces = true;
            index = index + 1 | 0;
            var tmp_4 = index;
            length = length - 1 | 0;
            if (tmp_4 === length)
              throw IllegalArgumentException.o('No components');
          }
          while (index < length) {
            if (afterFirst && allowSpaces) {
              // Inline function 'kotlin.time.skipWhile' call
              var i_0 = index;
              $l$loop_1: while (true) {
                var tmp_5;
                if (i_0 < value.length) {
                  // Inline function 'kotlin.time.parseDuration.<anonymous>' call
                  tmp_5 = charSequenceGet(value, i_0) === _Char___init__impl__6a9atx(32);
                } else {
                  tmp_5 = false;
                }
                if (!tmp_5) {
                  break $l$loop_1;
                }
                i_0 = i_0 + 1 | 0;
              }
              index = i_0;
            }
            afterFirst = true;
            // Inline function 'kotlin.time.substringWhile' call
            var startIndex_0 = index;
            // Inline function 'kotlin.text.substring' call
            // Inline function 'kotlin.time.skipWhile' call
            var i_1 = startIndex_0;
            $l$loop_2: while (true) {
              var tmp_6;
              if (i_1 < value.length) {
                // Inline function 'kotlin.time.parseDuration.<anonymous>' call
                var it_0 = charSequenceGet(value, i_1);
                tmp_6 = (_Char___init__impl__6a9atx(48) <= it_0 ? it_0 <= _Char___init__impl__6a9atx(57) : false) || it_0 === _Char___init__impl__6a9atx(46);
              } else {
                tmp_6 = false;
              }
              if (!tmp_6) {
                break $l$loop_2;
              }
              i_1 = i_1 + 1 | 0;
            }
            var endIndex_0 = i_1;
            // Inline function 'kotlin.js.asDynamic' call
            var component_0 = value.substring(startIndex_0, endIndex_0);
            // Inline function 'kotlin.text.isEmpty' call
            if (charSequenceLength(component_0) === 0)
              throw IllegalArgumentException.ed();
            index = index + component_0.length | 0;
            // Inline function 'kotlin.time.substringWhile' call
            var startIndex_1 = index;
            // Inline function 'kotlin.text.substring' call
            // Inline function 'kotlin.time.skipWhile' call
            var i_2 = startIndex_1;
            $l$loop_3: while (true) {
              var tmp_7;
              if (i_2 < value.length) {
                // Inline function 'kotlin.time.parseDuration.<anonymous>' call
                var it_1 = charSequenceGet(value, i_2);
                tmp_7 = _Char___init__impl__6a9atx(97) <= it_1 ? it_1 <= _Char___init__impl__6a9atx(122) : false;
              } else {
                tmp_7 = false;
              }
              if (!tmp_7) {
                break $l$loop_3;
              }
              i_2 = i_2 + 1 | 0;
            }
            var endIndex_1 = i_2;
            // Inline function 'kotlin.js.asDynamic' call
            var unitName = value.substring(startIndex_1, endIndex_1);
            index = index + unitName.length | 0;
            var unit_0 = durationUnitByShortName(unitName);
            if (!(prevUnit_0 == null) && prevUnit_0.y2(unit_0) <= 0)
              throw IllegalArgumentException.o('Unexpected order of duration components');
            prevUnit_0 = unit_0;
            var dotIndex_0 = indexOf_4(component_0, _Char___init__impl__6a9atx(46));
            if (dotIndex_0 > 0) {
              // Inline function 'kotlin.text.substring' call
              // Inline function 'kotlin.js.asDynamic' call
              var whole_0 = component_0.substring(0, dotIndex_0);
              result = Duration__plus_impl_yu9v8f(result, toDuration(toLong_0(whole_0), unit_0));
              var tmp_8 = result;
              // Inline function 'kotlin.text.substring' call
              // Inline function 'kotlin.js.asDynamic' call
              var tmp$ret$28 = component_0.substring(dotIndex_0);
              result = Duration__plus_impl_yu9v8f(tmp_8, toDuration_0(toDouble(tmp$ret$28), unit_0));
              if (index < length)
                throw IllegalArgumentException.o('Fractional component must be last');
            } else {
              result = Duration__plus_impl_yu9v8f(result, toDuration(toLong_0(component_0), unit_0));
            }
          }
        }
      }
    }
  }
  return isNegative ? Duration__unaryMinus_impl_x2k1y0(result) : result;
}
function durationOf(normalValue, unitDiscriminator) {
  // Inline function 'kotlin.Long.plus' call
  var tmp$ret$0 = normalValue.m3(1).d3(toLong(unitDiscriminator));
  return _Duration___init__impl__kdtzql(tmp$ret$0);
}
function durationOfNanosNormalized(nanos) {
  var tmp;
  if ((new Long(387905, -1073741824)).q1(nanos) <= 0 ? nanos.q1(new Long(-387905, 1073741823)) <= 0 : false) {
    tmp = durationOfNanos(nanos);
  } else {
    tmp = durationOfMillis(nanosToMillis(nanos));
  }
  return tmp;
}
function durationOfMillisNormalized(millis) {
  var tmp;
  if ((new Long(1108857478, -1074)).q1(millis) <= 0 ? millis.q1(new Long(-1108857478, 1073)) <= 0 : false) {
    tmp = durationOfNanos(millisToNanos(millis));
  } else {
    tmp = durationOfMillis(coerceIn(millis, new Long(1, -1073741824), new Long(-1, 1073741823)));
  }
  return tmp;
}
function nanosToMillis(nanos) {
  // Inline function 'kotlin.Long.div' call
  return nanos.g3(toLong(1000000));
}
function millisToNanos(millis) {
  // Inline function 'kotlin.Long.times' call
  return millis.f3(toLong(1000000));
}
function durationOfNanos(normalNanos) {
  return _Duration___init__impl__kdtzql(normalNanos.m3(1));
}
function parseOverLongIsoComponent(value) {
  var length = value.length;
  var startIndex = 0;
  if (length > 0 && contains_5('+-', charSequenceGet(value, 0))) {
    startIndex = startIndex + 1 | 0;
  }
  var tmp;
  if ((length - startIndex | 0) > 16) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlin.collections.all' call
      var this_0 = numberRangeToNumber(startIndex, get_lastIndex_3(value));
      var tmp_0;
      if (isInterface(this_0, Collection)) {
        tmp_0 = this_0.f1();
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp$ret$0 = true;
        break $l$block_0;
      }
      var tmp0_iterator = this_0.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'kotlin.time.parseOverLongIsoComponent.<anonymous>' call
        var containsArg = charSequenceGet(value, element);
        if (!(_Char___init__impl__6a9atx(48) <= containsArg ? containsArg <= _Char___init__impl__6a9atx(57) : false)) {
          tmp$ret$0 = false;
          break $l$block_0;
        }
      }
      tmp$ret$0 = true;
    }
    tmp = tmp$ret$0;
  } else {
    tmp = false;
  }
  if (tmp) {
    return charSequenceGet(value, 0) === _Char___init__impl__6a9atx(45) ? new Long(0, -2147483648) : new Long(-1, 2147483647);
  }
  return startsWith(value, '+') ? toLong_0(drop(value, 1)) : toLong_0(value);
}
function durationUnitByIsoChar(isoChar, isTimeComponent) {
  var tmp;
  if (!isTimeComponent) {
    var tmp_0;
    if (isoChar === _Char___init__impl__6a9atx(68)) {
      tmp_0 = DurationUnit_DAYS_getInstance();
    } else {
      throw IllegalArgumentException.o('Invalid or unsupported duration ISO non-time unit: ' + toString(isoChar));
    }
    tmp = tmp_0;
  } else {
    var tmp_1;
    if (isoChar === _Char___init__impl__6a9atx(72)) {
      tmp_1 = DurationUnit_HOURS_getInstance();
    } else if (isoChar === _Char___init__impl__6a9atx(77)) {
      tmp_1 = DurationUnit_MINUTES_getInstance();
    } else if (isoChar === _Char___init__impl__6a9atx(83)) {
      tmp_1 = DurationUnit_SECONDS_getInstance();
    } else {
      throw IllegalArgumentException.o('Invalid duration ISO time unit: ' + toString(isoChar));
    }
    tmp = tmp_1;
  }
  return tmp;
}
function durationUnitByShortName(shortName) {
  var tmp;
  switch (shortName) {
    case 'ns':
      tmp = DurationUnit_NANOSECONDS_getInstance();
      break;
    case 'us':
      tmp = DurationUnit_MICROSECONDS_getInstance();
      break;
    case 'ms':
      tmp = DurationUnit_MILLISECONDS_getInstance();
      break;
    case 's':
      tmp = DurationUnit_SECONDS_getInstance();
      break;
    case 'm':
      tmp = DurationUnit_MINUTES_getInstance();
      break;
    case 'h':
      tmp = DurationUnit_HOURS_getInstance();
      break;
    case 'd':
      tmp = DurationUnit_DAYS_getInstance();
      break;
    default:
      throw IllegalArgumentException.o('Unknown duration unit short name: ' + shortName);
  }
  return tmp;
}
function get_UNDEFINED_RESULT() {
  _init_properties_DeepRecursive_kt__zbwcac();
  return UNDEFINED_RESULT;
}
var UNDEFINED_RESULT;
function invoke(_this__u8e3s4, value) {
  _init_properties_DeepRecursive_kt__zbwcac();
  return (new DeepRecursiveScopeImpl(_this__u8e3s4.nk_1, value)).sk();
}
var properties_initialized_DeepRecursive_kt_5z0al2;
function _init_properties_DeepRecursive_kt__zbwcac() {
  if (!properties_initialized_DeepRecursive_kt_5z0al2) {
    properties_initialized_DeepRecursive_kt_5z0al2 = true;
    // Inline function 'kotlin.Companion.success' call
    var value = get_COROUTINE_SUSPENDED();
    UNDEFINED_RESULT = _Result___init__impl__xyqfz8(value);
  }
}
var LazyThreadSafetyMode_SYNCHRONIZED_instance;
var LazyThreadSafetyMode_PUBLICATION_instance;
var LazyThreadSafetyMode_NONE_instance;
var LazyThreadSafetyMode_entriesInitialized;
function LazyThreadSafetyMode_initEntries() {
  if (LazyThreadSafetyMode_entriesInitialized)
    return Unit_instance;
  LazyThreadSafetyMode_entriesInitialized = true;
  LazyThreadSafetyMode_SYNCHRONIZED_instance = new LazyThreadSafetyMode('SYNCHRONIZED', 0);
  LazyThreadSafetyMode_PUBLICATION_instance = new LazyThreadSafetyMode('PUBLICATION', 1);
  LazyThreadSafetyMode_NONE_instance = new LazyThreadSafetyMode('NONE', 2);
}
var UNINITIALIZED_VALUE_instance;
function UNINITIALIZED_VALUE_getInstance() {
  return UNINITIALIZED_VALUE_instance;
}
function LazyThreadSafetyMode_PUBLICATION_getInstance() {
  LazyThreadSafetyMode_initEntries();
  return LazyThreadSafetyMode_PUBLICATION_instance;
}
function LazyThreadSafetyMode_NONE_getInstance() {
  LazyThreadSafetyMode_initEntries();
  return LazyThreadSafetyMode_NONE_instance;
}
function _Result___init__impl__xyqfz8(value) {
  return value;
}
function _Result___get_value__impl__bjfvqg($this) {
  return $this;
}
function _Result___get_isFailure__impl__jpiriv($this) {
  var tmp = _Result___get_value__impl__bjfvqg($this);
  return tmp instanceof Failure;
}
function Result__exceptionOrNull_impl_p6xea9($this) {
  var tmp;
  if (_Result___get_value__impl__bjfvqg($this) instanceof Failure) {
    tmp = _Result___get_value__impl__bjfvqg($this).yk_1;
  } else {
    tmp = null;
  }
  return tmp;
}
function Result__toString_impl_yu5r8k($this) {
  var tmp;
  if (_Result___get_value__impl__bjfvqg($this) instanceof Failure) {
    tmp = toString_1(_Result___get_value__impl__bjfvqg($this));
  } else {
    tmp = 'Success(' + toString_0(_Result___get_value__impl__bjfvqg($this)) + ')';
  }
  return tmp;
}
var Companion_instance_14;
function Companion_getInstance_14() {
  return Companion_instance_14;
}
function Result__hashCode_impl_d2zufp($this) {
  return $this == null ? 0 : hashCode($this);
}
function Result__equals_impl_bxgmep($this, other) {
  if (!(other instanceof Result))
    return false;
  var tmp0_other_with_cast = other instanceof Result ? other.zk_1 : THROW_CCE();
  if (!equals($this, tmp0_other_with_cast))
    return false;
  return true;
}
function createFailure(exception) {
  return new Failure(exception);
}
function throwOnFailure(_this__u8e3s4) {
  var tmp = _Result___get_value__impl__bjfvqg(_this__u8e3s4);
  if (tmp instanceof Failure)
    throw _Result___get_value__impl__bjfvqg(_this__u8e3s4).yk_1;
}
function to(_this__u8e3s4, that) {
  return new Pair(_this__u8e3s4, that);
}
function _UByte___init__impl__g9hnc4(data) {
  return data;
}
function _UByte___get_data__impl__jof9qr($this) {
  return $this;
}
var Companion_instance_15;
function Companion_getInstance_15() {
  if (Companion_instance_15 === VOID)
    new Companion_15();
  return Companion_instance_15;
}
function UByte__compareTo_impl_5w5192($this, other) {
  // Inline function 'kotlin.UByte.toInt' call
  var tmp = _UByte___get_data__impl__jof9qr($this) & 255;
  // Inline function 'kotlin.UByte.toInt' call
  var tmp$ret$1 = _UByte___get_data__impl__jof9qr(other) & 255;
  return compareTo(tmp, tmp$ret$1);
}
function UByte__compareTo_impl_5w5192_0($this, other) {
  return UByte__compareTo_impl_5w5192($this.hl_1, other instanceof UByte ? other.hl_1 : THROW_CCE());
}
function UByte__toString_impl_v72jg($this) {
  // Inline function 'kotlin.UByte.toInt' call
  return (_UByte___get_data__impl__jof9qr($this) & 255).toString();
}
function UByte__hashCode_impl_mmczcb($this) {
  return $this;
}
function UByte__equals_impl_nvqtsf($this, other) {
  if (!(other instanceof UByte))
    return false;
  if (!($this === (other instanceof UByte ? other.hl_1 : THROW_CCE())))
    return false;
  return true;
}
function _UByteArray___init__impl__ip4y9n(storage) {
  return storage;
}
function _UByteArray___get_storage__impl__d4kctt($this) {
  return $this;
}
function _UByteArray___init__impl__ip4y9n_0(size) {
  return _UByteArray___init__impl__ip4y9n(new Int8Array(size));
}
function UByteArray__get_impl_t5f3hv($this, index) {
  // Inline function 'kotlin.toUByte' call
  var this_0 = _UByteArray___get_storage__impl__d4kctt($this)[index];
  return _UByte___init__impl__g9hnc4(this_0);
}
function UByteArray__set_impl_jvcicn($this, index, value) {
  var tmp = _UByteArray___get_storage__impl__d4kctt($this);
  // Inline function 'kotlin.UByte.toByte' call
  tmp[index] = _UByte___get_data__impl__jof9qr(value);
}
function _UByteArray___get_size__impl__h6pkdv($this) {
  return _UByteArray___get_storage__impl__d4kctt($this).length;
}
function UByteArray__iterator_impl_509y1p($this) {
  return new Iterator(_UByteArray___get_storage__impl__d4kctt($this));
}
function UByteArray__containsAll_impl_v9s6dj($this, elements) {
  var tmp$ret$0;
  $l$block_0: {
    // Inline function 'kotlin.collections.all' call
    var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
    var tmp;
    if (isInterface(this_0, Collection)) {
      tmp = this_0.f1();
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$0 = true;
      break $l$block_0;
    }
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlin.UByteArray.containsAll.<anonymous>' call
      var tmp_0;
      if (element instanceof UByte) {
        var tmp_1 = _UByteArray___get_storage__impl__d4kctt($this);
        // Inline function 'kotlin.UByte.toByte' call
        var this_1 = element.hl_1;
        var tmp$ret$1 = _UByte___get_data__impl__jof9qr(this_1);
        tmp_0 = contains_3(tmp_1, tmp$ret$1);
      } else {
        tmp_0 = false;
      }
      if (!tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
    }
    tmp$ret$0 = true;
  }
  return tmp$ret$0;
}
function UByteArray__containsAll_impl_v9s6dj_0($this, elements) {
  return UByteArray__containsAll_impl_v9s6dj($this.ml_1, elements);
}
function UByteArray__isEmpty_impl_nbfqsa($this) {
  return _UByteArray___get_storage__impl__d4kctt($this).length === 0;
}
function UByteArray__toString_impl_ukpl97($this) {
  return 'UByteArray(storage=' + toString_1($this) + ')';
}
function UByteArray__hashCode_impl_ip8jx2($this) {
  return hashCode($this);
}
function UByteArray__equals_impl_roka4u($this, other) {
  if (!(other instanceof UByteArray))
    return false;
  var tmp0_other_with_cast = other instanceof UByteArray ? other.ml_1 : THROW_CCE();
  if (!equals($this, tmp0_other_with_cast))
    return false;
  return true;
}
function _UInt___init__impl__l7qpdl(data) {
  return data;
}
function _UInt___get_data__impl__f0vqqw($this) {
  return $this;
}
var Companion_instance_16;
function Companion_getInstance_16() {
  if (Companion_instance_16 === VOID)
    new Companion_16();
  return Companion_instance_16;
}
function UInt__compareTo_impl_yacclj($this, other) {
  return uintCompare(_UInt___get_data__impl__f0vqqw($this), _UInt___get_data__impl__f0vqqw(other));
}
function UInt__compareTo_impl_yacclj_0($this, other) {
  return UInt__compareTo_impl_yacclj($this.sl_1, other instanceof UInt ? other.sl_1 : THROW_CCE());
}
function UInt__toString_impl_dbgl21($this) {
  // Inline function 'kotlin.uintToString' call
  // Inline function 'kotlin.uintToLong' call
  var value = _UInt___get_data__impl__f0vqqw($this);
  return toLong(value).p3(new Long(-1, 0)).toString();
}
function UInt__hashCode_impl_z2mhuw($this) {
  return $this;
}
function UInt__equals_impl_ffdoxg($this, other) {
  if (!(other instanceof UInt))
    return false;
  if (!($this === (other instanceof UInt ? other.sl_1 : THROW_CCE())))
    return false;
  return true;
}
function _UIntArray___init__impl__ghjpc6(storage) {
  return storage;
}
function _UIntArray___get_storage__impl__92a0v0($this) {
  return $this;
}
function _UIntArray___init__impl__ghjpc6_0(size) {
  return _UIntArray___init__impl__ghjpc6(new Int32Array(size));
}
function UIntArray__get_impl_gp5kza($this, index) {
  // Inline function 'kotlin.toUInt' call
  var this_0 = _UIntArray___get_storage__impl__92a0v0($this)[index];
  return _UInt___init__impl__l7qpdl(this_0);
}
function UIntArray__set_impl_7f2zu2($this, index, value) {
  var tmp = _UIntArray___get_storage__impl__92a0v0($this);
  // Inline function 'kotlin.UInt.toInt' call
  tmp[index] = _UInt___get_data__impl__f0vqqw(value);
}
function _UIntArray___get_size__impl__r6l8ci($this) {
  return _UIntArray___get_storage__impl__92a0v0($this).length;
}
function UIntArray__iterator_impl_tkdv7k($this) {
  return new Iterator_0(_UIntArray___get_storage__impl__92a0v0($this));
}
function UIntArray__containsAll_impl_414g22($this, elements) {
  var tmp$ret$0;
  $l$block_0: {
    // Inline function 'kotlin.collections.all' call
    var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
    var tmp;
    if (isInterface(this_0, Collection)) {
      tmp = this_0.f1();
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$0 = true;
      break $l$block_0;
    }
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlin.UIntArray.containsAll.<anonymous>' call
      var tmp_0;
      if (element instanceof UInt) {
        var tmp_1 = _UIntArray___get_storage__impl__92a0v0($this);
        // Inline function 'kotlin.UInt.toInt' call
        var this_1 = element.sl_1;
        var tmp$ret$1 = _UInt___get_data__impl__f0vqqw(this_1);
        tmp_0 = contains_1(tmp_1, tmp$ret$1);
      } else {
        tmp_0 = false;
      }
      if (!tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
    }
    tmp$ret$0 = true;
  }
  return tmp$ret$0;
}
function UIntArray__containsAll_impl_414g22_0($this, elements) {
  return UIntArray__containsAll_impl_414g22($this.xl_1, elements);
}
function UIntArray__isEmpty_impl_vd8j4n($this) {
  return _UIntArray___get_storage__impl__92a0v0($this).length === 0;
}
function UIntArray__toString_impl_3zy802($this) {
  return 'UIntArray(storage=' + toString_1($this) + ')';
}
function UIntArray__hashCode_impl_hr7ost($this) {
  return hashCode($this);
}
function UIntArray__equals_impl_flcmof($this, other) {
  if (!(other instanceof UIntArray))
    return false;
  var tmp0_other_with_cast = other instanceof UIntArray ? other.xl_1 : THROW_CCE();
  if (!equals($this, tmp0_other_with_cast))
    return false;
  return true;
}
function _ULong___init__impl__c78o9k(data) {
  return data;
}
function _ULong___get_data__impl__fggpzb($this) {
  return $this;
}
var Companion_instance_17;
function Companion_getInstance_17() {
  if (Companion_instance_17 === VOID)
    new Companion_17();
  return Companion_instance_17;
}
function ULong__compareTo_impl_38i7tu($this, other) {
  return ulongCompare(_ULong___get_data__impl__fggpzb($this), _ULong___get_data__impl__fggpzb(other));
}
function ULong__compareTo_impl_38i7tu_0($this, other) {
  return ULong__compareTo_impl_38i7tu($this.dm_1, other instanceof ULong ? other.dm_1 : THROW_CCE());
}
function ULong__toString_impl_f9au7k($this) {
  // Inline function 'kotlin.ulongToString' call
  var value = _ULong___get_data__impl__fggpzb($this);
  return ulongToString(value, 10);
}
function ULong__hashCode_impl_6hv2lb($this) {
  return $this.hashCode();
}
function ULong__equals_impl_o0gnyb($this, other) {
  if (!(other instanceof ULong))
    return false;
  var tmp0_other_with_cast = other instanceof ULong ? other.dm_1 : THROW_CCE();
  if (!$this.equals(tmp0_other_with_cast))
    return false;
  return true;
}
function _ULongArray___init__impl__twm1l3(storage) {
  return storage;
}
function _ULongArray___get_storage__impl__28e64j($this) {
  return $this;
}
function _ULongArray___init__impl__twm1l3_0(size) {
  return _ULongArray___init__impl__twm1l3(longArray(size));
}
function ULongArray__get_impl_pr71q9($this, index) {
  // Inline function 'kotlin.toULong' call
  var this_0 = _ULongArray___get_storage__impl__28e64j($this)[index];
  return _ULong___init__impl__c78o9k(this_0);
}
function ULongArray__set_impl_z19mvh($this, index, value) {
  var tmp = _ULongArray___get_storage__impl__28e64j($this);
  // Inline function 'kotlin.ULong.toLong' call
  tmp[index] = _ULong___get_data__impl__fggpzb(value);
}
function _ULongArray___get_size__impl__ju6dtr($this) {
  return _ULongArray___get_storage__impl__28e64j($this).length;
}
function ULongArray__iterator_impl_cq4d2h($this) {
  return new Iterator_1(_ULongArray___get_storage__impl__28e64j($this));
}
function ULongArray__containsAll_impl_xx8ztf($this, elements) {
  var tmp$ret$0;
  $l$block_0: {
    // Inline function 'kotlin.collections.all' call
    var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
    var tmp;
    if (isInterface(this_0, Collection)) {
      tmp = this_0.f1();
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$0 = true;
      break $l$block_0;
    }
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlin.ULongArray.containsAll.<anonymous>' call
      var tmp_0;
      if (element instanceof ULong) {
        var tmp_1 = _ULongArray___get_storage__impl__28e64j($this);
        // Inline function 'kotlin.ULong.toLong' call
        var this_1 = element.dm_1;
        var tmp$ret$1 = _ULong___get_data__impl__fggpzb(this_1);
        tmp_0 = contains_0(tmp_1, tmp$ret$1);
      } else {
        tmp_0 = false;
      }
      if (!tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
    }
    tmp$ret$0 = true;
  }
  return tmp$ret$0;
}
function ULongArray__containsAll_impl_xx8ztf_0($this, elements) {
  return ULongArray__containsAll_impl_xx8ztf($this.im_1, elements);
}
function ULongArray__isEmpty_impl_c3yngu($this) {
  return _ULongArray___get_storage__impl__28e64j($this).length === 0;
}
function ULongArray__toString_impl_wqk1p5($this) {
  return 'ULongArray(storage=' + toString_1($this) + ')';
}
function ULongArray__hashCode_impl_aze4wa($this) {
  return hashCode($this);
}
function ULongArray__equals_impl_vwitwa($this, other) {
  if (!(other instanceof ULongArray))
    return false;
  var tmp0_other_with_cast = other instanceof ULongArray ? other.im_1 : THROW_CCE();
  if (!equals($this, tmp0_other_with_cast))
    return false;
  return true;
}
function _UShort___init__impl__jigrne(data) {
  return data;
}
function _UShort___get_data__impl__g0245($this) {
  return $this;
}
var Companion_instance_18;
function Companion_getInstance_18() {
  if (Companion_instance_18 === VOID)
    new Companion_18();
  return Companion_instance_18;
}
function UShort__compareTo_impl_1pfgyc($this, other) {
  // Inline function 'kotlin.UShort.toInt' call
  var tmp = _UShort___get_data__impl__g0245($this) & 65535;
  // Inline function 'kotlin.UShort.toInt' call
  var tmp$ret$1 = _UShort___get_data__impl__g0245(other) & 65535;
  return compareTo(tmp, tmp$ret$1);
}
function UShort__compareTo_impl_1pfgyc_0($this, other) {
  return UShort__compareTo_impl_1pfgyc($this.om_1, other instanceof UShort ? other.om_1 : THROW_CCE());
}
function UShort__toString_impl_edaoee($this) {
  // Inline function 'kotlin.UShort.toInt' call
  return (_UShort___get_data__impl__g0245($this) & 65535).toString();
}
function UShort__hashCode_impl_ywngrv($this) {
  return $this;
}
function UShort__equals_impl_7t9pdz($this, other) {
  if (!(other instanceof UShort))
    return false;
  if (!($this === (other instanceof UShort ? other.om_1 : THROW_CCE())))
    return false;
  return true;
}
function _UShortArray___init__impl__9b26ef(storage) {
  return storage;
}
function _UShortArray___get_storage__impl__t2jpv5($this) {
  return $this;
}
function _UShortArray___init__impl__9b26ef_0(size) {
  return _UShortArray___init__impl__9b26ef(new Int16Array(size));
}
function UShortArray__get_impl_fnbhmx($this, index) {
  // Inline function 'kotlin.toUShort' call
  var this_0 = _UShortArray___get_storage__impl__t2jpv5($this)[index];
  return _UShort___init__impl__jigrne(this_0);
}
function UShortArray__set_impl_6d8whp($this, index, value) {
  var tmp = _UShortArray___get_storage__impl__t2jpv5($this);
  // Inline function 'kotlin.UShort.toShort' call
  tmp[index] = _UShort___get_data__impl__g0245(value);
}
function _UShortArray___get_size__impl__jqto1b($this) {
  return _UShortArray___get_storage__impl__t2jpv5($this).length;
}
function UShortArray__iterator_impl_ktpenn($this) {
  return new Iterator_2(_UShortArray___get_storage__impl__t2jpv5($this));
}
function UShortArray__containsAll_impl_vlaaxp($this, elements) {
  var tmp$ret$0;
  $l$block_0: {
    // Inline function 'kotlin.collections.all' call
    var this_0 = isInterface(elements, Collection) ? elements : THROW_CCE();
    var tmp;
    if (isInterface(this_0, Collection)) {
      tmp = this_0.f1();
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$0 = true;
      break $l$block_0;
    }
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlin.UShortArray.containsAll.<anonymous>' call
      var tmp_0;
      if (element instanceof UShort) {
        var tmp_1 = _UShortArray___get_storage__impl__t2jpv5($this);
        // Inline function 'kotlin.UShort.toShort' call
        var this_1 = element.om_1;
        var tmp$ret$1 = _UShort___get_data__impl__g0245(this_1);
        tmp_0 = contains_2(tmp_1, tmp$ret$1);
      } else {
        tmp_0 = false;
      }
      if (!tmp_0) {
        tmp$ret$0 = false;
        break $l$block_0;
      }
    }
    tmp$ret$0 = true;
  }
  return tmp$ret$0;
}
function UShortArray__containsAll_impl_vlaaxp_0($this, elements) {
  return UShortArray__containsAll_impl_vlaaxp($this.tm_1, elements);
}
function UShortArray__isEmpty_impl_cdd9l0($this) {
  return _UShortArray___get_storage__impl__t2jpv5($this).length === 0;
}
function UShortArray__toString_impl_omz03z($this) {
  return 'UShortArray(storage=' + toString_1($this) + ')';
}
function UShortArray__hashCode_impl_2vt3b4($this) {
  return hashCode($this);
}
function UShortArray__equals_impl_tyc3mk($this, other) {
  if (!(other instanceof UShortArray))
    return false;
  var tmp0_other_with_cast = other instanceof UShortArray ? other.tm_1 : THROW_CCE();
  if (!equals($this, tmp0_other_with_cast))
    return false;
  return true;
}
function toUInt(_this__u8e3s4) {
  var tmp0_elvis_lhs = toUIntOrNull(_this__u8e3s4);
  var tmp;
  var tmp_0 = tmp0_elvis_lhs;
  if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
    numberFormatError(_this__u8e3s4);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function toULong(_this__u8e3s4) {
  var tmp0_elvis_lhs = toULongOrNull(_this__u8e3s4);
  var tmp;
  var tmp_0 = tmp0_elvis_lhs;
  if ((tmp_0 == null ? null : new ULong(tmp_0)) == null) {
    numberFormatError(_this__u8e3s4);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function toUByte(_this__u8e3s4) {
  var tmp0_elvis_lhs = toUByteOrNull(_this__u8e3s4);
  var tmp;
  var tmp_0 = tmp0_elvis_lhs;
  if ((tmp_0 == null ? null : new UByte(tmp_0)) == null) {
    numberFormatError(_this__u8e3s4);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function toUShort(_this__u8e3s4) {
  var tmp0_elvis_lhs = toUShortOrNull(_this__u8e3s4);
  var tmp;
  var tmp_0 = tmp0_elvis_lhs;
  if ((tmp_0 == null ? null : new UShort(tmp_0)) == null) {
    numberFormatError(_this__u8e3s4);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function toULongOrNull(_this__u8e3s4) {
  return toULongOrNull_0(_this__u8e3s4, 10);
}
function toUIntOrNull(_this__u8e3s4) {
  return toUIntOrNull_0(_this__u8e3s4, 10);
}
function toUByteOrNull(_this__u8e3s4) {
  return toUByteOrNull_0(_this__u8e3s4, 10);
}
function toUShortOrNull(_this__u8e3s4) {
  return toUShortOrNull_0(_this__u8e3s4, 10);
}
function toULongOrNull_0(_this__u8e3s4, radix) {
  checkRadix(radix);
  var length = _this__u8e3s4.length;
  if (length === 0)
    return null;
  var limit = _ULong___init__impl__c78o9k(new Long(-1, -1));
  var start;
  var firstChar = charSequenceGet(_this__u8e3s4, 0);
  if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
    if (length === 1 || !(firstChar === _Char___init__impl__6a9atx(43)))
      return null;
    start = 1;
  } else {
    start = 0;
  }
  var limitForMaxRadix = _ULong___init__impl__c78o9k(new Long(477218588, 119304647));
  var limitBeforeMul = limitForMaxRadix;
  // Inline function 'kotlin.toULong' call
  var uradix = _ULong___init__impl__c78o9k(toLong(radix));
  var result = _ULong___init__impl__c78o9k(new Long(0, 0));
  var inductionVariable = start;
  if (inductionVariable < length)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
      if (digit < 0)
        return null;
      // Inline function 'kotlin.ULong.compareTo' call
      var this_0 = result;
      var other = limitBeforeMul;
      if (ulongCompare(_ULong___get_data__impl__fggpzb(this_0), _ULong___get_data__impl__fggpzb(other)) > 0) {
        if (equals(limitBeforeMul, limitForMaxRadix)) {
          // Inline function 'kotlin.ULong.div' call
          limitBeforeMul = ulongDivide(limit, uradix);
          // Inline function 'kotlin.ULong.compareTo' call
          var this_1 = result;
          var other_0 = limitBeforeMul;
          if (ulongCompare(_ULong___get_data__impl__fggpzb(this_1), _ULong___get_data__impl__fggpzb(other_0)) > 0) {
            return null;
          }
        } else {
          return null;
        }
      }
      // Inline function 'kotlin.ULong.times' call
      var this_2 = result;
      result = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_2).f3(_ULong___get_data__impl__fggpzb(uradix)));
      var beforeAdding = result;
      // Inline function 'kotlin.ULong.plus' call
      var this_3 = result;
      // Inline function 'kotlin.toUInt' call
      // Inline function 'kotlin.ULong.plus' call
      // Inline function 'kotlin.UInt.toULong' call
      var this_4 = _UInt___init__impl__l7qpdl(digit);
      // Inline function 'kotlin.uintToULong' call
      // Inline function 'kotlin.uintToLong' call
      var value = _UInt___get_data__impl__f0vqqw(this_4);
      var tmp$ret$6 = toLong(value).p3(new Long(-1, 0));
      var other_1 = _ULong___init__impl__c78o9k(tmp$ret$6);
      result = _ULong___init__impl__c78o9k(_ULong___get_data__impl__fggpzb(this_3).d3(_ULong___get_data__impl__fggpzb(other_1)));
      // Inline function 'kotlin.ULong.compareTo' call
      var this_5 = result;
      if (ulongCompare(_ULong___get_data__impl__fggpzb(this_5), _ULong___get_data__impl__fggpzb(beforeAdding)) < 0)
        return null;
    }
     while (inductionVariable < length);
  return result;
}
function toUIntOrNull_0(_this__u8e3s4, radix) {
  checkRadix(radix);
  var length = _this__u8e3s4.length;
  if (length === 0)
    return null;
  var limit = _UInt___init__impl__l7qpdl(-1);
  var start;
  var firstChar = charSequenceGet(_this__u8e3s4, 0);
  if (Char__compareTo_impl_ypi4mb(firstChar, _Char___init__impl__6a9atx(48)) < 0) {
    if (length === 1 || !(firstChar === _Char___init__impl__6a9atx(43)))
      return null;
    start = 1;
  } else {
    start = 0;
  }
  var limitForMaxRadix = _UInt___init__impl__l7qpdl(119304647);
  var limitBeforeMul = limitForMaxRadix;
  // Inline function 'kotlin.toUInt' call
  var uradix = _UInt___init__impl__l7qpdl(radix);
  var result = _UInt___init__impl__l7qpdl(0);
  var inductionVariable = start;
  if (inductionVariable < length)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var digit = digitOf(charSequenceGet(_this__u8e3s4, i), radix);
      if (digit < 0)
        return null;
      // Inline function 'kotlin.UInt.compareTo' call
      var this_0 = result;
      var other = limitBeforeMul;
      if (uintCompare(_UInt___get_data__impl__f0vqqw(this_0), _UInt___get_data__impl__f0vqqw(other)) > 0) {
        if (limitBeforeMul === limitForMaxRadix) {
          // Inline function 'kotlin.UInt.div' call
          limitBeforeMul = uintDivide(limit, uradix);
          // Inline function 'kotlin.UInt.compareTo' call
          var this_1 = result;
          var other_0 = limitBeforeMul;
          if (uintCompare(_UInt___get_data__impl__f0vqqw(this_1), _UInt___get_data__impl__f0vqqw(other_0)) > 0) {
            return null;
          }
        } else {
          return null;
        }
      }
      // Inline function 'kotlin.UInt.times' call
      var this_2 = result;
      result = _UInt___init__impl__l7qpdl(imul_0(_UInt___get_data__impl__f0vqqw(this_2), _UInt___get_data__impl__f0vqqw(uradix)));
      var beforeAdding = result;
      // Inline function 'kotlin.UInt.plus' call
      var this_3 = result;
      // Inline function 'kotlin.toUInt' call
      var other_1 = _UInt___init__impl__l7qpdl(digit);
      result = _UInt___init__impl__l7qpdl(_UInt___get_data__impl__f0vqqw(this_3) + _UInt___get_data__impl__f0vqqw(other_1) | 0);
      // Inline function 'kotlin.UInt.compareTo' call
      var this_4 = result;
      if (uintCompare(_UInt___get_data__impl__f0vqqw(this_4), _UInt___get_data__impl__f0vqqw(beforeAdding)) < 0)
        return null;
    }
     while (inductionVariable < length);
  return result;
}
function toUByteOrNull_0(_this__u8e3s4, radix) {
  var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
  var tmp;
  var tmp_0 = tmp0_elvis_lhs;
  if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
    return null;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var int = tmp;
  // Inline function 'kotlin.UInt.compareTo' call
  // Inline function 'kotlin.UInt.compareTo' call
  // Inline function 'kotlin.UByte.toUInt' call
  var this_0 = _UByte___init__impl__g9hnc4(-1);
  var other = _UInt___init__impl__l7qpdl(_UByte___get_data__impl__jof9qr(this_0) & 255);
  if (uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(other)) > 0)
    return null;
  // Inline function 'kotlin.UInt.toUByte' call
  // Inline function 'kotlin.toUByte' call
  var this_1 = _UInt___get_data__impl__f0vqqw(int);
  return _UByte___init__impl__g9hnc4(toByte(this_1));
}
function toUShortOrNull_0(_this__u8e3s4, radix) {
  var tmp0_elvis_lhs = toUIntOrNull_0(_this__u8e3s4, radix);
  var tmp;
  var tmp_0 = tmp0_elvis_lhs;
  if ((tmp_0 == null ? null : new UInt(tmp_0)) == null) {
    return null;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var int = tmp;
  // Inline function 'kotlin.UInt.compareTo' call
  // Inline function 'kotlin.UInt.compareTo' call
  // Inline function 'kotlin.UShort.toUInt' call
  var this_0 = _UShort___init__impl__jigrne(-1);
  var other = _UInt___init__impl__l7qpdl(_UShort___get_data__impl__g0245(this_0) & 65535);
  if (uintCompare(_UInt___get_data__impl__f0vqqw(int), _UInt___get_data__impl__f0vqqw(other)) > 0)
    return null;
  // Inline function 'kotlin.UInt.toUShort' call
  // Inline function 'kotlin.toUShort' call
  var this_1 = _UInt___get_data__impl__f0vqqw(int);
  return _UShort___init__impl__jigrne(toShort(this_1));
}
//region block: post-declaration
initMetadataForInterface(CharSequence, 'CharSequence');
initMetadataForInterface(Comparable, 'Comparable');
initMetadataForClass(Number_0, 'Number');
initMetadataForObject(Unit, 'Unit');
initMetadataForClass(_no_name_provided__qut3iv);
initMetadataForCompanion(Companion);
initMetadataForClass(Char, 'Char', VOID, VOID, [Comparable]);
initMetadataForInterface(Collection, 'Collection');
initMetadataForInterface(KtList, 'List', VOID, VOID, [Collection]);
initMetadataForInterface(KtSet, 'Set', VOID, VOID, [Collection]);
initMetadataForInterface(KtMutableSet, 'MutableSet', VOID, VOID, [KtSet, Collection]);
initMetadataForInterface(KtMutableList, 'MutableList', VOID, VOID, [KtList, Collection]);
initMetadataForInterface(Entry, 'Entry');
initMetadataForInterface(KtMap, 'Map');
initMetadataForInterface(KtMutableMap, 'MutableMap', VOID, VOID, [KtMap]);
initMetadataForCompanion(Companion_0);
initMetadataForClass(Enum, 'Enum', VOID, VOID, [Comparable]);
initMetadataForCompanion(Companion_1);
initMetadataForClass(Long, 'Long', VOID, VOID, [Number_0, Comparable]);
initMetadataForClass(arrayIterator$1);
initMetadataForObject(ByteCompanionObject, 'ByteCompanionObject');
initMetadataForObject(ShortCompanionObject, 'ShortCompanionObject');
initMetadataForObject(IntCompanionObject, 'IntCompanionObject');
initMetadataForObject(FloatCompanionObject, 'FloatCompanionObject');
initMetadataForObject(DoubleCompanionObject, 'DoubleCompanionObject');
initMetadataForObject(StringCompanionObject, 'StringCompanionObject');
initMetadataForObject(BooleanCompanionObject, 'BooleanCompanionObject');
initMetadataForObject(Digit, 'Digit');
initMetadataForObject(Letter, 'Letter');
initMetadataForObject(OtherLowercase, 'OtherLowercase');
initMetadataForClass(AbstractCollection, 'AbstractCollection', VOID, VOID, [Collection]);
initMetadataForClass(AbstractMutableCollection, 'AbstractMutableCollection', VOID, VOID, [AbstractCollection, Collection]);
initMetadataForClass(IteratorImpl, 'IteratorImpl');
initMetadataForClass(ListIteratorImpl, 'ListIteratorImpl');
initMetadataForClass(AbstractMutableList, 'AbstractMutableList', VOID, VOID, [AbstractMutableCollection, KtMutableList]);
initMetadataForClass(AbstractMap, 'AbstractMap', VOID, VOID, [KtMap]);
initMetadataForClass(AbstractMutableMap, 'AbstractMutableMap', VOID, VOID, [AbstractMap, KtMutableMap]);
initMetadataForClass(AbstractMutableSet, 'AbstractMutableSet', VOID, VOID, [AbstractMutableCollection, KtMutableSet]);
initMetadataForCompanion(Companion_2);
initMetadataForClass(ArrayList, 'ArrayList', ArrayList.e1, VOID, [AbstractMutableList, KtMutableList]);
initMetadataForClass(HashMap, 'HashMap', HashMap.k7, VOID, [AbstractMutableMap, KtMutableMap]);
initMetadataForClass(HashMapKeys, 'HashMapKeys', VOID, VOID, [KtMutableSet, AbstractMutableSet]);
initMetadataForClass(HashMapValues, 'HashMapValues', VOID, VOID, [Collection, AbstractMutableCollection]);
initMetadataForClass(HashMapEntrySetBase, 'HashMapEntrySetBase', VOID, VOID, [KtMutableSet, AbstractMutableSet]);
initMetadataForClass(HashMapEntrySet, 'HashMapEntrySet');
initMetadataForClass(HashMapKeysDefault$iterator$1);
initMetadataForClass(HashMapKeysDefault, 'HashMapKeysDefault');
initMetadataForClass(HashMapValuesDefault$iterator$1);
initMetadataForClass(HashMapValuesDefault, 'HashMapValuesDefault');
initMetadataForClass(HashSet, 'HashSet', HashSet.a9, VOID, [AbstractMutableSet, KtMutableSet]);
initMetadataForCompanion(Companion_3);
initMetadataForClass(Itr, 'Itr');
initMetadataForClass(KeysItr, 'KeysItr');
initMetadataForClass(ValuesItr, 'ValuesItr');
initMetadataForClass(EntriesItr, 'EntriesItr');
initMetadataForClass(EntryRef, 'EntryRef', VOID, VOID, [Entry]);
initMetadataForInterface(InternalMap, 'InternalMap');
protoOf(InternalHashMap).u8 = containsAllEntries;
initMetadataForClass(InternalHashMap, 'InternalHashMap', InternalHashMap.v7, VOID, [InternalMap]);
initMetadataForClass(LinkedHashMap, 'LinkedHashMap', LinkedHashMap.ya, VOID, [HashMap, KtMutableMap]);
initMetadataForClass(LinkedHashSet, 'LinkedHashSet', LinkedHashSet.d1, VOID, [HashSet, KtMutableSet]);
initMetadataForClass(BaseOutput, 'BaseOutput');
initMetadataForClass(NodeJsOutput, 'NodeJsOutput');
initMetadataForClass(BufferedOutput, 'BufferedOutput', BufferedOutput);
initMetadataForClass(BufferedOutputToConsoleLog, 'BufferedOutputToConsoleLog', BufferedOutputToConsoleLog);
initMetadataForInterface(Continuation, 'Continuation');
initMetadataForClass(InterceptedCoroutine, 'InterceptedCoroutine', VOID, VOID, [Continuation]);
initMetadataForClass(CoroutineImpl, 'CoroutineImpl', VOID, VOID, [InterceptedCoroutine, Continuation]);
initMetadataForObject(CompletedContinuation, 'CompletedContinuation', VOID, VOID, [Continuation]);
initMetadataForClass(Exception, 'Exception', Exception.cd);
initMetadataForClass(RuntimeException, 'RuntimeException', RuntimeException.fd);
initMetadataForClass(IllegalStateException, 'IllegalStateException', IllegalStateException.gc);
initMetadataForClass(CancellationException, 'CancellationException', CancellationException.fc);
initMetadataForClass(_no_name_provided__qut3iv_0);
initMetadataForClass(_no_name_provided__qut3iv_1, VOID, VOID, VOID, [Continuation]);
initMetadataForClass(IllegalArgumentException, 'IllegalArgumentException', IllegalArgumentException.ed);
initMetadataForClass(IndexOutOfBoundsException, 'IndexOutOfBoundsException', IndexOutOfBoundsException.ld);
initMetadataForClass(UnsupportedOperationException, 'UnsupportedOperationException', UnsupportedOperationException.c7);
initMetadataForClass(NoSuchElementException, 'NoSuchElementException', NoSuchElementException.r5);
initMetadataForClass(Error_0, 'Error', Error_0.od);
initMetadataForClass(AssertionError, 'AssertionError', AssertionError.td);
initMetadataForClass(ArithmeticException, 'ArithmeticException', ArithmeticException.yd);
initMetadataForClass(ConcurrentModificationException, 'ConcurrentModificationException', ConcurrentModificationException.v9);
initMetadataForClass(NumberFormatException, 'NumberFormatException', NumberFormatException.ee);
initMetadataForClass(NullPointerException, 'NullPointerException', NullPointerException.f4);
initMetadataForClass(NoWhenBranchMatchedException, 'NoWhenBranchMatchedException', NoWhenBranchMatchedException.j4);
initMetadataForClass(ClassCastException, 'ClassCastException', ClassCastException.n4);
initMetadataForClass(UninitializedPropertyAccessException, 'UninitializedPropertyAccessException', UninitializedPropertyAccessException.ge);
initMetadataForInterface(KClass, 'KClass');
initMetadataForClass(KClassImpl, 'KClassImpl', VOID, VOID, [KClass]);
initMetadataForObject(NothingKClassImpl, 'NothingKClassImpl');
initMetadataForClass(ErrorKClass, 'ErrorKClass', ErrorKClass, VOID, [KClass]);
initMetadataForClass(PrimitiveKClassImpl, 'PrimitiveKClassImpl');
initMetadataForClass(SimpleKClassImpl, 'SimpleKClassImpl');
initMetadataForInterface(KProperty1, 'KProperty1');
initMetadataForClass(KTypeImpl, 'KTypeImpl');
initMetadataForObject(PrimitiveClasses, 'PrimitiveClasses');
initMetadataForClass(CharacterCodingException, 'CharacterCodingException', CharacterCodingException.vf);
initMetadataForClass(StringBuilder, 'StringBuilder', StringBuilder.u, VOID, [CharSequence]);
initMetadataForCompanion(Companion_4);
initMetadataForClass(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0');
initMetadataForClass(DurationUnit, 'DurationUnit');
initMetadataForCompanion(Companion_5);
initMetadataForClass(AbstractMap$keys$1$iterator$1);
initMetadataForClass(AbstractMap$values$1$iterator$1);
initMetadataForCompanion(Companion_6);
initMetadataForClass(AbstractSet, 'AbstractSet', VOID, VOID, [AbstractCollection, KtSet]);
initMetadataForClass(AbstractMap$keys$1);
initMetadataForClass(AbstractMap$values$1);
initMetadataForCompanion(Companion_7);
initMetadataForCompanion(Companion_8);
initMetadataForClass(ArrayDeque, 'ArrayDeque', ArrayDeque.ch);
initMetadataForObject(EmptyList, 'EmptyList', VOID, VOID, [KtList]);
initMetadataForClass(ArrayAsCollection, 'ArrayAsCollection', VOID, VOID, [Collection]);
initMetadataForObject(EmptyIterator, 'EmptyIterator');
initMetadataForClass(IndexedValue, 'IndexedValue');
initMetadataForClass(IndexingIterable, 'IndexingIterable');
initMetadataForClass(IndexingIterator, 'IndexingIterator');
initMetadataForInterface(MapWithDefault, 'MapWithDefault', VOID, VOID, [KtMap]);
initMetadataForObject(EmptyMap, 'EmptyMap', VOID, VOID, [KtMap]);
initMetadataForClass(IntIterator, 'IntIterator');
initMetadataForClass(CharIterator, 'CharIterator');
initMetadataForClass(SequenceScope, 'SequenceScope', VOID, VOID, VOID, [1]);
initMetadataForClass(SequenceBuilderIterator, 'SequenceBuilderIterator', SequenceBuilderIterator, VOID, [SequenceScope, Continuation], [1]);
initMetadataForClass(TransformingSequence$iterator$1);
initMetadataForClass(TransformingSequence, 'TransformingSequence');
initMetadataForObject(EmptySet, 'EmptySet', VOID, VOID, [KtSet]);
initMetadataForObject(Key, 'Key');
initMetadataForInterface(CoroutineContext, 'CoroutineContext');
initMetadataForInterface(Element, 'Element', VOID, VOID, [CoroutineContext]);
initMetadataForInterface(ContinuationInterceptor, 'ContinuationInterceptor', VOID, VOID, [Element]);
initMetadataForObject(EmptyCoroutineContext, 'EmptyCoroutineContext', VOID, VOID, [CoroutineContext]);
protoOf(CombinedContext).xi = plus;
initMetadataForClass(CombinedContext, 'CombinedContext', VOID, VOID, [CoroutineContext]);
initMetadataForClass(AbstractCoroutineContextKey, 'AbstractCoroutineContextKey');
protoOf(AbstractCoroutineContextElement).yb = get;
protoOf(AbstractCoroutineContextElement).wi = fold;
protoOf(AbstractCoroutineContextElement).vi = minusKey;
protoOf(AbstractCoroutineContextElement).xi = plus;
initMetadataForClass(AbstractCoroutineContextElement, 'AbstractCoroutineContextElement', VOID, VOID, [Element]);
initMetadataForClass(CoroutineSingletons, 'CoroutineSingletons');
initMetadataForCompanion(Companion_9);
initMetadataForClass(IntProgression, 'IntProgression');
initMetadataForClass(IntRange, 'IntRange');
initMetadataForCompanion(Companion_10);
initMetadataForClass(CharProgression, 'CharProgression');
initMetadataForClass(CharRange, 'CharRange');
initMetadataForClass(IntProgressionIterator, 'IntProgressionIterator');
initMetadataForClass(CharProgressionIterator, 'CharProgressionIterator');
initMetadataForCompanion(Companion_11);
initMetadataForCompanion(Companion_12);
initMetadataForInterface(KTypeParameter, 'KTypeParameter');
initMetadataForClass(DelimitedRangesSequence$iterator$1);
initMetadataForClass(DelimitedRangesSequence, 'DelimitedRangesSequence');
initMetadataForCompanion(Companion_13);
initMetadataForClass(Duration, 'Duration', VOID, VOID, [Comparable]);
initMetadataForClass(DeepRecursiveScope, 'DeepRecursiveScope', VOID, VOID, VOID, [1]);
initMetadataForClass(DeepRecursiveFunction, 'DeepRecursiveFunction');
initMetadataForClass(DeepRecursiveScopeImpl, 'DeepRecursiveScopeImpl', VOID, VOID, [DeepRecursiveScope, Continuation], [1]);
initMetadataForClass(LazyThreadSafetyMode, 'LazyThreadSafetyMode');
initMetadataForClass(UnsafeLazyImpl, 'UnsafeLazyImpl');
initMetadataForObject(UNINITIALIZED_VALUE, 'UNINITIALIZED_VALUE');
initMetadataForCompanion(Companion_14);
initMetadataForClass(Failure, 'Failure');
initMetadataForClass(Result, 'Result');
initMetadataForClass(NotImplementedError, 'NotImplementedError', NotImplementedError.oc);
initMetadataForClass(Pair, 'Pair');
initMetadataForClass(Triple, 'Triple');
initMetadataForCompanion(Companion_15);
initMetadataForClass(UByte, 'UByte', VOID, VOID, [Comparable]);
initMetadataForClass(Iterator, 'Iterator');
initMetadataForClass(UByteArray, 'UByteArray', VOID, VOID, [Collection]);
initMetadataForCompanion(Companion_16);
initMetadataForClass(UInt, 'UInt', VOID, VOID, [Comparable]);
initMetadataForClass(Iterator_0, 'Iterator');
initMetadataForClass(UIntArray, 'UIntArray', VOID, VOID, [Collection]);
initMetadataForCompanion(Companion_17);
initMetadataForClass(ULong, 'ULong', VOID, VOID, [Comparable]);
initMetadataForClass(Iterator_1, 'Iterator');
initMetadataForClass(ULongArray, 'ULongArray', VOID, VOID, [Collection]);
initMetadataForCompanion(Companion_18);
initMetadataForClass(UShort, 'UShort', VOID, VOID, [Comparable]);
initMetadataForClass(Iterator_2, 'Iterator');
initMetadataForClass(UShortArray, 'UShortArray', VOID, VOID, [Collection]);
//endregion
//region block: init
Unit_instance = new Unit();
Companion_instance_0 = new Companion_0();
ByteCompanionObject_instance = new ByteCompanionObject();
ShortCompanionObject_instance = new ShortCompanionObject();
IntCompanionObject_instance = new IntCompanionObject();
FloatCompanionObject_instance = new FloatCompanionObject();
DoubleCompanionObject_instance = new DoubleCompanionObject();
StringCompanionObject_instance = new StringCompanionObject();
BooleanCompanionObject_instance = new BooleanCompanionObject();
_stableSortingIsSupported = null;
Companion_instance_3 = new Companion_3();
CompletedContinuation_instance = new CompletedContinuation();
Companion_instance_5 = new Companion_5();
Companion_instance_6 = new Companion_6();
Companion_instance_7 = new Companion_7();
EmptyIterator_instance = new EmptyIterator();
Key_instance = new Key();
Companion_instance_11 = new Companion_11();
Companion_instance_12 = new Companion_12();
UNINITIALIZED_VALUE_instance = new UNINITIALIZED_VALUE();
Companion_instance_14 = new Companion_14();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=kotlin-kotlin-stdlib.mjs.map


/***/ }),

/***/ "./kotlin/kotlin-web.mjs":
/*!*******************************!*\
  !*** ./kotlin/kotlin-web.mjs ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   fetch1hzbcl89lee4e: () => (/* binding */ fetch_0)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");


//region block: imports
//endregion
//region block: pre-declaration
//endregion
function toAbortSignal(_this__u8e3s4) {
  var controller = new AbortController();
  _this__u8e3s4.as(toAbortSignal$lambda(controller));
  return controller.signal;
}
function toAbortSignal$lambda($controller) {
  return function (it) {
    $controller.abort();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function fetch_0(input, init, $completion) {
  return fetch_1(new Request(input, init), $completion);
}
function fetch_1(input, $completion) {
  // Inline function 'kotlinx.coroutines.suspendCancellableCoroutine.<anonymous>' call
  var cancellable = new _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_1__.CancellableContinuationImpl1cx201opicavg((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)($completion), 1);
  cancellable.pr();
  // Inline function 'web.http.fetch.<anonymous>' call
  // Inline function 'js.objects.jso' call
  // Inline function 'kotlin.apply' call
  // Inline function 'js.objects.jso' call
  var this_0 = {};
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'web.http.fetch.<anonymous>.<anonymous>' call
  this_0.signal = toAbortSignal(cancellable);
  var request = new Request(input, this_0);
  // Inline function 'js.promise.catch' call
  var tmp = fetch(request);
  var this_1 = tmp.then(resume$ref(cancellable));
  var onRejected = resumeWithException$ref(cancellable);
  this_1.catch(onRejected);
  return cancellable.wr();
}
function resume$ref($boundThis) {
  var l = function (p0) {
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.resume1307kgocbn6ch)($boundThis, p0);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
  l.callableName = 'resume';
  return l;
}
function resumeWithException$ref($boundThis) {
  var l = function (p0) {
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.resumeWithExceptionlaw2x581week)($boundThis, p0);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
  l.callableName = 'resumeWithException';
  return l;
}
//region block: exports

//endregion

//# sourceMappingURL=kotlin-web.mjs.map


/***/ }),

/***/ "./kotlin/kotlinx-atomicfu.mjs":
/*!*************************************!*\
  !*** ./kotlin/kotlinx-atomicfu.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   atomic$boolean$1iggki4z65a2h: () => (/* binding */ atomic$boolean$1),
/* harmony export */   atomic$int$11d5swdyn6j0pu: () => (/* binding */ atomic$int$1),
/* harmony export */   atomic$long$129k9zwo6n9ogd: () => (/* binding */ atomic$long$1),
/* harmony export */   atomic$ref$130aurmcwdfdf1: () => (/* binding */ atomic$ref$1)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");

//region block: imports
//endregion
//region block: pre-declaration
class atomicfu$TraceBase {
  atomicfu$Trace$append$1(event) {
  }
  atomicfu$Trace$append$2(event1, event2) {
  }
  atomicfu$Trace$append$3(event1, event2, event3) {
  }
  atomicfu$Trace$append$4(event1, event2, event3, event4) {
  }
}
class None extends atomicfu$TraceBase {
  constructor() {
    None_instance = null;
    super();
    None_instance = this;
  }
}
class AtomicRef {
  constructor(value) {
    this.kotlinx$atomicfu$value = value;
  }
  vm(_set____db54di) {
    this.kotlinx$atomicfu$value = _set____db54di;
  }
  wm() {
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$compareAndSet(expect, update) {
    if (!(this.kotlinx$atomicfu$value === expect))
      return false;
    this.kotlinx$atomicfu$value = update;
    return true;
  }
  atomicfu$getAndSet(value) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = value;
    return oldValue;
  }
  toString() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.kotlinx$atomicfu$value);
  }
}
class AtomicBoolean {
  constructor(value) {
    this.kotlinx$atomicfu$value = value;
  }
  xm(_set____db54di) {
    this.kotlinx$atomicfu$value = _set____db54di;
  }
  wm() {
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$compareAndSet(expect, update) {
    if (!(this.kotlinx$atomicfu$value === expect))
      return false;
    this.kotlinx$atomicfu$value = update;
    return true;
  }
  atomicfu$getAndSet(value) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = value;
    return oldValue;
  }
  toString() {
    return this.kotlinx$atomicfu$value.toString();
  }
}
class AtomicInt {
  constructor(value) {
    this.kotlinx$atomicfu$value = value;
  }
  ym(_set____db54di) {
    this.kotlinx$atomicfu$value = _set____db54di;
  }
  wm() {
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$compareAndSet(expect, update) {
    if (!(this.kotlinx$atomicfu$value === expect))
      return false;
    this.kotlinx$atomicfu$value = update;
    return true;
  }
  atomicfu$getAndSet(value) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = value;
    return oldValue;
  }
  atomicfu$getAndIncrement() {
    var tmp1 = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = tmp1 + 1 | 0;
    return tmp1;
  }
  atomicfu$getAndDecrement() {
    var tmp1 = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = tmp1 - 1 | 0;
    return tmp1;
  }
  atomicfu$getAndAdd(delta) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value + delta | 0;
    return oldValue;
  }
  atomicfu$addAndGet(delta) {
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value + delta | 0;
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$incrementAndGet() {
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value + 1 | 0;
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$decrementAndGet() {
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value - 1 | 0;
    return this.kotlinx$atomicfu$value;
  }
  toString() {
    return this.kotlinx$atomicfu$value.toString();
  }
}
class AtomicLong {
  constructor(value) {
    this.kotlinx$atomicfu$value = value;
  }
  zm(_set____db54di) {
    this.kotlinx$atomicfu$value = _set____db54di;
  }
  wm() {
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$compareAndSet(expect, update) {
    if (!this.kotlinx$atomicfu$value.equals(expect))
      return false;
    this.kotlinx$atomicfu$value = update;
    return true;
  }
  atomicfu$getAndSet(value) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = value;
    return oldValue;
  }
  atomicfu$getAndIncrement$long() {
    var tmp1 = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = tmp1.i3();
    return tmp1;
  }
  atomicfu$getAndDecrement$long() {
    var tmp1 = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = tmp1.j3();
    return tmp1;
  }
  atomicfu$getAndAdd$long(delta) {
    var oldValue = this.kotlinx$atomicfu$value;
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value.d3(delta);
    return oldValue;
  }
  atomicfu$addAndGet$long(delta) {
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value.d3(delta);
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$incrementAndGet$long() {
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value.i3();
    return this.kotlinx$atomicfu$value;
  }
  atomicfu$decrementAndGet$long() {
    this.kotlinx$atomicfu$value = this.kotlinx$atomicfu$value.j3();
    return this.kotlinx$atomicfu$value;
  }
  toString() {
    return this.kotlinx$atomicfu$value.toString();
  }
}
//endregion
var None_instance;
function None_getInstance() {
  if (None_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new None();
  return None_instance;
}
function atomic$ref$1(initial) {
  return atomic$ref$(initial, None_getInstance());
}
function atomic$boolean$1(initial) {
  return atomic$boolean$(initial, None_getInstance());
}
function atomic$int$1(initial) {
  return atomic$int$(initial, None_getInstance());
}
function atomic$long$1(initial) {
  return atomic$long$(initial, None_getInstance());
}
function atomic$ref$(initial, trace) {
  trace = trace === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? None_getInstance() : trace;
  return new AtomicRef(initial);
}
function atomic$boolean$(initial, trace) {
  trace = trace === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? None_getInstance() : trace;
  return new AtomicBoolean(initial);
}
function atomic$int$(initial, trace) {
  trace = trace === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? None_getInstance() : trace;
  return new AtomicInt(initial);
}
function atomic$long$(initial, trace) {
  trace = trace === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? None_getInstance() : trace;
  return new AtomicLong(initial);
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(atomicfu$TraceBase, 'TraceBase');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(None, 'None');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AtomicRef, 'AtomicRef');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AtomicBoolean, 'AtomicBoolean');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AtomicInt, 'AtomicInt');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AtomicLong, 'AtomicLong');
//endregion
//region block: exports

//endregion

//# sourceMappingURL=kotlinx-atomicfu.mjs.map


/***/ }),

/***/ "./kotlin/kotlinx-coroutines-core.mjs":
/*!********************************************!*\
  !*** ./kotlin/kotlinx-coroutines-core.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CancellableContinuationImpl1cx201opicavg: () => (/* binding */ CancellableContinuationImpl),
/* harmony export */   CompletableJob1w6swnu15iclo: () => (/* binding */ CompletableJob),
/* harmony export */   CoroutineName2g5zosw74tf0f: () => (/* binding */ CoroutineName),
/* harmony export */   CoroutineScopefcb5f5dwqcas: () => (/* binding */ CoroutineScope),
/* harmony export */   CoroutineScopelux7s7zphw7e: () => (/* binding */ CoroutineScope_0),
/* harmony export */   Dispatchers_getInstance1nk2l7rcqz5wi: () => (/* binding */ Dispatchers_getInstance),
/* harmony export */   FlowCollector26clgpmzihvke: () => (/* binding */ FlowCollector),
/* harmony export */   GlobalScope_instance3rq364dcgnf9q: () => (/* binding */ GlobalScope_instance),
/* harmony export */   Job13y4jkazwjho0: () => (/* binding */ Job_0),
/* harmony export */   Job29shfjfygy86k: () => (/* binding */ Job),
/* harmony export */   Key_getInstancekgqcxgd24j37: () => (/* binding */ Key_getInstance),
/* harmony export */   Key_instance3o7pj7ik1b183: () => (/* binding */ Key_instance_3),
/* harmony export */   Key_instancexdagtxajq561: () => (/* binding */ Key_instance_1),
/* harmony export */   LinkedListNode3tts9l6uzdsny: () => (/* binding */ LinkedListNode),
/* harmony export */   SupervisorJobythnfxkr3jxc: () => (/* binding */ SupervisorJob),
/* harmony export */   asFlow3ngsnn5xpz8pw: () => (/* binding */ asFlow),
/* harmony export */   asyncz02dsa2nb2zt: () => (/* binding */ async),
/* harmony export */   await2pwm8za8tntlx: () => (/* binding */ await_0),
/* harmony export */   cancel$default2gzemzkga6aea: () => (/* binding */ cancel$default),
/* harmony export */   cancel1xim2hrvjmwpn: () => (/* binding */ cancel_1),
/* harmony export */   cancel2ztysw4v4hav6: () => (/* binding */ cancel_0),
/* harmony export */   cancel36mj9lv3a0whl: () => (/* binding */ cancel),
/* harmony export */   cancellable2hwvzb6vsyyjp: () => (/* binding */ cancellable),
/* harmony export */   delayop3h8lf643wg: () => (/* binding */ delay),
/* harmony export */   firstOrNull1cr4vijjhhs0e: () => (/* binding */ firstOrNull),
/* harmony export */   flow3tazazxj2t7g4: () => (/* binding */ flow),
/* harmony export */   get_job2zvlvce9o9a29: () => (/* binding */ get_job),
/* harmony export */   invokeOnCompletion$default6tc1ee8hzqwd: () => (/* binding */ invokeOnCompletion$default),
/* harmony export */   launch1c91vkjzdi9sd: () => (/* binding */ launch),
/* harmony export */   recoverStackTrace2i3si2i8nvw1k: () => (/* binding */ recoverStackTrace)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlinx-atomicfu.mjs */ "./kotlin/kotlinx-atomicfu.mjs");


//region block: imports
var imul = Math.imul;
//endregion
//region block: pre-declaration
class Job {}
function cancel$default(cause, $super) {
  cause = cause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cause;
  var tmp;
  if ($super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    this.oo(cause);
    tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  } else {
    tmp = $super.oo.call(this, cause);
  }
  return tmp;
}
function invokeOnCompletion$default(onCancelling, invokeImmediately, handler, $super) {
  onCancelling = onCancelling === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : onCancelling;
  invokeImmediately = invokeImmediately === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? true : invokeImmediately;
  return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.jo(onCancelling, invokeImmediately, handler) : $super.jo.call(this, onCancelling, invokeImmediately, handler);
}
class ParentJob {}
class JobSupport {
  constructor(active) {
    this.an_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(active ? get_EMPTY_ACTIVE() : get_EMPTY_NEW());
    this.bn_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(null);
  }
  k1() {
    return Key_instance_3;
  }
  yn(value) {
    this.bn_1.kotlinx$atomicfu$value = value;
  }
  zn() {
    return this.bn_1.kotlinx$atomicfu$value;
  }
  ao() {
    var tmp0_safe_receiver = this.zn();
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.ao();
  }
  cn(parent) {
    // Inline function 'kotlinx.coroutines.assert' call
    if (parent == null) {
      this.yn(NonDisposableHandle_instance);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    parent.do();
    var handle = parent.vo(this);
    this.yn(handle);
    if (this.co()) {
      handle.kq();
      this.yn(NonDisposableHandle_instance);
    }
  }
  bo() {
    // Inline function 'kotlinx.atomicfu.loop' call
    var this_0 = this.an_1;
    while (true) {
      // Inline function 'kotlinx.coroutines.JobSupport.<get-state>.<anonymous>' call
      var state = this_0.kotlinx$atomicfu$value;
      if (!(state instanceof OpDescriptor))
        return state;
      state.yv(this);
    }
  }
  hn() {
    var state = this.bo();
    var tmp;
    if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false) {
      tmp = state.hn();
    } else {
      tmp = false;
    }
    return tmp;
  }
  co() {
    var tmp = this.bo();
    return !(!(tmp == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, Incomplete) : false);
  }
  do() {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      // Inline function 'kotlinx.coroutines.JobSupport.start.<anonymous>' call
      var state = this.bo();
      var tmp0_subject = startInternal(this, state);
      if (tmp0_subject === 0)
        return false;
      else if (tmp0_subject === 1)
        return true;
    }
  }
  eo() {
  }
  fo() {
    var state = this.bo();
    var tmp;
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.bv();
      var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : this.go(tmp0_safe_receiver, get_classSimpleName(this) + ' is cancelling');
      var tmp_0;
      if (tmp1_elvis_lhs == null) {
        var message = 'Job is still new or active: ' + this.toString();
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      } else {
        tmp_0 = tmp1_elvis_lhs;
      }
      tmp = tmp_0;
    } else {
      if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false) {
        var message_0 = 'Job is still new or active: ' + this.toString();
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
      } else {
        if (state instanceof CompletedExceptionally) {
          tmp = this.ho(state.mn_1);
        } else {
          tmp = JobCancellationException.wu(get_classSimpleName(this) + ' has completed normally', null, this);
        }
      }
    }
    return tmp;
  }
  go(_this__u8e3s4, message) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr ? _this__u8e3s4 : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlinx.coroutines.JobSupport.defaultCancellationException' call
      tmp = JobCancellationException.wu(message == null ? this.kn() : message, _this__u8e3s4, this);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  ho(_this__u8e3s4, message, $super) {
    message = message === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : message;
    return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.go(_this__u8e3s4, message) : $super.go.call(this, _this__u8e3s4, message);
  }
  io(handler) {
    return this.lo(false, true, new UserSupplied_0(handler));
  }
  jo(onCancelling, invokeImmediately, handler) {
    return this.lo(onCancelling, invokeImmediately, new UserSupplied_0(handler));
  }
  lo(onCancelling, invokeImmediately, handler) {
    var node = makeNode(this, handler, onCancelling);
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      $l$block: {
        // Inline function 'kotlinx.coroutines.JobSupport.invokeOnCompletionInternal.<anonymous>' call
        var state = this.bo();
        if (state instanceof Empty) {
          if (state.pt_1) {
            if (this.an_1.atomicfu$compareAndSet(state, node))
              return node;
          } else {
            promoteEmptyToNodeList(this, state);
          }
        } else {
          if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false) {
            var list = state.qt();
            if (list == null) {
              promoteSingleToNodeList(this, state instanceof JobNode ? state : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
            } else {
              var rootCause = null;
              var handle = NonDisposableHandle_instance;
              var tmp;
              if (onCancelling) {
                tmp = state instanceof Finishing;
              } else {
                tmp = false;
              }
              if (tmp) {
                // Inline function 'kotlinx.coroutines.internal.synchronized' call
                // Inline function 'kotlin.contracts.contract' call
                // Inline function 'kotlinx.coroutines.internal.synchronizedImpl' call
                rootCause = state.bv();
                var tmp_0;
                if (rootCause == null) {
                  tmp_0 = true;
                } else {
                  var tmp_1;
                  if (handler instanceof ChildHandleNode) {
                    tmp_1 = !state.yu();
                  } else {
                    tmp_1 = false;
                  }
                  tmp_0 = tmp_1;
                }
                if (tmp_0) {
                  if (!addLastAtomic(this, state, list, node)) {
                    break $l$block;
                  }
                  if (rootCause == null)
                    return node;
                  handle = node;
                }
              }
              if (!(rootCause == null)) {
                if (invokeImmediately) {
                  handler.jq(rootCause);
                }
                return handle;
              } else {
                if (addLastAtomic(this, state, list, node))
                  return node;
              }
            }
          } else {
            if (invokeImmediately) {
              var tmp1_safe_receiver = state instanceof CompletedExceptionally ? state : null;
              handler.jq(tmp1_safe_receiver == null ? null : tmp1_safe_receiver.mn_1);
            }
            return NonDisposableHandle_instance;
          }
        }
      }
    }
  }
  ks($completion) {
    if (!joinInternal(this)) {
      // Inline function 'kotlin.js.getCoroutineContext' call
      var tmp$ret$0 = $completion.rb();
      ensureActive(tmp$ret$0);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    return joinSuspend(this, $completion);
  }
  mo(node) {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      // Inline function 'kotlinx.coroutines.JobSupport.removeNode.<anonymous>' call
      var state = this.bo();
      if (state instanceof JobNode) {
        if (!(state === node))
          return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        if (this.an_1.atomicfu$compareAndSet(state, get_EMPTY_ACTIVE()))
          return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      } else {
        if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false) {
          if (!(state.qt() == null)) {
            node.bu();
          }
          return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        } else {
          return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        }
      }
    }
  }
  no() {
    return false;
  }
  oo(cause) {
    var tmp;
    if (cause == null) {
      // Inline function 'kotlinx.coroutines.JobSupport.defaultCancellationException' call
      tmp = JobCancellationException.wu( true ? this.kn() : 0, null, this);
    } else {
      tmp = cause;
    }
    this.qo(tmp);
  }
  kn() {
    return 'Job was cancelled';
  }
  qo(cause) {
    this.to(cause);
  }
  ro(parentJob) {
    this.to(parentJob);
  }
  so(cause) {
    if (cause instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr)
      return true;
    return this.to(cause) && this.yo();
  }
  to(cause) {
    var finalState = get_COMPLETING_ALREADY();
    if (this.no()) {
      finalState = cancelMakeCompleting(this, cause);
      if (finalState === get_COMPLETING_WAITING_CHILDREN())
        return true;
    }
    if (finalState === get_COMPLETING_ALREADY()) {
      finalState = makeCancelling(this, cause);
    }
    var tmp;
    if (finalState === get_COMPLETING_ALREADY()) {
      tmp = true;
    } else if (finalState === get_COMPLETING_WAITING_CHILDREN()) {
      tmp = true;
    } else if (finalState === get_TOO_LATE_TO_CANCEL()) {
      tmp = false;
    } else {
      this.rn(finalState);
      tmp = true;
    }
    return tmp;
  }
  uo() {
    var state = this.bo();
    var tmp;
    if (state instanceof Finishing) {
      tmp = state.bv();
    } else {
      if (state instanceof CompletedExceptionally) {
        tmp = state.mn_1;
      } else {
        if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false) {
          var message = 'Cannot be cancelling child in this state: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(state);
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
        } else {
          tmp = null;
        }
      }
    }
    var rootCause = tmp;
    var tmp1_elvis_lhs = rootCause instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr ? rootCause : null;
    return tmp1_elvis_lhs == null ? JobCancellationException.wu('Parent job is ' + stateString(this, state), rootCause, this) : tmp1_elvis_lhs;
  }
  zv(proposedUpdate) {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      $l$block: {
        // Inline function 'kotlinx.coroutines.JobSupport.makeCompleting.<anonymous>' call
        var state = this.bo();
        var finalState = tryMakeCompleting(this, state, proposedUpdate);
        if (finalState === get_COMPLETING_ALREADY())
          return false;
        else if (finalState === get_COMPLETING_WAITING_CHILDREN())
          return true;
        else if (finalState === get_COMPLETING_RETRY()) {
          break $l$block;
        } else {
          this.rn(finalState);
          return true;
        }
      }
    }
  }
  pn(proposedUpdate) {
    // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
    while (true) {
      $l$block: {
        // Inline function 'kotlinx.coroutines.JobSupport.makeCompletingOnce.<anonymous>' call
        var state = this.bo();
        var finalState = tryMakeCompleting(this, state, proposedUpdate);
        if (finalState === get_COMPLETING_ALREADY())
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.jc('Job ' + this.toString() + ' is already complete or completing, ' + ('but is being completed with ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(proposedUpdate)), _get_exceptionOrNull__b3j7js(proposedUpdate, this));
        else if (finalState === get_COMPLETING_RETRY()) {
          break $l$block;
        } else
          return finalState;
      }
    }
  }
  vo(child) {
    var tmp = invokeOnCompletion(this, true, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, new ChildHandleNode(child));
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, ChildHandle) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  sn(exception) {
    throw exception;
  }
  wo(cause) {
  }
  xo() {
    return false;
  }
  yo() {
    return true;
  }
  zo(exception) {
    return false;
  }
  ln(state) {
  }
  rn(state) {
  }
  toString() {
    return this.ap() + '@' + get_hexAddress(this);
  }
  ap() {
    return this.tn() + '{' + stateString(this, this.bo()) + '}';
  }
  tn() {
    return get_classSimpleName(this);
  }
  bp($completion) {
    $l$loop: while (true) {
      var state = this.bo();
      if (!(!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false)) {
        if (state instanceof CompletedExceptionally) {
          // Inline function 'kotlinx.coroutines.internal.recoverAndThrow' call
          throw state.mn_1;
        }
        return unboxState(state);
      }
      if (startInternal(this, state) >= 0)
        break $l$loop;
    }
    return awaitSuspend(this, $completion);
  }
}
class CoroutineScope {}
class AbstractCoroutine extends JobSupport {
  constructor(parentContext, initParentJob, active) {
    super(active);
    if (initParentJob) {
      this.cn(parentContext.yb(Key_instance_3));
    }
    this.fn_1 = parentContext.xi(this);
  }
  rb() {
    return this.fn_1;
  }
  gn() {
    return this.fn_1;
  }
  hn() {
    return super.hn();
  }
  in(value) {
  }
  jn(cause, handled) {
  }
  kn() {
    return get_classSimpleName(this) + ' was cancelled';
  }
  ln(state) {
    if (state instanceof CompletedExceptionally) {
      this.jn(state.mn_1, state.on());
    } else {
      this.in((state == null ? true : !(state == null)) ? state : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
    }
  }
  wb(result) {
    var state = this.pn(toState_0(result));
    if (state === get_COMPLETING_WAITING_CHILDREN())
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    this.qn(state);
  }
  qn(state) {
    return this.rn(state);
  }
  sn(exception) {
    handleCoroutineException(this.fn_1, exception);
  }
  tn() {
    var tmp0_elvis_lhs = get_coroutineName(this.fn_1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return super.tn();
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var coroutineName = tmp;
    return '"' + coroutineName + '":' + super.tn();
  }
  un(start, receiver, block) {
    start.xn(block, receiver, this);
  }
}
class StandaloneCoroutine extends AbstractCoroutine {
  constructor(parentContext, active) {
    super(parentContext, true, active);
  }
  zo(exception) {
    handleCoroutineException(this.fn_1, exception);
    return true;
  }
}
class LazyStandaloneCoroutine extends StandaloneCoroutine {
  constructor(parentContext, block) {
    super(parentContext, false);
    this.jp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createCoroutineUnintercepted3gya308dmbbtg)(block, this, this);
  }
  eo() {
    startCoroutineCancellable(this.jp_1, this);
  }
}
class $awaitCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, resultContinuation) {
    super(resultContinuation);
    this.sp_1 = _this__u8e3s4;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.sp_1.bp(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return (suspendResult == null ? true : !(suspendResult == null)) ? suspendResult : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class DeferredCoroutine extends AbstractCoroutine {
  constructor(parentContext, active) {
    super(parentContext, true, active);
  }
  wp($completion) {
    var tmp = new $awaitCOROUTINE$0(this, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
}
class LazyDeferredCoroutine extends DeferredCoroutine {
  constructor(parentContext, block) {
    super(parentContext, false);
    this.aq_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createCoroutineUnintercepted3gya308dmbbtg)(block, this, this);
  }
  eo() {
    startCoroutineCancellable(this.aq_1, this);
  }
}
class NotCompleted {}
class CancelHandler {}
class DisposeOnCancel {
  constructor(handle) {
    this.iq_1 = handle;
  }
  jq(cause) {
    return this.iq_1.kq();
  }
  toString() {
    return 'DisposeOnCancel[' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.iq_1) + ']';
  }
}
class Runnable {}
class SchedulerTask {}
class DispatchedTask extends SchedulerTask {
  constructor(resumeMode) {
    super();
    this.sq_1 = resumeMode;
  }
  rr(takenState, cause) {
  }
  yr(state) {
    return (state == null ? true : !(state == null)) ? state : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  cs(state) {
    var tmp0_safe_receiver = state instanceof CompletedExceptionally ? state : null;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.mn_1;
  }
  es() {
    // Inline function 'kotlinx.coroutines.assert' call
    var taskContext = get_taskContext(this);
    var fatalException = null;
    try {
      var tmp = this.or();
      var delegate = tmp instanceof DispatchedContinuation ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      var continuation = delegate.nq_1;
      // Inline function 'kotlinx.coroutines.withContinuationContext' call
      delegate.pq_1;
      var context = continuation.rb();
      var state = this.qr();
      var exception = this.cs(state);
      var job = exception == null && get_isCancellableMode(this.sq_1) ? context.yb(Key_instance_3) : null;
      if (!(job == null) && !job.hn()) {
        var cause = job.fo();
        this.rr(state, cause);
        // Inline function 'kotlinx.coroutines.resumeWithStackTrace' call
        // Inline function 'kotlin.Companion.failure' call
        var exception_0 = recoverStackTrace(cause, continuation);
        var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(exception_0));
        continuation.wb(tmp$ret$0);
      } else {
        if (!(exception == null)) {
          // Inline function 'kotlin.coroutines.resumeWithException' call
          // Inline function 'kotlin.Companion.failure' call
          var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(exception));
          continuation.wb(tmp$ret$1);
        } else {
          // Inline function 'kotlin.coroutines.resume' call
          // Inline function 'kotlin.Companion.success' call
          var value = this.yr(state);
          var tmp$ret$3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(value);
          continuation.wb(tmp$ret$3);
        }
      }
    } catch ($p) {
      if ($p instanceof Error) {
        var e = $p;
        fatalException = e;
      } else {
        throw $p;
      }
    }
    finally {
      // Inline function 'kotlin.runCatching' call
      var tmp_0;
      try {
        // Inline function 'kotlin.Companion.success' call
        // Inline function 'kotlinx.coroutines.afterTask' call
        tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
      } catch ($p) {
        var tmp_1;
        if ($p instanceof Error) {
          var e_0 = $p;
          // Inline function 'kotlin.Companion.failure' call
          tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(e_0));
        } else {
          throw $p;
        }
        tmp_0 = tmp_1;
      }
      var result = tmp_0;
      this.fs(fatalException, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result__exceptionOrNull_impl_p6xea91phgcskd46fkx)(result));
    }
  }
  fs(exception, finallyException) {
    if (exception === null && finallyException === null)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    if (!(exception === null) && !(finallyException === null)) {
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.addSuppressedu5jwjfvsc039)(exception, finallyException);
    }
    var cause = exception == null ? finallyException : exception;
    var reason = CoroutinesInternalError.ot('Fatal exception in coroutines machinery for ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this) + '. ' + "Please read KDoc to 'handleFatalException' method and report this incident to maintainers", (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(cause));
    handleCoroutineException(this.or().rb(), reason);
  }
}
class CancellableContinuationImpl extends DispatchedTask {
  constructor(delegate, resumeMode) {
    super(resumeMode);
    this.cq_1 = delegate;
    // Inline function 'kotlinx.coroutines.assert' call
    this.dq_1 = this.cq_1.rb();
    var tmp = this;
    // Inline function 'kotlinx.coroutines.decisionAndIndex' call
    var tmp$ret$0 = (0 << _get_DECISION_SHIFT_$accessor$2jt7ek_1tkg2i()) + 536870911 | 0;
    tmp.eq_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$int$11d5swdyn6j0pu)(tmp$ret$0);
    this.fq_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(Active_instance);
    this.gq_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(null);
  }
  or() {
    return this.cq_1;
  }
  rb() {
    return this.dq_1;
  }
  bo() {
    return this.fq_1.kotlinx$atomicfu$value;
  }
  co() {
    var tmp = this.bo();
    return !(!(tmp == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, NotCompleted) : false);
  }
  pr() {
    var tmp0_elvis_lhs = installParentHandle(this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var handle = tmp;
    if (this.co()) {
      handle.kq();
      this.gq_1.kotlinx$atomicfu$value = NonDisposableHandle_instance;
    }
  }
  qr() {
    return this.bo();
  }
  rr(takenState, cause) {
    var this_0 = this.fq_1;
    while (true) {
      // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.cancelCompletedResult.<anonymous>' call
      var state = this_0.kotlinx$atomicfu$value;
      if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, NotCompleted) : false) {
        // Inline function 'kotlin.error' call
        var message = 'Not completed';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      } else {
        if (state instanceof CompletedExceptionally)
          return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        else {
          if (state instanceof CompletedContinuation) {
            // Inline function 'kotlin.check' call
            // Inline function 'kotlin.contracts.contract' call
            if (!!state.fr()) {
              // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.cancelCompletedResult.<anonymous>.<anonymous>' call
              var message_0 = 'Must be called at most once';
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
            }
            var update = state.gr(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, cause);
            if (this.fq_1.atomicfu$compareAndSet(state, update)) {
              state.sr(this, cause);
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            }
          } else {
            if (this.fq_1.atomicfu$compareAndSet(state, new CompletedContinuation(state, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, cause))) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            }
          }
        }
      }
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  tr(cause) {
    // Inline function 'kotlinx.atomicfu.loop' call
    var this_0 = this.fq_1;
    while (true) {
      $l$block: {
        // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.cancel.<anonymous>' call
        var state = this_0.kotlinx$atomicfu$value;
        if (!(!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, NotCompleted) : false))
          return false;
        var tmp;
        if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, CancelHandler) : false) {
          tmp = true;
        } else {
          tmp = state instanceof Segment;
        }
        var update = new CancelledContinuation(this, cause, tmp);
        if (!this.fq_1.atomicfu$compareAndSet(state, update)) {
          break $l$block;
        }
        if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, CancelHandler)) {
          this.er(state, cause);
        } else {
          if (state instanceof Segment) {
            callSegmentOnCancellation(this, state, cause);
          }
        }
        detachChildIfNonResuable(this);
        dispatchResume(this, this.sq_1);
        return true;
      }
    }
  }
  ur(cause) {
    if (cancelLater(this, cause))
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    this.tr(cause);
    detachChildIfNonResuable(this);
  }
  er(handler, cause) {
    var tmp;
    try {
      handler.jq(cause);
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var ex = $p;
        handleCoroutineException(this.rb(), CompletionHandlerException.yq('Exception in invokeOnCancellation handler for ' + this.toString(), ex));
        tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  ir(onCancellation, cause) {
    try {
      onCancellation(cause);
    } catch ($p) {
      if ($p instanceof Error) {
        var ex = $p;
        handleCoroutineException(this.rb(), CompletionHandlerException.yq('Exception in resume onCancellation handler for ' + this.toString(), ex));
      } else {
        throw $p;
      }
    }
  }
  vr(parent) {
    return parent.fo();
  }
  wr() {
    var isReusable_0 = isReusable(this);
    if (trySuspend(this)) {
      if (_get_parentHandle__f8dcex(this) == null) {
        installParentHandle(this);
      }
      if (isReusable_0) {
        this.xr();
      }
      return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)();
    }
    if (isReusable_0) {
      this.xr();
    }
    var state = this.bo();
    if (state instanceof CompletedExceptionally)
      throw recoverStackTrace(state.mn_1, this);
    if (get_isCancellableMode(this.sq_1)) {
      var job = this.rb().yb(Key_instance_3);
      if (!(job == null) && !job.hn()) {
        var cause = job.fo();
        this.rr(state, cause);
        throw recoverStackTrace(cause, this);
      }
    }
    return this.yr(state);
  }
  xr() {
    var tmp = this.cq_1;
    var tmp0_safe_receiver = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.zr(this);
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var cancellationCause = tmp_0;
    this.nr();
    this.tr(cancellationCause);
  }
  wb(result) {
    return resumeImpl$default(this, toState(result, this), this.sq_1);
  }
  as(handler) {
    return invokeOnCancellation(this, new UserSupplied(handler));
  }
  hq(handler) {
    return invokeOnCancellationImpl(this, handler);
  }
  nr() {
    var tmp0_elvis_lhs = _get_parentHandle__f8dcex(this);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var handle = tmp;
    handle.kq();
    this.gq_1.kotlinx$atomicfu$value = NonDisposableHandle_instance;
  }
  bs(_this__u8e3s4, value) {
    var tmp = this.cq_1;
    var dc = tmp instanceof DispatchedContinuation ? tmp : null;
    var tmp_0;
    if ((dc == null ? null : dc.mq_1) === _this__u8e3s4) {
      tmp_0 = 4;
    } else {
      tmp_0 = this.sq_1;
    }
    resumeImpl$default(this, value, tmp_0);
  }
  yr(state) {
    var tmp;
    if (state instanceof CompletedContinuation) {
      var tmp_0 = state.zq_1;
      tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    } else {
      tmp = (state == null ? true : !(state == null)) ? state : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    }
    return tmp;
  }
  cs(state) {
    var tmp0_safe_receiver = super.cs(state);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.getExceptionalResult.<anonymous>' call
      tmp = recoverStackTrace(tmp0_safe_receiver, this.cq_1);
    }
    return tmp;
  }
  toString() {
    return this.ds() + '(' + toDebugString(this.cq_1) + '){' + _get_stateDebugRepresentation__bf18u4(this) + '}@' + get_hexAddress(this);
  }
  ds() {
    return 'CancellableContinuation';
  }
}
class UserSupplied {
  constructor(handler) {
    this.gs_1 = handler;
  }
  jq(cause) {
    this.gs_1(cause);
  }
  toString() {
    return 'CancelHandler.UserSupplied[' + get_classSimpleName(this.gs_1) + '@' + get_hexAddress(this) + ']';
  }
}
class Active {
  toString() {
    return 'Active';
  }
}
class CompletedContinuation {
  constructor(result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    cancelHandler = cancelHandler === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cancelHandler;
    onCancellation = onCancellation === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : onCancellation;
    idempotentResume = idempotentResume === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : idempotentResume;
    cancelCause = cancelCause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cancelCause;
    this.zq_1 = result;
    this.ar_1 = cancelHandler;
    this.br_1 = onCancellation;
    this.cr_1 = idempotentResume;
    this.dr_1 = cancelCause;
  }
  fr() {
    return !(this.dr_1 == null);
  }
  sr(cont, cause) {
    var tmp0_safe_receiver = this.ar_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      cont.er(tmp0_safe_receiver, cause);
    }
    var tmp1_safe_receiver = this.br_1;
    if (tmp1_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      cont.ir(tmp1_safe_receiver, cause);
    }
  }
  hs(result, cancelHandler, onCancellation, idempotentResume, cancelCause) {
    return new CompletedContinuation(result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  }
  gr(result, cancelHandler, onCancellation, idempotentResume, cancelCause, $super) {
    result = result === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.zq_1 : result;
    cancelHandler = cancelHandler === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.ar_1 : cancelHandler;
    onCancellation = onCancellation === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.br_1 : onCancellation;
    idempotentResume = idempotentResume === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.cr_1 : idempotentResume;
    cancelCause = cancelCause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.dr_1 : cancelCause;
    return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.hs(result, cancelHandler, onCancellation, idempotentResume, cancelCause) : $super.hs.call(this, result, cancelHandler, onCancellation, idempotentResume, cancelCause);
  }
  toString() {
    return 'CompletedContinuation(result=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.zq_1) + ', cancelHandler=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.ar_1) + ', onCancellation=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.br_1) + ', idempotentResume=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.cr_1) + ', cancelCause=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.dr_1) + ')';
  }
  hashCode() {
    var result = this.zq_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.zq_1);
    result = imul(result, 31) + (this.ar_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.ar_1)) | 0;
    result = imul(result, 31) + (this.br_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.br_1)) | 0;
    result = imul(result, 31) + (this.cr_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.cr_1)) | 0;
    result = imul(result, 31) + (this.dr_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.dr_1)) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedContinuation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedContinuation ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.zq_1, tmp0_other_with_cast.zq_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.ar_1, tmp0_other_with_cast.ar_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.br_1, tmp0_other_with_cast.br_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.cr_1, tmp0_other_with_cast.cr_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.dr_1, tmp0_other_with_cast.dr_1))
      return false;
    return true;
  }
}
class CompletableJob {}
class UserSupplied_0 {
  constructor(handler) {
    this.ls_1 = handler;
  }
  jq(cause) {
    this.ls_1(cause);
  }
  toString() {
    return 'InternalCompletionHandler.UserSupplied[' + get_classSimpleName(this.ls_1) + '@' + get_hexAddress(this) + ']';
  }
}
class CompletedExceptionally {
  constructor(cause, handled) {
    handled = handled === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : handled;
    this.mn_1 = cause;
    this.nn_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$boolean$1iggki4z65a2h)(handled);
  }
  on() {
    return this.nn_1.kotlinx$atomicfu$value;
  }
  hr() {
    return this.nn_1.atomicfu$compareAndSet(false, true);
  }
  toString() {
    return get_classSimpleName(this) + '[' + this.mn_1.toString() + ']';
  }
}
class CancelledContinuation extends CompletedExceptionally {
  constructor(continuation, cause, handled) {
    super(cause == null ? _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr.hc('Continuation ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(continuation) + ' was cancelled normally') : cause, handled);
    this.lr_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$boolean$1iggki4z65a2h)(false);
  }
  mr() {
    return this.lr_1.atomicfu$compareAndSet(false, true);
  }
}
class CompletedWithCancellation {
  constructor(result, onCancellation) {
    this.ms_1 = result;
    this.ns_1 = onCancellation;
  }
  toString() {
    return 'CompletedWithCancellation(result=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.ms_1) + ', onCancellation=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.ns_1) + ')';
  }
  hashCode() {
    var result = this.ms_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.ms_1);
    result = imul(result, 31) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.ns_1) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof CompletedWithCancellation))
      return false;
    var tmp0_other_with_cast = other instanceof CompletedWithCancellation ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.ms_1, tmp0_other_with_cast.ms_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.ns_1, tmp0_other_with_cast.ns_1))
      return false;
    return true;
  }
}
class Key extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractCoroutineContextKey9xr9r6wlj5bm {
  constructor() {
    Key_instance_0 = null;
    var tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance2d3ch37kcwr5h;
    super(tmp, CoroutineDispatcher$Key$_init_$lambda_akl8b5);
    Key_instance_0 = this;
  }
}
class CoroutineDispatcher extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractCoroutineContextElement2rpehg0hv5szw {
  constructor() {
    Key_getInstance();
    super(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance2d3ch37kcwr5h);
  }
  ps(context) {
    return true;
  }
  zb(continuation) {
    return new DispatchedContinuation(this, continuation);
  }
  ac(continuation) {
    var dispatched = continuation instanceof DispatchedContinuation ? continuation : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    dispatched.rs();
  }
  toString() {
    return get_classSimpleName(this) + '@' + get_hexAddress(this);
  }
}
class Key_0 {}
class Key_1 {}
class CoroutineName extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractCoroutineContextElement2rpehg0hv5szw {
  constructor(name) {
    super(Key_instance_2);
    this.us_1 = name;
  }
  toString() {
    return 'CoroutineName(' + this.us_1 + ')';
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.us_1);
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof CoroutineName))
      return false;
    var tmp0_other_with_cast = other instanceof CoroutineName ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.us_1 === tmp0_other_with_cast.us_1))
      return false;
    return true;
  }
}
class GlobalScope {
  gn() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.EmptyCoroutineContext_getInstance2bxophqwsfm9n)();
  }
}
class CoroutineStart extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Enum3alwj03lh1n41 {
  xn(block, receiver, completion) {
    var tmp;
    switch (this.x2_1) {
      case 0:
        startCoroutineCancellable_0(block, receiver, completion);
        tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        break;
      case 2:
        (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.startCoroutine327fwvtqvedik)(block, receiver, completion);
        tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        break;
      case 3:
        startCoroutineUndispatched(block, receiver, completion);
        tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        break;
      case 1:
        tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        break;
      default:
        (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.noWhenBranchMatchedException2a6r7ubxgky5j)();
        break;
    }
    return tmp;
  }
  cp() {
    return this === CoroutineStart_LAZY_getInstance();
  }
}
class Delay {}
class EventLoop extends CoroutineDispatcher {
  constructor() {
    super();
    this.xs_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0);
    this.ys_1 = false;
    this.zs_1 = null;
  }
  at() {
    var tmp0_elvis_lhs = this.zs_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    var tmp1_elvis_lhs = queue.gh();
    var tmp_0;
    if (tmp1_elvis_lhs == null) {
      return false;
    } else {
      tmp_0 = tmp1_elvis_lhs;
    }
    var task = tmp_0;
    task.es();
    return true;
  }
  bt(task) {
    var tmp0_elvis_lhs = this.zs_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayDeque2dzc9uld4xi7n.ch();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.coroutines.EventLoop.dispatchUnconfined.<anonymous>' call
      this.zs_1 = this_0;
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var queue = tmp;
    queue.eh(task);
  }
  ct() {
    return this.xs_1.q1(delta(this, true)) >= 0;
  }
  dt() {
    var tmp0_safe_receiver = this.zs_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f1();
    return tmp1_elvis_lhs == null ? true : tmp1_elvis_lhs;
  }
  et(unconfined) {
    this.xs_1 = this.xs_1.d3(delta(this, unconfined));
    if (!unconfined)
      this.ys_1 = true;
  }
  ft(unconfined) {
    this.xs_1 = this.xs_1.e3(delta(this, unconfined));
    if (this.xs_1.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) > 0)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    // Inline function 'kotlinx.coroutines.assert' call
    if (this.ys_1) {
      this.gt();
    }
  }
  gt() {
  }
}
class ThreadLocalEventLoop {
  constructor() {
    ThreadLocalEventLoop_instance = this;
    this.ht_1 = commonThreadLocal(new Symbol('ThreadLocalEventLoop'));
  }
  it() {
    var tmp0_elvis_lhs = this.ht_1.kt();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      // Inline function 'kotlin.also' call
      var this_0 = createEventLoop();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.coroutines.ThreadLocalEventLoop.<get-eventLoop>.<anonymous>' call
      ThreadLocalEventLoop_getInstance().ht_1.lt(this_0);
      tmp = this_0;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
}
class CompletionHandlerException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.RuntimeException1r3t0zl97011n {
  static yq(message, cause) {
    var $this = this.hd(message, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.xq_1);
    return $this;
  }
}
class CoroutinesInternalError extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Error3ofk6owajcepa {
  static ot(message, cause) {
    var $this = this.qd(message, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.nt_1);
    return $this;
  }
}
class Key_2 {}
class ChildHandle {}
class NonDisposableHandle {
  ao() {
    return null;
  }
  kq() {
  }
  so(cause) {
    return false;
  }
  toString() {
    return 'NonDisposableHandle';
  }
}
class Incomplete {}
class Empty {
  constructor(isActive) {
    this.pt_1 = isActive;
  }
  hn() {
    return this.pt_1;
  }
  qt() {
    return null;
  }
  toString() {
    return 'Empty{' + (this.pt_1 ? 'Active' : 'New') + '}';
  }
}
class LinkedListNode {
  constructor() {
    this.vt_1 = this;
    this.wt_1 = this;
    this.xt_1 = false;
  }
  cu(node) {
    var prev = this.wt_1;
    node.vt_1 = this;
    node.wt_1 = prev;
    prev.vt_1 = node;
    this.wt_1 = node;
  }
  bu() {
    return this.du();
  }
  kq() {
    this.bu();
  }
  du() {
    if (this.xt_1)
      return false;
    var prev = this.wt_1;
    var next = this.vt_1;
    prev.vt_1 = next;
    next.wt_1 = prev;
    this.xt_1 = true;
    return true;
  }
  ju(node) {
    if (!(this.vt_1 === this))
      return false;
    this.cu(node);
    return true;
  }
}
class LinkedListHead extends LinkedListNode {
  bu() {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UnsupportedOperationException2tkumpmhredt3.c7();
  }
}
class NodeList extends LinkedListHead {
  hn() {
    return true;
  }
  qt() {
    return this;
  }
  ut(state) {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.coroutines.NodeList.getString.<anonymous>' call
    this_0.la('List{');
    this_0.la(state);
    this_0.la('}[');
    var first = true;
    // Inline function 'kotlinx.coroutines.internal.LinkedListHead.forEach' call
    var cur = this.vt_1;
    while (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(cur, this)) {
      if (cur instanceof JobNode) {
        // Inline function 'kotlinx.coroutines.NodeList.getString.<anonymous>.<anonymous>' call
        var node = cur;
        if (first)
          first = false;
        else {
          this_0.la(', ');
        }
        this_0.ka(node);
      }
      cur = cur.vt_1;
    }
    this_0.la(']');
    return this_0.toString();
  }
  toString() {
    return get_DEBUG() ? this.ut('Active') : super.toString();
  }
}
class JobNode extends LinkedListNode {
  iu() {
    var tmp = this.hu_1;
    if (!(tmp == null))
      return tmp;
    else {
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.throwUninitializedPropertyAccessExceptionyynx7gkm73wd)('job');
    }
  }
  hn() {
    return true;
  }
  qt() {
    return null;
  }
  kq() {
    return this.iu().mo(this);
  }
  toString() {
    return get_classSimpleName(this) + '@' + get_hexAddress(this) + '[job@' + get_hexAddress(this.iu()) + ']';
  }
}
class SynchronizedObject {}
class Finishing extends SynchronizedObject {
  constructor(list, isCompleting, rootCause) {
    super();
    this.ku_1 = list;
    this.lu_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$boolean$1iggki4z65a2h)(isCompleting);
    this.mu_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(rootCause);
    this.nu_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(null);
  }
  qt() {
    return this.ku_1;
  }
  cv(value) {
    this.lu_1.kotlinx$atomicfu$value = value;
  }
  yu() {
    return this.lu_1.kotlinx$atomicfu$value;
  }
  iv(value) {
    this.mu_1.kotlinx$atomicfu$value = value;
  }
  bv() {
    return this.mu_1.kotlinx$atomicfu$value;
  }
  zu() {
    return _get_exceptionsHolder__nhszp(this) === get_SEALED();
  }
  ou() {
    return !(this.bv() == null);
  }
  hn() {
    return this.bv() == null;
  }
  pu(proposedException) {
    var eh = _get_exceptionsHolder__nhszp(this);
    var tmp;
    if (eh == null) {
      tmp = allocateList(this);
    } else {
      if (eh instanceof Error) {
        // Inline function 'kotlin.also' call
        var this_0 = allocateList(this);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlinx.coroutines.Finishing.sealLocked.<anonymous>' call
        this_0.g(eh);
        tmp = this_0;
      } else {
        if (eh instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl) {
          tmp = eh instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? eh : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
        } else {
          var message = 'State is ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(eh);
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
        }
      }
    }
    var list = tmp;
    var rootCause = this.bv();
    if (rootCause == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      list.l2(0, rootCause);
    }
    if (!(proposedException == null) && !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(proposedException, rootCause)) {
      list.g(proposedException);
    }
    _set_exceptionsHolder__tqm22h(this, get_SEALED());
    return list;
  }
  av(exception) {
    var rootCause = this.bv();
    if (rootCause == null) {
      this.iv(exception);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    if (exception === rootCause)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    var eh = _get_exceptionsHolder__nhszp(this);
    if (eh == null) {
      _set_exceptionsHolder__tqm22h(this, exception);
    } else {
      if (eh instanceof Error) {
        if (exception === eh)
          return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        // Inline function 'kotlin.apply' call
        var this_0 = allocateList(this);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlinx.coroutines.Finishing.addExceptionLocked.<anonymous>' call
        this_0.g(eh);
        this_0.g(exception);
        _set_exceptionsHolder__tqm22h(this, this_0);
      } else {
        if (eh instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl) {
          (eh instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? eh : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()).g(exception);
        } else {
          var message = 'State is ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(eh);
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
        }
      }
    }
  }
  toString() {
    return 'Finishing[cancelling=' + this.ou() + ', completing=' + this.yu() + ', rootCause=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.bv()) + ', exceptions=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(_get_exceptionsHolder__nhszp(this)) + ', list=' + this.ku_1.toString() + ']';
  }
}
class ChildCompletion extends JobNode {
  constructor(parent, state, child, proposedUpdate) {
    super();
    this.nv_1 = parent;
    this.ov_1 = state;
    this.pv_1 = child;
    this.qv_1 = proposedUpdate;
  }
  jq(cause) {
    continueCompleting(this.nv_1, this.ov_1, this.pv_1, this.qv_1);
  }
}
class AwaitContinuation extends CancellableContinuationImpl {
  constructor(delegate, job) {
    super(delegate, 1);
    this.xv_1 = job;
  }
  vr(parent) {
    var state = this.xv_1.bo();
    if (state instanceof Finishing) {
      var tmp0_safe_receiver = state.bv();
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        return tmp0_safe_receiver;
      }
    }
    if (state instanceof CompletedExceptionally)
      return state.mn_1;
    return parent.fo();
  }
  ds() {
    return 'AwaitContinuation';
  }
}
class JobCancellingNode extends JobNode {}
class InactiveNodeList {
  constructor(list) {
    this.xu_1 = list;
  }
  qt() {
    return this.xu_1;
  }
  hn() {
    return false;
  }
  toString() {
    return get_DEBUG() ? this.xu_1.ut('New') : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.anyToString3ho3k49fc56mj)(this);
  }
}
class ChildHandleNode extends JobCancellingNode {
  constructor(childJob) {
    super();
    this.hv_1 = childJob;
  }
  ao() {
    return this.iu();
  }
  jq(cause) {
    return this.hv_1.ro(this.iu());
  }
  so(cause) {
    return this.iu().so(cause);
  }
}
class InvokeOnCancelling extends JobCancellingNode {
  constructor(handler) {
    super();
    this.ew_1 = handler;
    this.fw_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$int$11d5swdyn6j0pu)(0);
  }
  jq(cause) {
    if (this.fw_1.atomicfu$compareAndSet(0, 1)) {
      this.ew_1.jq(cause);
    }
  }
}
class InvokeOnCompletion extends JobNode {
  constructor(handler) {
    super();
    this.kw_1 = handler;
  }
  jq(cause) {
    return this.kw_1.jq(cause);
  }
}
class ResumeOnCompletion extends JobNode {
  constructor(continuation) {
    super();
    this.pw_1 = continuation;
  }
  jq(cause) {
    // Inline function 'kotlin.coroutines.resume' call
    var this_0 = this.pw_1;
    // Inline function 'kotlin.Companion.success' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
    this_0.wb(tmp$ret$0);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
}
class ResumeAwaitOnCompletion extends JobNode {
  constructor(continuation) {
    super();
    this.vw_1 = continuation;
  }
  jq(cause) {
    var state = this.iu().bo();
    // Inline function 'kotlinx.coroutines.assert' call
    if (state instanceof CompletedExceptionally) {
      // Inline function 'kotlin.coroutines.resumeWithException' call
      var this_0 = this.vw_1;
      // Inline function 'kotlin.Companion.failure' call
      var exception = state.mn_1;
      var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(exception));
      this_0.wb(tmp$ret$0);
    } else {
      // Inline function 'kotlin.coroutines.resume' call
      var this_1 = this.vw_1;
      var tmp = unboxState(state);
      // Inline function 'kotlin.Companion.success' call
      var value = (tmp == null ? true : !(tmp == null)) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      var tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(value);
      this_1.wb(tmp$ret$2);
    }
  }
}
class IncompleteStateBox {
  constructor(state) {
    this.qw_1 = state;
  }
}
class ChildContinuation extends JobCancellingNode {
  constructor(child) {
    super();
    this.ax_1 = child;
  }
  jq(cause) {
    this.ax_1.ur(this.ax_1.vr(this.iu()));
  }
}
class JobImpl extends JobSupport {
  constructor(parent) {
    super(true);
    this.cn(parent);
    this.dx_1 = handlesExceptionF(this);
  }
  no() {
    return true;
  }
  yo() {
    return this.dx_1;
  }
  is() {
    return this.zv(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
  }
  js(exception) {
    return this.zv(new CompletedExceptionally(exception));
  }
}
class MainCoroutineDispatcher extends CoroutineDispatcher {
  toString() {
    var tmp0_elvis_lhs = this.gx();
    return tmp0_elvis_lhs == null ? get_classSimpleName(this) + '@' + get_hexAddress(this) : tmp0_elvis_lhs;
  }
  gx() {
    var main = Dispatchers_getInstance().lx();
    if (this === main)
      return 'Dispatchers.Main';
    var tmp;
    try {
      tmp = main.fx();
    } catch ($p) {
      var tmp_0;
      if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UnsupportedOperationException2tkumpmhredt3) {
        var e = $p;
        tmp_0 = null;
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    var immediate = tmp;
    if (this === immediate)
      return 'Dispatchers.Main.immediate';
    return null;
  }
}
class SupervisorJobImpl extends JobImpl {
  so(cause) {
    return false;
  }
}
class TimeoutCancellationException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr {}
class Unconfined extends CoroutineDispatcher {
  constructor() {
    Unconfined_instance = null;
    super();
    Unconfined_instance = this;
  }
  ps(context) {
    return false;
  }
  qs(context, block) {
    var yieldContext = context.yb(Key_instance_4);
    if (!(yieldContext == null)) {
      yieldContext.rx_1 = true;
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UnsupportedOperationException2tkumpmhredt3.x8('Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls.');
  }
  toString() {
    return 'Dispatchers.Unconfined';
  }
}
class Key_3 {}
class CancellableFlow {}
class AbstractFlow {
  ux(collector, $completion) {
    var tmp = new $collectCOROUTINE$8(this, collector, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
}
class SafeFlow extends AbstractFlow {
  constructor(block) {
    super();
    this.sx_1 = block;
  }
  tx(collector, $completion) {
    return this.sx_1(collector, $completion);
  }
}
class $collectCOROUTINE$7 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, collector, resultContinuation) {
    super(resultContinuation);
    this.dy_1 = _this__u8e3s4;
    this.ey_1 = collector;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            var tmp_0 = this;
            tmp_0.fy_1 = this.ey_1;
            var tmp_1 = this;
            tmp_1.gy_1 = this.dy_1.ky_1;
            this.hy_1 = this.gy_1.w();
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!this.hy_1.x()) {
              this.lb_1 = 3;
              continue $sm;
            }

            this.iy_1 = this.hy_1.y();
            var tmp_2 = this;
            tmp_2.jy_1 = this.iy_1;
            this.lb_1 = 2;
            suspendResult = this.fy_1.ly(this.jy_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.lb_1 = 1;
            continue $sm;
          case 3:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class _no_name_provided__qut3iv {
  constructor($this_asFlow) {
    this.ky_1 = $this_asFlow;
  }
  my(collector, $completion) {
    var tmp = new $collectCOROUTINE$7(this, collector, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ux(collector, $completion) {
    return this.my(collector, $completion);
  }
}
class $collectCOROUTINE$8 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, collector, resultContinuation) {
    super(resultContinuation);
    this.vy_1 = _this__u8e3s4;
    this.wy_1 = collector;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            var tmp_0 = this;
            tmp_0.xy_1 = new SafeCollector(this.wy_1, this.rb());
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.mb_1 = 4;
            this.lb_1 = 2;
            suspendResult = this.vy_1.tx(this.xy_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.yy_1 = suspendResult;
            this.mb_1 = 5;
            this.lb_1 = 3;
            continue $sm;
          case 3:
            this.mb_1 = 5;
            this.xy_1.vb();
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 4:
            this.mb_1 = 5;
            var t = this.ob_1;
            this.xy_1.vb();
            throw t;
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class FlowCollector {}
class sam$kotlinx_coroutines_flow_FlowCollector$0 {
  constructor(function_0) {
    this.jz_1 = function_0;
  }
  ly(value, $completion) {
    return this.jz_1(value, $completion);
  }
}
class CancellableFlowImpl$collect$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($collector, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.sz_1 = $collector;
    super(resultContinuation, $box);
  }
  uz(it, $completion) {
    var tmp = this.vz(it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.uz((p1 == null ? true : !(p1 == null)) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            ensureActive(this.rb());
            this.lb_1 = 1;
            suspendResult = this.sz_1.ly(this.tz_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  vz(it, completion) {
    var i = new CancellableFlowImpl$collect$slambda(this.sz_1, completion);
    i.tz_1 = it;
    return i;
  }
}
class CancellableFlowImpl {
  constructor(flow) {
    this.wz_1 = flow;
  }
  ux(collector, $completion) {
    var tmp = CancellableFlowImpl$collect$slambda_0(collector, null);
    return this.wz_1.ux(new sam$kotlinx_coroutines_flow_FlowCollector$0(tmp), $completion);
  }
}
class $emitCOROUTINE$14 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, value, resultContinuation) {
    super(resultContinuation);
    this.s10_1 = _this__u8e3s4;
    this.t10_1 = value;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            var tmp_0 = this;
            tmp_0.u10_1 = this.t10_1;
            this.lb_1 = 1;
            suspendResult = this.s10_1.w10_1(this.u10_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            if (suspendResult) {
              var tmp_1 = this;
              this.s10_1.x10_1._v = this.u10_1;
              tmp_1.v10_1 = false;
              this.lb_1 = 2;
              continue $sm;
            } else {
              var tmp_2 = this;
              tmp_2.v10_1 = true;
              this.lb_1 = 2;
              continue $sm;
            }

          case 2:
            var ARGUMENT = this.v10_1;
            if (!ARGUMENT) {
              throw AbortFlowException.y10(this.s10_1);
            } else {
              this.lb_1 = 3;
              continue $sm;
            }

          case 3:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class _no_name_provided__qut3iv_0 {
  constructor($predicate, $result) {
    this.w10_1 = $predicate;
    this.x10_1 = $result;
  }
  z10(value, $completion) {
    var tmp = new $emitCOROUTINE$14(this, value, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ly(value, $completion) {
    return this.z10((value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
}
class $firstOrNullCOROUTINE$13 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, predicate, resultContinuation) {
    super(resultContinuation);
    this.f10_1 = _this__u8e3s4;
    this.g10_1 = predicate;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            this.h10_1 = {_v: null};
            var tmp_0 = this;
            tmp_0.i10_1 = this.f10_1;
            var tmp_1 = this;
            tmp_1.j10_1 = new _no_name_provided__qut3iv_0(this.g10_1, this.h10_1);
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.i10_1.ux(this.j10_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.mb_1 = 4;
            this.lb_1 = 3;
            continue $sm;
          case 2:
            this.mb_1 = 4;
            var tmp_2 = this.ob_1;
            if (tmp_2 instanceof AbortFlowException) {
              var e = this.ob_1;
              checkOwnership(e, this.j10_1);
              this.lb_1 = 3;
              continue $sm;
            } else {
              throw this.ob_1;
            }

          case 3:
            this.mb_1 = 4;
            return this.h10_1._v;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e_0 = $p;
        if (this.mb_1 === 4) {
          throw e_0;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e_0;
        }
      }
     while (true);
  }
}
class OpDescriptor {}
class ConcurrentLinkedListNode {}
class Segment extends ConcurrentLinkedListNode {}
class ExceptionSuccessfullyProcessed extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {}
class DispatchedContinuation extends DispatchedTask {
  constructor(dispatcher, continuation) {
    super(-1);
    this.mq_1 = dispatcher;
    this.nq_1 = continuation;
    this.oq_1 = get_UNDEFINED();
    this.pq_1 = threadContextElements(this.rb());
    this.qq_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(null);
  }
  rb() {
    return this.nq_1.rb();
  }
  rq() {
    return !(this.qq_1.kotlinx$atomicfu$value == null);
  }
  e11() {
    // Inline function 'kotlinx.atomicfu.loop' call
    var this_0 = this.qq_1;
    while (true) {
      // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.awaitReusability.<anonymous>' call
      if (!(this_0.kotlinx$atomicfu$value === get_REUSABLE_CLAIMED()))
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
  }
  rs() {
    this.e11();
    var tmp0_safe_receiver = _get_reusableCancellableContinuation__9qex09(this);
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.nr();
    }
  }
  zr(continuation) {
    // Inline function 'kotlinx.atomicfu.loop' call
    var this_0 = this.qq_1;
    while (true) {
      // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.tryReleaseClaimedContinuation.<anonymous>' call
      var state = this_0.kotlinx$atomicfu$value;
      if (state === get_REUSABLE_CLAIMED()) {
        if (this.qq_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), continuation))
          return null;
      } else {
        if (state instanceof Error) {
          // Inline function 'kotlin.require' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'kotlin.require' call
          // Inline function 'kotlin.contracts.contract' call
          if (!this.qq_1.atomicfu$compareAndSet(state, null)) {
            // Inline function 'kotlin.require.<anonymous>' call
            var message = 'Failed requirement.';
            throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
          }
          return state;
        } else {
          var message_0 = 'Inconsistent state ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(state);
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
        }
      }
    }
  }
  tq(cause) {
    // Inline function 'kotlinx.atomicfu.loop' call
    var this_0 = this.qq_1;
    while (true) {
      // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.postponeCancellation.<anonymous>' call
      var state = this_0.kotlinx$atomicfu$value;
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(state, get_REUSABLE_CLAIMED())) {
        if (this.qq_1.atomicfu$compareAndSet(get_REUSABLE_CLAIMED(), cause))
          return true;
      } else {
        if (state instanceof Error)
          return true;
        else {
          if (this.qq_1.atomicfu$compareAndSet(state, null))
            return false;
        }
      }
    }
  }
  qr() {
    var state = this.oq_1;
    // Inline function 'kotlinx.coroutines.assert' call
    this.oq_1 = get_UNDEFINED();
    return state;
  }
  or() {
    return this;
  }
  wb(result) {
    var context = this.nq_1.rb();
    var state = toState_0(result);
    if (this.mq_1.ps(context)) {
      this.oq_1 = state;
      this.sq_1 = 0;
      this.mq_1.qs(context, this);
    } else {
      $l$block: {
        // Inline function 'kotlinx.coroutines.internal.executeUnconfined' call
        // Inline function 'kotlinx.coroutines.assert' call
        var eventLoop = ThreadLocalEventLoop_getInstance().it();
        if (false) {}
        var tmp;
        if (eventLoop.ct()) {
          this.oq_1 = state;
          this.sq_1 = 0;
          eventLoop.bt(this);
          tmp = true;
        } else {
          // Inline function 'kotlinx.coroutines.runUnconfinedEventLoop' call
          eventLoop.et(true);
          try {
            // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeWith.<anonymous>' call
            // Inline function 'kotlinx.coroutines.withCoroutineContext' call
            this.rb();
            this.pq_1;
            this.nq_1.wb(result);
            $l$loop: while (eventLoop.at()) {
            }
          } catch ($p) {
            if ($p instanceof Error) {
              var e = $p;
              this.fs(e, null);
            } else {
              throw $p;
            }
          }
          finally {
            eventLoop.ft(true);
          }
          tmp = false;
        }
      }
    }
  }
  rr(takenState, cause) {
    if (takenState instanceof CompletedWithCancellation) {
      takenState.ns_1(cause);
    }
  }
  toString() {
    return 'DispatchedContinuation[' + this.mq_1.toString() + ', ' + toDebugString(this.nq_1) + ']';
  }
}
class ContextScope {
  constructor(context) {
    this.f11_1 = context;
  }
  gn() {
    return this.f11_1;
  }
  toString() {
    return 'CoroutineScope(coroutineContext=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.f11_1) + ')';
  }
}
class ScopeCoroutine extends AbstractCoroutine {}
class Symbol {
  constructor(symbol) {
    this.g11_1 = symbol;
  }
  toString() {
    return '<' + this.g11_1 + '>';
  }
}
class SetTimeoutBasedDispatcher extends CoroutineDispatcher {
  constructor() {
    super();
    this.q11_1 = new ScheduledMessageQueue(this);
  }
  qs(context, block) {
    this.q11_1.e12(block);
  }
  vs(timeMillis, continuation) {
    var handle = w3cSetTimeout(SetTimeoutBasedDispatcher$scheduleResumeAfterDelay$lambda(continuation, this), delayToInt(timeMillis));
    invokeOnCancellation(continuation, new ClearTimeout(handle));
  }
}
class NodeDispatcher extends SetTimeoutBasedDispatcher {
  constructor() {
    NodeDispatcher_instance = null;
    super();
    NodeDispatcher_instance = this;
  }
  j11() {
    process.nextTick(this.q11_1.o11_1);
  }
}
class MessageQueue {
  constructor() {
    this.r11_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayDeque2dzc9uld4xi7n.ch();
    this.s11_1 = 16;
    this.t11_1 = false;
  }
  z() {
    return this.r11_1.zg_1;
  }
  y11(index, element) {
    this.r11_1.l2(index, element);
  }
  l2(index, element) {
    return this.y11(index, (!(element == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(element, Runnable) : false) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  z11(element) {
    return this.r11_1.g(element);
  }
  g(element) {
    return this.z11((!(element == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(element, Runnable) : false) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  a12(elements) {
    return this.r11_1.b1(elements);
  }
  b1(elements) {
    return this.a12(elements);
  }
  j2() {
    this.r11_1.j2();
  }
  b12(element) {
    return this.r11_1.h2(element);
  }
  h2(element) {
    if (!(!(element == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(element, Runnable) : false))
      return false;
    return this.b12((!(element == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(element, Runnable) : false) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  c12(elements) {
    return this.r11_1.i2(elements);
  }
  i2(elements) {
    return this.c12(elements);
  }
  c1(index) {
    return this.r11_1.c1(index);
  }
  f1() {
    return this.r11_1.f1();
  }
  w() {
    return this.r11_1.w();
  }
  m2(index) {
    return this.r11_1.m2(index);
  }
  d12(index, element) {
    return this.r11_1.k2(index, element);
  }
  k2(index, element) {
    return this.d12(index, (!(element == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(element, Runnable) : false) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  e12(element) {
    this.z11(element);
    if (!this.t11_1) {
      this.t11_1 = true;
      this.v11();
    }
  }
  u11() {
    try {
      // Inline function 'kotlin.repeat' call
      var times = this.s11_1;
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      if (inductionVariable < times)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlinx.coroutines.MessageQueue.process.<anonymous>' call
          var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.removeFirstOrNull15yg2tczrh8a7)(this);
          var tmp;
          if (tmp0_elvis_lhs == null) {
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          } else {
            tmp = tmp0_elvis_lhs;
          }
          var element = tmp;
          element.es();
        }
         while (inductionVariable < times);
    }finally {
      if (this.f1()) {
        this.t11_1 = false;
      } else {
        this.w11();
      }
    }
  }
}
class ScheduledMessageQueue extends MessageQueue {
  constructor(dispatcher) {
    super();
    this.n11_1 = dispatcher;
    var tmp = this;
    tmp.o11_1 = ScheduledMessageQueue$processQueue$lambda(this);
  }
  v11() {
    this.n11_1.j11();
  }
  w11() {
    setTimeout(this.o11_1, 0);
  }
  x11(timeout) {
    setTimeout(this.o11_1, timeout);
  }
}
class WindowMessageQueue extends MessageQueue {
  constructor(window_0) {
    super();
    this.i12_1 = window_0;
    this.j12_1 = 'dispatchCoroutine';
    this.i12_1.addEventListener('message', WindowMessageQueue$lambda(this), true);
  }
  v11() {
    var tmp = Promise.resolve(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
    tmp.then(WindowMessageQueue$schedule$lambda(this));
  }
  w11() {
    this.i12_1.postMessage(this.j12_1, '*');
  }
}
class Dispatchers {
  constructor() {
    Dispatchers_instance = this;
    this.hx_1 = createDefaultDispatcher();
    this.ix_1 = Unconfined_getInstance();
    this.jx_1 = new JsMainDispatcher(this.hx_1, false);
    this.kx_1 = null;
  }
  lx() {
    var tmp0_elvis_lhs = this.kx_1;
    return tmp0_elvis_lhs == null ? this.jx_1 : tmp0_elvis_lhs;
  }
}
class JsMainDispatcher extends MainCoroutineDispatcher {
  constructor(delegate, invokeImmediately) {
    super();
    this.l12_1 = delegate;
    this.m12_1 = invokeImmediately;
    this.n12_1 = this.m12_1 ? this : new JsMainDispatcher(this.l12_1, true);
  }
  fx() {
    return this.n12_1;
  }
  ps(context) {
    return !this.m12_1;
  }
  qs(context, block) {
    return this.l12_1.qs(context, block);
  }
  toString() {
    var tmp0_elvis_lhs = this.gx();
    return tmp0_elvis_lhs == null ? this.l12_1.toString() : tmp0_elvis_lhs;
  }
}
class UnconfinedEventLoop extends EventLoop {
  qs(context, block) {
    unsupported();
  }
}
class JobCancellationException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr {
  static wu(message, cause, job) {
    var $this = this.ic(message, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.vu_1);
    $this.uu_1 = job;
    return $this;
  }
  toString() {
    return super.toString() + '; job=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.uu_1);
  }
  equals(other) {
    var tmp;
    if (other === this) {
      tmp = true;
    } else {
      var tmp_0;
      var tmp_1;
      var tmp_2;
      if (other instanceof JobCancellationException) {
        tmp_2 = other.message == this.message;
      } else {
        tmp_2 = false;
      }
      if (tmp_2) {
        tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(other.uu_1, this.uu_1);
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(other.cause, this.cause);
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  hashCode() {
    var tmp = imul(imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(this.message)), 31) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.uu_1) | 0, 31);
    var tmp0_safe_receiver = this.cause;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(tmp0_safe_receiver);
    return tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
  }
}
class TaskContext {}
class AbortFlowException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr {
  static y10(owner) {
    var $this = this.hc('Flow was aborted, no more elements needed');
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.iz_1);
    $this.hz_1 = owner;
    return $this;
  }
}
class SafeCollector {
  constructor(collector, collectContext) {
    this.zy_1 = collector;
    this.az_1 = collectContext;
    var tmp = this;
    tmp.bz_1 = this.az_1.wi(0, SafeCollector$collectContextSize$lambda);
    this.cz_1 = null;
  }
  ly(value, $completion) {
    // Inline function 'kotlinx.coroutines.currentCoroutineContext' call
    // Inline function 'kotlin.js.getCoroutineContext' call
    var currentContext = $completion.rb();
    ensureActive(currentContext);
    if (!(this.cz_1 === currentContext)) {
      checkContext(this, currentContext);
      this.cz_1 = currentContext;
    }
    return this.zy_1.ly(value, $completion);
  }
  vb() {
  }
}
class DiagnosticCoroutineContextException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.RuntimeException1r3t0zl97011n {
  static d11(context) {
    var $this = this.g9((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(context));
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.c11_1);
    return $this;
  }
}
class SetTimeoutDispatcher extends SetTimeoutBasedDispatcher {
  constructor() {
    SetTimeoutDispatcher_instance = null;
    super();
    SetTimeoutDispatcher_instance = this;
  }
  j11() {
    this.q11_1.x11(0);
  }
}
class ClearTimeout {
  constructor(handle, $box) {
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.boxApply1qmzdb3dh90hg)(this, $box);
    this.z12_1 = handle;
  }
  kq() {
    w3cClearTimeout_0(this.z12_1);
  }
  jq(cause) {
    this.kq();
  }
  toString() {
    return 'ClearTimeout[' + this.z12_1 + ']';
  }
}
class WindowClearTimeout extends ClearTimeout {
  constructor($outer, handle, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.v12_1 = $outer;
    super(handle, $box);
  }
  kq() {
    w3cClearTimeout(this.v12_1.x12_1, this.z12_1);
  }
}
class WindowDispatcher extends CoroutineDispatcher {
  constructor(window_0) {
    super();
    this.x12_1 = window_0;
    this.y12_1 = new WindowMessageQueue(this.x12_1);
  }
  qs(context, block) {
    return this.y12_1.e12(block);
  }
  vs(timeMillis, continuation) {
    var handle = w3cSetTimeout_0(this.x12_1, WindowDispatcher$scheduleResumeAfterDelay$lambda(continuation, this), delayToInt(timeMillis));
    invokeOnCancellation(continuation, new WindowClearTimeout(this, handle));
  }
}
class CommonThreadLocal {
  constructor() {
    this.jt_1 = null;
  }
  kt() {
    var tmp = this.jt_1;
    return (tmp == null ? true : !(tmp == null)) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  lt(value) {
    this.jt_1 = value;
  }
}
//endregion
function launch(_this__u8e3s4, context, start, block) {
  context = context === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.EmptyCoroutineContext_getInstance2bxophqwsfm9n)() : context;
  start = start === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? CoroutineStart_DEFAULT_getInstance() : start;
  var newContext = newCoroutineContext(_this__u8e3s4, context);
  var coroutine = start.cp() ? new LazyStandaloneCoroutine(newContext, block) : new StandaloneCoroutine(newContext, true);
  coroutine.un(start, coroutine, block);
  return coroutine;
}
function async(_this__u8e3s4, context, start, block) {
  context = context === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.EmptyCoroutineContext_getInstance2bxophqwsfm9n)() : context;
  start = start === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? CoroutineStart_DEFAULT_getInstance() : start;
  var newContext = newCoroutineContext(_this__u8e3s4, context);
  var coroutine = start.cp() ? new LazyDeferredCoroutine(newContext, block) : new DeferredCoroutine(newContext, true);
  coroutine.un(start, coroutine, block);
  return coroutine;
}
function disposeOnCancellation(_this__u8e3s4, handle) {
  return invokeOnCancellation(_this__u8e3s4, new DisposeOnCancel(handle));
}
function invokeOnCancellation(_this__u8e3s4, handler) {
  var tmp;
  if (_this__u8e3s4 instanceof CancellableContinuationImpl) {
    _this__u8e3s4.hq(handler);
    tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  } else {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UnsupportedOperationException2tkumpmhredt3.x8('third-party implementation of CancellableContinuation is not supported');
  }
  return tmp;
}
var RESUME_TOKEN;
function _get_parentHandle__f8dcex($this) {
  return $this.gq_1.kotlinx$atomicfu$value;
}
function _get_stateDebugRepresentation__bf18u4($this) {
  var tmp0_subject = $this.bo();
  var tmp;
  if (!(tmp0_subject == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp0_subject, NotCompleted) : false) {
    tmp = 'Active';
  } else {
    if (tmp0_subject instanceof CancelledContinuation) {
      tmp = 'Cancelled';
    } else {
      tmp = 'Completed';
    }
  }
  return tmp;
}
function isReusable($this) {
  var tmp;
  if (get_isReusableMode($this.sq_1)) {
    var tmp_0 = $this.cq_1;
    tmp = (tmp_0 instanceof DispatchedContinuation ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()).rq();
  } else {
    tmp = false;
  }
  return tmp;
}
function cancelLater($this, cause) {
  if (!isReusable($this))
    return false;
  var tmp = $this.cq_1;
  var dispatched = tmp instanceof DispatchedContinuation ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  return dispatched.tq(cause);
}
function callSegmentOnCancellation($this, segment, cause) {
  // Inline function 'kotlinx.coroutines.index' call
  var index = $this.eq_1.kotlinx$atomicfu$value & 536870911;
  // Inline function 'kotlin.check' call
  // Inline function 'kotlin.contracts.contract' call
  if (!!(index === 536870911)) {
    // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.callSegmentOnCancellation.<anonymous>' call
    var message = 'The index for Segment.onCancellation(..) is broken';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.callCancelHandlerSafely' call
  try {
    // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.callSegmentOnCancellation.<anonymous>' call
    segment.uq(index, cause, $this.rb());
  } catch ($p) {
    if ($p instanceof Error) {
      var ex = $p;
      handleCoroutineException($this.rb(), CompletionHandlerException.yq('Exception in invokeOnCancellation handler for ' + $this.toString(), ex));
    } else {
      throw $p;
    }
  }
}
function trySuspend($this) {
  // Inline function 'kotlinx.atomicfu.loop' call
  var this_0 = $this.eq_1;
  while (true) {
    // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.trySuspend.<anonymous>' call
    var cur = this_0.kotlinx$atomicfu$value;
    // Inline function 'kotlinx.coroutines.decision' call
    switch (cur >> _get_DECISION_SHIFT_$accessor$2jt7ek_1tkg2i()) {
      case 0:
        // Inline function 'kotlinx.coroutines.decisionAndIndex' call

        // Inline function 'kotlinx.coroutines.index' call

        var index = cur & 536870911;
        var tmp$ret$2 = (1 << _get_DECISION_SHIFT_$accessor$2jt7ek_1tkg2i()) + index | 0;
        if ($this.eq_1.atomicfu$compareAndSet(cur, tmp$ret$2))
          return true;
        break;
      case 2:
        return false;
      default:
        // Inline function 'kotlin.error' call

        var message = 'Already suspended';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
  }
}
function tryResume($this) {
  // Inline function 'kotlinx.atomicfu.loop' call
  var this_0 = $this.eq_1;
  while (true) {
    // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.tryResume.<anonymous>' call
    var cur = this_0.kotlinx$atomicfu$value;
    // Inline function 'kotlinx.coroutines.decision' call
    switch (cur >> _get_DECISION_SHIFT_$accessor$2jt7ek_1tkg2i()) {
      case 0:
        // Inline function 'kotlinx.coroutines.decisionAndIndex' call

        // Inline function 'kotlinx.coroutines.index' call

        var index = cur & 536870911;
        var tmp$ret$2 = (2 << _get_DECISION_SHIFT_$accessor$2jt7ek_1tkg2i()) + index | 0;
        if ($this.eq_1.atomicfu$compareAndSet(cur, tmp$ret$2))
          return true;
        break;
      case 1:
        return false;
      default:
        // Inline function 'kotlin.error' call

        var message = 'Already resumed';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
  }
}
function installParentHandle($this) {
  var tmp0_elvis_lhs = $this.rb().yb(Key_instance_3);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    return null;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var parent = tmp;
  var handle = invokeOnCompletion(parent, true, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, new ChildContinuation($this));
  $this.gq_1.atomicfu$compareAndSet(null, handle);
  return handle;
}
function invokeOnCancellationImpl($this, handler) {
  // Inline function 'kotlinx.coroutines.assert' call
  // Inline function 'kotlinx.atomicfu.loop' call
  var this_0 = $this.fq_1;
  while (true) {
    // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.invokeOnCancellationImpl.<anonymous>' call
    var state = this_0.kotlinx$atomicfu$value;
    if (state instanceof Active) {
      if ($this.fq_1.atomicfu$compareAndSet(state, handler))
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      var tmp;
      if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, CancelHandler) : false) {
        tmp = true;
      } else {
        tmp = state instanceof Segment;
      }
      if (tmp) {
        multipleHandlersError($this, handler, state);
      } else {
        if (state instanceof CompletedExceptionally) {
          if (!state.hr()) {
            multipleHandlersError($this, handler, state);
          }
          if (state instanceof CancelledContinuation) {
            var tmp1_safe_receiver = state instanceof CompletedExceptionally ? state : null;
            var cause = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.mn_1;
            if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(handler, CancelHandler)) {
              $this.er(handler, cause);
            } else {
              var segment = handler instanceof Segment ? handler : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
              callSegmentOnCancellation($this, segment, cause);
            }
          }
          return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        } else {
          if (state instanceof CompletedContinuation) {
            if (!(state.ar_1 == null)) {
              multipleHandlersError($this, handler, state);
            }
            if (handler instanceof Segment)
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(handler, CancelHandler))
              (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
            if (state.fr()) {
              $this.er(handler, state.dr_1);
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            }
            var update = state.gr(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, handler);
            if ($this.fq_1.atomicfu$compareAndSet(state, update))
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          } else {
            if (handler instanceof Segment)
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(handler, CancelHandler))
              (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
            var update_0 = new CompletedContinuation(state, handler);
            if ($this.fq_1.atomicfu$compareAndSet(state, update_0))
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          }
        }
      }
    }
  }
}
function multipleHandlersError($this, handler, state) {
  // Inline function 'kotlin.error' call
  var message = "It's prohibited to register multiple handlers, tried to register " + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(handler) + ', already has ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(state);
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
}
function dispatchResume($this, mode) {
  if (tryResume($this))
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  dispatch($this, mode);
}
function resumedState($this, state, proposedUpdate, resumeMode, onCancellation, idempotent) {
  var tmp;
  if (proposedUpdate instanceof CompletedExceptionally) {
    // Inline function 'kotlinx.coroutines.assert' call
    // Inline function 'kotlinx.coroutines.assert' call
    tmp = proposedUpdate;
  } else {
    if (!get_isCancellableMode(resumeMode) && idempotent == null) {
      tmp = proposedUpdate;
    } else {
      var tmp_0;
      var tmp_1;
      if (!(onCancellation == null)) {
        tmp_1 = true;
      } else {
        tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, CancelHandler);
      }
      if (tmp_1) {
        tmp_0 = true;
      } else {
        tmp_0 = !(idempotent == null);
      }
      if (tmp_0) {
        tmp = new CompletedContinuation(proposedUpdate, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, CancelHandler) ? state : null, onCancellation, idempotent);
      } else {
        tmp = proposedUpdate;
      }
    }
  }
  return tmp;
}
function resumeImpl($this, proposedUpdate, resumeMode, onCancellation) {
  // Inline function 'kotlinx.atomicfu.loop' call
  var this_0 = $this.fq_1;
  while (true) {
    $l$block: {
      // Inline function 'kotlinx.coroutines.CancellableContinuationImpl.resumeImpl.<anonymous>' call
      var state = this_0.kotlinx$atomicfu$value;
      if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, NotCompleted) : false) {
        var update = resumedState($this, state, proposedUpdate, resumeMode, onCancellation, null);
        if (!$this.fq_1.atomicfu$compareAndSet(state, update)) {
          break $l$block;
        }
        detachChildIfNonResuable($this);
        dispatchResume($this, resumeMode);
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      } else {
        if (state instanceof CancelledContinuation) {
          if (state.mr()) {
            if (onCancellation == null)
              null;
            else {
              // Inline function 'kotlin.let' call
              // Inline function 'kotlin.contracts.contract' call
              $this.ir(onCancellation, state.mn_1);
            }
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          }
        }
      }
      alreadyResumedError($this, proposedUpdate);
    }
  }
}
function resumeImpl$default($this, proposedUpdate, resumeMode, onCancellation, $super) {
  onCancellation = onCancellation === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : onCancellation;
  return resumeImpl($this, proposedUpdate, resumeMode, onCancellation);
}
function alreadyResumedError($this, proposedUpdate) {
  // Inline function 'kotlin.error' call
  var message = 'Already resumed, but proposed with update ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(proposedUpdate);
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
}
function detachChildIfNonResuable($this) {
  if (!isReusable($this)) {
    $this.nr();
  }
}
var Active_instance;
function Active_getInstance() {
  return Active_instance;
}
function _get_DECISION_SHIFT_$accessor$2jt7ek_1tkg2i() {
  _init_properties_CancellableContinuationImpl_kt__6rrtdd();
  return 29;
}
var properties_initialized_CancellableContinuationImpl_kt_xtzb03;
function _init_properties_CancellableContinuationImpl_kt__6rrtdd() {
  if (!properties_initialized_CancellableContinuationImpl_kt_xtzb03) {
    properties_initialized_CancellableContinuationImpl_kt_xtzb03 = true;
    RESUME_TOKEN = new Symbol('RESUME_TOKEN');
  }
}
function toState(_this__u8e3s4, caller) {
  // Inline function 'kotlin.fold' call
  // Inline function 'kotlin.contracts.contract' call
  var exception = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result__exceptionOrNull_impl_p6xea91phgcskd46fkx)(_this__u8e3s4);
  var tmp;
  if (exception == null) {
    // Inline function 'kotlinx.coroutines.toState.<anonymous>' call
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_value__impl__bjfvqg1uwg4i093qaqh)(_this__u8e3s4);
    tmp = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  } else {
    // Inline function 'kotlinx.coroutines.toState.<anonymous>' call
    tmp = new CompletedExceptionally(recoverStackTrace(exception, caller));
  }
  return tmp;
}
function toState_0(_this__u8e3s4, onCancellation) {
  onCancellation = onCancellation === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : onCancellation;
  // Inline function 'kotlin.fold' call
  // Inline function 'kotlin.contracts.contract' call
  var exception = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result__exceptionOrNull_impl_p6xea91phgcskd46fkx)(_this__u8e3s4);
  var tmp;
  if (exception == null) {
    // Inline function 'kotlinx.coroutines.toState.<anonymous>' call
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_value__impl__bjfvqg1uwg4i093qaqh)(_this__u8e3s4);
    var it = (tmp_0 == null ? true : !(tmp_0 == null)) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    tmp = !(onCancellation == null) ? new CompletedWithCancellation(it, onCancellation) : it;
  } else {
    // Inline function 'kotlinx.coroutines.toState.<anonymous>' call
    tmp = new CompletedExceptionally(exception);
  }
  return tmp;
}
function CoroutineDispatcher$Key$_init_$lambda_akl8b5(it) {
  return it instanceof CoroutineDispatcher ? it : null;
}
var Key_instance_0;
function Key_getInstance() {
  if (Key_instance_0 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Key();
  return Key_instance_0;
}
function handleCoroutineException(context, exception) {
  try {
    var tmp0_safe_receiver = context.yb(Key_instance_1);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      tmp0_safe_receiver.ss(context, exception);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
  } catch ($p) {
    if ($p instanceof Error) {
      var t = $p;
      handleUncaughtCoroutineException(context, handlerException(exception, t));
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      throw $p;
    }
  }
  handleUncaughtCoroutineException(context, exception);
}
var Key_instance_1;
function Key_getInstance_0() {
  return Key_instance_1;
}
function handlerException(originalException, thrownException) {
  if (originalException === thrownException)
    return originalException;
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.RuntimeException1r3t0zl97011n.hd('Exception while trying to handle coroutine exception', thrownException);
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlinx.coroutines.handlerException.<anonymous>' call
  (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.addSuppressedu5jwjfvsc039)(this_0, originalException);
  return this_0;
}
var Key_instance_2;
function Key_getInstance_1() {
  return Key_instance_2;
}
function cancel(_this__u8e3s4, cause) {
  cause = cause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cause;
  var tmp0_elvis_lhs = _this__u8e3s4.gn().yb(Key_instance_3);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    var message = 'Scope cannot be cancelled because it does not have a job: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(_this__u8e3s4);
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var job = tmp;
  job.oo(cause);
}
function cancel_0(_this__u8e3s4, message, cause) {
  cause = cause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cause;
  return cancel(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr.ic(message, cause));
}
var GlobalScope_instance;
function GlobalScope_getInstance() {
  return GlobalScope_instance;
}
function CoroutineScope_0(context) {
  return new ContextScope(!(context.yb(Key_instance_3) == null) ? context : context.xi(Job_0()));
}
var CoroutineStart_DEFAULT_instance;
var CoroutineStart_LAZY_instance;
var CoroutineStart_ATOMIC_instance;
var CoroutineStart_UNDISPATCHED_instance;
var CoroutineStart_entriesInitialized;
function CoroutineStart_initEntries() {
  if (CoroutineStart_entriesInitialized)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  CoroutineStart_entriesInitialized = true;
  CoroutineStart_DEFAULT_instance = new CoroutineStart('DEFAULT', 0);
  CoroutineStart_LAZY_instance = new CoroutineStart('LAZY', 1);
  CoroutineStart_ATOMIC_instance = new CoroutineStart('ATOMIC', 2);
  CoroutineStart_UNDISPATCHED_instance = new CoroutineStart('UNDISPATCHED', 3);
}
function CoroutineStart_DEFAULT_getInstance() {
  CoroutineStart_initEntries();
  return CoroutineStart_DEFAULT_instance;
}
function CoroutineStart_LAZY_getInstance() {
  CoroutineStart_initEntries();
  return CoroutineStart_LAZY_instance;
}
function get_delay(_this__u8e3s4) {
  var tmp = _this__u8e3s4.yb(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance2d3ch37kcwr5h);
  var tmp0_elvis_lhs = (!(tmp == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, Delay) : false) ? tmp : null;
  return tmp0_elvis_lhs == null ? get_DefaultDelay() : tmp0_elvis_lhs;
}
function delay(timeMillis, $completion) {
  if (timeMillis.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) <= 0)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  // Inline function 'kotlinx.coroutines.suspendCancellableCoroutine.<anonymous>' call
  var cancellable = new CancellableContinuationImpl((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)($completion), 1);
  cancellable.pr();
  // Inline function 'kotlinx.coroutines.delay.<anonymous>' call
  if (timeMillis.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(-1, 2147483647)) < 0) {
    get_delay(cancellable.rb()).vs(timeMillis, cancellable);
  }
  return cancellable.wr();
}
function delta($this, unconfined) {
  return unconfined ? new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 1) : new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(1, 0);
}
var ThreadLocalEventLoop_instance;
function ThreadLocalEventLoop_getInstance() {
  if (ThreadLocalEventLoop_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ThreadLocalEventLoop();
  return ThreadLocalEventLoop_instance;
}
var Key_instance_3;
function Key_getInstance_2() {
  return Key_instance_3;
}
var NonDisposableHandle_instance;
function NonDisposableHandle_getInstance() {
  return NonDisposableHandle_instance;
}
function ensureActive(_this__u8e3s4) {
  var tmp0_safe_receiver = _this__u8e3s4.yb(Key_instance_3);
  if (tmp0_safe_receiver == null)
    null;
  else {
    ensureActive_0(tmp0_safe_receiver);
  }
}
function invokeOnCompletion(_this__u8e3s4, onCancelling, invokeImmediately, handler) {
  onCancelling = onCancelling === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : onCancelling;
  invokeImmediately = invokeImmediately === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? true : invokeImmediately;
  var tmp;
  if (_this__u8e3s4 instanceof JobSupport) {
    tmp = _this__u8e3s4.lo(onCancelling, invokeImmediately, handler);
  } else {
    tmp = _this__u8e3s4.jo(onCancelling, invokeImmediately, InternalCompletionHandler$invoke$ref(handler));
  }
  return tmp;
}
function ensureActive_0(_this__u8e3s4) {
  if (!_this__u8e3s4.hn())
    throw _this__u8e3s4.fo();
}
function cancel_1(_this__u8e3s4, message, cause) {
  cause = cause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cause;
  return _this__u8e3s4.oo(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr.ic(message, cause));
}
function Job_0(parent) {
  parent = parent === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : parent;
  return new JobImpl(parent);
}
function get_job(_this__u8e3s4) {
  var tmp0_elvis_lhs = _this__u8e3s4.yb(Key_instance_3);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    var message = "Current context doesn't contain Job in it: " + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(_this__u8e3s4);
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function InternalCompletionHandler$invoke$ref($boundThis) {
  var l = function (p0) {
    $boundThis.jq(p0);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
  l.callableName = 'invoke';
  return l;
}
function get_COMPLETING_ALREADY() {
  _init_properties_JobSupport_kt__68f172();
  return COMPLETING_ALREADY;
}
var COMPLETING_ALREADY;
function get_COMPLETING_WAITING_CHILDREN() {
  _init_properties_JobSupport_kt__68f172();
  return COMPLETING_WAITING_CHILDREN;
}
var COMPLETING_WAITING_CHILDREN;
function get_COMPLETING_RETRY() {
  _init_properties_JobSupport_kt__68f172();
  return COMPLETING_RETRY;
}
var COMPLETING_RETRY;
function get_TOO_LATE_TO_CANCEL() {
  _init_properties_JobSupport_kt__68f172();
  return TOO_LATE_TO_CANCEL;
}
var TOO_LATE_TO_CANCEL;
function get_SEALED() {
  _init_properties_JobSupport_kt__68f172();
  return SEALED;
}
var SEALED;
function get_EMPTY_NEW() {
  _init_properties_JobSupport_kt__68f172();
  return EMPTY_NEW;
}
var EMPTY_NEW;
function get_EMPTY_ACTIVE() {
  _init_properties_JobSupport_kt__68f172();
  return EMPTY_ACTIVE;
}
var EMPTY_ACTIVE;
function _set_exceptionsHolder__tqm22h($this, value) {
  $this.nu_1.kotlinx$atomicfu$value = value;
}
function _get_exceptionsHolder__nhszp($this) {
  return $this.nu_1.kotlinx$atomicfu$value;
}
function allocateList($this) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1(4);
}
function finalizeFinishingState($this, state, proposedUpdate) {
  // Inline function 'kotlinx.coroutines.assert' call
  // Inline function 'kotlinx.coroutines.assert' call
  // Inline function 'kotlinx.coroutines.assert' call
  var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
  var proposedException = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.mn_1;
  var wasCancelling;
  // Inline function 'kotlinx.coroutines.internal.synchronized' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlinx.coroutines.internal.synchronizedImpl' call
  // Inline function 'kotlinx.coroutines.JobSupport.finalizeFinishingState.<anonymous>' call
  wasCancelling = state.ou();
  var exceptions = state.pu(proposedException);
  var finalCause = getFinalRootCause($this, state, exceptions);
  if (!(finalCause == null)) {
    addSuppressedExceptions($this, finalCause, exceptions);
  }
  var finalException = finalCause;
  var finalState = finalException == null ? proposedUpdate : finalException === proposedException ? proposedUpdate : new CompletedExceptionally(finalException);
  if (!(finalException == null)) {
    var handled = cancelParent($this, finalException) || $this.zo(finalException);
    if (handled) {
      (finalState instanceof CompletedExceptionally ? finalState : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()).hr();
    }
  }
  if (!wasCancelling) {
    $this.wo(finalException);
  }
  $this.ln(finalState);
  var casSuccess = $this.an_1.atomicfu$compareAndSet(state, boxIncomplete(finalState));
  // Inline function 'kotlinx.coroutines.assert' call
  completeStateFinalization($this, state, finalState);
  return finalState;
}
function getFinalRootCause($this, state, exceptions) {
  if (exceptions.f1()) {
    if (state.ou()) {
      // Inline function 'kotlinx.coroutines.JobSupport.defaultCancellationException' call
      return JobCancellationException.wu( true ? $this.kn() : 0, null, $this);
    }
    return null;
  }
  var tmp$ret$2;
  $l$block: {
    // Inline function 'kotlin.collections.firstOrNull' call
    var tmp0_iterator = exceptions.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlinx.coroutines.JobSupport.getFinalRootCause.<anonymous>' call
      if (!(element instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr)) {
        tmp$ret$2 = element;
        break $l$block;
      }
    }
    tmp$ret$2 = null;
  }
  var firstNonCancellation = tmp$ret$2;
  if (!(firstNonCancellation == null))
    return firstNonCancellation;
  var first = exceptions.c1(0);
  if (first instanceof TimeoutCancellationException) {
    var tmp$ret$4;
    $l$block_0: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator_0 = exceptions.w();
      while (tmp0_iterator_0.x()) {
        var element_0 = tmp0_iterator_0.y();
        // Inline function 'kotlinx.coroutines.JobSupport.getFinalRootCause.<anonymous>' call
        var tmp;
        if (!(element_0 === first)) {
          tmp = element_0 instanceof TimeoutCancellationException;
        } else {
          tmp = false;
        }
        if (tmp) {
          tmp$ret$4 = element_0;
          break $l$block_0;
        }
      }
      tmp$ret$4 = null;
    }
    var detailedTimeoutException = tmp$ret$4;
    if (!(detailedTimeoutException == null))
      return detailedTimeoutException;
  }
  return first;
}
function addSuppressedExceptions($this, rootCause, exceptions) {
  if (exceptions.z() <= 1)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  var seenExceptions = identitySet(exceptions.z());
  var unwrappedCause = unwrap(rootCause);
  var tmp0_iterator = exceptions.w();
  while (tmp0_iterator.x()) {
    var exception = tmp0_iterator.y();
    var unwrapped = unwrap(exception);
    var tmp;
    var tmp_0;
    if (!(unwrapped === rootCause) && !(unwrapped === unwrappedCause)) {
      tmp_0 = !(unwrapped instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = seenExceptions.g(unwrapped);
    } else {
      tmp = false;
    }
    if (tmp) {
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.addSuppressedu5jwjfvsc039)(rootCause, unwrapped);
    }
  }
}
function tryFinalizeSimpleState($this, state, update) {
  // Inline function 'kotlinx.coroutines.assert' call
  // Inline function 'kotlinx.coroutines.assert' call
  if (!$this.an_1.atomicfu$compareAndSet(state, boxIncomplete(update)))
    return false;
  $this.wo(null);
  $this.ln(update);
  completeStateFinalization($this, state, update);
  return true;
}
function completeStateFinalization($this, state, update) {
  var tmp0_safe_receiver = $this.zn();
  if (tmp0_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    tmp0_safe_receiver.kq();
    $this.yn(NonDisposableHandle_instance);
  }
  var tmp1_safe_receiver = update instanceof CompletedExceptionally ? update : null;
  var cause = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.mn_1;
  if (state instanceof JobNode) {
    try {
      state.jq(cause);
    } catch ($p) {
      if ($p instanceof Error) {
        var ex = $p;
        $this.sn(CompletionHandlerException.yq('Exception in completion handler ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(state) + ' for ' + $this.toString(), ex));
      } else {
        throw $p;
      }
    }
  } else {
    var tmp2_safe_receiver = state.qt();
    if (tmp2_safe_receiver == null)
      null;
    else {
      notifyCompletion(tmp2_safe_receiver, $this, cause);
    }
  }
}
function notifyCancelling($this, list, cause) {
  $this.wo(cause);
  // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers' call
  var exception = null;
  // Inline function 'kotlinx.coroutines.internal.LinkedListHead.forEach' call
  var cur = list.vt_1;
  while (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(cur, list)) {
    if (cur instanceof JobCancellingNode) {
      // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>' call
      var node = cur;
      try {
        node.jq(cause);
      } catch ($p) {
        if ($p instanceof Error) {
          var ex = $p;
          var tmp0_safe_receiver = exception;
          var tmp;
          if (tmp0_safe_receiver == null) {
            tmp = null;
          } else {
            // Inline function 'kotlin.apply' call
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>.<anonymous>' call
            (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.addSuppressedu5jwjfvsc039)(tmp0_safe_receiver, ex);
            tmp = tmp0_safe_receiver;
          }
          if (tmp == null) {
            // Inline function 'kotlin.run' call
            // Inline function 'kotlin.contracts.contract' call
            exception = CompletionHandlerException.yq('Exception in completion handler ' + node.toString() + ' for ' + $this.toString(), ex);
          }
        } else {
          throw $p;
        }
      }
    }
    cur = cur.vt_1;
  }
  var tmp0_safe_receiver_0 = exception;
  if (tmp0_safe_receiver_0 == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    $this.sn(tmp0_safe_receiver_0);
  }
  cancelParent($this, cause);
}
function cancelParent($this, cause) {
  if ($this.xo())
    return true;
  var isCancellation = cause instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr;
  var parent = $this.zn();
  if (parent === null || parent === NonDisposableHandle_instance) {
    return isCancellation;
  }
  return parent.so(cause) || isCancellation;
}
function notifyCompletion(_this__u8e3s4, $this, cause) {
  var exception = null;
  // Inline function 'kotlinx.coroutines.internal.LinkedListHead.forEach' call
  var cur = _this__u8e3s4.vt_1;
  while (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(cur, _this__u8e3s4)) {
    if (cur instanceof JobNode) {
      // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>' call
      var node = cur;
      try {
        node.jq(cause);
      } catch ($p) {
        if ($p instanceof Error) {
          var ex = $p;
          var tmp0_safe_receiver = exception;
          var tmp;
          if (tmp0_safe_receiver == null) {
            tmp = null;
          } else {
            // Inline function 'kotlin.apply' call
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'kotlinx.coroutines.JobSupport.notifyHandlers.<anonymous>.<anonymous>' call
            (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.addSuppressedu5jwjfvsc039)(tmp0_safe_receiver, ex);
            tmp = tmp0_safe_receiver;
          }
          if (tmp == null) {
            // Inline function 'kotlin.run' call
            // Inline function 'kotlin.contracts.contract' call
            exception = CompletionHandlerException.yq('Exception in completion handler ' + node.toString() + ' for ' + $this.toString(), ex);
          }
        } else {
          throw $p;
        }
      }
    }
    cur = cur.vt_1;
  }
  var tmp0_safe_receiver_0 = exception;
  if (tmp0_safe_receiver_0 == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    $this.sn(tmp0_safe_receiver_0);
  }
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
}
function startInternal($this, state) {
  if (state instanceof Empty) {
    if (state.pt_1)
      return 0;
    if (!$this.an_1.atomicfu$compareAndSet(state, get_EMPTY_ACTIVE()))
      return -1;
    $this.eo();
    return 1;
  } else {
    if (state instanceof InactiveNodeList) {
      if (!$this.an_1.atomicfu$compareAndSet(state, state.xu_1))
        return -1;
      $this.eo();
      return 1;
    } else {
      return 0;
    }
  }
}
function makeNode($this, handler, onCancelling) {
  var tmp;
  if (onCancelling) {
    var tmp0_elvis_lhs = handler instanceof JobCancellingNode ? handler : null;
    tmp = tmp0_elvis_lhs == null ? new InvokeOnCancelling(handler) : tmp0_elvis_lhs;
  } else {
    var tmp1_safe_receiver = handler instanceof JobNode ? handler : null;
    var tmp_0;
    if (tmp1_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.also' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.coroutines.JobSupport.makeNode.<anonymous>' call
      // Inline function 'kotlinx.coroutines.assert' call
      tmp_0 = tmp1_safe_receiver;
    }
    var tmp2_elvis_lhs = tmp_0;
    tmp = tmp2_elvis_lhs == null ? new InvokeOnCompletion(handler) : tmp2_elvis_lhs;
  }
  var node = tmp;
  node.hu_1 = $this;
  return node;
}
function addLastAtomic($this, expect, list, node) {
  var tmp$ret$1;
  $l$block: {
    // Inline function 'kotlinx.coroutines.internal.LinkedListNode.addLastIf' call
    // Inline function 'kotlinx.coroutines.JobSupport.addLastAtomic.<anonymous>' call
    if (!($this.bo() === expect)) {
      tmp$ret$1 = false;
      break $l$block;
    }
    list.cu(node);
    tmp$ret$1 = true;
  }
  return tmp$ret$1;
}
function promoteEmptyToNodeList($this, state) {
  var list = new NodeList();
  var update = state.pt_1 ? list : new InactiveNodeList(list);
  $this.an_1.atomicfu$compareAndSet(state, update);
}
function promoteSingleToNodeList($this, state) {
  state.ju(new NodeList());
  // Inline function 'kotlinx.coroutines.internal.LinkedListNode.nextNode' call
  var list = state.vt_1;
  $this.an_1.atomicfu$compareAndSet(state, list);
}
function joinInternal($this) {
  // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
  while (true) {
    // Inline function 'kotlinx.coroutines.JobSupport.joinInternal.<anonymous>' call
    var state = $this.bo();
    if (!(!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false))
      return false;
    if (startInternal($this, state) >= 0)
      return true;
  }
}
function joinSuspend($this, $completion) {
  // Inline function 'kotlinx.coroutines.suspendCancellableCoroutine.<anonymous>' call
  var cancellable = new CancellableContinuationImpl((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)($completion), 1);
  cancellable.pr();
  // Inline function 'kotlinx.coroutines.JobSupport.joinSuspend.<anonymous>' call
  disposeOnCancellation(cancellable, invokeOnCompletion($this, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, new ResumeOnCompletion(cancellable)));
  return cancellable.wr();
}
function cancelMakeCompleting($this, cause) {
  // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
  while (true) {
    // Inline function 'kotlinx.coroutines.JobSupport.cancelMakeCompleting.<anonymous>' call
    var state = $this.bo();
    var tmp;
    if (!(!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false)) {
      tmp = true;
    } else {
      var tmp_0;
      if (state instanceof Finishing) {
        tmp_0 = state.yu();
      } else {
        tmp_0 = false;
      }
      tmp = tmp_0;
    }
    if (tmp) {
      return get_COMPLETING_ALREADY();
    }
    var proposedUpdate = new CompletedExceptionally(createCauseException($this, cause));
    var finalState = tryMakeCompleting($this, state, proposedUpdate);
    if (!(finalState === get_COMPLETING_RETRY()))
      return finalState;
  }
}
function createCauseException($this, cause) {
  var tmp;
  if (cause == null ? true : cause instanceof Error) {
    var tmp_0;
    if (cause == null) {
      // Inline function 'kotlinx.coroutines.JobSupport.defaultCancellationException' call
      tmp_0 = JobCancellationException.wu( true ? $this.kn() : 0, null, $this);
    } else {
      tmp_0 = cause;
    }
    tmp = tmp_0;
  } else {
    tmp = ((!(cause == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(cause, ParentJob) : false) ? cause : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()).uo();
  }
  return tmp;
}
function makeCancelling($this, cause) {
  var causeExceptionCache = null;
  // Inline function 'kotlinx.coroutines.JobSupport.loopOnState' call
  while (true) {
    $l$block: {
      // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>' call
      var state = $this.bo();
      if (state instanceof Finishing) {
        // Inline function 'kotlinx.coroutines.internal.synchronized' call
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'kotlinx.coroutines.internal.synchronizedImpl' call
        // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>' call
        if (state.zu())
          return get_TOO_LATE_TO_CANCEL();
        var wasCancelling = state.ou();
        if (!(cause == null) || !wasCancelling) {
          var tmp0_elvis_lhs = causeExceptionCache;
          var tmp;
          if (tmp0_elvis_lhs == null) {
            // Inline function 'kotlin.also' call
            var this_0 = createCauseException($this, cause);
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>.<anonymous>' call
            causeExceptionCache = this_0;
            tmp = this_0;
          } else {
            tmp = tmp0_elvis_lhs;
          }
          var causeException = tmp;
          state.av(causeException);
        }
        // Inline function 'kotlin.takeIf' call
        var this_1 = state.bv();
        // Inline function 'kotlin.contracts.contract' call
        var tmp_0;
        // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>.<anonymous>' call
        if (!wasCancelling) {
          tmp_0 = this_1;
        } else {
          tmp_0 = null;
        }
        var notifyRootCause = tmp_0;
        if (notifyRootCause == null)
          null;
        else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          notifyCancelling($this, state.ku_1, notifyRootCause);
        }
        return get_COMPLETING_ALREADY();
      } else {
        if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false) {
          var tmp2_elvis_lhs = causeExceptionCache;
          var tmp_1;
          if (tmp2_elvis_lhs == null) {
            // Inline function 'kotlin.also' call
            var this_2 = createCauseException($this, cause);
            // Inline function 'kotlin.contracts.contract' call
            // Inline function 'kotlinx.coroutines.JobSupport.makeCancelling.<anonymous>.<anonymous>' call
            causeExceptionCache = this_2;
            tmp_1 = this_2;
          } else {
            tmp_1 = tmp2_elvis_lhs;
          }
          var causeException_0 = tmp_1;
          if (state.hn()) {
            if (tryMakeCancelling($this, state, causeException_0))
              return get_COMPLETING_ALREADY();
          } else {
            var finalState = tryMakeCompleting($this, state, new CompletedExceptionally(causeException_0));
            if (finalState === get_COMPLETING_ALREADY()) {
              // Inline function 'kotlin.error' call
              var message = 'Cannot happen in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(state);
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
            } else if (finalState === get_COMPLETING_RETRY()) {
              break $l$block;
            } else
              return finalState;
          }
        } else {
          return get_TOO_LATE_TO_CANCEL();
        }
      }
    }
  }
}
function getOrPromoteCancellingList($this, state) {
  var tmp1_elvis_lhs = state.qt();
  var tmp;
  if (tmp1_elvis_lhs == null) {
    var tmp_0;
    if (state instanceof Empty) {
      tmp_0 = new NodeList();
    } else {
      if (state instanceof JobNode) {
        promoteSingleToNodeList($this, state);
        tmp_0 = null;
      } else {
        var message = 'State should have list: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(state);
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      }
    }
    tmp = tmp_0;
  } else {
    tmp = tmp1_elvis_lhs;
  }
  return tmp;
}
function tryMakeCancelling($this, state, rootCause) {
  // Inline function 'kotlinx.coroutines.assert' call
  // Inline function 'kotlinx.coroutines.assert' call
  var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    return false;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var list = tmp;
  var cancelling = new Finishing(list, false, rootCause);
  if (!$this.an_1.atomicfu$compareAndSet(state, cancelling))
    return false;
  notifyCancelling($this, list, rootCause);
  return true;
}
function tryMakeCompleting($this, state, proposedUpdate) {
  if (!(!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false))
    return get_COMPLETING_ALREADY();
  var tmp;
  var tmp_0;
  var tmp_1;
  if (state instanceof Empty) {
    tmp_1 = true;
  } else {
    tmp_1 = state instanceof JobNode;
  }
  if (tmp_1) {
    tmp_0 = !(state instanceof ChildHandleNode);
  } else {
    tmp_0 = false;
  }
  if (tmp_0) {
    tmp = !(proposedUpdate instanceof CompletedExceptionally);
  } else {
    tmp = false;
  }
  if (tmp) {
    if (tryFinalizeSimpleState($this, state, proposedUpdate)) {
      return proposedUpdate;
    }
    return get_COMPLETING_RETRY();
  }
  return tryMakeCompletingSlowPath($this, state, proposedUpdate);
}
function tryMakeCompletingSlowPath($this, state, proposedUpdate) {
  var tmp0_elvis_lhs = getOrPromoteCancellingList($this, state);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    return get_COMPLETING_RETRY();
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var list = tmp;
  var tmp1_elvis_lhs = state instanceof Finishing ? state : null;
  var finishing = tmp1_elvis_lhs == null ? new Finishing(list, false, null) : tmp1_elvis_lhs;
  var notifyRootCause = null;
  // Inline function 'kotlinx.coroutines.internal.synchronized' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlinx.coroutines.internal.synchronizedImpl' call
  if (finishing.yu())
    return get_COMPLETING_ALREADY();
  finishing.cv(true);
  if (!(finishing === state)) {
    if (!$this.an_1.atomicfu$compareAndSet(state, finishing))
      return get_COMPLETING_RETRY();
  }
  // Inline function 'kotlinx.coroutines.assert' call
  var wasCancelling = finishing.ou();
  var tmp0_safe_receiver = proposedUpdate instanceof CompletedExceptionally ? proposedUpdate : null;
  if (tmp0_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    finishing.av(tmp0_safe_receiver.mn_1);
  }
  // Inline function 'kotlin.takeIf' call
  var this_0 = finishing.bv();
  // Inline function 'kotlin.contracts.contract' call
  var tmp_0;
  // Inline function 'kotlinx.coroutines.JobSupport.tryMakeCompletingSlowPath.<anonymous>.<anonymous>' call
  if (!wasCancelling) {
    tmp_0 = this_0;
  } else {
    tmp_0 = null;
  }
  notifyRootCause = tmp_0;
  var tmp2_safe_receiver = notifyRootCause;
  if (tmp2_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    notifyCancelling($this, list, tmp2_safe_receiver);
  }
  var child = firstChild($this, state);
  if (!(child == null) && tryWaitForChild($this, finishing, child, proposedUpdate))
    return get_COMPLETING_WAITING_CHILDREN();
  return finalizeFinishingState($this, finishing, proposedUpdate);
}
function _get_exceptionOrNull__b3j7js(_this__u8e3s4, $this) {
  var tmp0_safe_receiver = _this__u8e3s4 instanceof CompletedExceptionally ? _this__u8e3s4 : null;
  return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.mn_1;
}
function firstChild($this, state) {
  var tmp1_elvis_lhs = state instanceof ChildHandleNode ? state : null;
  var tmp;
  if (tmp1_elvis_lhs == null) {
    var tmp0_safe_receiver = state.qt();
    tmp = tmp0_safe_receiver == null ? null : nextChild(tmp0_safe_receiver, $this);
  } else {
    tmp = tmp1_elvis_lhs;
  }
  return tmp;
}
function tryWaitForChild($this, state, child, proposedUpdate) {
  var $this_0 = $this;
  var state_0 = state;
  var child_0 = child;
  var proposedUpdate_0 = proposedUpdate;
  $l$1: do {
    $l$0: do {
      var handle = invokeOnCompletion(child_0.hv_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, false, new ChildCompletion($this_0, state_0, child_0, proposedUpdate_0));
      if (!(handle === NonDisposableHandle_instance))
        return true;
      var tmp0_elvis_lhs = nextChild(child_0, $this_0);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return false;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var nextChild_0 = tmp;
      $this_0 = $this_0;
      state_0 = state_0;
      child_0 = nextChild_0;
      proposedUpdate_0 = proposedUpdate_0;
      continue $l$0;
    }
     while (false);
  }
   while (true);
}
function continueCompleting($this, state, lastChild, proposedUpdate) {
  // Inline function 'kotlinx.coroutines.assert' call
  var waitChild = nextChild(lastChild, $this);
  if (!(waitChild == null) && tryWaitForChild($this, state, waitChild, proposedUpdate))
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  var finalState = finalizeFinishingState($this, state, proposedUpdate);
  $this.rn(finalState);
}
function nextChild(_this__u8e3s4, $this) {
  var cur = _this__u8e3s4;
  $l$loop: while (true) {
    // Inline function 'kotlinx.coroutines.internal.LinkedListNode.isRemoved' call
    if (!cur.xt_1) {
      break $l$loop;
    }
    // Inline function 'kotlinx.coroutines.internal.LinkedListNode.prevNode' call
    cur = cur.wt_1;
  }
  $l$loop_0: while (true) {
    // Inline function 'kotlinx.coroutines.internal.LinkedListNode.nextNode' call
    cur = cur.vt_1;
    // Inline function 'kotlinx.coroutines.internal.LinkedListNode.isRemoved' call
    if (cur.xt_1)
      continue $l$loop_0;
    if (cur instanceof ChildHandleNode)
      return cur;
    if (cur instanceof NodeList)
      return null;
  }
}
function stateString($this, state) {
  var tmp;
  if (state instanceof Finishing) {
    tmp = state.ou() ? 'Cancelling' : state.yu() ? 'Completing' : 'Active';
  } else {
    if (!(state == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(state, Incomplete) : false) {
      tmp = state.hn() ? 'Active' : 'New';
    } else {
      if (state instanceof CompletedExceptionally) {
        tmp = 'Cancelled';
      } else {
        tmp = 'Completed';
      }
    }
  }
  return tmp;
}
function awaitSuspend($this, $completion) {
  // Inline function 'kotlinx.coroutines.JobSupport.awaitSuspend.<anonymous>' call
  var cont = new AwaitContinuation((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)($completion), $this);
  cont.pr();
  disposeOnCancellation(cont, invokeOnCompletion($this, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, new ResumeAwaitOnCompletion(cont)));
  return cont.wr();
}
function boxIncomplete(_this__u8e3s4) {
  _init_properties_JobSupport_kt__68f172();
  var tmp;
  if (!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, Incomplete) : false) {
    tmp = new IncompleteStateBox(_this__u8e3s4);
  } else {
    tmp = _this__u8e3s4;
  }
  return tmp;
}
function unboxState(_this__u8e3s4) {
  _init_properties_JobSupport_kt__68f172();
  var tmp0_safe_receiver = _this__u8e3s4 instanceof IncompleteStateBox ? _this__u8e3s4 : null;
  var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.qw_1;
  return tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
}
function handlesExceptionF($this) {
  var tmp = $this.zn();
  var tmp0_safe_receiver = tmp instanceof ChildHandleNode ? tmp : null;
  var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.iu();
  var tmp_0;
  if (tmp1_elvis_lhs == null) {
    return false;
  } else {
    tmp_0 = tmp1_elvis_lhs;
  }
  var parentJob = tmp_0;
  while (true) {
    if (parentJob.yo())
      return true;
    var tmp_1 = parentJob.zn();
    var tmp2_safe_receiver = tmp_1 instanceof ChildHandleNode ? tmp_1 : null;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.iu();
    var tmp_2;
    if (tmp3_elvis_lhs == null) {
      return false;
    } else {
      tmp_2 = tmp3_elvis_lhs;
    }
    parentJob = tmp_2;
  }
}
var properties_initialized_JobSupport_kt_5iq8a4;
function _init_properties_JobSupport_kt__68f172() {
  if (!properties_initialized_JobSupport_kt_5iq8a4) {
    properties_initialized_JobSupport_kt_5iq8a4 = true;
    COMPLETING_ALREADY = new Symbol('COMPLETING_ALREADY');
    COMPLETING_WAITING_CHILDREN = new Symbol('COMPLETING_WAITING_CHILDREN');
    COMPLETING_RETRY = new Symbol('COMPLETING_RETRY');
    TOO_LATE_TO_CANCEL = new Symbol('TOO_LATE_TO_CANCEL');
    SEALED = new Symbol('SEALED');
    EMPTY_NEW = new Empty(false);
    EMPTY_ACTIVE = new Empty(true);
  }
}
function SupervisorJob(parent) {
  parent = parent === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : parent;
  return new SupervisorJobImpl(parent);
}
var Unconfined_instance;
function Unconfined_getInstance() {
  if (Unconfined_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Unconfined();
  return Unconfined_instance;
}
var Key_instance_4;
function Key_getInstance_3() {
  return Key_instance_4;
}
function flow(block) {
  return new SafeFlow(block);
}
function asFlow(_this__u8e3s4) {
  // Inline function 'kotlinx.coroutines.flow.internal.unsafeFlow' call
  return new _no_name_provided__qut3iv(_this__u8e3s4);
}
function checkOwnership(_this__u8e3s4, owner) {
  if (!(_this__u8e3s4.hz_1 === owner))
    throw _this__u8e3s4;
}
function checkContext(_this__u8e3s4, currentContext) {
  var result = currentContext.wi(0, checkContext$lambda(_this__u8e3s4));
  if (!(result === _this__u8e3s4.bz_1)) {
    // Inline function 'kotlin.error' call
    var message = 'Flow invariant is violated:\n' + ('\t\tFlow was collected in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(_this__u8e3s4.az_1) + ',\n') + ('\t\tbut emission happened in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(currentContext) + '.\n') + "\t\tPlease refer to 'flow' documentation or use 'flowOn' instead";
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
}
function transitiveCoroutineParent(_this__u8e3s4, collectJob) {
  var $this = _this__u8e3s4;
  var collectJob_0 = collectJob;
  $l$1: do {
    $l$0: do {
      if ($this === null)
        return null;
      if ($this === collectJob_0)
        return $this;
      if (!($this instanceof ScopeCoroutine))
        return $this;
      $this = $this.ao();
      collectJob_0 = collectJob_0;
      continue $l$0;
    }
     while (false);
  }
   while (true);
}
function checkContext$lambda($this_checkContext) {
  return function (count, element) {
    var key = element.k1();
    var collectElement = $this_checkContext.az_1.yb(key);
    var tmp;
    if (!(key === Key_instance_3)) {
      return !(element === collectElement) ? -2147483648 : count + 1 | 0;
    }
    var collectJob = (collectElement == null ? true : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(collectElement, Job)) ? collectElement : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    var emissionParentJob = transitiveCoroutineParent((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(element, Job) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), collectJob);
    var tmp_0;
    if (!(emissionParentJob === collectJob)) {
      var message = 'Flow invariant is violated:\n\t\tEmission from another coroutine is detected.\n' + ('\t\tChild of ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(emissionParentJob) + ', expected child of ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(collectJob) + '.\n') + '\t\tFlowCollector is not thread-safe and concurrent emissions are prohibited.\n' + "\t\tTo mitigate this restriction please use 'channelFlow' builder instead of 'flow'";
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return collectJob == null ? count : count + 1 | 0;
  };
}
function cancellable(_this__u8e3s4) {
  var tmp;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, CancellableFlow)) {
    tmp = _this__u8e3s4;
  } else {
    tmp = new CancellableFlowImpl(_this__u8e3s4);
  }
  return tmp;
}
function CancellableFlowImpl$collect$slambda_0($collector, resultContinuation) {
  var i = new CancellableFlowImpl$collect$slambda($collector, resultContinuation);
  var l = function (it, $completion) {
    return i.uz(it, $completion);
  };
  l.$arity = 1;
  return l;
}
function firstOrNull(_this__u8e3s4, predicate, $completion) {
  var tmp = new $firstOrNullCOROUTINE$13(_this__u8e3s4, predicate, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function handleUncaughtCoroutineException(context, exception) {
  var tmp0_iterator = get_platformExceptionHandlers().w();
  while (tmp0_iterator.x()) {
    var handler = tmp0_iterator.y();
    try {
      handler.ss(context, exception);
    } catch ($p) {
      if ($p instanceof ExceptionSuccessfullyProcessed) {
        var _ = $p;
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      } else {
        if ($p instanceof Error) {
          var t = $p;
          propagateExceptionFinalResort(handlerException(exception, t));
        } else {
          throw $p;
        }
      }
    }
  }
  try {
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.addSuppressedu5jwjfvsc039)(exception, DiagnosticCoroutineContextException.d11(context));
  } catch ($p) {
    if ($p instanceof Error) {
      var e = $p;
    } else {
      throw $p;
    }
  }
  propagateExceptionFinalResort(exception);
}
function get_UNDEFINED() {
  _init_properties_DispatchedContinuation_kt__tnmqc0();
  return UNDEFINED;
}
var UNDEFINED;
function get_REUSABLE_CLAIMED() {
  _init_properties_DispatchedContinuation_kt__tnmqc0();
  return REUSABLE_CLAIMED;
}
var REUSABLE_CLAIMED;
function _get_reusableCancellableContinuation__9qex09($this) {
  var tmp = $this.qq_1.kotlinx$atomicfu$value;
  return tmp instanceof CancellableContinuationImpl ? tmp : null;
}
function resumeCancellableWith(_this__u8e3s4, result, onCancellation) {
  onCancellation = onCancellation === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : onCancellation;
  _init_properties_DispatchedContinuation_kt__tnmqc0();
  var tmp;
  if (_this__u8e3s4 instanceof DispatchedContinuation) {
    var state = toState_0(result, onCancellation);
    var tmp_0;
    if (_this__u8e3s4.mq_1.ps(_this__u8e3s4.rb())) {
      _this__u8e3s4.oq_1 = state;
      _this__u8e3s4.sq_1 = 1;
      _this__u8e3s4.mq_1.qs(_this__u8e3s4.rb(), _this__u8e3s4);
      tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      $l$block: {
        // Inline function 'kotlinx.coroutines.internal.executeUnconfined' call
        // Inline function 'kotlinx.coroutines.assert' call
        var eventLoop = ThreadLocalEventLoop_getInstance().it();
        if (false) {}
        var tmp_1;
        if (eventLoop.ct()) {
          _this__u8e3s4.oq_1 = state;
          _this__u8e3s4.sq_1 = 1;
          eventLoop.bt(_this__u8e3s4);
          tmp_1 = true;
        } else {
          // Inline function 'kotlinx.coroutines.runUnconfinedEventLoop' call
          eventLoop.et(true);
          try {
            // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith.<anonymous>' call
            var tmp$ret$3;
            $l$block_0: {
              // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled' call
              var job = _this__u8e3s4.rb().yb(Key_instance_3);
              if (!(job == null) && !job.hn()) {
                var cause = job.fo();
                _this__u8e3s4.rr(state, cause);
                // Inline function 'kotlin.coroutines.resumeWithException' call
                // Inline function 'kotlin.Companion.failure' call
                var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(cause));
                _this__u8e3s4.wb(tmp$ret$1);
                tmp$ret$3 = true;
                break $l$block_0;
              }
              tmp$ret$3 = false;
            }
            if (!tmp$ret$3) {
              // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith' call
              // Inline function 'kotlinx.coroutines.withContinuationContext' call
              _this__u8e3s4.nq_1;
              _this__u8e3s4.pq_1;
              _this__u8e3s4.nq_1.wb(result);
            }
            $l$loop: while (eventLoop.at()) {
            }
          } catch ($p) {
            if ($p instanceof Error) {
              var e = $p;
              _this__u8e3s4.fs(e, null);
            } else {
              throw $p;
            }
          }
          finally {
            eventLoop.ft(true);
          }
          tmp_1 = false;
        }
      }
      tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    tmp = tmp_0;
  } else {
    _this__u8e3s4.wb(result);
    tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  return tmp;
}
var properties_initialized_DispatchedContinuation_kt_2siadq;
function _init_properties_DispatchedContinuation_kt__tnmqc0() {
  if (!properties_initialized_DispatchedContinuation_kt_2siadq) {
    properties_initialized_DispatchedContinuation_kt_2siadq = true;
    UNDEFINED = new Symbol('UNDEFINED');
    REUSABLE_CLAIMED = new Symbol('REUSABLE_CLAIMED');
  }
}
function get_isReusableMode(_this__u8e3s4) {
  return _this__u8e3s4 === 2;
}
function get_isCancellableMode(_this__u8e3s4) {
  return _this__u8e3s4 === 1 || _this__u8e3s4 === 2;
}
function dispatch(_this__u8e3s4, mode) {
  // Inline function 'kotlinx.coroutines.assert' call
  var delegate = _this__u8e3s4.or();
  var undispatched = mode === 4;
  var tmp;
  var tmp_0;
  if (!undispatched) {
    tmp_0 = delegate instanceof DispatchedContinuation;
  } else {
    tmp_0 = false;
  }
  if (tmp_0) {
    tmp = get_isCancellableMode(mode) === get_isCancellableMode(_this__u8e3s4.sq_1);
  } else {
    tmp = false;
  }
  if (tmp) {
    var dispatcher = delegate.mq_1;
    var context = delegate.rb();
    if (dispatcher.ps(context)) {
      dispatcher.qs(context, _this__u8e3s4);
    } else {
      resumeUnconfined(_this__u8e3s4);
    }
  } else {
    resume(_this__u8e3s4, delegate, undispatched);
  }
}
function resumeUnconfined(_this__u8e3s4) {
  var eventLoop = ThreadLocalEventLoop_getInstance().it();
  if (eventLoop.ct()) {
    eventLoop.bt(_this__u8e3s4);
  } else {
    // Inline function 'kotlinx.coroutines.runUnconfinedEventLoop' call
    eventLoop.et(true);
    try {
      // Inline function 'kotlinx.coroutines.resumeUnconfined.<anonymous>' call
      resume(_this__u8e3s4, _this__u8e3s4.or(), true);
      $l$loop: while (eventLoop.at()) {
      }
    } catch ($p) {
      if ($p instanceof Error) {
        var e = $p;
        _this__u8e3s4.fs(e, null);
      } else {
        throw $p;
      }
    }
    finally {
      eventLoop.ft(true);
    }
  }
}
function resume(_this__u8e3s4, delegate, undispatched) {
  var state = _this__u8e3s4.qr();
  var exception = _this__u8e3s4.cs(state);
  var tmp;
  if (!(exception == null)) {
    // Inline function 'kotlin.Companion.failure' call
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(exception));
  } else {
    // Inline function 'kotlin.Companion.success' call
    var value = _this__u8e3s4.yr(state);
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(value);
  }
  var result = tmp;
  if (undispatched) {
    // Inline function 'kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith' call
    var this_0 = delegate instanceof DispatchedContinuation ? delegate : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    // Inline function 'kotlinx.coroutines.withContinuationContext' call
    this_0.nq_1;
    this_0.pq_1;
    this_0.nq_1.wb(result);
  } else {
    delegate.wb(result);
  }
}
function startCoroutineCancellable(_this__u8e3s4, fatalCompletion) {
  var tmp;
  try {
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)(_this__u8e3s4);
    // Inline function 'kotlin.Companion.success' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
    resumeCancellableWith(tmp_0, tmp$ret$0);
    tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  } catch ($p) {
    var tmp_1;
    if ($p instanceof Error) {
      var e = $p;
      dispatcherFailure$accessor$glj1hg(fatalCompletion, e);
      tmp_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      throw $p;
    }
    tmp = tmp_1;
  }
  return tmp;
}
function startCoroutineCancellable_0(_this__u8e3s4, receiver, completion, onCancellation) {
  onCancellation = onCancellation === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : onCancellation;
  var tmp;
  try {
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createCoroutineUnintercepted3gya308dmbbtg)(_this__u8e3s4, receiver, completion));
    // Inline function 'kotlin.Companion.success' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
    resumeCancellableWith(tmp_0, tmp$ret$0, onCancellation);
    tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  } catch ($p) {
    var tmp_1;
    if ($p instanceof Error) {
      var e = $p;
      dispatcherFailure$accessor$glj1hg(completion, e);
      tmp_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      throw $p;
    }
    tmp = tmp_1;
  }
  return tmp;
}
function dispatcherFailure(completion, e) {
  // Inline function 'kotlin.Companion.failure' call
  var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(e));
  completion.wb(tmp$ret$0);
  throw e;
}
function dispatcherFailure$accessor$glj1hg(completion, e) {
  return dispatcherFailure(completion, e);
}
function startCoroutineUndispatched(_this__u8e3s4, receiver, completion) {
  $l$block: {
    // Inline function 'kotlinx.coroutines.intrinsics.startDirect' call
    // Inline function 'kotlinx.coroutines.internal.probeCoroutineCreated' call
    var actualCompletion = completion;
    var tmp;
    try {
      // Inline function 'kotlinx.coroutines.intrinsics.startCoroutineUndispatched.<anonymous>' call
      // Inline function 'kotlinx.coroutines.withCoroutineContext' call
      completion.rb();
      // Inline function 'kotlinx.coroutines.intrinsics.startCoroutineUndispatched.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.coroutines.intrinsics.startCoroutineUninterceptedOrReturn' call
      // Inline function 'kotlin.js.asDynamic' call
      var a = _this__u8e3s4;
      tmp = typeof a === 'function' ? a(receiver, actualCompletion) : _this__u8e3s4.ad(receiver, actualCompletion);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var e = $p;
        // Inline function 'kotlin.coroutines.resumeWithException' call
        // Inline function 'kotlin.Companion.failure' call
        var tmp$ret$6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(e));
        actualCompletion.wb(tmp$ret$6);
        break $l$block;
      } else {
        throw $p;
      }
    }
    var value = tmp;
    if (!(value === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)())) {
      // Inline function 'kotlin.coroutines.resume' call
      // Inline function 'kotlin.Companion.success' call
      var value_0 = (value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      var tmp$ret$9 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(value_0);
      actualCompletion.wb(tmp$ret$9);
    }
  }
}
function toDebugString(_this__u8e3s4) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(_this__u8e3s4);
}
function get_DefaultDelay() {
  var tmp = Dispatchers_getInstance().hx_1;
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, Delay) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
}
function createDefaultDispatcher() {
  var tmp;
  if (isJsdom()) {
    tmp = NodeDispatcher_getInstance();
  } else {
    var tmp_0;
    var tmp_1;
    if (!(typeof window === 'undefined')) {
      // Inline function 'kotlin.js.asDynamic' call
      tmp_1 = window != null;
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      // Inline function 'kotlin.js.asDynamic' call
      tmp_0 = !(typeof window.addEventListener === 'undefined');
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = asCoroutineDispatcher(window);
    } else {
      if (typeof process === 'undefined' || typeof process.nextTick === 'undefined') {
        tmp = SetTimeoutDispatcher_getInstance();
      } else {
        tmp = NodeDispatcher_getInstance();
      }
    }
  }
  return tmp;
}
function isJsdom() {
  return !(typeof navigator === 'undefined') && navigator != null && navigator.userAgent != null && !(typeof navigator.userAgent === 'undefined') && !(typeof navigator.userAgent.match === 'undefined') && navigator.userAgent.match('\\bjsdom\\b');
}
function newCoroutineContext(_this__u8e3s4, context) {
  var combined = _this__u8e3s4.gn().xi(context);
  return !(combined === Dispatchers_getInstance().hx_1) && combined.yb(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance2d3ch37kcwr5h) == null ? combined.xi(Dispatchers_getInstance().hx_1) : combined;
}
function get_coroutineName(_this__u8e3s4) {
  return null;
}
var counter;
function get_DEBUG() {
  return DEBUG;
}
var DEBUG;
function get_classSimpleName(_this__u8e3s4) {
  var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(_this__u8e3s4).je();
  return tmp0_elvis_lhs == null ? 'Unknown' : tmp0_elvis_lhs;
}
function get_hexAddress(_this__u8e3s4) {
  // Inline function 'kotlin.js.asDynamic' call
  var result = _this__u8e3s4.__debug_counter;
  if (!(typeof result === 'number')) {
    counter = counter + 1 | 0;
    result = counter;
    // Inline function 'kotlin.js.asDynamic' call
    _this__u8e3s4.__debug_counter = result;
  }
  return ((!(result == null) ? typeof result === 'number' : false) ? result : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()).toString();
}
var NodeDispatcher_instance;
function NodeDispatcher_getInstance() {
  if (NodeDispatcher_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new NodeDispatcher();
  return NodeDispatcher_instance;
}
function ScheduledMessageQueue$processQueue$lambda(this$0) {
  return function () {
    this$0.u11();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function w3cSetTimeout(handler, timeout) {
  return setTimeout(handler, timeout);
}
function WindowMessageQueue$lambda(this$0) {
  return function (event) {
    var tmp;
    if (event.source == this$0.i12_1 && event.data == this$0.j12_1) {
      event.stopPropagation();
      this$0.u11();
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function WindowMessageQueue$schedule$lambda(this$0) {
  return function (it) {
    this$0.u11();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function w3cSetTimeout_0(window_0, handler, timeout) {
  return setTimeout_0(window_0, handler, timeout);
}
function w3cClearTimeout(window_0, handle) {
  return window_0.clearTimeout(handle);
}
function w3cClearTimeout_0(handle) {
  return clearTimeout(handle);
}
function setTimeout_0(window_0, handler, timeout) {
  return window_0.setTimeout(handler, timeout);
}
function await_0(_this__u8e3s4, $completion) {
  // Inline function 'kotlinx.coroutines.suspendCancellableCoroutine.<anonymous>' call
  var cancellable = new CancellableContinuationImpl((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)($completion), 1);
  cancellable.pr();
  // Inline function 'kotlinx.coroutines.await.<anonymous>' call
  var tmp = await$lambda(cancellable);
  _this__u8e3s4.then(tmp, await$lambda_0(cancellable));
  return cancellable.wr();
}
function await$lambda($cont) {
  return function (it) {
    // Inline function 'kotlin.coroutines.resume' call
    var this_0 = $cont;
    // Inline function 'kotlin.Companion.success' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(it);
    this_0.wb(tmp$ret$0);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function await$lambda_0($cont) {
  return function (it) {
    // Inline function 'kotlin.coroutines.resumeWithException' call
    var this_0 = $cont;
    // Inline function 'kotlin.Companion.failure' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(it));
    this_0.wb(tmp$ret$0);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function asCoroutineDispatcher(_this__u8e3s4) {
  // Inline function 'kotlin.js.asDynamic' call
  var tmp0_elvis_lhs = _this__u8e3s4.coroutineDispatcher;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    // Inline function 'kotlin.also' call
    var this_0 = new WindowDispatcher(_this__u8e3s4);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.coroutines.asCoroutineDispatcher.<anonymous>' call
    // Inline function 'kotlin.js.asDynamic' call
    _this__u8e3s4.coroutineDispatcher = this_0;
    tmp = this_0;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function propagateExceptionFinalResort(exception) {
  console.error(exception.toString());
}
var Dispatchers_instance;
function Dispatchers_getInstance() {
  if (Dispatchers_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Dispatchers();
  return Dispatchers_instance;
}
function createEventLoop() {
  return new UnconfinedEventLoop();
}
function unsupported() {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UnsupportedOperationException2tkumpmhredt3.x8('runBlocking event loop is not supported');
}
function get_taskContext(_this__u8e3s4) {
  return TaskContext_instance;
}
var TaskContext_instance;
function TaskContext_getInstance() {
  return TaskContext_instance;
}
function SafeCollector$collectContextSize$lambda(count, _anonymous_parameter_1__qggqgd) {
  return count + 1 | 0;
}
function identitySet(expectedSize) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v.h1(expectedSize);
}
function get_platformExceptionHandlers_() {
  _init_properties_CoroutineExceptionHandlerImpl_kt__37d7wf();
  return platformExceptionHandlers_;
}
var platformExceptionHandlers_;
function get_platformExceptionHandlers() {
  _init_properties_CoroutineExceptionHandlerImpl_kt__37d7wf();
  return get_platformExceptionHandlers_();
}
var properties_initialized_CoroutineExceptionHandlerImpl_kt_qhrgvx;
function _init_properties_CoroutineExceptionHandlerImpl_kt__37d7wf() {
  if (!properties_initialized_CoroutineExceptionHandlerImpl_kt_qhrgvx) {
    properties_initialized_CoroutineExceptionHandlerImpl_kt_qhrgvx = true;
    // Inline function 'kotlin.collections.mutableSetOf' call
    platformExceptionHandlers_ = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2.d1();
  }
}
var SetTimeoutDispatcher_instance;
function SetTimeoutDispatcher_getInstance() {
  if (SetTimeoutDispatcher_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new SetTimeoutDispatcher();
  return SetTimeoutDispatcher_instance;
}
function SetTimeoutBasedDispatcher$scheduleResumeAfterDelay$lambda($continuation, this$0) {
  return function () {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    $continuation.bs(this$0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function WindowDispatcher$scheduleResumeAfterDelay$lambda($continuation, this$0) {
  return function () {
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    $continuation.bs(this$0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function delayToInt(timeMillis) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceIn302bduskdb54x)(timeMillis, new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(2147483647, 0)).u3();
}
function unwrap(exception) {
  return exception;
}
function recoverStackTrace(exception, continuation) {
  return exception;
}
function threadContextElements(context) {
  return 0;
}
function commonThreadLocal(name) {
  return new CommonThreadLocal();
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Job, 'Job', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Element2gr7ezmxqaln7], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(ParentJob, 'ParentJob', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Job], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(JobSupport).ko = invokeOnCompletion$default;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(JobSupport).po = cancel$default;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(JobSupport).xi = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plusolev77jfy5r9;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(JobSupport).yb = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get6d5x931vk0s;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(JobSupport).wi = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.fold36i9psb7d5v48;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(JobSupport).vi = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.minusKeyyqanvso9aovh;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(JobSupport, 'JobSupport', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Job, ParentJob], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(CoroutineScope, 'CoroutineScope');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AbstractCoroutine, 'AbstractCoroutine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [JobSupport, Job, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Continuation1aa2oekvx7jm7, CoroutineScope], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(StandaloneCoroutine, 'StandaloneCoroutine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LazyStandaloneCoroutine, 'LazyStandaloneCoroutine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($awaitCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DeferredCoroutine, 'DeferredCoroutine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [AbstractCoroutine, Job], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LazyDeferredCoroutine, 'LazyDeferredCoroutine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(NotCompleted, 'NotCompleted');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(CancelHandler, 'CancelHandler', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [NotCompleted]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DisposeOnCancel, 'DisposeOnCancel', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CancelHandler]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Runnable, 'Runnable');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SchedulerTask, 'SchedulerTask', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Runnable]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DispatchedTask, 'DispatchedTask');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CancellableContinuationImpl, 'CancellableContinuationImpl', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [DispatchedTask, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Continuation1aa2oekvx7jm7]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UserSupplied, 'UserSupplied', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CancelHandler]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Active, 'Active', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [NotCompleted]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CompletedContinuation, 'CompletedContinuation');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(CompletableJob, 'CompletableJob', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Job], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UserSupplied_0, 'UserSupplied');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CompletedExceptionally, 'CompletedExceptionally');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CancelledContinuation, 'CancelledContinuation');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CompletedWithCancellation, 'CompletedWithCancellation');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Key, 'Key');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(CoroutineDispatcher).yb = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getxe4seun860fg;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(CoroutineDispatcher).vi = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.minusKey2uxs00uz5ceqp;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CoroutineDispatcher, 'CoroutineDispatcher', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractCoroutineContextElement2rpehg0hv5szw, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ContinuationInterceptor2624y0vaqwxwf]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Key_0, 'Key');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Key_1, 'Key');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CoroutineName, 'CoroutineName');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(GlobalScope, 'GlobalScope', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CoroutineScope]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CoroutineStart, 'CoroutineStart');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Delay, 'Delay', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(EventLoop, 'EventLoop');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ThreadLocalEventLoop, 'ThreadLocalEventLoop');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CompletionHandlerException, 'CompletionHandlerException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CoroutinesInternalError, 'CoroutinesInternalError');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Key_2, 'Key');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(ChildHandle, 'ChildHandle');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(NonDisposableHandle, 'NonDisposableHandle', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [ChildHandle]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Incomplete, 'Incomplete');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Empty, 'Empty', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Incomplete]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LinkedListNode, 'LinkedListNode', LinkedListNode);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LinkedListHead, 'LinkedListHead', LinkedListHead);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(NodeList, 'NodeList', NodeList, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [LinkedListHead, Incomplete]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(JobNode, 'JobNode', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [LinkedListNode, Incomplete]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SynchronizedObject, 'SynchronizedObject', SynchronizedObject);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Finishing, 'Finishing', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SynchronizedObject, Incomplete]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChildCompletion, 'ChildCompletion');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AwaitContinuation, 'AwaitContinuation');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(JobCancellingNode, 'JobCancellingNode');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InactiveNodeList, 'InactiveNodeList', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Incomplete]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChildHandleNode, 'ChildHandleNode', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [JobCancellingNode, ChildHandle]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InvokeOnCancelling, 'InvokeOnCancelling');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InvokeOnCompletion, 'InvokeOnCompletion');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ResumeOnCompletion, 'ResumeOnCompletion');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ResumeAwaitOnCompletion, 'ResumeAwaitOnCompletion');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(IncompleteStateBox, 'IncompleteStateBox');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChildContinuation, 'ChildContinuation');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(JobImpl, 'JobImpl', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [JobSupport, CompletableJob], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MainCoroutineDispatcher, 'MainCoroutineDispatcher');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SupervisorJobImpl, 'SupervisorJobImpl', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(TimeoutCancellationException, 'TimeoutCancellationException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Unconfined, 'Unconfined');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Key_3, 'Key');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(CancellableFlow, 'CancellableFlow', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AbstractFlow, 'AbstractFlow', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CancellableFlow], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SafeFlow, 'SafeFlow', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($collectCOROUTINE$7);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(_no_name_provided__qut3iv, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($collectCOROUTINE$8);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(FlowCollector, 'FlowCollector', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(sam$kotlinx_coroutines_flow_FlowCollector$0, 'sam$kotlinx_coroutines_flow_FlowCollector$0', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [FlowCollector], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(CancellableFlowImpl$collect$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CancellableFlowImpl, 'CancellableFlowImpl', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CancellableFlow], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($emitCOROUTINE$14);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(_no_name_provided__qut3iv_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [FlowCollector], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($firstOrNullCOROUTINE$13);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(OpDescriptor, 'OpDescriptor');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ConcurrentLinkedListNode, 'ConcurrentLinkedListNode');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Segment, 'Segment', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [ConcurrentLinkedListNode, NotCompleted]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ExceptionSuccessfullyProcessed, 'ExceptionSuccessfullyProcessed');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DispatchedContinuation, 'DispatchedContinuation', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [DispatchedTask, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Continuation1aa2oekvx7jm7]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContextScope, 'ContextScope', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CoroutineScope]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ScopeCoroutine, 'ScopeCoroutine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Symbol, 'Symbol');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SetTimeoutBasedDispatcher, 'SetTimeoutBasedDispatcher', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CoroutineDispatcher, Delay], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(NodeDispatcher, 'NodeDispatcher', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MessageQueue, 'MessageQueue', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableList1beimitadwkna]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ScheduledMessageQueue, 'ScheduledMessageQueue');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(WindowMessageQueue, 'WindowMessageQueue');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Dispatchers, 'Dispatchers');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(JsMainDispatcher, 'JsMainDispatcher');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UnconfinedEventLoop, 'UnconfinedEventLoop', UnconfinedEventLoop);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(JobCancellationException, 'JobCancellationException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(TaskContext, 'TaskContext');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AbortFlowException, 'AbortFlowException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SafeCollector, 'SafeCollector', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [FlowCollector], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DiagnosticCoroutineContextException, 'DiagnosticCoroutineContextException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(SetTimeoutDispatcher, 'SetTimeoutDispatcher', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ClearTimeout, 'ClearTimeout', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CancelHandler]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(WindowClearTimeout, 'WindowClearTimeout');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(WindowDispatcher, 'WindowDispatcher', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [CoroutineDispatcher, Delay], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CommonThreadLocal, 'CommonThreadLocal', CommonThreadLocal);
//endregion
//region block: init
Active_instance = new Active();
Key_instance_1 = new Key_0();
Key_instance_2 = new Key_1();
GlobalScope_instance = new GlobalScope();
Key_instance_3 = new Key_2();
NonDisposableHandle_instance = new NonDisposableHandle();
Key_instance_4 = new Key_3();
counter = 0;
DEBUG = false;
TaskContext_instance = new TaskContext();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=kotlinx-coroutines-core.mjs.map


/***/ }),

/***/ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs":
/*!***************************************************************************!*\
  !*** ./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbstractDecoder35guh02ubh2hm: () => (/* binding */ AbstractDecoder),
/* harmony export */   AbstractEncoder2gxtu3xmy3f8j: () => (/* binding */ AbstractEncoder),
/* harmony export */   AbstractPolymorphicSerializer1ccxwp48nfy58: () => (/* binding */ AbstractPolymorphicSerializer),
/* harmony export */   BinaryFormat3f3aelhmz0ro1: () => (/* binding */ BinaryFormat),
/* harmony export */   CLASS_getInstance1ss90e870vddp: () => (/* binding */ CLASS_getInstance),
/* harmony export */   CONTEXTUAL_getInstance40twmib99zqv: () => (/* binding */ CONTEXTUAL_getInstance),
/* harmony export */   CompositeDecoder2tzm7wpwkr0og: () => (/* binding */ CompositeDecoder),
/* harmony export */   Decoder23nde051s631g: () => (/* binding */ Decoder),
/* harmony export */   DeserializationStrategy1z3z5pj9f7zc8: () => (/* binding */ DeserializationStrategy),
/* harmony export */   ENUM_getInstance3doea03ve3rgg: () => (/* binding */ ENUM_getInstance),
/* harmony export */   ENUMlmq49cvwy4ow: () => (/* binding */ ENUM),
/* harmony export */   ElementMarker33ojvsajwmzts: () => (/* binding */ ElementMarker),
/* harmony export */   EmptySerializersModule991ju6pz9b79: () => (/* binding */ EmptySerializersModule_0),
/* harmony export */   Encoderqvmrpqtq8hnu: () => (/* binding */ Encoder),
/* harmony export */   GeneratedSerializer1f7t7hssdd2ws: () => (/* binding */ GeneratedSerializer),
/* harmony export */   InlinePrimitiveDescriptor3i6ccn1a4fw94: () => (/* binding */ InlinePrimitiveDescriptor),
/* harmony export */   KSerializerzf77vz1967fq: () => (/* binding */ KSerializer),
/* harmony export */   LIST_getInstance3iji3zetpdcxm: () => (/* binding */ LIST_getInstance),
/* harmony export */   ListSerializer1hxuk9dx5n9du: () => (/* binding */ ListSerializer),
/* harmony export */   MAP_getInstance2l4ulrz8ljw5i: () => (/* binding */ MAP_getInstance),
/* harmony export */   MapSerializer11kmegt3g5c1g: () => (/* binding */ MapSerializer),
/* harmony export */   MissingFieldException24tqif29emcmi: () => (/* binding */ MissingFieldException),
/* harmony export */   NamedValueDecoderzk26ztf92xbq: () => (/* binding */ NamedValueDecoder),
/* harmony export */   PluginGeneratedSerialDescriptorqdzeg5asqhfg: () => (/* binding */ PluginGeneratedSerialDescriptor),
/* harmony export */   PolymorphicKindla9gurooefwb: () => (/* binding */ PolymorphicKind),
/* harmony export */   PrimitiveKindndgbuh6is7ze: () => (/* binding */ PrimitiveKind),
/* harmony export */   PrimitiveSerialDescriptor3egfp53lutxj2: () => (/* binding */ PrimitiveSerialDescriptor_0),
/* harmony export */   SEALED_getInstance15u0wl5f5h4qk: () => (/* binding */ SEALED_getInstance),
/* harmony export */   STRING_getInstance2gbamclnmtzqa: () => (/* binding */ STRING_getInstance),
/* harmony export */   SealedClassSerializeriwipiibk55zc: () => (/* binding */ SealedClassSerializer),
/* harmony export */   SerialDescriptor2pelqekb5ic3a: () => (/* binding */ SerialDescriptor),
/* harmony export */   SerializationExceptioneqrdve3ts2n9: () => (/* binding */ SerializationException),
/* harmony export */   SerializerFactory1qv9hivitncuv: () => (/* binding */ SerializerFactory),
/* harmony export */   SerializersModuleCollector3dddz14wd7brg: () => (/* binding */ SerializersModuleCollector),
/* harmony export */   SetSerializert3lb0yy9iftr: () => (/* binding */ SetSerializer),
/* harmony export */   StringFormat2r2ka8mzcb3mi: () => (/* binding */ StringFormat),
/* harmony export */   StringSerializer_getInstance1k1oz5j50sfik: () => (/* binding */ StringSerializer_getInstance),
/* harmony export */   UnknownFieldExceptiona60e3a6v1xqo: () => (/* binding */ UnknownFieldException),
/* harmony export */   buildSerialDescriptor2873qmkp8r2ib: () => (/* binding */ buildSerialDescriptor),
/* harmony export */   contextual3hpp1gupsu4al: () => (/* binding */ contextual),
/* harmony export */   findPolymorphicSerializerk638ixyjovk5: () => (/* binding */ findPolymorphicSerializer),
/* harmony export */   getContextualDescriptor2n1gf3b895yb8: () => (/* binding */ getContextualDescriptor),
/* harmony export */   get_annotationshjxdbdcl8kmv: () => (/* binding */ get_annotations),
/* harmony export */   get_isInline5x26qrhi9qs6: () => (/* binding */ get_isInline),
/* harmony export */   get_isNullable36pbikm8xb7bz: () => (/* binding */ get_isNullable),
/* harmony export */   get_nullable197rfua9r7fsz: () => (/* binding */ get_nullable),
/* harmony export */   jsonCachedSerialNameslxufy2gu43jt: () => (/* binding */ jsonCachedSerialNames),
/* harmony export */   serializer1q7c5q67ysppr: () => (/* binding */ serializer_10),
/* harmony export */   serializer1rka18p0rjk4x: () => (/* binding */ serializer_0),
/* harmony export */   serializer1x79l67jvwntn: () => (/* binding */ serializer_1),
/* harmony export */   serializer2lw83vwvpnyms: () => (/* binding */ serializer_6),
/* harmony export */   serializer36584sjyg5661: () => (/* binding */ serializer_12),
/* harmony export */   serializer3ikrxnm8b29d6: () => (/* binding */ serializer_8),
/* harmony export */   serializerOrNull31x2b6nu6gruj: () => (/* binding */ serializerOrNull_0),
/* harmony export */   throwMissingFieldException2cmke0v3ynf14: () => (/* binding */ throwMissingFieldException),
/* harmony export */   typeParametersSerializers2likxjr48tr7y: () => (/* binding */ typeParametersSerializers)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");

//region block: imports
var imul = Math.imul;
//endregion
//region block: pre-declaration
class SerializationStrategy {}
class DeserializationStrategy {}
class KSerializer {}
class AbstractPolymorphicSerializer {
  k39(encoder, value) {
    var actualSerializer = findPolymorphicSerializer(this, encoder, value);
    // Inline function 'kotlinx.serialization.encoding.encodeStructure' call
    var descriptor = this.u38();
    var composite = encoder.q3c(descriptor);
    // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.serialize.<anonymous>' call
    composite.e3e(this.u38(), 0, actualSerializer.u38().x3a());
    var tmp = this.u38();
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(actualSerializer, SerializationStrategy) ? actualSerializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    composite.g3e(tmp, 1, tmp$ret$0, value);
    composite.r3c(descriptor);
  }
  v38(encoder, value) {
    return this.k39(encoder, !(value == null) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    // Inline function 'kotlinx.serialization.encoding.decodeStructure' call
    var descriptor = this.u38();
    var composite = decoder.q3c(descriptor);
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.deserialize.<anonymous>' call
      var klassName = null;
      var value = null;
      if (composite.f3d()) {
        tmp$ret$0 = decodeSequentially_0(this, composite);
        break $l$block;
      }
      mainLoop: while (true) {
        var index = composite.g3d(this.u38());
        switch (index) {
          case -1:
            break mainLoop;
          case 0:
            klassName = composite.a3d(this.u38(), index);
            break;
          case 1:
            var tmp$ret$2;
            $l$block_0: {
              // Inline function 'kotlin.requireNotNull' call
              var value_0 = klassName;
              // Inline function 'kotlin.contracts.contract' call
              if (value_0 == null) {
                // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.deserialize.<anonymous>.<anonymous>' call
                var message = 'Cannot read polymorphic value before its type token';
                throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
              } else {
                tmp$ret$2 = value_0;
                break $l$block_0;
              }
            }

            klassName = tmp$ret$2;
            var serializer = findPolymorphicSerializer_0(this, composite, klassName);
            value = composite.d3d(this.u38(), index, serializer);
            break;
          default:
            var tmp0_elvis_lhs = klassName;
            throw SerializationException.w39('Invalid index in polymorphic deserialization of ' + (tmp0_elvis_lhs == null ? 'unknown class' : tmp0_elvis_lhs) + ('\n Expected 0, 1 or DECODE_DONE(-1), but found ' + index));
        }
      }
      var tmp$ret$4;
      $l$block_1: {
        // Inline function 'kotlin.requireNotNull' call
        var value_1 = value;
        // Inline function 'kotlin.contracts.contract' call
        if (value_1 == null) {
          // Inline function 'kotlinx.serialization.internal.AbstractPolymorphicSerializer.deserialize.<anonymous>.<anonymous>' call
          var message_0 = 'Polymorphic value has not been read for class ' + klassName;
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
        } else {
          tmp$ret$4 = value_1;
          break $l$block_1;
        }
      }
      var tmp = tmp$ret$4;
      tmp$ret$0 = !(tmp == null) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    }
    var result = tmp$ret$0;
    composite.r3c(descriptor);
    return result;
  }
  l39(decoder, klassName) {
    return decoder.e3d().k3e(this.j39(), klassName);
  }
  m39(encoder, value) {
    return encoder.e3d().l3e(this.j39(), value);
  }
}
class PolymorphicSerializer extends AbstractPolymorphicSerializer {
  constructor(baseClass) {
    super();
    this.g39_1 = baseClass;
    this.h39_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
    var tmp = this;
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LazyThreadSafetyMode_PUBLICATION_getInstance3hlj875zwihx0)();
    tmp.i39_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy1261dae0bgscp)(tmp_0, PolymorphicSerializer$descriptor$delegate$lambda(this));
  }
  j39() {
    return this.g39_1;
  }
  u38() {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.i39_1;
    descriptor$factory();
    return this_0.l1();
  }
  toString() {
    return 'kotlinx.serialization.PolymorphicSerializer(baseClass: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.g39_1) + ')';
  }
}
class SealedClassSerializer extends AbstractPolymorphicSerializer {}
class StringFormat {}
class BinaryFormat {}
class SerializationException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob {
  static v39() {
    var $this = this.ed();
    init_kotlinx_serialization_SerializationException($this);
    return $this;
  }
  static w39(message) {
    var $this = this.o(message);
    init_kotlinx_serialization_SerializationException($this);
    return $this;
  }
  static x39(message, cause) {
    var $this = this.gd(message, cause);
    init_kotlinx_serialization_SerializationException($this);
    return $this;
  }
}
class UnknownFieldException extends SerializationException {
  static d3a(message) {
    var $this = this.w39(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.c3a_1);
    return $this;
  }
  static e3a(index) {
    return this.d3a('An unknown field for index ' + index);
  }
}
class MissingFieldException extends SerializationException {
  static l3a(missingFields, message, cause) {
    var $this = this.x39(message, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.k3a_1);
    $this.j3a_1 = missingFields;
    return $this;
  }
  static m3a(missingFields, serialName) {
    return this.l3a(missingFields, missingFields.z() === 1 ? "Field '" + missingFields.c1(0) + "' is required for type with serial name '" + serialName + "', but it was missing" : 'Fields ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(missingFields) + " are required for type with serial name '" + serialName + "', but they were missing", null);
  }
}
class SerialDescriptor {}
function get_isNullable() {
  return false;
}
function get_isInline() {
  return false;
}
function get_annotations() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
}
class ContextDescriptor {
  constructor(original, kClass) {
    this.u3a_1 = original;
    this.v3a_1 = kClass;
    this.w3a_1 = this.u3a_1.x3a() + '<' + this.v3a_1.je() + '>';
  }
  y3a() {
    return this.u3a_1.y3a();
  }
  z3a() {
    return this.u3a_1.z3a();
  }
  a3b() {
    return this.u3a_1.a3b();
  }
  t3a() {
    return this.u3a_1.t3a();
  }
  b3b() {
    return this.u3a_1.b3b();
  }
  c3b(index) {
    return this.u3a_1.c3b(index);
  }
  d3b(index) {
    return this.u3a_1.d3b(index);
  }
  e3b(name) {
    return this.u3a_1.e3b(name);
  }
  f3b(index) {
    return this.u3a_1.f3b(index);
  }
  g3b(index) {
    return this.u3a_1.g3b(index);
  }
  x3a() {
    return this.w3a_1;
  }
  equals(other) {
    var tmp0_elvis_lhs = other instanceof ContextDescriptor ? other : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var another = tmp;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.u3a_1, another.u3a_1) && another.v3a_1.equals(this.v3a_1);
  }
  hashCode() {
    var result = this.v3a_1.hashCode();
    result = imul(31, result) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.w3a_1) | 0;
    return result;
  }
  toString() {
    return 'ContextDescriptor(kClass: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.v3a_1) + ', original: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.u3a_1) + ')';
  }
}
class elementDescriptors$1$1 {
  constructor($this_elementDescriptors) {
    this.l3b_1 = $this_elementDescriptors;
    this.k3b_1 = $this_elementDescriptors.z3a();
  }
  x() {
    return this.k3b_1 > 0;
  }
  y() {
    var tmp = this.l3b_1.z3a();
    var tmp1 = this.k3b_1;
    this.k3b_1 = tmp1 - 1 | 0;
    return this.l3b_1.d3b(tmp - tmp1 | 0);
  }
}
class _no_name_provided__qut3iv {
  constructor($this_elementDescriptors) {
    this.m3b_1 = $this_elementDescriptors;
  }
  w() {
    // Inline function 'kotlinx.serialization.descriptors.<get-elementDescriptors>.<anonymous>' call
    return new elementDescriptors$1$1(this.m3b_1);
  }
}
class ClassSerialDescriptorBuilder {
  constructor(serialName) {
    this.x38_1 = serialName;
    this.y38_1 = false;
    this.z38_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
    this.a39_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
    this.b39_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v.a9();
    this.c39_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
    this.d39_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
    this.e39_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  }
  n3b(elementName, descriptor, annotations, isOptional) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!this.b39_1.g(elementName)) {
      // Inline function 'kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder.element.<anonymous>' call
      var message = "Element with name '" + elementName + "' is already registered in " + this.x38_1;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    // Inline function 'kotlin.collections.plusAssign' call
    this.a39_1.g(elementName);
    // Inline function 'kotlin.collections.plusAssign' call
    this.c39_1.g(descriptor);
    // Inline function 'kotlin.collections.plusAssign' call
    this.d39_1.g(annotations);
    // Inline function 'kotlin.collections.plusAssign' call
    this.e39_1.g(isOptional);
  }
  f39(elementName, descriptor, annotations, isOptional, $super) {
    annotations = annotations === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : annotations;
    isOptional = isOptional === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : isOptional;
    var tmp;
    if ($super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
      this.n3b(elementName, descriptor, annotations, isOptional);
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      tmp = $super.n3b.call(this, elementName, descriptor, annotations, isOptional);
    }
    return tmp;
  }
}
class CachedNames {}
class SerialDescriptorImpl {
  constructor(serialName, kind, elementsCount, typeParameters, builder) {
    this.o3b_1 = serialName;
    this.p3b_1 = kind;
    this.q3b_1 = elementsCount;
    this.r3b_1 = builder.z38_1;
    this.s3b_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toHashSet1qrcsl3g8ugc8)(builder.a39_1);
    var tmp = this;
    // Inline function 'kotlin.collections.toTypedArray' call
    var this_0 = builder.a39_1;
    tmp.t3b_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyToArray2j022khrow2yi)(this_0);
    this.u3b_1 = compactArray(builder.c39_1);
    var tmp_0 = this;
    // Inline function 'kotlin.collections.toTypedArray' call
    var this_1 = builder.d39_1;
    tmp_0.v3b_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyToArray2j022khrow2yi)(this_1);
    this.w3b_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toBooleanArray2u3qw7fjwsmuh)(builder.e39_1);
    var tmp_1 = this;
    // Inline function 'kotlin.collections.map' call
    var this_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.withIndex3s8q7w1g0hyfn)(this.t3b_1);
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_2, 10));
    var tmp0_iterator = this_2.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.name2Index.<anonymous>' call
      var tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(item.rh_1, item.qh_1);
      destination.g(tmp$ret$2);
    }
    tmp_1.x3b_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toMap1vec9topfei08)(destination);
    this.y3b_1 = compactArray(typeParameters);
    var tmp_2 = this;
    tmp_2.z3b_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(SerialDescriptorImpl$_hashCode$delegate$lambda(this));
  }
  x3a() {
    return this.o3b_1;
  }
  b3b() {
    return this.p3b_1;
  }
  z3a() {
    return this.q3b_1;
  }
  y3a() {
    return this.r3b_1;
  }
  a3c() {
    return this.s3b_1;
  }
  f3b(index) {
    return getChecked(this.t3b_1, index);
  }
  e3b(name) {
    var tmp0_elvis_lhs = this.x3b_1.q2(name);
    return tmp0_elvis_lhs == null ? -3 : tmp0_elvis_lhs;
  }
  c3b(index) {
    return getChecked(this.v3b_1, index);
  }
  d3b(index) {
    return getChecked(this.u3b_1, index);
  }
  g3b(index) {
    return getChecked_0(this.w3b_1, index);
  }
  equals(other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof SerialDescriptorImpl)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.x3a() === other.x3a())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      // Inline function 'kotlinx.serialization.descriptors.SerialDescriptorImpl.equals.<anonymous>' call
      if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contentEqualsaf55p28mnw74)(this.y3b_1, other.y3b_1)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.z3a() === other.z3a())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.z3a();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.d3b(index).x3a() === other.d3b(index).x3a())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.d3b(index).b3b(), other.d3b(index).b3b())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  hashCode() {
    return _get__hashCode__tgwhef(this);
  }
  toString() {
    var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.until1jbpn0z3f8lbg)(0, this.q3b_1);
    var tmp_0 = this.o3b_1 + '(';
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.joinToString1cxrrlmo0chqs)(tmp, ', ', tmp_0, ')', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, SerialDescriptorImpl$toString$lambda(this));
  }
}
class SerialKind {
  toString() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this).je());
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.toString());
  }
}
class ENUM extends SerialKind {
  constructor() {
    ENUM_instance = null;
    super();
    ENUM_instance = this;
  }
}
class CONTEXTUAL extends SerialKind {
  constructor() {
    CONTEXTUAL_instance = null;
    super();
    CONTEXTUAL_instance = this;
  }
}
class PrimitiveKind extends SerialKind {}
class BOOLEAN extends PrimitiveKind {
  constructor() {
    BOOLEAN_instance = null;
    super();
    BOOLEAN_instance = this;
  }
}
class BYTE extends PrimitiveKind {
  constructor() {
    BYTE_instance = null;
    super();
    BYTE_instance = this;
  }
}
class CHAR extends PrimitiveKind {
  constructor() {
    CHAR_instance = null;
    super();
    CHAR_instance = this;
  }
}
class SHORT extends PrimitiveKind {
  constructor() {
    SHORT_instance = null;
    super();
    SHORT_instance = this;
  }
}
class INT extends PrimitiveKind {
  constructor() {
    INT_instance = null;
    super();
    INT_instance = this;
  }
}
class LONG extends PrimitiveKind {
  constructor() {
    LONG_instance = null;
    super();
    LONG_instance = this;
  }
}
class FLOAT extends PrimitiveKind {
  constructor() {
    FLOAT_instance = null;
    super();
    FLOAT_instance = this;
  }
}
class DOUBLE extends PrimitiveKind {
  constructor() {
    DOUBLE_instance = null;
    super();
    DOUBLE_instance = this;
  }
}
class STRING extends PrimitiveKind {
  constructor() {
    STRING_instance = null;
    super();
    STRING_instance = this;
  }
}
class StructureKind extends SerialKind {}
class CLASS extends StructureKind {
  constructor() {
    CLASS_instance = null;
    super();
    CLASS_instance = this;
  }
}
class LIST extends StructureKind {
  constructor() {
    LIST_instance = null;
    super();
    LIST_instance = this;
  }
}
class MAP extends StructureKind {
  constructor() {
    MAP_instance = null;
    super();
    MAP_instance = this;
  }
}
class OBJECT extends StructureKind {
  constructor() {
    OBJECT_instance = null;
    super();
    OBJECT_instance = this;
  }
}
class PolymorphicKind extends SerialKind {}
class SEALED extends PolymorphicKind {
  constructor() {
    SEALED_instance = null;
    super();
    SEALED_instance = this;
  }
}
class OPEN extends PolymorphicKind {
  constructor() {
    OPEN_instance = null;
    super();
    OPEN_instance = this;
  }
}
class Decoder {}
function decodeSerializableValue(deserializer) {
  return deserializer.w38(this);
}
class CompositeDecoder {}
function decodeSequentially() {
  return false;
}
function decodeCollectionSize(descriptor) {
  return -1;
}
function decodeSerializableElement$default(descriptor, index, deserializer, previousValue, $super) {
  previousValue = previousValue === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : previousValue;
  return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.c3d(descriptor, index, deserializer, previousValue) : $super.c3d.call(this, descriptor, index, deserializer, previousValue);
}
class AbstractDecoder {
  b3c() {
    throw SerializationException.w39((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this)) + " can't retrieve untyped values");
  }
  c3c() {
    return true;
  }
  d3c() {
    return null;
  }
  e3c() {
    var tmp = this.b3c();
    return typeof tmp === 'boolean' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  f3c() {
    var tmp = this.b3c();
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  g3c() {
    var tmp = this.b3c();
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  h3c() {
    var tmp = this.b3c();
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  i3c() {
    var tmp = this.b3c();
    return tmp instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  j3c() {
    var tmp = this.b3c();
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  k3c() {
    var tmp = this.b3c();
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  l3c() {
    var tmp = this.b3c();
    return tmp instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof ? tmp.v1_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  m3c() {
    var tmp = this.b3c();
    return typeof tmp === 'string' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  n3c(descriptor) {
    return this;
  }
  o3c(deserializer, previousValue) {
    return this.p3c(deserializer);
  }
  q3c(descriptor) {
    return this;
  }
  r3c(descriptor) {
  }
  s3c(descriptor, index) {
    return this.e3c();
  }
  t3c(descriptor, index) {
    return this.f3c();
  }
  u3c(descriptor, index) {
    return this.g3c();
  }
  v3c(descriptor, index) {
    return this.h3c();
  }
  w3c(descriptor, index) {
    return this.i3c();
  }
  x3c(descriptor, index) {
    return this.j3c();
  }
  y3c(descriptor, index) {
    return this.k3c();
  }
  z3c(descriptor, index) {
    return this.l3c();
  }
  a3d(descriptor, index) {
    return this.m3c();
  }
  b3d(descriptor, index) {
    return this.n3c(descriptor.d3b(index));
  }
  c3d(descriptor, index, deserializer, previousValue) {
    return this.o3c(deserializer, previousValue);
  }
}
class Encoder {}
function encodeNotNullMark() {
}
function beginCollection(descriptor, collectionSize) {
  return this.q3c(descriptor);
}
function encodeSerializableValue(serializer, value) {
  serializer.v38(this, value);
}
class AbstractEncoder {
  static i3d() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createThis2j2avj17cvnv2)(this);
  }
  q3c(descriptor) {
    return this;
  }
  r3c(descriptor) {
  }
  j3d(descriptor, index) {
    return true;
  }
  k3d(value) {
    throw SerializationException.w39('Non-serializable ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(value)) + ' is not supported by ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this)) + ' encoder');
  }
  l3d() {
    throw SerializationException.w39("'null' is not supported by default");
  }
  m3d(value) {
    return this.k3d(value);
  }
  n3d(value) {
    return this.k3d(value);
  }
  o3d(value) {
    return this.k3d(value);
  }
  p3d(value) {
    return this.k3d(value);
  }
  q3d(value) {
    return this.k3d(value);
  }
  r3d(value) {
    return this.k3d(value);
  }
  s3d(value) {
    return this.k3d(value);
  }
  t3d(value) {
    return this.k3d(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof(value));
  }
  u3d(value) {
    return this.k3d(value);
  }
  v3d(descriptor) {
    return this;
  }
  w3d(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.m3d(value);
    }
  }
  x3d(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.n3d(value);
    }
  }
  y3d(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.o3d(value);
    }
  }
  z3d(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.p3d(value);
    }
  }
  a3e(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.q3d(value);
    }
  }
  b3e(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.r3d(value);
    }
  }
  c3e(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.s3d(value);
    }
  }
  d3e(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.t3d(value);
    }
  }
  e3e(descriptor, index, value) {
    if (this.j3d(descriptor, index)) {
      this.u3d(value);
    }
  }
  f3e(descriptor, index) {
    return this.j3d(descriptor, index) ? this.v3d(descriptor.d3b(index)) : NoOpEncoder_getInstance();
  }
  g3e(descriptor, index, serializer, value) {
    if (this.j3d(descriptor, index)) {
      this.h3e(serializer, value);
    }
  }
}
class NothingSerializer {
  constructor() {
    NothingSerializer_instance = this;
    this.m3e_1 = NothingSerialDescriptor_getInstance();
  }
  u38() {
    return this.m3e_1;
  }
  n3e(encoder, value) {
    throw SerializationException.w39("'kotlin.Nothing' cannot be serialized");
  }
  v38(encoder, value) {
    var tmp;
    if (false) {} else {
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    }
    return this.n3e(encoder, tmp);
  }
  w38(decoder) {
    throw SerializationException.w39("'kotlin.Nothing' does not have instances");
  }
}
class DurationSerializer {
  constructor() {
    DurationSerializer_instance = this;
    this.o3e_1 = new PrimitiveSerialDescriptor('kotlin.time.Duration', STRING_getInstance());
  }
  u38() {
    return this.o3e_1;
  }
  p3e(encoder, value) {
    encoder.u3d((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Duration__toIsoString_impl_9h6wsm22wke42kgx7qi)(value));
  }
  v38(encoder, value) {
    return this.p3e(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Duration5ynfiptaqcrg ? value.kk_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  q3e(decoder) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance2b73c6hwbaiuw)().jk(decoder.m3c());
  }
  w38(decoder) {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Duration5ynfiptaqcrg(this.q3e(decoder));
  }
}
class ListLikeDescriptor {
  constructor(elementDescriptor) {
    this.t3e_1 = elementDescriptor;
    this.u3e_1 = 1;
  }
  b3b() {
    return LIST_getInstance();
  }
  z3a() {
    return this.u3e_1;
  }
  f3b(index) {
    return index.toString();
  }
  e3b(name) {
    var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toIntOrNull3w2d066r9pvwm)(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o(name + ' is not a valid list index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  g3b(index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.isElementOptional.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.x3a() + ' expects only non-negative indices';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return false;
  }
  c3b(index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.getElementAnnotations.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.x3a() + ' expects only non-negative indices';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
  }
  d3b(index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.ListLikeDescriptor.getElementDescriptor.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.x3a() + ' expects only non-negative indices';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return this.t3e_1;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof ListLikeDescriptor))
      return false;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.t3e_1, other.t3e_1) && this.x3a() === other.x3a())
      return true;
    return false;
  }
  hashCode() {
    return imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.t3e_1), 31) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.x3a()) | 0;
  }
  toString() {
    return this.x3a() + '(' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.t3e_1) + ')';
  }
}
class ArrayListClassDesc extends ListLikeDescriptor {
  x3a() {
    return 'kotlin.collections.ArrayList';
  }
}
class HashSetClassDesc extends ListLikeDescriptor {
  x3a() {
    return 'kotlin.collections.HashSet';
  }
}
class LinkedHashSetClassDesc extends ListLikeDescriptor {
  x3a() {
    return 'kotlin.collections.LinkedHashSet';
  }
}
class MapLikeDescriptor {
  constructor(serialName, keyDescriptor, valueDescriptor) {
    this.z3e_1 = serialName;
    this.a3f_1 = keyDescriptor;
    this.b3f_1 = valueDescriptor;
    this.c3f_1 = 2;
  }
  x3a() {
    return this.z3e_1;
  }
  b3b() {
    return MAP_getInstance();
  }
  z3a() {
    return this.c3f_1;
  }
  f3b(index) {
    return index.toString();
  }
  e3b(name) {
    var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toIntOrNull3w2d066r9pvwm)(name);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o(name + ' is not a valid map index');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  g3b(index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.isElementOptional.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.x3a() + ' expects only non-negative indices';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return false;
  }
  c3b(index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.getElementAnnotations.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.x3a() + ' expects only non-negative indices';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
  }
  d3b(index) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(index >= 0)) {
      // Inline function 'kotlinx.serialization.internal.MapLikeDescriptor.getElementDescriptor.<anonymous>' call
      var message = 'Illegal index ' + index + ', ' + this.x3a() + ' expects only non-negative indices';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    var tmp;
    switch (index % 2 | 0) {
      case 0:
        tmp = this.a3f_1;
        break;
      case 1:
        tmp = this.b3f_1;
        break;
      default:
        var message_0 = 'Unreached';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
    }
    return tmp;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof MapLikeDescriptor))
      return false;
    if (!(this.x3a() === other.x3a()))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.a3f_1, other.a3f_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.b3f_1, other.b3f_1))
      return false;
    return true;
  }
  hashCode() {
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.x3a());
    result = imul(31, result) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.a3f_1) | 0;
    result = imul(31, result) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.b3f_1) | 0;
    return result;
  }
  toString() {
    return this.x3a() + '(' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.a3f_1) + ', ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.b3f_1) + ')';
  }
}
class HashMapClassDesc extends MapLikeDescriptor {
  constructor(keyDesc, valueDesc) {
    super('kotlin.collections.HashMap', keyDesc, valueDesc);
  }
}
class LinkedHashMapClassDesc extends MapLikeDescriptor {
  constructor(keyDesc, valueDesc) {
    super('kotlin.collections.LinkedHashMap', keyDesc, valueDesc);
  }
}
class ArrayClassDesc extends ListLikeDescriptor {
  x3a() {
    return 'kotlin.Array';
  }
}
class PrimitiveArrayDescriptor extends ListLikeDescriptor {
  constructor(primitive) {
    super(primitive);
    this.h3f_1 = primitive.x3a() + 'Array';
  }
  x3a() {
    return this.h3f_1;
  }
}
class AbstractCollectionSerializer {
  d3g(decoder, previous) {
    var tmp1_elvis_lhs = previous == null ? null : this.q3f(previous);
    var builder = tmp1_elvis_lhs == null ? this.k3f() : tmp1_elvis_lhs;
    var startIndex = this.m3f(builder);
    var compositeDecoder = decoder.q3c(this.u38());
    if (compositeDecoder.f3d()) {
      this.a3g(compositeDecoder, builder, startIndex, readSize(this, compositeDecoder, builder));
    } else {
      $l$loop: while (true) {
        var index = compositeDecoder.g3d(this.u38());
        if (index === -1)
          break $l$loop;
        this.c3g(compositeDecoder, startIndex + index | 0, builder);
      }
    }
    compositeDecoder.r3c(this.u38());
    return this.o3f(builder);
  }
  w38(decoder) {
    return this.d3g(decoder, null);
  }
  c3g(decoder, index, builder, checkIndex, $super) {
    checkIndex = checkIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? true : checkIndex;
    var tmp;
    if ($super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
      this.b3g(decoder, index, builder, checkIndex);
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      tmp = $super.b3g.call(this, decoder, index, builder, checkIndex);
    }
    return tmp;
  }
}
class CollectionLikeSerializer extends AbstractCollectionSerializer {
  constructor(elementSerializer) {
    super();
    this.y3f_1 = elementSerializer;
  }
  z3f(encoder, value) {
    var size = this.v3g(value);
    // Inline function 'kotlinx.serialization.encoding.encodeCollection' call
    var descriptor = this.u38();
    var composite = encoder.j3e(descriptor, size);
    // Inline function 'kotlinx.serialization.internal.CollectionLikeSerializer.serialize.<anonymous>' call
    var iterator = this.x3g(value);
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        composite.g3e(this.u38(), index, this.y3f_1, iterator.y());
      }
       while (inductionVariable < size);
    composite.r3c(descriptor);
  }
  v38(encoder, value) {
    return this.z3f(encoder, (value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  a3g(decoder, builder, startIndex, size) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(size >= 0)) {
      // Inline function 'kotlinx.serialization.internal.CollectionLikeSerializer.readAll.<anonymous>' call
      var message = 'Size must be known in advance when using READ_ALL';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        this.b3g(decoder, startIndex + index | 0, builder, false);
      }
       while (inductionVariable < size);
  }
  b3g(decoder, index, builder, checkIndex) {
    this.u3f(builder, index, decoder.d3d(this.u38(), index, this.y3f_1));
  }
}
class CollectionSerializer extends CollectionLikeSerializer {
  w3f(_this__u8e3s4) {
    return _this__u8e3s4.z();
  }
  v3g(_this__u8e3s4) {
    return this.w3f((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Collection1k04j3hzsbod0) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  x3f(_this__u8e3s4) {
    return _this__u8e3s4.w();
  }
  x3g(_this__u8e3s4) {
    return this.x3f((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Collection1k04j3hzsbod0) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class ArrayListSerializer extends CollectionSerializer {
  constructor(element) {
    super(element);
    this.j3f_1 = new ArrayListClassDesc(element.u38());
  }
  u38() {
    return this.j3f_1;
  }
  k3f() {
    // Inline function 'kotlin.collections.arrayListOf' call
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  }
  l3f(_this__u8e3s4) {
    return _this__u8e3s4.z();
  }
  m3f(_this__u8e3s4) {
    return this.l3f(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  n3f(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  o3f(_this__u8e3s4) {
    return this.n3f(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  p3f(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.s(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  q3f(_this__u8e3s4) {
    return this.p3f((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtList3hktaavzmj137) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  r3f(_this__u8e3s4, size) {
    return _this__u8e3s4.x6(size);
  }
  s3f(_this__u8e3s4, size) {
    return this.r3f(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
  t3f(_this__u8e3s4, index, element) {
    _this__u8e3s4.l2(index, element);
  }
  u3f(_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.t3f(tmp, index, (element == null ? true : !(element == null)) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class HashSetSerializer extends CollectionSerializer {
  constructor(eSerializer) {
    super(eSerializer);
    this.f3g_1 = new HashSetClassDesc(eSerializer.u38());
  }
  u38() {
    return this.f3g_1;
  }
  k3f() {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v.a9();
  }
  g3g(_this__u8e3s4) {
    return _this__u8e3s4.z();
  }
  m3f(_this__u8e3s4) {
    return this.g3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  h3g(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  o3f(_this__u8e3s4) {
    return this.h3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  i3g(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v.b9(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  q3f(_this__u8e3s4) {
    return this.i3g((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtSetjrjc7fhfd6b9) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  j3g(_this__u8e3s4, size) {
  }
  s3f(_this__u8e3s4, size) {
    return this.j3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
  k3g(_this__u8e3s4, index, element) {
    _this__u8e3s4.g(element);
  }
  u3f(_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.k3g(tmp, index, (element == null ? true : !(element == null)) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class LinkedHashSetSerializer extends CollectionSerializer {
  constructor(eSerializer) {
    super(eSerializer);
    this.m3g_1 = new LinkedHashSetClassDesc(eSerializer.u38());
  }
  u38() {
    return this.m3g_1;
  }
  k3f() {
    // Inline function 'kotlin.collections.linkedSetOf' call
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2.d1();
  }
  n3g(_this__u8e3s4) {
    return _this__u8e3s4.z();
  }
  m3f(_this__u8e3s4) {
    return this.n3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2 ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  o3g(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  o3f(_this__u8e3s4) {
    return this.o3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2 ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  i3g(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2 ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2.i1(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  q3f(_this__u8e3s4) {
    return this.i3g((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtSetjrjc7fhfd6b9) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  p3g(_this__u8e3s4, size) {
  }
  s3f(_this__u8e3s4, size) {
    return this.p3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2 ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
  q3g(_this__u8e3s4, index, element) {
    _this__u8e3s4.g(element);
  }
  u3f(_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2 ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.q3g(tmp, index, (element == null ? true : !(element == null)) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class MapLikeSerializer extends AbstractCollectionSerializer {
  constructor(keySerializer, valueSerializer) {
    super();
    this.c3h_1 = keySerializer;
    this.d3h_1 = valueSerializer;
  }
  e3h(decoder, builder, startIndex, size) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(size >= 0)) {
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readAll.<anonymous>' call
      var message = 'Size must be known in advance when using READ_ALL';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    var progression = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.step18s9qzr5xwxat)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.until1jbpn0z3f8lbg)(0, imul(size, 2)), 2);
    var inductionVariable = progression.r1_1;
    var last = progression.s1_1;
    var step_0 = progression.t1_1;
    if (step_0 > 0 && inductionVariable <= last || (step_0 < 0 && last <= inductionVariable))
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + step_0 | 0;
        this.f3h(decoder, startIndex + index | 0, builder, false);
      }
       while (!(index === last));
  }
  a3g(decoder, builder, startIndex, size) {
    return this.e3h(decoder, (!(builder == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(builder, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableMap1kqeifoi36kpz) : false) ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), startIndex, size);
  }
  f3h(decoder, index, builder, checkIndex) {
    var key = decoder.d3d(this.u38(), index, this.c3h_1);
    var tmp;
    if (checkIndex) {
      // Inline function 'kotlin.also' call
      var this_0 = decoder.g3d(this.u38());
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>' call
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(this_0 === (index + 1 | 0))) {
        // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.readElement.<anonymous>.<anonymous>' call
        var message = 'Value must follow key in a map, index for key: ' + index + ', returned index for value: ' + this_0;
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      }
      tmp = this_0;
    } else {
      tmp = index + 1 | 0;
    }
    var vIndex = tmp;
    var tmp_0;
    var tmp_1;
    if (builder.o2(key)) {
      var tmp_2 = this.d3h_1.u38().b3b();
      tmp_1 = !(tmp_2 instanceof PrimitiveKind);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = decoder.c3d(this.u38(), vIndex, this.d3h_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getValue48kllevslyh6)(builder, key));
    } else {
      tmp_0 = decoder.d3d(this.u38(), vIndex, this.d3h_1);
    }
    var value = tmp_0;
    // Inline function 'kotlin.collections.set' call
    builder.t2(key, value);
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.f3h(decoder, index, (!(builder == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(builder, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableMap1kqeifoi36kpz) : false) ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  z3f(encoder, value) {
    var size = this.v3g(value);
    // Inline function 'kotlinx.serialization.encoding.encodeCollection' call
    var descriptor = this.u38();
    var composite = encoder.j3e(descriptor, size);
    // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.serialize.<anonymous>' call
    var iterator = this.x3g(value);
    var index = 0;
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = iterator;
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlinx.serialization.internal.MapLikeSerializer.serialize.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var k = element.k1();
      // Inline function 'kotlin.collections.component2' call
      var v = element.l1();
      var tmp = this.u38();
      var tmp0 = index;
      index = tmp0 + 1 | 0;
      composite.g3e(tmp, tmp0, this.c3h_1, k);
      var tmp_0 = this.u38();
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      composite.g3e(tmp_0, tmp1, this.d3h_1, v);
    }
    composite.r3c(descriptor);
  }
  v38(encoder, value) {
    return this.z3f(encoder, (value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class HashMapSerializer extends MapLikeSerializer {
  constructor(kSerializer, vSerializer) {
    super(kSerializer, vSerializer);
    this.t3g_1 = new HashMapClassDesc(kSerializer.u38(), vSerializer.u38());
  }
  u38() {
    return this.t3g_1;
  }
  u3g(_this__u8e3s4) {
    return _this__u8e3s4.z();
  }
  v3g(_this__u8e3s4) {
    return this.u3g((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w3g(_this__u8e3s4) {
    // Inline function 'kotlin.collections.iterator' call
    return _this__u8e3s4.j1().w();
  }
  x3g(_this__u8e3s4) {
    return this.w3g((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  k3f() {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv.k7();
  }
  y3g(_this__u8e3s4) {
    return imul(_this__u8e3s4.z(), 2);
  }
  m3f(_this__u8e3s4) {
    return this.y3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  z3g(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  o3f(_this__u8e3s4) {
    return this.z3g(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  a3h(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv.z7(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  q3f(_this__u8e3s4) {
    return this.a3h((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  b3h(_this__u8e3s4, size) {
  }
  s3f(_this__u8e3s4, size) {
    return this.b3h(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class LinkedHashMapSerializer extends MapLikeSerializer {
  constructor(kSerializer, vSerializer) {
    super(kSerializer, vSerializer);
    this.i3h_1 = new LinkedHashMapClassDesc(kSerializer.u38(), vSerializer.u38());
  }
  u38() {
    return this.i3h_1;
  }
  u3g(_this__u8e3s4) {
    return _this__u8e3s4.z();
  }
  v3g(_this__u8e3s4) {
    return this.u3g((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w3g(_this__u8e3s4) {
    // Inline function 'kotlin.collections.iterator' call
    return _this__u8e3s4.j1().w();
  }
  x3g(_this__u8e3s4) {
    return this.w3g((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  k3f() {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.ya();
  }
  j3h(_this__u8e3s4) {
    return imul(_this__u8e3s4.z(), 2);
  }
  m3f(_this__u8e3s4) {
    return this.j3h(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  k3h(_this__u8e3s4) {
    return _this__u8e3s4;
  }
  o3f(_this__u8e3s4) {
    return this.k3h(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  a3h(_this__u8e3s4) {
    var tmp0_elvis_lhs = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl ? _this__u8e3s4 : null;
    return tmp0_elvis_lhs == null ? _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.ab(_this__u8e3s4) : tmp0_elvis_lhs;
  }
  q3f(_this__u8e3s4) {
    return this.a3h((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  l3h(_this__u8e3s4, size) {
  }
  s3f(_this__u8e3s4, size) {
    return this.l3h(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class ReferenceArraySerializer extends CollectionLikeSerializer {
  constructor(kClass, eSerializer) {
    super(eSerializer);
    this.n3h_1 = kClass;
    this.o3h_1 = new ArrayClassDesc(eSerializer.u38());
  }
  u38() {
    return this.o3h_1;
  }
  p3h(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.p3h((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isArray1hxjqtqy632bc)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  q3h(_this__u8e3s4) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.arrayIterator3lgwvgteckzhv)(_this__u8e3s4);
  }
  x3g(_this__u8e3s4) {
    return this.q3h((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isArray1hxjqtqy632bc)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  k3f() {
    // Inline function 'kotlin.collections.arrayListOf' call
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  }
  r3h(_this__u8e3s4) {
    return _this__u8e3s4.z();
  }
  m3f(_this__u8e3s4) {
    return this.r3h(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  s3h(_this__u8e3s4) {
    return toNativeArrayImpl(_this__u8e3s4, this.n3h_1);
  }
  o3f(_this__u8e3s4) {
    return this.s3h(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  t3h(_this__u8e3s4) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.s((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.asList2ho2pewtsfvv)(_this__u8e3s4));
  }
  q3f(_this__u8e3s4) {
    return this.t3h((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isArray1hxjqtqy632bc)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  u3h(_this__u8e3s4, size) {
    return _this__u8e3s4.x6(size);
  }
  s3f(_this__u8e3s4, size) {
    return this.u3h(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
  v3h(_this__u8e3s4, index, element) {
    _this__u8e3s4.l2(index, element);
  }
  u3f(_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.v3h(tmp, index, (element == null ? true : !(element == null)) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class PrimitiveArraySerializer extends CollectionLikeSerializer {
  constructor(primitiveSerializer) {
    super(primitiveSerializer);
    this.x3h_1 = new PrimitiveArrayDescriptor(primitiveSerializer.u38());
  }
  u38() {
    return this.x3h_1;
  }
  y3h(_this__u8e3s4) {
    return _this__u8e3s4.z3h();
  }
  m3f(_this__u8e3s4) {
    return this.y3h(_this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  a3i(_this__u8e3s4) {
    return _this__u8e3s4.b3i();
  }
  o3f(_this__u8e3s4) {
    return this.a3i(_this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  c3i(_this__u8e3s4, size) {
    return _this__u8e3s4.d3i(size);
  }
  s3f(_this__u8e3s4, size) {
    return this.c3i(_this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
  e3i(_this__u8e3s4) {
    var message = 'This method lead to boxing and must not be used, use writeContents instead';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  x3g(_this__u8e3s4) {
    return this.e3i((_this__u8e3s4 == null ? true : !(_this__u8e3s4 == null)) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  f3i(_this__u8e3s4, index, element) {
    var message = 'This method lead to boxing and must not be used, use Builder.append instead';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  u3f(_this__u8e3s4, index, element) {
    var tmp = _this__u8e3s4 instanceof PrimitiveArrayBuilder ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.f3i(tmp, index, (element == null ? true : !(element == null)) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  k3f() {
    return this.q3f(this.g3i());
  }
  j3i(encoder, value) {
    var size = this.v3g(value);
    // Inline function 'kotlinx.serialization.encoding.encodeCollection' call
    var descriptor = this.x3h_1;
    var composite = encoder.j3e(descriptor, size);
    // Inline function 'kotlinx.serialization.internal.PrimitiveArraySerializer.serialize.<anonymous>' call
    this.i3i(composite, value, size);
    composite.r3c(descriptor);
  }
  v38(encoder, value) {
    return this.j3i(encoder, (value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  z3f(encoder, value) {
    return this.j3i(encoder, (value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return this.d3g(decoder, null);
  }
}
class PrimitiveArrayBuilder {
  k3i(requiredCapacity, $super) {
    requiredCapacity = requiredCapacity === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.z3h() + 1 | 0 : requiredCapacity;
    var tmp;
    if ($super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
      this.d3i(requiredCapacity);
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      tmp = $super.d3i.call(this, requiredCapacity);
    }
    return tmp;
  }
}
class Companion {
  constructor() {
    Companion_instance_0 = this;
    this.l3i_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.longArray288a0fctlmjmj)(0);
  }
}
class ElementMarker {
  constructor(descriptor, readIfAbsent) {
    Companion_getInstance_6();
    this.m3i_1 = descriptor;
    this.n3i_1 = readIfAbsent;
    var elementsCount = this.m3i_1.z3a();
    if (elementsCount <= 64) {
      var tmp = this;
      var tmp_0;
      if (elementsCount === 64) {
        tmp_0 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0);
      } else {
        tmp_0 = (new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(-1, -1)).m3(elementsCount);
      }
      tmp.o3i_1 = tmp_0;
      this.p3i_1 = Companion_getInstance_6().l3i_1;
    } else {
      this.o3i_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0);
      this.p3i_1 = prepareHighMarksArray(this, elementsCount);
    }
  }
  q3i(index) {
    if (index < 64) {
      this.o3i_1 = this.o3i_1.q3((new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(1, 0)).m3(index));
    } else {
      markHigh(this, index);
    }
  }
  r3i() {
    var elementsCount = this.m3i_1.z3a();
    while (!this.o3i_1.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(-1, -1))) {
      var index = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.countTrailingZeroBits1k55x07cygoff)(this.o3i_1.l3());
      this.o3i_1 = this.o3i_1.q3((new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(1, 0)).m3(index));
      if (this.n3i_1(this.m3i_1, index)) {
        return index;
      }
    }
    if (elementsCount > 64) {
      return nextUnmarkedHighIndex(this);
    }
    return -1;
  }
}
class PluginGeneratedSerialDescriptor {
  constructor(serialName, generatedSerializer, elementsCount) {
    generatedSerializer = generatedSerializer === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : generatedSerializer;
    this.f3j_1 = serialName;
    this.g3j_1 = generatedSerializer;
    this.h3j_1 = elementsCount;
    this.i3j_1 = -1;
    var tmp = this;
    var tmp_0 = 0;
    var tmp_1 = this.h3j_1;
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.fillArrayVali8eppxapiek4)(Array(tmp_1), null);
    while (tmp_0 < tmp_1) {
      tmp_2[tmp_0] = '[UNINITIALIZED]';
      tmp_0 = tmp_0 + 1 | 0;
    }
    tmp.j3j_1 = tmp_2;
    var tmp_3 = this;
    // Inline function 'kotlin.arrayOfNulls' call
    var size = this.h3j_1;
    tmp_3.k3j_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.fillArrayVali8eppxapiek4)(Array(size), null);
    this.l3j_1 = null;
    this.m3j_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.booleanArray2jdug9b51huk7)(this.h3j_1);
    this.n3j_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)();
    var tmp_4 = this;
    var tmp_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LazyThreadSafetyMode_PUBLICATION_getInstance3hlj875zwihx0)();
    tmp_4.o3j_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy1261dae0bgscp)(tmp_5, PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this));
    var tmp_6 = this;
    var tmp_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LazyThreadSafetyMode_PUBLICATION_getInstance3hlj875zwihx0)();
    tmp_6.p3j_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy1261dae0bgscp)(tmp_7, PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this));
    var tmp_8 = this;
    var tmp_9 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LazyThreadSafetyMode_PUBLICATION_getInstance3hlj875zwihx0)();
    tmp_8.q3j_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy1261dae0bgscp)(tmp_9, PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this));
  }
  x3a() {
    return this.f3j_1;
  }
  z3a() {
    return this.h3j_1;
  }
  b3b() {
    return CLASS_getInstance();
  }
  y3a() {
    var tmp0_elvis_lhs = this.l3j_1;
    return tmp0_elvis_lhs == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : tmp0_elvis_lhs;
  }
  a3c() {
    return this.n3j_1.r2();
  }
  r3j() {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.p3j_1;
    typeParameterDescriptors$factory();
    return this_0.l1();
  }
  s3j(name, isOptional) {
    this.i3j_1 = this.i3j_1 + 1 | 0;
    this.j3j_1[this.i3j_1] = name;
    this.m3j_1[this.i3j_1] = isOptional;
    this.k3j_1[this.i3j_1] = null;
    if (this.i3j_1 === (this.h3j_1 - 1 | 0)) {
      this.n3j_1 = buildIndices(this);
    }
  }
  d3b(index) {
    return getChecked(_get_childSerializers__7vnyfa(this), index).u38();
  }
  g3b(index) {
    return getChecked_0(this.m3j_1, index);
  }
  c3b(index) {
    var tmp0_elvis_lhs = getChecked(this.k3j_1, index);
    return tmp0_elvis_lhs == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : tmp0_elvis_lhs;
  }
  f3b(index) {
    return getChecked(this.j3j_1, index);
  }
  e3b(name) {
    var tmp0_elvis_lhs = this.n3j_1.q2(name);
    return tmp0_elvis_lhs == null ? -3 : tmp0_elvis_lhs;
  }
  equals(other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof PluginGeneratedSerialDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.x3a() === other.x3a())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.equals.<anonymous>' call
      if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contentEqualsaf55p28mnw74)(this.r3j(), other.r3j())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.z3a() === other.z3a())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.z3a();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.d3b(index).x3a() === other.d3b(index).x3a())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.d3b(index).b3b(), other.d3b(index).b3b())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
  hashCode() {
    return _get__hashCode__tgwhef_0(this);
  }
  toString() {
    var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.until1jbpn0z3f8lbg)(0, this.h3j_1);
    var tmp_0 = this.x3a() + '(';
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.joinToString1cxrrlmo0chqs)(tmp, ', ', tmp_0, ')', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, PluginGeneratedSerialDescriptor$toString$lambda(this));
  }
}
class InlineClassDescriptor extends PluginGeneratedSerialDescriptor {
  constructor(name, generatedSerializer) {
    super(name, generatedSerializer, 1);
    this.e3j_1 = true;
  }
  a3b() {
    return this.e3j_1;
  }
  hashCode() {
    return imul(super.hashCode(), 31);
  }
  equals(other) {
    var tmp$ret$0;
    $l$block_5: {
      // Inline function 'kotlinx.serialization.internal.equalsImpl' call
      if (this === other) {
        tmp$ret$0 = true;
        break $l$block_5;
      }
      if (!(other instanceof InlineClassDescriptor)) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.x3a() === other.x3a())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      // Inline function 'kotlinx.serialization.internal.InlineClassDescriptor.equals.<anonymous>' call
      if (!(other.e3j_1 && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contentEqualsaf55p28mnw74)(this.r3j(), other.r3j()))) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      if (!(this.z3a() === other.z3a())) {
        tmp$ret$0 = false;
        break $l$block_5;
      }
      var inductionVariable = 0;
      var last = this.z3a();
      if (inductionVariable < last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          if (!(this.d3b(index).x3a() === other.d3b(index).x3a())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
          if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.d3b(index).b3b(), other.d3b(index).b3b())) {
            tmp$ret$0 = false;
            break $l$block_5;
          }
        }
         while (inductionVariable < last);
      tmp$ret$0 = true;
    }
    return tmp$ret$0;
  }
}
class GeneratedSerializer {}
function typeParametersSerializers() {
  return get_EMPTY_SERIALIZER_ARRAY();
}
class InlinePrimitiveDescriptor$1 {
  constructor($primitiveSerializer) {
    this.t3j_1 = $primitiveSerializer;
  }
  u3j() {
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return [this.t3j_1];
  }
  u38() {
    var message = 'unsupported';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  v38(encoder, value) {
    // Inline function 'kotlin.error' call
    var message = 'unsupported';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  w38(decoder) {
    // Inline function 'kotlin.error' call
    var message = 'unsupported';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
}
class NoOpEncoder extends AbstractEncoder {
  static x3j() {
    NoOpEncoder_instance = null;
    var $this = this.i3d();
    NoOpEncoder_instance = $this;
    $this.w3j_1 = EmptySerializersModule_0();
    return $this;
  }
  e3d() {
    return this.w3j_1;
  }
  k3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  l3d() {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  m3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  n3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  o3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  p3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  q3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  r3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  s3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  t3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  u3d(value) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
}
class NothingSerialDescriptor {
  constructor() {
    NothingSerialDescriptor_instance = this;
    this.y3j_1 = OBJECT_getInstance();
    this.z3j_1 = 'kotlin.Nothing';
  }
  b3b() {
    return this.y3j_1;
  }
  x3a() {
    return this.z3j_1;
  }
  z3a() {
    return 0;
  }
  f3b(index) {
    error(this);
  }
  e3b(name) {
    error(this);
  }
  g3b(index) {
    error(this);
  }
  d3b(index) {
    error(this);
  }
  c3b(index) {
    error(this);
  }
  toString() {
    return 'NothingSerialDescriptor';
  }
  equals(other) {
    return this === other;
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.z3j_1) + imul(31, this.y3j_1.hashCode()) | 0;
  }
}
class NullableSerializer {
  constructor(serializer) {
    this.a3k_1 = serializer;
    this.b3k_1 = new SerialDescriptorForNullable(this.a3k_1.u38());
  }
  u38() {
    return this.b3k_1;
  }
  c3k(encoder, value) {
    if (!(value == null)) {
      encoder.i3e();
      encoder.h3e(this.a3k_1, value);
    } else {
      encoder.l3d();
    }
  }
  v38(encoder, value) {
    return this.c3k(encoder, (value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.c3c() ? decoder.p3c(this.a3k_1) : decoder.d3c();
  }
  equals(other) {
    if (this === other)
      return true;
    if (other == null || !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this).equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(other)))
      return false;
    if (!(other instanceof NullableSerializer))
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.a3k_1, other.a3k_1))
      return false;
    return true;
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.a3k_1);
  }
}
class SerialDescriptorForNullable {
  constructor(original) {
    this.h3b_1 = original;
    this.i3b_1 = this.h3b_1.x3a() + '?';
    this.j3b_1 = cachedSerialNames(this.h3b_1);
  }
  y3a() {
    return this.h3b_1.y3a();
  }
  z3a() {
    return this.h3b_1.z3a();
  }
  a3b() {
    return this.h3b_1.a3b();
  }
  b3b() {
    return this.h3b_1.b3b();
  }
  c3b(index) {
    return this.h3b_1.c3b(index);
  }
  d3b(index) {
    return this.h3b_1.d3b(index);
  }
  e3b(name) {
    return this.h3b_1.e3b(name);
  }
  f3b(index) {
    return this.h3b_1.f3b(index);
  }
  g3b(index) {
    return this.h3b_1.g3b(index);
  }
  x3a() {
    return this.i3b_1;
  }
  a3c() {
    return this.j3b_1;
  }
  t3a() {
    return true;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof SerialDescriptorForNullable))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.h3b_1, other.h3b_1))
      return false;
    return true;
  }
  toString() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.h3b_1) + '?';
  }
  hashCode() {
    return imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.h3b_1), 31);
  }
}
class ObjectSerializer {
  constructor(serialName, objectInstance) {
    this.d3k_1 = objectInstance;
    this.e3k_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
    var tmp = this;
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LazyThreadSafetyMode_PUBLICATION_getInstance3hlj875zwihx0)();
    tmp.f3k_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy1261dae0bgscp)(tmp_0, ObjectSerializer$descriptor$delegate$lambda(serialName, this));
  }
  u38() {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.f3k_1;
    descriptor$factory_0();
    return this_0.l1();
  }
  k39(encoder, value) {
    encoder.q3c(this.u38()).r3c(this.u38());
  }
  v38(encoder, value) {
    return this.k39(encoder, !(value == null) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    // Inline function 'kotlinx.serialization.encoding.decodeStructure' call
    var descriptor = this.u38();
    var composite = decoder.q3c(descriptor);
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'kotlinx.serialization.internal.ObjectSerializer.deserialize.<anonymous>' call
      if (composite.f3d()) {
        tmp$ret$0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        break $l$block_0;
      }
      var index = composite.g3d(this.u38());
      if (index === -1) {
        tmp$ret$0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        break $l$block_0;
      } else
        throw SerializationException.w39('Unexpected index ' + index);
    }
    var result = tmp$ret$0;
    composite.r3c(descriptor);
    return this.d3k_1;
  }
}
class SerializerFactory {}
class CharArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    CharArraySerializer_instance = null;
    super(serializer_2((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance2g172z58li19e)()));
    CharArraySerializer_instance = this;
  }
  j3k(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.j3k((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharArray21auq5hbrg68m)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  k3k(_this__u8e3s4) {
    return new CharArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.k3k((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharArray21auq5hbrg68m)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charArray2ujmm1qusno00)(0);
  }
  l3k(decoder, index, builder, checkIndex) {
    builder.o3k(decoder.z3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.l3k(decoder, index, builder instanceof CharArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.l3k(decoder, index, builder instanceof CharArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  p3k(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.d3e(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.p3k(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharArray21auq5hbrg68m)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class DoubleArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    DoubleArraySerializer_instance = null;
    super(serializer_3(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.DoubleCompanionObject_instance2yqrcskeqd1tm));
    DoubleArraySerializer_instance = this;
  }
  s3k(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.s3k((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isDoubleArray1wyh4nyf7pjxn)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  t3k(_this__u8e3s4) {
    return new DoubleArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.t3k((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isDoubleArray1wyh4nyf7pjxn)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return new Float64Array(0);
  }
  u3k(decoder, index, builder, checkIndex) {
    builder.x3k(decoder.y3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.u3k(decoder, index, builder instanceof DoubleArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.u3k(decoder, index, builder instanceof DoubleArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  y3k(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.c3e(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.y3k(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isDoubleArray1wyh4nyf7pjxn)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class FloatArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    FloatArraySerializer_instance = null;
    super(serializer_4(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.FloatCompanionObject_instance29smzmmxq0czz));
    FloatArraySerializer_instance = this;
  }
  b3l(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.b3l((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isFloatArrayjjscnqphw92j)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  c3l(_this__u8e3s4) {
    return new FloatArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.c3l((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isFloatArrayjjscnqphw92j)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return new Float32Array(0);
  }
  d3l(decoder, index, builder, checkIndex) {
    builder.g3l(decoder.x3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.d3l(decoder, index, builder instanceof FloatArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.d3l(decoder, index, builder instanceof FloatArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3l(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.b3e(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.h3l(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isFloatArrayjjscnqphw92j)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class LongArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    LongArraySerializer_instance = null;
    super(serializer_5((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance1pxg306pnafvz)()));
    LongArraySerializer_instance = this;
  }
  k3l(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.k3l((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isLongArray2fdt3z7yu3ef)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  l3l(_this__u8e3s4) {
    return new LongArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.l3l((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isLongArray2fdt3z7yu3ef)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.longArray288a0fctlmjmj)(0);
  }
  m3l(decoder, index, builder, checkIndex) {
    builder.p3l(decoder.w3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.m3l(decoder, index, builder instanceof LongArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.m3l(decoder, index, builder instanceof LongArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  q3l(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.a3e(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.q3l(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isLongArray2fdt3z7yu3ef)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class ULongArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    ULongArraySerializer_instance = null;
    super(serializer_6((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance1poxudqc1ru3p)()));
    ULongArraySerializer_instance = this;
  }
  t3l(_this__u8e3s4) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___get_size__impl__ju6dtr2lupre3hp1i1j)(_this__u8e3s4);
  }
  v3g(_this__u8e3s4) {
    return this.t3l(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray3nd0d80mdwjj8 ? _this__u8e3s4.im_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  u3l(_this__u8e3s4) {
    return new ULongArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.u3l(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray3nd0d80mdwjj8 ? _this__u8e3s4.im_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  v3l() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___init__impl__twm1l3dtyhn7dp1s1o)(0);
  }
  g3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray3nd0d80mdwjj8(this.v3l());
  }
  w3l(decoder, index, builder, checkIndex) {
    // Inline function 'kotlin.toULong' call
    var this_0 = decoder.b3d(this.x3h_1, index).i3c();
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULong___init__impl__c78o9k3sq3egh1wtk64)(this_0);
    builder.z3l(tmp$ret$0);
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.w3l(decoder, index, builder instanceof ULongArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.w3l(decoder, index, builder instanceof ULongArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  a3m(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = encoder.f3e(this.x3h_1, i);
        // Inline function 'kotlin.ULong.toLong' call
        var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray__get_impl_pr71q92hw91qq5r8j8r)(content, i);
        var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULong___get_data__impl__fggpzb1fgc8uwlfcfgw)(this_0);
        tmp.q3d(tmp$ret$0);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.a3m(encoder, content instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray3nd0d80mdwjj8 ? content.im_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class IntArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    IntArraySerializer_instance = null;
    super(serializer_7(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IntCompanionObject_instance2nvyd29rdzxbs));
    IntArraySerializer_instance = this;
  }
  d3m(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.d3m((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isIntArrayeijsubfngq38)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  e3m(_this__u8e3s4) {
    return new IntArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.e3m((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isIntArrayeijsubfngq38)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return new Int32Array(0);
  }
  f3m(decoder, index, builder, checkIndex) {
    builder.i3m(decoder.v3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.f3m(decoder, index, builder instanceof IntArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.f3m(decoder, index, builder instanceof IntArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  j3m(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.z3d(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.j3m(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isIntArrayeijsubfngq38)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class UIntArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    UIntArraySerializer_instance = null;
    super(serializer_8((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance1z323tr26bmxd)()));
    UIntArraySerializer_instance = this;
  }
  m3m(_this__u8e3s4) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___get_size__impl__r6l8ci1bugw7olx20y1)(_this__u8e3s4);
  }
  v3g(_this__u8e3s4) {
    return this.m3m(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArrayrp6cv44n5v4y ? _this__u8e3s4.xl_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  n3m(_this__u8e3s4) {
    return new UIntArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.n3m(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArrayrp6cv44n5v4y ? _this__u8e3s4.xl_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  o3m() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___init__impl__ghjpc61vzqu2w8hzlmo)(0);
  }
  g3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArrayrp6cv44n5v4y(this.o3m());
  }
  p3m(decoder, index, builder, checkIndex) {
    // Inline function 'kotlin.toUInt' call
    var this_0 = decoder.b3d(this.x3h_1, index).h3c();
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UInt___init__impl__l7qpdl2soskspn8hzmt)(this_0);
    builder.s3m(tmp$ret$0);
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.p3m(decoder, index, builder instanceof UIntArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.p3m(decoder, index, builder instanceof UIntArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  t3m(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = encoder.f3e(this.x3h_1, i);
        // Inline function 'kotlin.UInt.toInt' call
        var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArray__get_impl_gp5kza36yup2nd39c4u)(content, i);
        var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UInt___get_data__impl__f0vqqw1vaw6fgw4kwl0)(this_0);
        tmp.p3d(tmp$ret$0);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.t3m(encoder, content instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArrayrp6cv44n5v4y ? content.xl_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class ShortArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    ShortArraySerializer_instance = null;
    super(serializer_9(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ShortCompanionObject_instanceyg0ko6hbt9iy));
    ShortArraySerializer_instance = this;
  }
  w3m(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.w3m((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isShortArraywz30zxwtqi8h)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  x3m(_this__u8e3s4) {
    return new ShortArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.x3m((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isShortArraywz30zxwtqi8h)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return new Int16Array(0);
  }
  y3m(decoder, index, builder, checkIndex) {
    builder.b3n(decoder.u3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.y3m(decoder, index, builder instanceof ShortArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.y3m(decoder, index, builder instanceof ShortArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  c3n(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.y3d(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.c3n(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isShortArraywz30zxwtqi8h)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class UShortArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    UShortArraySerializer_instance = null;
    super(serializer_10((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstanceojp2cj59jqir)()));
    UShortArraySerializer_instance = this;
  }
  f3n(_this__u8e3s4) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___get_size__impl__jqto1b23l9nxz4w47e3)(_this__u8e3s4);
  }
  v3g(_this__u8e3s4) {
    return this.f3n(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray11avpmknxdgvv ? _this__u8e3s4.tm_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3n(_this__u8e3s4) {
    return new UShortArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.g3n(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray11avpmknxdgvv ? _this__u8e3s4.tm_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  h3n() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___init__impl__9b26ef1qu918hp04ryp)(0);
  }
  g3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray11avpmknxdgvv(this.h3n());
  }
  i3n(decoder, index, builder, checkIndex) {
    // Inline function 'kotlin.toUShort' call
    var this_0 = decoder.b3d(this.x3h_1, index).g3c();
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)(this_0);
    builder.l3n(tmp$ret$0);
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.i3n(decoder, index, builder instanceof UShortArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.i3n(decoder, index, builder instanceof UShortArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  m3n(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = encoder.f3e(this.x3h_1, i);
        // Inline function 'kotlin.UShort.toShort' call
        var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray__get_impl_fnbhmx1hkqbtik3ch0r)(content, i);
        var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(this_0);
        tmp.o3d(tmp$ret$0);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.m3n(encoder, content instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray11avpmknxdgvv ? content.tm_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class ByteArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    ByteArraySerializer_instance = null;
    super(serializer_11(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ByteCompanionObject_instancerp27gpfua1xf));
    ByteArraySerializer_instance = this;
  }
  p3n(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.p3n((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isByteArray4nnzfn1x4o3w)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  q3n(_this__u8e3s4) {
    return new ByteArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.q3n((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isByteArray4nnzfn1x4o3w)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return new Int8Array(0);
  }
  r3n(decoder, index, builder, checkIndex) {
    builder.u3n(decoder.t3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.r3n(decoder, index, builder instanceof ByteArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.r3n(decoder, index, builder instanceof ByteArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  v3n(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.x3d(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.v3n(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isByteArray4nnzfn1x4o3w)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class UByteArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    UByteArraySerializer_instance = null;
    super(serializer_12((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance374brtr06v94p)()));
    UByteArraySerializer_instance = this;
  }
  y3n(_this__u8e3s4) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___get_size__impl__h6pkdv2rtsewp499qpr)(_this__u8e3s4);
  }
  v3g(_this__u8e3s4) {
    return this.y3n(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray2qu4d6gwssdf9 ? _this__u8e3s4.ml_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  z3n(_this__u8e3s4) {
    return new UByteArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.z3n(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray2qu4d6gwssdf9 ? _this__u8e3s4.ml_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  a3o() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___init__impl__ip4y9ngbudn9tzlaub)(0);
  }
  g3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray2qu4d6gwssdf9(this.a3o());
  }
  b3o(decoder, index, builder, checkIndex) {
    // Inline function 'kotlin.toUByte' call
    var this_0 = decoder.b3d(this.x3h_1, index).f3c();
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByte___init__impl__g9hnc41eipfvebfo5lc)(this_0);
    builder.e3o(tmp$ret$0);
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.b3o(decoder, index, builder instanceof UByteArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.b3o(decoder, index, builder instanceof UByteArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  f3o(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = encoder.f3e(this.x3h_1, i);
        // Inline function 'kotlin.UByte.toByte' call
        var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray__get_impl_t5f3hv1rti50fc3n28n)(content, i);
        var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByte___get_data__impl__jof9qr9d98aajdmpjx)(this_0);
        tmp.n3d(tmp$ret$0);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.f3o(encoder, content instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray2qu4d6gwssdf9 ? content.ml_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class BooleanArraySerializer extends PrimitiveArraySerializer {
  constructor() {
    BooleanArraySerializer_instance = null;
    super(serializer_13(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.BooleanCompanionObject_instance3nvf6tg77gv83));
    BooleanArraySerializer_instance = this;
  }
  i3o(_this__u8e3s4) {
    return _this__u8e3s4.length;
  }
  v3g(_this__u8e3s4) {
    return this.i3o((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBooleanArray35llghle4c6w1)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  j3o(_this__u8e3s4) {
    return new BooleanArrayBuilder(_this__u8e3s4);
  }
  q3f(_this__u8e3s4) {
    return this.j3o((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBooleanArray35llghle4c6w1)(_this__u8e3s4) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  g3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.booleanArray2jdug9b51huk7)(0);
  }
  k3o(decoder, index, builder, checkIndex) {
    builder.n3o(decoder.s3c(this.x3h_1, index));
  }
  b3g(decoder, index, builder, checkIndex) {
    return this.k3o(decoder, index, builder instanceof BooleanArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  h3i(decoder, index, builder, checkIndex) {
    return this.k3o(decoder, index, builder instanceof BooleanArrayBuilder ? builder : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), checkIndex);
  }
  o3o(encoder, content, size) {
    var inductionVariable = 0;
    if (inductionVariable < size)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        encoder.w3d(this.x3h_1, i, content[i]);
      }
       while (inductionVariable < size);
  }
  i3i(encoder, content, size) {
    return this.o3o(encoder, (!(content == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBooleanArray35llghle4c6w1)(content) : false) ? content : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), size);
  }
}
class CharArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.m3k_1 = bufferWithData;
    this.n3k_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.n3k_1;
  }
  d3i(requiredCapacity) {
    if (this.m3k_1.length < requiredCapacity)
      this.m3k_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf2p23ljc5f5ea3)(this.m3k_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.m3k_1.length, 2)));
  }
  o3k(c) {
    this.k3i();
    var tmp = this.m3k_1;
    var tmp1 = this.n3k_1;
    this.n3k_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf2p23ljc5f5ea3)(this.m3k_1, this.n3k_1);
  }
}
class DoubleArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.v3k_1 = bufferWithData;
    this.w3k_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.w3k_1;
  }
  d3i(requiredCapacity) {
    if (this.v3k_1.length < requiredCapacity)
      this.v3k_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfgossjg6lh6js)(this.v3k_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.v3k_1.length, 2)));
  }
  x3k(c) {
    this.k3i();
    var tmp = this.v3k_1;
    var tmp1 = this.w3k_1;
    this.w3k_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfgossjg6lh6js)(this.v3k_1, this.w3k_1);
  }
}
class FloatArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.e3l_1 = bufferWithData;
    this.f3l_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.f3l_1;
  }
  d3i(requiredCapacity) {
    if (this.e3l_1.length < requiredCapacity)
      this.e3l_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfq9pcgcgbldck)(this.e3l_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.e3l_1.length, 2)));
  }
  g3l(c) {
    this.k3i();
    var tmp = this.e3l_1;
    var tmp1 = this.f3l_1;
    this.f3l_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfq9pcgcgbldck)(this.e3l_1, this.f3l_1);
  }
}
class LongArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.n3l_1 = bufferWithData;
    this.o3l_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.o3l_1;
  }
  d3i(requiredCapacity) {
    if (this.n3l_1.length < requiredCapacity)
      this.n3l_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf9mbsebmgnw4t)(this.n3l_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.n3l_1.length, 2)));
  }
  p3l(c) {
    this.k3i();
    var tmp = this.n3l_1;
    var tmp1 = this.o3l_1;
    this.o3l_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf9mbsebmgnw4t)(this.n3l_1, this.o3l_1);
  }
}
class ULongArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.x3l_1 = bufferWithData;
    this.y3l_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___get_size__impl__ju6dtr2lupre3hp1i1j)(bufferWithData);
    this.d3i(10);
  }
  z3h() {
    return this.y3l_1;
  }
  d3i(requiredCapacity) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___get_size__impl__ju6dtr2lupre3hp1i1j)(this.x3l_1) < requiredCapacity) {
      var tmp = this;
      // Inline function 'kotlin.collections.copyOf' call
      var this_0 = this.x3l_1;
      var newSize = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___get_size__impl__ju6dtr2lupre3hp1i1j)(this.x3l_1), 2));
      tmp.x3l_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___init__impl__twm1l3295zpff12hmq5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf9mbsebmgnw4t)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___get_storage__impl__28e64j2vtqnej9gwyzk)(this_0), newSize));
    }
  }
  z3l(c) {
    this.k3i();
    var tmp = this.x3l_1;
    var tmp1 = this.y3l_1;
    this.y3l_1 = tmp1 + 1 | 0;
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray__set_impl_z19mvh2aq1j5sku1dmt)(tmp, tmp1, c);
  }
  p3o() {
    // Inline function 'kotlin.collections.copyOf' call
    var this_0 = this.x3l_1;
    var newSize = this.y3l_1;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___init__impl__twm1l3295zpff12hmq5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf9mbsebmgnw4t)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULongArray___get_storage__impl__28e64j2vtqnej9gwyzk)(this_0), newSize));
  }
  b3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray3nd0d80mdwjj8(this.p3o());
  }
}
class IntArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.g3m_1 = bufferWithData;
    this.h3m_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.h3m_1;
  }
  d3i(requiredCapacity) {
    if (this.g3m_1.length < requiredCapacity)
      this.g3m_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf3rutauicler23)(this.g3m_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.g3m_1.length, 2)));
  }
  i3m(c) {
    this.k3i();
    var tmp = this.g3m_1;
    var tmp1 = this.h3m_1;
    this.h3m_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf3rutauicler23)(this.g3m_1, this.h3m_1);
  }
}
class UIntArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.q3m_1 = bufferWithData;
    this.r3m_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___get_size__impl__r6l8ci1bugw7olx20y1)(bufferWithData);
    this.d3i(10);
  }
  z3h() {
    return this.r3m_1;
  }
  d3i(requiredCapacity) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___get_size__impl__r6l8ci1bugw7olx20y1)(this.q3m_1) < requiredCapacity) {
      var tmp = this;
      // Inline function 'kotlin.collections.copyOf' call
      var this_0 = this.q3m_1;
      var newSize = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___get_size__impl__r6l8ci1bugw7olx20y1)(this.q3m_1), 2));
      tmp.q3m_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___init__impl__ghjpc637jks44g8hkay)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf3rutauicler23)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___get_storage__impl__92a0v0xnuzo89qkbti)(this_0), newSize));
    }
  }
  s3m(c) {
    this.k3i();
    var tmp = this.q3m_1;
    var tmp1 = this.r3m_1;
    this.r3m_1 = tmp1 + 1 | 0;
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArray__set_impl_7f2zu2251w30muf87a3)(tmp, tmp1, c);
  }
  q3o() {
    // Inline function 'kotlin.collections.copyOf' call
    var this_0 = this.q3m_1;
    var newSize = this.r3m_1;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___init__impl__ghjpc637jks44g8hkay)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf3rutauicler23)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UIntArray___get_storage__impl__92a0v0xnuzo89qkbti)(this_0), newSize));
  }
  b3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArrayrp6cv44n5v4y(this.q3o());
  }
}
class ShortArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.z3m_1 = bufferWithData;
    this.a3n_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.a3n_1;
  }
  d3i(requiredCapacity) {
    if (this.z3m_1.length < requiredCapacity)
      this.z3m_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf39s58md6y6rn6)(this.z3m_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.z3m_1.length, 2)));
  }
  b3n(c) {
    this.k3i();
    var tmp = this.z3m_1;
    var tmp1 = this.a3n_1;
    this.a3n_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf39s58md6y6rn6)(this.z3m_1, this.a3n_1);
  }
}
class UShortArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.j3n_1 = bufferWithData;
    this.k3n_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___get_size__impl__jqto1b23l9nxz4w47e3)(bufferWithData);
    this.d3i(10);
  }
  z3h() {
    return this.k3n_1;
  }
  d3i(requiredCapacity) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___get_size__impl__jqto1b23l9nxz4w47e3)(this.j3n_1) < requiredCapacity) {
      var tmp = this;
      // Inline function 'kotlin.collections.copyOf' call
      var this_0 = this.j3n_1;
      var newSize = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___get_size__impl__jqto1b23l9nxz4w47e3)(this.j3n_1), 2));
      tmp.j3n_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___init__impl__9b26ef2dcolj1kwzob7)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf39s58md6y6rn6)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___get_storage__impl__t2jpv51ia7tudnx2pys)(this_0), newSize));
    }
  }
  l3n(c) {
    this.k3i();
    var tmp = this.j3n_1;
    var tmp1 = this.k3n_1;
    this.k3n_1 = tmp1 + 1 | 0;
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray__set_impl_6d8whp278fyjknsyrb1)(tmp, tmp1, c);
  }
  r3o() {
    // Inline function 'kotlin.collections.copyOf' call
    var this_0 = this.j3n_1;
    var newSize = this.k3n_1;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___init__impl__9b26ef2dcolj1kwzob7)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf39s58md6y6rn6)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShortArray___get_storage__impl__t2jpv51ia7tudnx2pys)(this_0), newSize));
  }
  b3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray11avpmknxdgvv(this.r3o());
  }
}
class ByteArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.s3n_1 = bufferWithData;
    this.t3n_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.t3n_1;
  }
  d3i(requiredCapacity) {
    if (this.s3n_1.length < requiredCapacity)
      this.s3n_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfwy6h3t5vzqpl)(this.s3n_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.s3n_1.length, 2)));
  }
  u3n(c) {
    this.k3i();
    var tmp = this.s3n_1;
    var tmp1 = this.t3n_1;
    this.t3n_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfwy6h3t5vzqpl)(this.s3n_1, this.t3n_1);
  }
}
class UByteArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.c3o_1 = bufferWithData;
    this.d3o_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___get_size__impl__h6pkdv2rtsewp499qpr)(bufferWithData);
    this.d3i(10);
  }
  z3h() {
    return this.d3o_1;
  }
  d3i(requiredCapacity) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___get_size__impl__h6pkdv2rtsewp499qpr)(this.c3o_1) < requiredCapacity) {
      var tmp = this;
      // Inline function 'kotlin.collections.copyOf' call
      var this_0 = this.c3o_1;
      var newSize = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___get_size__impl__h6pkdv2rtsewp499qpr)(this.c3o_1), 2));
      tmp.c3o_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___init__impl__ip4y9nsjfjryamagcs)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfwy6h3t5vzqpl)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___get_storage__impl__d4kctt3s3xst15ytm22)(this_0), newSize));
    }
  }
  e3o(c) {
    this.k3i();
    var tmp = this.c3o_1;
    var tmp1 = this.d3o_1;
    this.d3o_1 = tmp1 + 1 | 0;
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray__set_impl_jvcicn3nfp6z28mafdl)(tmp, tmp1, c);
  }
  s3o() {
    // Inline function 'kotlin.collections.copyOf' call
    var this_0 = this.c3o_1;
    var newSize = this.d3o_1;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___init__impl__ip4y9nsjfjryamagcs)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOfwy6h3t5vzqpl)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByteArray___get_storage__impl__d4kctt3s3xst15ytm22)(this_0), newSize));
  }
  b3i() {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray2qu4d6gwssdf9(this.s3o());
  }
}
class BooleanArrayBuilder extends PrimitiveArrayBuilder {
  constructor(bufferWithData) {
    super();
    this.l3o_1 = bufferWithData;
    this.m3o_1 = bufferWithData.length;
    this.d3i(10);
  }
  z3h() {
    return this.m3o_1;
  }
  d3i(requiredCapacity) {
    if (this.l3o_1.length < requiredCapacity)
      this.l3o_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf37mht4mx7mjgh)(this.l3o_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(requiredCapacity, imul(this.l3o_1.length, 2)));
  }
  n3o(c) {
    this.k3i();
    var tmp = this.l3o_1;
    var tmp1 = this.m3o_1;
    this.m3o_1 = tmp1 + 1 | 0;
    tmp[tmp1] = c;
  }
  b3i() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyOf37mht4mx7mjgh)(this.l3o_1, this.m3o_1);
  }
}
class StringSerializer {
  constructor() {
    StringSerializer_instance = this;
    this.t3o_1 = new PrimitiveSerialDescriptor('kotlin.String', STRING_getInstance());
  }
  u38() {
    return this.t3o_1;
  }
  u3o(encoder, value) {
    return encoder.u3d(value);
  }
  v38(encoder, value) {
    return this.u3o(encoder, (!(value == null) ? typeof value === 'string' : false) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.m3c();
  }
}
class CharSerializer {
  constructor() {
    CharSerializer_instance = this;
    this.v3o_1 = new PrimitiveSerialDescriptor('kotlin.Char', CHAR_getInstance());
  }
  u38() {
    return this.v3o_1;
  }
  w3o(encoder, value) {
    return encoder.t3d(value);
  }
  v38(encoder, value) {
    return this.w3o(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof ? value.v1_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  x3o(decoder) {
    return decoder.l3c();
  }
  w38(decoder) {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof(this.x3o(decoder));
  }
}
class DoubleSerializer {
  constructor() {
    DoubleSerializer_instance = this;
    this.y3o_1 = new PrimitiveSerialDescriptor('kotlin.Double', DOUBLE_getInstance());
  }
  u38() {
    return this.y3o_1;
  }
  z3o(encoder, value) {
    return encoder.s3d(value);
  }
  v38(encoder, value) {
    return this.z3o(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.k3c();
  }
}
class FloatSerializer {
  constructor() {
    FloatSerializer_instance = this;
    this.a3p_1 = new PrimitiveSerialDescriptor('kotlin.Float', FLOAT_getInstance());
  }
  u38() {
    return this.a3p_1;
  }
  b3p(encoder, value) {
    return encoder.r3d(value);
  }
  v38(encoder, value) {
    return this.b3p(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.j3c();
  }
}
class LongSerializer {
  constructor() {
    LongSerializer_instance = this;
    this.c3p_1 = new PrimitiveSerialDescriptor('kotlin.Long', LONG_getInstance());
  }
  u38() {
    return this.c3p_1;
  }
  d3p(encoder, value) {
    return encoder.q3d(value);
  }
  v38(encoder, value) {
    return this.d3p(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.i3c();
  }
}
class IntSerializer {
  constructor() {
    IntSerializer_instance = this;
    this.e3p_1 = new PrimitiveSerialDescriptor('kotlin.Int', INT_getInstance());
  }
  u38() {
    return this.e3p_1;
  }
  f3p(encoder, value) {
    return encoder.p3d(value);
  }
  v38(encoder, value) {
    return this.f3p(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.h3c();
  }
}
class ShortSerializer {
  constructor() {
    ShortSerializer_instance = this;
    this.g3p_1 = new PrimitiveSerialDescriptor('kotlin.Short', SHORT_getInstance());
  }
  u38() {
    return this.g3p_1;
  }
  h3p(encoder, value) {
    return encoder.o3d(value);
  }
  v38(encoder, value) {
    return this.h3p(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.g3c();
  }
}
class ByteSerializer {
  constructor() {
    ByteSerializer_instance = this;
    this.i3p_1 = new PrimitiveSerialDescriptor('kotlin.Byte', BYTE_getInstance());
  }
  u38() {
    return this.i3p_1;
  }
  j3p(encoder, value) {
    return encoder.n3d(value);
  }
  v38(encoder, value) {
    return this.j3p(encoder, (!(value == null) ? typeof value === 'number' : false) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.f3c();
  }
}
class BooleanSerializer {
  constructor() {
    BooleanSerializer_instance = this;
    this.k3p_1 = new PrimitiveSerialDescriptor('kotlin.Boolean', BOOLEAN_getInstance());
  }
  u38() {
    return this.k3p_1;
  }
  l3p(encoder, value) {
    return encoder.m3d(value);
  }
  v38(encoder, value) {
    return this.l3p(encoder, (!(value == null) ? typeof value === 'boolean' : false) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    return decoder.e3c();
  }
}
class UnitSerializer {
  constructor() {
    UnitSerializer_instance = this;
    this.m3p_1 = new ObjectSerializer('kotlin.Unit', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
  }
  u38() {
    return this.m3p_1.u38();
  }
  n3p(decoder) {
    this.m3p_1.w38(decoder);
  }
  w38(decoder) {
    this.n3p(decoder);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  o3p(encoder, value) {
    this.m3p_1.k39(encoder, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8);
  }
  v38(encoder, value) {
    return this.o3p(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unitkvevlwgzwiuc ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class PrimitiveSerialDescriptor {
  constructor(serialName, kind) {
    this.p3p_1 = serialName;
    this.q3p_1 = kind;
  }
  x3a() {
    return this.p3p_1;
  }
  b3b() {
    return this.q3p_1;
  }
  z3a() {
    return 0;
  }
  f3b(index) {
    error_0(this);
  }
  e3b(name) {
    error_0(this);
  }
  g3b(index) {
    error_0(this);
  }
  d3b(index) {
    error_0(this);
  }
  c3b(index) {
    error_0(this);
  }
  toString() {
    return 'PrimitiveDescriptor(' + this.p3p_1 + ')';
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof PrimitiveSerialDescriptor))
      return false;
    if (this.p3p_1 === other.p3p_1 && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.q3p_1, other.q3p_1))
      return true;
    return false;
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.p3p_1) + imul(31, this.q3p_1.hashCode()) | 0;
  }
}
class TaggedDecoder {
  constructor() {
    var tmp = this;
    // Inline function 'kotlin.collections.arrayListOf' call
    tmp.w3p_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
    this.x3p_1 = false;
  }
  e3d() {
    return EmptySerializersModule_0();
  }
  a3q(tag) {
    throw SerializationException.w39((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this)) + " can't retrieve untyped values");
  }
  b3q(tag) {
    return true;
  }
  c3q(tag) {
    var tmp = this.a3q(tag);
    return typeof tmp === 'boolean' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  d3q(tag) {
    var tmp = this.a3q(tag);
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  e3q(tag) {
    var tmp = this.a3q(tag);
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  f3q(tag) {
    var tmp = this.a3q(tag);
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  g3q(tag) {
    var tmp = this.a3q(tag);
    return tmp instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  h3q(tag) {
    var tmp = this.a3q(tag);
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  i3q(tag) {
    var tmp = this.a3q(tag);
    return typeof tmp === 'number' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  j3q(tag) {
    var tmp = this.a3q(tag);
    return tmp instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof ? tmp.v1_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  k3q(tag) {
    var tmp = this.a3q(tag);
    return typeof tmp === 'string' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  l3q(tag, inlineDescriptor) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.internal.TaggedDecoder.decodeTaggedInline.<anonymous>' call
    this.m3q(tag);
    return this;
  }
  o3c(deserializer, previousValue) {
    return this.p3c(deserializer);
  }
  n3c(descriptor) {
    return this.l3q(this.n3q(), descriptor);
  }
  c3c() {
    var tmp0_elvis_lhs = this.y3p();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return false;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var currentTag = tmp;
    return this.b3q(currentTag);
  }
  d3c() {
    return null;
  }
  e3c() {
    return this.c3q(this.n3q());
  }
  f3c() {
    return this.d3q(this.n3q());
  }
  g3c() {
    return this.e3q(this.n3q());
  }
  h3c() {
    return this.f3q(this.n3q());
  }
  i3c() {
    return this.g3q(this.n3q());
  }
  j3c() {
    return this.h3q(this.n3q());
  }
  k3c() {
    return this.i3q(this.n3q());
  }
  l3c() {
    return this.j3q(this.n3q());
  }
  m3c() {
    return this.k3q(this.n3q());
  }
  q3c(descriptor) {
    return this;
  }
  r3c(descriptor) {
  }
  s3c(descriptor, index) {
    return this.c3q(this.t3p(descriptor, index));
  }
  t3c(descriptor, index) {
    return this.d3q(this.t3p(descriptor, index));
  }
  u3c(descriptor, index) {
    return this.e3q(this.t3p(descriptor, index));
  }
  v3c(descriptor, index) {
    return this.f3q(this.t3p(descriptor, index));
  }
  w3c(descriptor, index) {
    return this.g3q(this.t3p(descriptor, index));
  }
  x3c(descriptor, index) {
    return this.h3q(this.t3p(descriptor, index));
  }
  y3c(descriptor, index) {
    return this.i3q(this.t3p(descriptor, index));
  }
  z3c(descriptor, index) {
    return this.j3q(this.t3p(descriptor, index));
  }
  a3d(descriptor, index) {
    return this.k3q(this.t3p(descriptor, index));
  }
  b3d(descriptor, index) {
    return this.l3q(this.t3p(descriptor, index), descriptor.d3b(index));
  }
  c3d(descriptor, index, deserializer, previousValue) {
    var tmp = this.t3p(descriptor, index);
    return tagBlock(this, tmp, TaggedDecoder$decodeSerializableElement$lambda(this, deserializer, previousValue));
  }
  y3p() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lastOrNull1aq5oz189qoe1)(this.w3p_1);
  }
  m3q(name) {
    this.w3p_1.g(name);
  }
  n3q() {
    var r = this.w3p_1.m2((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1yw0x4k50k51w)(this.w3p_1));
    this.x3p_1 = true;
    return r;
  }
}
class NamedValueDecoder extends TaggedDecoder {
  t3p(_this__u8e3s4, index) {
    return this.v3p(this.u3p(_this__u8e3s4, index));
  }
  v3p(nestedName) {
    var tmp0_elvis_lhs = this.y3p();
    return this.z3p(tmp0_elvis_lhs == null ? '' : tmp0_elvis_lhs, nestedName);
  }
  u3p(descriptor, index) {
    return descriptor.f3b(index);
  }
  z3p(parentName, childName) {
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(parentName) === 0) {
      tmp = childName;
    } else {
      tmp = parentName + '.' + childName;
    }
    return tmp;
  }
}
class MapEntry {
  constructor(key, value) {
    this.o3q_1 = key;
    this.p3q_1 = value;
  }
  k1() {
    return this.o3q_1;
  }
  l1() {
    return this.p3q_1;
  }
  toString() {
    return 'MapEntry(key=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.o3q_1) + ', value=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.p3q_1) + ')';
  }
  hashCode() {
    var result = this.o3q_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.o3q_1);
    result = imul(result, 31) + (this.p3q_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.p3q_1)) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof MapEntry))
      return false;
    var tmp0_other_with_cast = other instanceof MapEntry ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.o3q_1, tmp0_other_with_cast.o3q_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.p3q_1, tmp0_other_with_cast.p3q_1))
      return false;
    return true;
  }
}
class KeyValueSerializer {
  constructor(keySerializer, valueSerializer) {
    this.y3q_1 = keySerializer;
    this.z3q_1 = valueSerializer;
  }
  a3r(encoder, value) {
    var structuredEncoder = encoder.q3c(this.u38());
    structuredEncoder.g3e(this.u38(), 0, this.y3q_1, this.u3q(value));
    structuredEncoder.g3e(this.u38(), 1, this.z3q_1, this.w3q(value));
    structuredEncoder.r3c(this.u38());
  }
  v38(encoder, value) {
    return this.a3r(encoder, (value == null ? true : !(value == null)) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    // Inline function 'kotlinx.serialization.encoding.decodeStructure' call
    var descriptor = this.u38();
    var composite = decoder.q3c(descriptor);
    var tmp$ret$0;
    $l$block: {
      // Inline function 'kotlinx.serialization.internal.KeyValueSerializer.deserialize.<anonymous>' call
      if (composite.f3d()) {
        var key = composite.d3d(this.u38(), 0, this.y3q_1);
        var value = composite.d3d(this.u38(), 1, this.z3q_1);
        tmp$ret$0 = this.x3q(key, value);
        break $l$block;
      }
      var key_0 = get_NULL();
      var value_0 = get_NULL();
      mainLoop: while (true) {
        var idx = composite.g3d(this.u38());
        switch (idx) {
          case -1:
            break mainLoop;
          case 0:
            key_0 = composite.d3d(this.u38(), 0, this.y3q_1);
            break;
          case 1:
            value_0 = composite.d3d(this.u38(), 1, this.z3q_1);
            break;
          default:
            throw SerializationException.w39('Invalid index: ' + idx);
        }
      }
      if (key_0 === get_NULL())
        throw SerializationException.w39("Element 'key' is missing");
      if (value_0 === get_NULL())
        throw SerializationException.w39("Element 'value' is missing");
      var tmp = (key_0 == null ? true : !(key_0 == null)) ? key_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      tmp$ret$0 = this.x3q(tmp, (value_0 == null ? true : !(value_0 == null)) ? value_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
    }
    var result = tmp$ret$0;
    composite.r3c(descriptor);
    return result;
  }
}
class MapEntrySerializer extends KeyValueSerializer {
  constructor(keySerializer, valueSerializer) {
    super(keySerializer, valueSerializer);
    var tmp = this;
    var tmp_0 = MAP_getInstance();
    tmp.s3q_1 = buildSerialDescriptor('kotlin.collections.Map.Entry', tmp_0, [], MapEntrySerializer$descriptor$lambda(keySerializer, valueSerializer));
  }
  u38() {
    return this.s3q_1;
  }
  t3q(_this__u8e3s4) {
    return _this__u8e3s4.k1();
  }
  u3q(_this__u8e3s4) {
    return this.t3q((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Entry2xmjmyutzoq3p) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  v3q(_this__u8e3s4) {
    return _this__u8e3s4.l1();
  }
  w3q(_this__u8e3s4) {
    return this.v3q((!(_this__u8e3s4 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Entry2xmjmyutzoq3p) : false) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  x3q(key, value) {
    return new MapEntry(key, value);
  }
}
class PairSerializer extends KeyValueSerializer {
  constructor(keySerializer, valueSerializer) {
    super(keySerializer, valueSerializer);
    var tmp = this;
    tmp.d3r_1 = buildClassSerialDescriptor('kotlin.Pair', [], PairSerializer$descriptor$lambda(keySerializer, valueSerializer));
  }
  u38() {
    return this.d3r_1;
  }
  e3r(_this__u8e3s4) {
    return _this__u8e3s4.zh_1;
  }
  u3q(_this__u8e3s4) {
    return this.e3r(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Paire9pteg33gng7 ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  f3r(_this__u8e3s4) {
    return _this__u8e3s4.ai_1;
  }
  w3q(_this__u8e3s4) {
    return this.f3r(_this__u8e3s4 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Paire9pteg33gng7 ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  x3q(key, value) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(key, value);
  }
}
class TripleSerializer {
  constructor(aSerializer, bSerializer, cSerializer) {
    this.g3r_1 = aSerializer;
    this.h3r_1 = bSerializer;
    this.i3r_1 = cSerializer;
    var tmp = this;
    tmp.j3r_1 = buildClassSerialDescriptor('kotlin.Triple', [], TripleSerializer$descriptor$lambda(this));
  }
  u38() {
    return this.j3r_1;
  }
  k3r(encoder, value) {
    var structuredEncoder = encoder.q3c(this.j3r_1);
    structuredEncoder.g3e(this.j3r_1, 0, this.g3r_1, value.al_1);
    structuredEncoder.g3e(this.j3r_1, 1, this.h3r_1, value.bl_1);
    structuredEncoder.g3e(this.j3r_1, 2, this.i3r_1, value.cl_1);
    structuredEncoder.r3c(this.j3r_1);
  }
  v38(encoder, value) {
    return this.k3r(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Triple1vhi3d0dgpnjb ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    var composite = decoder.q3c(this.j3r_1);
    if (composite.f3d()) {
      return decodeSequentially_1(this, composite);
    }
    return decodeStructure(this, composite);
  }
}
class ULongSerializer {
  constructor() {
    ULongSerializer_instance = this;
    this.l3r_1 = InlinePrimitiveDescriptor('kotlin.ULong', serializer_5((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance1pxg306pnafvz)()));
  }
  u38() {
    return this.l3r_1;
  }
  m3r(encoder, value) {
    var tmp = encoder.v3d(this.l3r_1);
    // Inline function 'kotlin.ULong.toLong' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULong___get_data__impl__fggpzb1fgc8uwlfcfgw)(value);
    tmp.q3d(tmp$ret$0);
  }
  v38(encoder, value) {
    return this.m3r(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULong3f9k7s38t3rfp ? value.dm_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  n3r(decoder) {
    // Inline function 'kotlin.toULong' call
    var this_0 = decoder.n3c(this.l3r_1).i3c();
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._ULong___init__impl__c78o9k3sq3egh1wtk64)(this_0);
  }
  w38(decoder) {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULong3f9k7s38t3rfp(this.n3r(decoder));
  }
}
class UIntSerializer {
  constructor() {
    UIntSerializer_instance = this;
    this.o3r_1 = InlinePrimitiveDescriptor('kotlin.UInt', serializer_7(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IntCompanionObject_instance2nvyd29rdzxbs));
  }
  u38() {
    return this.o3r_1;
  }
  p3r(encoder, value) {
    var tmp = encoder.v3d(this.o3r_1);
    // Inline function 'kotlin.UInt.toInt' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UInt___get_data__impl__f0vqqw1vaw6fgw4kwl0)(value);
    tmp.p3d(tmp$ret$0);
  }
  v38(encoder, value) {
    return this.p3r(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UInt1hthisrv6cndi ? value.sl_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  q3r(decoder) {
    // Inline function 'kotlin.toUInt' call
    var this_0 = decoder.n3c(this.o3r_1).h3c();
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UInt___init__impl__l7qpdl2soskspn8hzmt)(this_0);
  }
  w38(decoder) {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UInt1hthisrv6cndi(this.q3r(decoder));
  }
}
class UShortSerializer {
  constructor() {
    UShortSerializer_instance = this;
    this.r3r_1 = InlinePrimitiveDescriptor('kotlin.UShort', serializer_9(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ShortCompanionObject_instanceyg0ko6hbt9iy));
  }
  u38() {
    return this.r3r_1;
  }
  s3r(encoder, value) {
    var tmp = encoder.v3d(this.r3r_1);
    // Inline function 'kotlin.UShort.toShort' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(value);
    tmp.o3d(tmp$ret$0);
  }
  v38(encoder, value) {
    return this.s3r(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShort26xnqty60t7le ? value.om_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  t3r(decoder) {
    // Inline function 'kotlin.toUShort' call
    var this_0 = decoder.n3c(this.r3r_1).g3c();
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)(this_0);
  }
  w38(decoder) {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShort26xnqty60t7le(this.t3r(decoder));
  }
}
class UByteSerializer {
  constructor() {
    UByteSerializer_instance = this;
    this.u3r_1 = InlinePrimitiveDescriptor('kotlin.UByte', serializer_11(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ByteCompanionObject_instancerp27gpfua1xf));
  }
  u38() {
    return this.u3r_1;
  }
  v3r(encoder, value) {
    var tmp = encoder.v3d(this.u3r_1);
    // Inline function 'kotlin.UByte.toByte' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByte___get_data__impl__jof9qr9d98aajdmpjx)(value);
    tmp.n3d(tmp$ret$0);
  }
  v38(encoder, value) {
    return this.v3r(encoder, value instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UBytep4j7r1t64gz1 ? value.hl_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w3r(decoder) {
    // Inline function 'kotlin.toUByte' call
    var this_0 = decoder.n3c(this.u3r_1).f3c();
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UByte___init__impl__g9hnc41eipfvebfo5lc)(this_0);
  }
  w38(decoder) {
    return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UBytep4j7r1t64gz1(this.w3r(decoder));
  }
}
class SerializersModule {
  q3a(kClass, typeArgumentsSerializers, $super) {
    typeArgumentsSerializers = typeArgumentsSerializers === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : typeArgumentsSerializers;
    return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.p3a(kClass, typeArgumentsSerializers) : $super.p3a.call(this, kClass, typeArgumentsSerializers);
  }
}
class SerialModuleImpl extends SerializersModule {
  constructor(class2ContextualFactory, polyBase2Serializers, polyBase2DefaultSerializerProvider, polyBase2NamedSerializers, polyBase2DefaultDeserializerProvider) {
    super();
    this.y3r_1 = class2ContextualFactory;
    this.z3r_1 = polyBase2Serializers;
    this.a3s_1 = polyBase2DefaultSerializerProvider;
    this.b3s_1 = polyBase2NamedSerializers;
    this.c3s_1 = polyBase2DefaultDeserializerProvider;
  }
  l3e(baseClass, value) {
    if (!baseClass.ke(value))
      return null;
    var tmp0_safe_receiver = this.z3r_1.q2(baseClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q2((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(value));
    var registered = (!(tmp == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, SerializationStrategy) : false) ? tmp : null;
    if (!(registered == null))
      return registered;
    var tmp_0 = this.a3s_1.q2(baseClass);
    var tmp1_safe_receiver = (!(tmp_0 == null) ? typeof tmp_0 === 'function' : false) ? tmp_0 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(value);
  }
  k3e(baseClass, serializedClassName) {
    var tmp0_safe_receiver = this.b3s_1.q2(baseClass);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.collections.get' call
      tmp = ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp0_safe_receiver, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) ? tmp0_safe_receiver : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()).q2(serializedClassName);
    }
    var tmp_0 = tmp;
    var registered = (!(tmp_0 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_0, KSerializer) : false) ? tmp_0 : null;
    if (!(registered == null))
      return registered;
    var tmp_1 = this.c3s_1.q2(baseClass);
    var tmp1_safe_receiver = (!(tmp_1 == null) ? typeof tmp_1 === 'function' : false) ? tmp_1 : null;
    return tmp1_safe_receiver == null ? null : tmp1_safe_receiver(serializedClassName);
  }
  p3a(kClass, typeArgumentsSerializers) {
    var tmp0_safe_receiver = this.y3r_1.q2(kClass);
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.d3s(typeArgumentsSerializers);
    return (tmp == null ? true : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, KSerializer)) ? tmp : null;
  }
  x3r(collector) {
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = this.y3r_1.j1().w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var kclass = element.k1();
      // Inline function 'kotlin.collections.component2' call
      var serial = element.l1();
      if (serial instanceof Argless) {
        var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(kclass, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) ? kclass : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
        var tmp_0 = serial.g3s_1;
        collector.h3s(tmp, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_0, KSerializer) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
      } else {
        if (serial instanceof WithTypeArguments) {
          collector.f3s(kclass, serial.e3s_1);
        }
      }
    }
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_0 = this.z3r_1.j1().w();
    while (tmp0_iterator_0.x()) {
      var element_0 = tmp0_iterator_0.y();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var baseClass = element_0.k1();
      // Inline function 'kotlin.collections.component2' call
      var classMap = element_0.l1();
      // Inline function 'kotlin.collections.forEach' call
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator_1 = classMap.j1().w();
      while (tmp0_iterator_1.x()) {
        var element_1 = tmp0_iterator_1.y();
        // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.component1' call
        var actualClass = element_1.k1();
        // Inline function 'kotlin.collections.component2' call
        var serializer = element_1.l1();
        var tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(baseClass, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) ? baseClass : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
        var tmp_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(actualClass, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) ? actualClass : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
        // Inline function 'kotlinx.serialization.internal.cast' call
        var tmp$ret$9 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(serializer, KSerializer) ? serializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
        collector.i3s(tmp_1, tmp_2, tmp$ret$9);
      }
    }
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_2 = this.a3s_1.j1().w();
    while (tmp0_iterator_2.x()) {
      var element_2 = tmp0_iterator_2.y();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var baseClass_0 = element_2.k1();
      // Inline function 'kotlin.collections.component2' call
      var provider = element_2.l1();
      var tmp_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(baseClass_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) ? baseClass_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      collector.j3s(tmp_3, typeof provider === 'function' ? provider : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
    }
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator_3 = this.c3s_1.j1().w();
    while (tmp0_iterator_3.x()) {
      var element_3 = tmp0_iterator_3.y();
      // Inline function 'kotlinx.serialization.modules.SerialModuleImpl.dumpTo.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var baseClass_1 = element_3.k1();
      // Inline function 'kotlin.collections.component2' call
      var provider_0 = element_3.l1();
      var tmp_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(baseClass_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) ? baseClass_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      collector.k3s(tmp_4, typeof provider_0 === 'function' ? provider_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
    }
  }
}
class ContextualProvider {}
class Argless extends ContextualProvider {}
class WithTypeArguments extends ContextualProvider {}
class SerializersModuleCollector {}
function contextual(kClass, serializer) {
  return this.f3s(kClass, SerializersModuleCollector$contextual$lambda(serializer));
}
class SerializableWith {
  constructor(serializer) {
    this.l3s_1 = serializer;
  }
  equals(other) {
    if (!(other instanceof SerializableWith))
      return false;
    var tmp0_other_with_cast = other instanceof SerializableWith ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!this.l3s_1.equals(tmp0_other_with_cast.l3s_1))
      return false;
    return true;
  }
  hashCode() {
    return imul((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)('serializer'), 127) ^ this.l3s_1.hashCode();
  }
  toString() {
    return '@kotlinx.serialization.SerializableWith(serializer=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.l3s_1) + ')';
  }
}
class createCache$1 {
  constructor($factory) {
    this.m3s_1 = $factory;
  }
  r3a(key) {
    return this.m3s_1(key);
  }
}
class createParametrizedCache$1 {
  constructor($factory) {
    this.n3s_1 = $factory;
  }
  s3a(key, types) {
    // Inline function 'kotlin.runCatching' call
    var tmp;
    try {
      // Inline function 'kotlin.Companion.success' call
      // Inline function 'kotlinx.serialization.internal.<no name provided>.get.<anonymous>' call
      var value = this.n3s_1(key, types);
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(value);
    } catch ($p) {
      var tmp_0;
      if ($p instanceof Error) {
        var e = $p;
        // Inline function 'kotlin.Companion.failure' call
        tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(e));
      } else {
        throw $p;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
}
//endregion
function PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0) {
  return function ($this$buildSerialDescriptor) {
    $this$buildSerialDescriptor.f39('type', serializer_1(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringCompanionObject_instance2odz3s3zbrixa).u38());
    $this$buildSerialDescriptor.f39('value', buildSerialDescriptor('kotlinx.serialization.Polymorphic<' + this$0.g39_1.je() + '>', CONTEXTUAL_getInstance(), []));
    $this$buildSerialDescriptor.z38_1 = this$0.h39_1;
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function PolymorphicSerializer$descriptor$delegate$lambda(this$0) {
  return function () {
    var tmp = OPEN_getInstance();
    return withContext(buildSerialDescriptor('kotlinx.serialization.Polymorphic', tmp, [], PolymorphicSerializer$descriptor$delegate$lambda$lambda(this$0)), this$0.g39_1);
  };
}
function findPolymorphicSerializer(_this__u8e3s4, encoder, value) {
  var tmp0_elvis_lhs = _this__u8e3s4.m39(encoder, value);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    throwSubtypeNotRegistered((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(value), _this__u8e3s4.j39());
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function findPolymorphicSerializer_0(_this__u8e3s4, decoder, klassName) {
  var tmp0_elvis_lhs = _this__u8e3s4.l39(decoder, klassName);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    throwSubtypeNotRegistered_0(klassName, _this__u8e3s4.j39());
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function descriptor$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('descriptor', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return receiver.u38();
  }, null);
}
function init_kotlinx_serialization_SerializationException(_this__u8e3s4) {
  (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)(_this__u8e3s4, _this__u8e3s4.u39_1);
}
function serializerOrNull(_this__u8e3s4) {
  var tmp0_elvis_lhs = compiledSerializerImpl(_this__u8e3s4);
  return tmp0_elvis_lhs == null ? builtinSerializerOrNull(_this__u8e3s4) : tmp0_elvis_lhs;
}
function serializersForParameters(_this__u8e3s4, typeArguments, failOnMissingTypeArgSerializer) {
  var tmp;
  if (failOnMissingTypeArgSerializer) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(typeArguments, 10));
    var tmp0_iterator = typeArguments.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'kotlinx.serialization.serializersForParameters.<anonymous>' call
      var tmp$ret$0 = serializer(_this__u8e3s4, item);
      destination.g(tmp$ret$0);
    }
    tmp = destination;
  } else {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(typeArguments, 10));
    var tmp0_iterator_0 = typeArguments.w();
    while (tmp0_iterator_0.x()) {
      var item_0 = tmp0_iterator_0.y();
      // Inline function 'kotlinx.serialization.serializersForParameters.<anonymous>' call
      var tmp0_elvis_lhs = serializerOrNull_0(_this__u8e3s4, item_0);
      var tmp_0;
      if (tmp0_elvis_lhs == null) {
        return null;
      } else {
        tmp_0 = tmp0_elvis_lhs;
      }
      var tmp$ret$3 = tmp_0;
      destination_0.g(tmp$ret$3);
    }
    tmp = destination_0;
  }
  var serializers = tmp;
  return serializers;
}
function parametrizedSerializerOrNull(_this__u8e3s4, serializers, elementClassifierIfArray) {
  var tmp0_elvis_lhs = builtinParametrizedSerializer(_this__u8e3s4, serializers, elementClassifierIfArray);
  return tmp0_elvis_lhs == null ? compiledParametrizedSerializer(_this__u8e3s4, serializers) : tmp0_elvis_lhs;
}
function serializer(_this__u8e3s4, type) {
  var tmp0_elvis_lhs = serializerByKTypeImpl(_this__u8e3s4, type, true);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    platformSpecificSerializerNotRegistered(kclass(type));
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function serializerOrNull_0(_this__u8e3s4, type) {
  return serializerByKTypeImpl(_this__u8e3s4, type, false);
}
function builtinParametrizedSerializer(_this__u8e3s4, serializers, elementClassifierIfArray) {
  var tmp;
  if (((_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Collection1k04j3hzsbod0)) ? true : _this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtList3hktaavzmj137))) ? true : _this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableList1beimitadwkna))) ? true : _this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl))) {
    tmp = new ArrayListSerializer(serializers.c1(0));
  } else if (_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v))) {
    tmp = new HashSetSerializer(serializers.c1(0));
  } else if ((_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtSetjrjc7fhfd6b9)) ? true : _this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableSetwuwn7k5m570a))) ? true : _this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2))) {
    tmp = new LinkedHashSetSerializer(serializers.c1(0));
  } else if (_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv))) {
    tmp = new HashMapSerializer(serializers.c1(0), serializers.c1(1));
  } else if ((_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8)) ? true : _this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableMap1kqeifoi36kpz))) ? true : _this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl))) {
    tmp = new LinkedHashMapSerializer(serializers.c1(0), serializers.c1(1));
  } else if (_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Entry2xmjmyutzoq3p))) {
    tmp = MapEntrySerializer_0(serializers.c1(0), serializers.c1(1));
  } else if (_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Paire9pteg33gng7))) {
    tmp = PairSerializer_0(serializers.c1(0), serializers.c1(1));
  } else if (_this__u8e3s4.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Triple1vhi3d0dgpnjb))) {
    tmp = TripleSerializer_0(serializers.c1(0), serializers.c1(1), serializers.c1(2));
  } else {
    var tmp_0;
    if (isReferenceArray(_this__u8e3s4)) {
      var tmp_1 = elementClassifierIfArray();
      tmp_0 = ArraySerializer((!(tmp_1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) : false) ? tmp_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), serializers.c1(0));
    } else {
      tmp_0 = null;
    }
    tmp = tmp_0;
  }
  return tmp;
}
function compiledParametrizedSerializer(_this__u8e3s4, serializers) {
  // Inline function 'kotlin.collections.toTypedArray' call
  var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyToArray2j022khrow2yi)(serializers);
  return constructSerializerForGivenTypeArgs(_this__u8e3s4, tmp$ret$0.slice());
}
function serializerByKTypeImpl(_this__u8e3s4, type, failOnMissingTypeArgSerializer) {
  var rootClass = kclass(type);
  var isNullable = type.xe();
  // Inline function 'kotlin.collections.map' call
  var this_0 = type.we();
  // Inline function 'kotlin.collections.mapTo' call
  var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_0, 10));
  var tmp0_iterator = this_0.w();
  while (tmp0_iterator.x()) {
    var item = tmp0_iterator.y();
    // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>' call
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.requireNotNull' call
      var value = item.o3a_1;
      // Inline function 'kotlin.contracts.contract' call
      if (value == null) {
        // Inline function 'kotlinx.serialization.serializerByKTypeImpl.<anonymous>.<anonymous>' call
        var message = 'Star projections in type arguments are not allowed, but had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(type);
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      } else {
        tmp$ret$1 = value;
        break $l$block;
      }
    }
    var tmp$ret$2 = tmp$ret$1;
    destination.g(tmp$ret$2);
  }
  var typeArguments = destination;
  var tmp;
  if (typeArguments.f1()) {
    tmp = findCachedSerializer(rootClass, isNullable);
  } else {
    var cachedResult = findParametrizedCachedSerializer(rootClass, typeArguments, isNullable);
    var tmp_0;
    if (failOnMissingTypeArgSerializer) {
      // Inline function 'kotlin.Result.getOrNull' call
      var tmp_1;
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_isFailure__impl__jpiriv1ffgeoyqwuzmr)(cachedResult)) {
        tmp_1 = null;
      } else {
        var tmp_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_value__impl__bjfvqg1uwg4i093qaqh)(cachedResult);
        tmp_1 = (tmp_2 == null ? true : !(tmp_2 == null)) ? tmp_2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      }
      tmp_0 = tmp_1;
    } else {
      // Inline function 'kotlin.getOrElse' call
      // Inline function 'kotlin.contracts.contract' call
      var exception = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result__exceptionOrNull_impl_p6xea91phgcskd46fkx)(cachedResult);
      var tmp_3;
      if (exception == null) {
        var tmp_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_value__impl__bjfvqg1uwg4i093qaqh)(cachedResult);
        tmp_3 = (tmp_4 == null ? true : !(tmp_4 == null)) ? tmp_4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      } else {
        return null;
      }
      tmp_0 = tmp_3;
    }
    tmp = tmp_0;
  }
  var cachedSerializer = tmp;
  if (cachedSerializer == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    return cachedSerializer;
  }
  var tmp_5;
  if (typeArguments.f1()) {
    tmp_5 = _this__u8e3s4.q3a(rootClass);
  } else {
    var tmp1_elvis_lhs = serializersForParameters(_this__u8e3s4, typeArguments, failOnMissingTypeArgSerializer);
    var tmp_6;
    if (tmp1_elvis_lhs == null) {
      return null;
    } else {
      tmp_6 = tmp1_elvis_lhs;
    }
    var serializers = tmp_6;
    var tmp2_elvis_lhs = parametrizedSerializerOrNull(rootClass, serializers, serializerByKTypeImpl$lambda(typeArguments));
    tmp_5 = tmp2_elvis_lhs == null ? _this__u8e3s4.p3a(rootClass, serializers) : tmp2_elvis_lhs;
  }
  var contextualSerializer = tmp_5;
  var tmp_7;
  if (contextualSerializer == null) {
    tmp_7 = null;
  } else {
    // Inline function 'kotlinx.serialization.internal.cast' call
    tmp_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(contextualSerializer, KSerializer) ? contextualSerializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  var tmp4_safe_receiver = tmp_7;
  return tmp4_safe_receiver == null ? null : nullable(tmp4_safe_receiver, isNullable);
}
function nullable(_this__u8e3s4, shouldBeNullable) {
  if (shouldBeNullable)
    return get_nullable(_this__u8e3s4);
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
}
function serializer_0(_this__u8e3s4) {
  var tmp0_elvis_lhs = serializerOrNull(_this__u8e3s4);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    serializerNotRegistered(_this__u8e3s4);
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function serializerByKTypeImpl$lambda($typeArguments) {
  return function () {
    return $typeArguments.c1(0).ve();
  };
}
function get_SERIALIZERS_CACHE() {
  _init_properties_SerializersCache_kt__hgwi2p();
  return SERIALIZERS_CACHE;
}
var SERIALIZERS_CACHE;
function get_SERIALIZERS_CACHE_NULLABLE() {
  _init_properties_SerializersCache_kt__hgwi2p();
  return SERIALIZERS_CACHE_NULLABLE;
}
var SERIALIZERS_CACHE_NULLABLE;
function get_PARAMETRIZED_SERIALIZERS_CACHE() {
  _init_properties_SerializersCache_kt__hgwi2p();
  return PARAMETRIZED_SERIALIZERS_CACHE;
}
var PARAMETRIZED_SERIALIZERS_CACHE;
function get_PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE() {
  _init_properties_SerializersCache_kt__hgwi2p();
  return PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE;
}
var PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE;
function findCachedSerializer(clazz, isNullable) {
  _init_properties_SerializersCache_kt__hgwi2p();
  var tmp;
  if (!isNullable) {
    var tmp0_safe_receiver = get_SERIALIZERS_CACHE().r3a(clazz);
    var tmp_0;
    if (tmp0_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlinx.serialization.internal.cast' call
      tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp0_safe_receiver, KSerializer) ? tmp0_safe_receiver : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    }
    tmp = tmp_0;
  } else {
    tmp = get_SERIALIZERS_CACHE_NULLABLE().r3a(clazz);
  }
  return tmp;
}
function findParametrizedCachedSerializer(clazz, types, isNullable) {
  _init_properties_SerializersCache_kt__hgwi2p();
  var tmp;
  if (!isNullable) {
    var tmp_0 = get_PARAMETRIZED_SERIALIZERS_CACHE().s3a(clazz, types);
    tmp = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result3t1vadv16kmzk(tmp_0) instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result3t1vadv16kmzk ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  } else {
    tmp = get_PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE().s3a(clazz, types);
  }
  return tmp;
}
function SERIALIZERS_CACHE$lambda(it) {
  _init_properties_SerializersCache_kt__hgwi2p();
  return serializerOrNull(it);
}
function SERIALIZERS_CACHE_NULLABLE$lambda(it) {
  _init_properties_SerializersCache_kt__hgwi2p();
  var tmp0_safe_receiver = serializerOrNull(it);
  var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_nullable(tmp0_safe_receiver);
  var tmp;
  if (tmp1_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlinx.serialization.internal.cast' call
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp1_safe_receiver, KSerializer) ? tmp1_safe_receiver : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  return tmp;
}
function PARAMETRIZED_SERIALIZERS_CACHE$lambda(clazz, types) {
  _init_properties_SerializersCache_kt__hgwi2p();
  var serializers = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(serializersForParameters(EmptySerializersModule_0(), types, true));
  return parametrizedSerializerOrNull(clazz, serializers, PARAMETRIZED_SERIALIZERS_CACHE$lambda$lambda(types));
}
function PARAMETRIZED_SERIALIZERS_CACHE$lambda$lambda($types) {
  return function () {
    return $types.c1(0).ve();
  };
}
function PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$lambda(clazz, types) {
  _init_properties_SerializersCache_kt__hgwi2p();
  var serializers = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(serializersForParameters(EmptySerializersModule_0(), types, true));
  var tmp0_safe_receiver = parametrizedSerializerOrNull(clazz, serializers, PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$lambda$lambda(types));
  var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_nullable(tmp0_safe_receiver);
  var tmp;
  if (tmp1_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlinx.serialization.internal.cast' call
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp1_safe_receiver, KSerializer) ? tmp1_safe_receiver : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  return tmp;
}
function PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$lambda$lambda($types) {
  return function () {
    return $types.c1(0).ve();
  };
}
var properties_initialized_SerializersCache_kt_q8kf25;
function _init_properties_SerializersCache_kt__hgwi2p() {
  if (!properties_initialized_SerializersCache_kt_q8kf25) {
    properties_initialized_SerializersCache_kt_q8kf25 = true;
    SERIALIZERS_CACHE = createCache(SERIALIZERS_CACHE$lambda);
    SERIALIZERS_CACHE_NULLABLE = createCache(SERIALIZERS_CACHE_NULLABLE$lambda);
    PARAMETRIZED_SERIALIZERS_CACHE = createParametrizedCache(PARAMETRIZED_SERIALIZERS_CACHE$lambda);
    PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE = createParametrizedCache(PARAMETRIZED_SERIALIZERS_CACHE_NULLABLE$lambda);
  }
}
function get_nullable(_this__u8e3s4) {
  var tmp;
  if (_this__u8e3s4.u38().t3a()) {
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, KSerializer) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  } else {
    tmp = new NullableSerializer(_this__u8e3s4);
  }
  return tmp;
}
function serializer_1(_this__u8e3s4) {
  return StringSerializer_getInstance();
}
function serializer_2(_this__u8e3s4) {
  return CharSerializer_getInstance();
}
function CharArraySerializer_0() {
  return CharArraySerializer_getInstance();
}
function serializer_3(_this__u8e3s4) {
  return DoubleSerializer_getInstance();
}
function DoubleArraySerializer_0() {
  return DoubleArraySerializer_getInstance();
}
function serializer_4(_this__u8e3s4) {
  return FloatSerializer_getInstance();
}
function FloatArraySerializer_0() {
  return FloatArraySerializer_getInstance();
}
function serializer_5(_this__u8e3s4) {
  return LongSerializer_getInstance();
}
function LongArraySerializer_0() {
  return LongArraySerializer_getInstance();
}
function serializer_6(_this__u8e3s4) {
  return ULongSerializer_getInstance();
}
function ULongArraySerializer_0() {
  return ULongArraySerializer_getInstance();
}
function serializer_7(_this__u8e3s4) {
  return IntSerializer_getInstance();
}
function IntArraySerializer_0() {
  return IntArraySerializer_getInstance();
}
function serializer_8(_this__u8e3s4) {
  return UIntSerializer_getInstance();
}
function UIntArraySerializer_0() {
  return UIntArraySerializer_getInstance();
}
function serializer_9(_this__u8e3s4) {
  return ShortSerializer_getInstance();
}
function ShortArraySerializer_0() {
  return ShortArraySerializer_getInstance();
}
function serializer_10(_this__u8e3s4) {
  return UShortSerializer_getInstance();
}
function UShortArraySerializer_0() {
  return UShortArraySerializer_getInstance();
}
function serializer_11(_this__u8e3s4) {
  return ByteSerializer_getInstance();
}
function ByteArraySerializer_0() {
  return ByteArraySerializer_getInstance();
}
function serializer_12(_this__u8e3s4) {
  return UByteSerializer_getInstance();
}
function UByteArraySerializer_0() {
  return UByteArraySerializer_getInstance();
}
function serializer_13(_this__u8e3s4) {
  return BooleanSerializer_getInstance();
}
function BooleanArraySerializer_0() {
  return BooleanArraySerializer_getInstance();
}
function serializer_14(_this__u8e3s4) {
  return UnitSerializer_getInstance();
}
function NothingSerializer_0() {
  return NothingSerializer_getInstance();
}
function serializer_15(_this__u8e3s4) {
  return DurationSerializer_getInstance();
}
function MapEntrySerializer_0(keySerializer, valueSerializer) {
  return new MapEntrySerializer(keySerializer, valueSerializer);
}
function PairSerializer_0(keySerializer, valueSerializer) {
  return new PairSerializer(keySerializer, valueSerializer);
}
function TripleSerializer_0(aSerializer, bSerializer, cSerializer) {
  return new TripleSerializer(aSerializer, bSerializer, cSerializer);
}
function ArraySerializer(kClass, elementSerializer) {
  return new ReferenceArraySerializer(kClass, elementSerializer);
}
function MapSerializer(keySerializer, valueSerializer) {
  return new LinkedHashMapSerializer(keySerializer, valueSerializer);
}
function ListSerializer(elementSerializer) {
  return new ArrayListSerializer(elementSerializer);
}
function SetSerializer(elementSerializer) {
  return new LinkedHashSetSerializer(elementSerializer);
}
function withContext(_this__u8e3s4, context) {
  return new ContextDescriptor(_this__u8e3s4, context);
}
function getContextualDescriptor(_this__u8e3s4, descriptor) {
  var tmp0_safe_receiver = get_capturedKClass(descriptor);
  var tmp;
  if (tmp0_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.descriptors.getContextualDescriptor.<anonymous>' call
    var tmp0_safe_receiver_0 = _this__u8e3s4.q3a(tmp0_safe_receiver);
    tmp = tmp0_safe_receiver_0 == null ? null : tmp0_safe_receiver_0.u38();
  }
  return tmp;
}
function get_capturedKClass(_this__u8e3s4) {
  var tmp;
  if (_this__u8e3s4 instanceof ContextDescriptor) {
    tmp = _this__u8e3s4.v3a_1;
  } else {
    if (_this__u8e3s4 instanceof SerialDescriptorForNullable) {
      tmp = get_capturedKClass(_this__u8e3s4.h3b_1);
    } else {
      tmp = null;
    }
  }
  return tmp;
}
function get_elementDescriptors(_this__u8e3s4) {
  // Inline function 'kotlin.collections.Iterable' call
  return new _no_name_provided__qut3iv(_this__u8e3s4);
}
function buildSerialDescriptor(serialName, kind, typeParameters, builder) {
  var tmp;
  if (builder === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    tmp = buildSerialDescriptor$lambda;
  } else {
    tmp = builder;
  }
  builder = tmp;
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.text.isNotBlank' call
  // Inline function 'kotlin.contracts.contract' call
  if (!!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBlank1dvkhjjvox3p0)(serialName)) {
    // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
    var message = 'Blank serial names are prohibited';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(kind, CLASS_getInstance())) {
    // Inline function 'kotlinx.serialization.descriptors.buildSerialDescriptor.<anonymous>' call
    var message_0 = "For StructureKind.CLASS please use 'buildClassSerialDescriptor' instead";
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
  }
  var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
  builder(sdBuilder);
  return new SerialDescriptorImpl(serialName, kind, sdBuilder.a39_1.z(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toList383f556t1dixk)(typeParameters), sdBuilder);
}
function buildClassSerialDescriptor(serialName, typeParameters, builderAction) {
  var tmp;
  if (builderAction === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    tmp = buildClassSerialDescriptor$lambda;
  } else {
    tmp = builderAction;
  }
  builderAction = tmp;
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.text.isNotBlank' call
  // Inline function 'kotlin.contracts.contract' call
  if (!!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBlank1dvkhjjvox3p0)(serialName)) {
    // Inline function 'kotlinx.serialization.descriptors.buildClassSerialDescriptor.<anonymous>' call
    var message = 'Blank serial names are prohibited';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  var sdBuilder = new ClassSerialDescriptorBuilder(serialName);
  builderAction(sdBuilder);
  return new SerialDescriptorImpl(serialName, CLASS_getInstance(), sdBuilder.a39_1.z(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toList383f556t1dixk)(typeParameters), sdBuilder);
}
function _get__hashCode__tgwhef($this) {
  // Inline function 'kotlin.getValue' call
  var this_0 = $this.z3b_1;
  _hashCode$factory();
  return this_0.l1();
}
function SerialDescriptorImpl$_hashCode$delegate$lambda(this$0) {
  return function () {
    return hashCodeImpl(this$0, this$0.y3b_1);
  };
}
function SerialDescriptorImpl$toString$lambda(this$0) {
  return function (it) {
    return this$0.f3b(it) + ': ' + this$0.d3b(it).x3a();
  };
}
function PrimitiveSerialDescriptor_0(serialName, kind) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.text.isNotBlank' call
  // Inline function 'kotlin.contracts.contract' call
  if (!!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBlank1dvkhjjvox3p0)(serialName)) {
    // Inline function 'kotlinx.serialization.descriptors.PrimitiveSerialDescriptor.<anonymous>' call
    var message = 'Blank serial names are prohibited';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  return PrimitiveDescriptorSafe(serialName, kind);
}
function buildSerialDescriptor$lambda($this$null) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
}
function buildClassSerialDescriptor$lambda($this$null) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
}
function _hashCode$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('_hashCode', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return _get__hashCode__tgwhef(receiver);
  }, null);
}
var ENUM_instance;
function ENUM_getInstance() {
  if (ENUM_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ENUM();
  return ENUM_instance;
}
var CONTEXTUAL_instance;
function CONTEXTUAL_getInstance() {
  if (CONTEXTUAL_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new CONTEXTUAL();
  return CONTEXTUAL_instance;
}
var BOOLEAN_instance;
function BOOLEAN_getInstance() {
  if (BOOLEAN_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new BOOLEAN();
  return BOOLEAN_instance;
}
var BYTE_instance;
function BYTE_getInstance() {
  if (BYTE_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new BYTE();
  return BYTE_instance;
}
var CHAR_instance;
function CHAR_getInstance() {
  if (CHAR_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new CHAR();
  return CHAR_instance;
}
var SHORT_instance;
function SHORT_getInstance() {
  if (SHORT_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new SHORT();
  return SHORT_instance;
}
var INT_instance;
function INT_getInstance() {
  if (INT_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new INT();
  return INT_instance;
}
var LONG_instance;
function LONG_getInstance() {
  if (LONG_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new LONG();
  return LONG_instance;
}
var FLOAT_instance;
function FLOAT_getInstance() {
  if (FLOAT_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new FLOAT();
  return FLOAT_instance;
}
var DOUBLE_instance;
function DOUBLE_getInstance() {
  if (DOUBLE_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new DOUBLE();
  return DOUBLE_instance;
}
var STRING_instance;
function STRING_getInstance() {
  if (STRING_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new STRING();
  return STRING_instance;
}
var CLASS_instance;
function CLASS_getInstance() {
  if (CLASS_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new CLASS();
  return CLASS_instance;
}
var LIST_instance;
function LIST_getInstance() {
  if (LIST_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new LIST();
  return LIST_instance;
}
var MAP_instance;
function MAP_getInstance() {
  if (MAP_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new MAP();
  return MAP_instance;
}
var OBJECT_instance;
function OBJECT_getInstance() {
  if (OBJECT_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new OBJECT();
  return OBJECT_instance;
}
var SEALED_instance;
function SEALED_getInstance() {
  if (SEALED_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new SEALED();
  return SEALED_instance;
}
var OPEN_instance;
function OPEN_getInstance() {
  if (OPEN_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new OPEN();
  return OPEN_instance;
}
function decodeSequentially_0($this, compositeDecoder) {
  var klassName = compositeDecoder.a3d($this.u38(), 0);
  var serializer = findPolymorphicSerializer_0($this, compositeDecoder, klassName);
  return compositeDecoder.d3d($this.u38(), 1, serializer);
}
function throwSubtypeNotRegistered(subClass, baseClass) {
  var tmp0_elvis_lhs = subClass.je();
  throwSubtypeNotRegistered_0(tmp0_elvis_lhs == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(subClass) : tmp0_elvis_lhs, baseClass);
}
function throwSubtypeNotRegistered_0(subClassName, baseClass) {
  var scope = "in the scope of '" + baseClass.je() + "'";
  throw SerializationException.w39(subClassName == null ? 'Class discriminator was missing and no default polymorphic serializers were registered ' + scope : "Class '" + subClassName + "' is not registered for polymorphic serialization " + scope + '.\n' + ("To be registered automatically, class '" + subClassName + "' has to be '@Serializable', and the base class '" + baseClass.je() + "' has to be sealed and '@Serializable'.\n") + ("Alternatively, register the serializer for '" + subClassName + "' explicitly in a corresponding SerializersModule."));
}
var NothingSerializer_instance;
function NothingSerializer_getInstance() {
  if (NothingSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new NothingSerializer();
  return NothingSerializer_instance;
}
var DurationSerializer_instance;
function DurationSerializer_getInstance() {
  if (DurationSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new DurationSerializer();
  return DurationSerializer_instance;
}
function readSize($this, decoder, builder) {
  var size = decoder.h3d($this.u38());
  $this.s3f(builder, size);
  return size;
}
var Companion_instance_0;
function Companion_getInstance_6() {
  if (Companion_instance_0 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion();
  return Companion_instance_0;
}
function prepareHighMarksArray($this, elementsCount) {
  var slotsCount = (elementsCount - 1 | 0) >>> 6 | 0;
  var elementsInLastSlot = elementsCount & 63;
  var highMarks = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.longArray288a0fctlmjmj)(slotsCount);
  if (!(elementsInLastSlot === 0)) {
    highMarks[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1y2f6o9u8hnf7)(highMarks)] = (new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(-1, -1)).m3(elementsCount);
  }
  return highMarks;
}
function markHigh($this, index) {
  var slot = (index >>> 6 | 0) - 1 | 0;
  var offsetInSlot = index & 63;
  $this.p3i_1[slot] = $this.p3i_1[slot].q3((new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(1, 0)).m3(offsetInSlot));
}
function nextUnmarkedHighIndex($this) {
  var inductionVariable = 0;
  var last = $this.p3i_1.length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var slot = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var slotOffset = imul(slot + 1 | 0, 64);
      var slotMarks = $this.p3i_1[slot];
      while (!slotMarks.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(-1, -1))) {
        var indexInSlot = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.countTrailingZeroBits1k55x07cygoff)(slotMarks.l3());
        slotMarks = slotMarks.q3((new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(1, 0)).m3(indexInSlot));
        var index = slotOffset + indexInSlot | 0;
        if ($this.n3i_1($this.m3i_1, index)) {
          $this.p3i_1[slot] = slotMarks;
          return index;
        }
      }
      $this.p3i_1[slot] = slotMarks;
    }
     while (inductionVariable <= last);
  return -1;
}
function InlinePrimitiveDescriptor(name, primitiveSerializer) {
  return new InlineClassDescriptor(name, new InlinePrimitiveDescriptor$1(primitiveSerializer));
}
function jsonCachedSerialNames(_this__u8e3s4) {
  return cachedSerialNames(_this__u8e3s4);
}
var NoOpEncoder_instance;
function NoOpEncoder_getInstance() {
  if (NoOpEncoder_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    NoOpEncoder.x3j();
  return NoOpEncoder_instance;
}
function error($this) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('Descriptor for type `kotlin.Nothing` does not have elements');
}
var NothingSerialDescriptor_instance;
function NothingSerialDescriptor_getInstance() {
  if (NothingSerialDescriptor_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new NothingSerialDescriptor();
  return NothingSerialDescriptor_instance;
}
function ObjectSerializer$descriptor$delegate$lambda$lambda(this$0) {
  return function ($this$buildSerialDescriptor) {
    $this$buildSerialDescriptor.z38_1 = this$0.e3k_1;
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function ObjectSerializer$descriptor$delegate$lambda($serialName, this$0) {
  return function () {
    var tmp = OBJECT_getInstance();
    return buildSerialDescriptor($serialName, tmp, [], ObjectSerializer$descriptor$delegate$lambda$lambda(this$0));
  };
}
function descriptor$factory_0() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('descriptor', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return receiver.u38();
  }, null);
}
function get_EMPTY_DESCRIPTOR_ARRAY() {
  _init_properties_Platform_common_kt__3qzecs();
  return EMPTY_DESCRIPTOR_ARRAY;
}
var EMPTY_DESCRIPTOR_ARRAY;
function cachedSerialNames(_this__u8e3s4) {
  _init_properties_Platform_common_kt__3qzecs();
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, CachedNames))
    return _this__u8e3s4.a3c();
  var result = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v.h1(_this__u8e3s4.z3a());
  var inductionVariable = 0;
  var last = _this__u8e3s4.z3a();
  if (inductionVariable < last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.collections.plusAssign' call
      var element = _this__u8e3s4.f3b(i);
      result.g(element);
    }
     while (inductionVariable < last);
  return result;
}
function kclass(_this__u8e3s4) {
  _init_properties_Platform_common_kt__3qzecs();
  var t = _this__u8e3s4.ve();
  var tmp;
  if (!(t == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(t, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) : false) {
    tmp = t;
  } else {
    if (!(t == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(t, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KTypeParameter1s8efufd4mbj5) : false) {
      var message = 'Captured type parameter ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(t) + ' from generic non-reified function. ' + ('Such functionality cannot be supported as ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(t) + ' is erased, either specify serializer explicitly or make ') + ('calling function inline with reified ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(t));
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    } else {
      var message_0 = 'Only KClass supported as classifier, got ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(t);
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
    }
  }
  var tmp_0 = tmp;
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KClass1cc9rfeybg8hs) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
}
function notRegisteredMessage(_this__u8e3s4) {
  _init_properties_Platform_common_kt__3qzecs();
  var tmp0_elvis_lhs = _this__u8e3s4.je();
  return notRegisteredMessage_0(tmp0_elvis_lhs == null ? '<local class name not available>' : tmp0_elvis_lhs);
}
function notRegisteredMessage_0(className) {
  _init_properties_Platform_common_kt__3qzecs();
  return "Serializer for class '" + className + "' is not found.\n" + "Please ensure that class is marked as '@Serializable' and that the serialization compiler plugin is applied.\n";
}
function compactArray(_this__u8e3s4) {
  _init_properties_Platform_common_kt__3qzecs();
  // Inline function 'kotlin.takeUnless' call
  // Inline function 'kotlin.contracts.contract' call
  var tmp;
  // Inline function 'kotlinx.serialization.internal.compactArray.<anonymous>' call
  // Inline function 'kotlin.collections.isNullOrEmpty' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(_this__u8e3s4 == null || _this__u8e3s4.f1())) {
    tmp = _this__u8e3s4;
  } else {
    tmp = null;
  }
  var tmp0_safe_receiver = tmp;
  var tmp_0;
  if (tmp0_safe_receiver == null) {
    tmp_0 = null;
  } else {
    // Inline function 'kotlin.collections.toTypedArray' call
    tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyToArray2j022khrow2yi)(tmp0_safe_receiver);
  }
  var tmp1_elvis_lhs = tmp_0;
  return tmp1_elvis_lhs == null ? get_EMPTY_DESCRIPTOR_ARRAY() : tmp1_elvis_lhs;
}
function serializerNotRegistered(_this__u8e3s4) {
  _init_properties_Platform_common_kt__3qzecs();
  throw SerializationException.w39(notRegisteredMessage(_this__u8e3s4));
}
var properties_initialized_Platform_common_kt_i7q4ty;
function _init_properties_Platform_common_kt__3qzecs() {
  if (!properties_initialized_Platform_common_kt_i7q4ty) {
    properties_initialized_Platform_common_kt_i7q4ty = true;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    EMPTY_DESCRIPTOR_ARRAY = [];
  }
}
function throwMissingFieldException(seen, goldenMask, descriptor) {
  // Inline function 'kotlin.collections.mutableListOf' call
  var missingFields = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  var missingFieldsBits = goldenMask & ~seen;
  var inductionVariable = 0;
  if (inductionVariable < 32)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (!((missingFieldsBits & 1) === 0)) {
        // Inline function 'kotlin.collections.plusAssign' call
        var element = descriptor.f3b(i);
        missingFields.g(element);
      }
      missingFieldsBits = missingFieldsBits >>> 1 | 0;
    }
     while (inductionVariable < 32);
  throw MissingFieldException.m3a(missingFields, descriptor.x3a());
}
function _get_childSerializers__7vnyfa($this) {
  // Inline function 'kotlin.getValue' call
  var this_0 = $this.o3j_1;
  childSerializers$factory();
  return this_0.l1();
}
function _get__hashCode__tgwhef_0($this) {
  // Inline function 'kotlin.getValue' call
  var this_0 = $this.q3j_1;
  _hashCode$factory_0();
  return this_0.l1();
}
function buildIndices($this) {
  var indices = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashMap1a0ld5kgwhmhv.k7();
  var inductionVariable = 0;
  var last = $this.j3j_1.length - 1 | 0;
  if (inductionVariable <= last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.collections.set' call
      var key = $this.j3j_1[i];
      indices.t2(key, i);
    }
     while (inductionVariable <= last);
  return indices;
}
function PluginGeneratedSerialDescriptor$childSerializers$delegate$lambda(this$0) {
  return function () {
    var tmp0_safe_receiver = this$0.g3j_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u3j();
    return tmp1_elvis_lhs == null ? get_EMPTY_SERIALIZER_ARRAY() : tmp1_elvis_lhs;
  };
}
function PluginGeneratedSerialDescriptor$typeParameterDescriptors$delegate$lambda(this$0) {
  return function () {
    var tmp0_safe_receiver = this$0.g3j_1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.v3j();
    var tmp;
    if (tmp1_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1(tmp1_safe_receiver.length);
      var inductionVariable = 0;
      var last = tmp1_safe_receiver.length;
      while (inductionVariable < last) {
        var item = tmp1_safe_receiver[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlinx.serialization.internal.PluginGeneratedSerialDescriptor.typeParameterDescriptors$delegate.<anonymous>.<anonymous>' call
        var tmp$ret$0 = item.u38();
        destination.g(tmp$ret$0);
      }
      tmp = destination;
    }
    return compactArray(tmp);
  };
}
function PluginGeneratedSerialDescriptor$_hashCode$delegate$lambda(this$0) {
  return function () {
    return hashCodeImpl(this$0, this$0.r3j());
  };
}
function PluginGeneratedSerialDescriptor$toString$lambda(this$0) {
  return function (i) {
    return this$0.f3b(i) + ': ' + this$0.d3b(i).x3a();
  };
}
function hashCodeImpl(_this__u8e3s4, typeParams) {
  var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(_this__u8e3s4.x3a());
  result = imul(31, result) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contentHashCode2i020q5tbeh2s)(typeParams) | 0;
  var elementDescriptors = get_elementDescriptors(_this__u8e3s4);
  // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
  // Inline function 'kotlin.collections.fold' call
  var accumulator = 1;
  var tmp0_iterator = elementDescriptors.w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
    var hash = accumulator;
    var tmp = imul(31, hash);
    // Inline function 'kotlin.hashCode' call
    // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
    var tmp0_safe_receiver = element.x3a();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(tmp0_safe_receiver);
    accumulator = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
  }
  var namesHash = accumulator;
  // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy' call
  // Inline function 'kotlin.collections.fold' call
  var accumulator_0 = 1;
  var tmp0_iterator_0 = elementDescriptors.w();
  while (tmp0_iterator_0.x()) {
    var element_0 = tmp0_iterator_0.y();
    // Inline function 'kotlinx.serialization.internal.elementsHashCodeBy.<anonymous>' call
    var hash_0 = accumulator_0;
    var tmp_0 = imul(31, hash_0);
    // Inline function 'kotlin.hashCode' call
    // Inline function 'kotlinx.serialization.internal.hashCodeImpl.<anonymous>' call
    var tmp0_safe_receiver_0 = element_0.b3b();
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(tmp0_safe_receiver_0);
    accumulator_0 = tmp_0 + (tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0) | 0;
  }
  var kindHash = accumulator_0;
  result = imul(31, result) + namesHash | 0;
  result = imul(31, result) + kindHash | 0;
  return result;
}
function childSerializers$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('childSerializers', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return _get_childSerializers__7vnyfa(receiver);
  }, null);
}
function typeParameterDescriptors$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('typeParameterDescriptors', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return receiver.r3j();
  }, null);
}
function _hashCode$factory_0() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('_hashCode', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return _get__hashCode__tgwhef_0(receiver);
  }, null);
}
function get_EMPTY_SERIALIZER_ARRAY() {
  _init_properties_PluginHelperInterfaces_kt__xgvzfp();
  return EMPTY_SERIALIZER_ARRAY;
}
var EMPTY_SERIALIZER_ARRAY;
var properties_initialized_PluginHelperInterfaces_kt_ap8in1;
function _init_properties_PluginHelperInterfaces_kt__xgvzfp() {
  if (!properties_initialized_PluginHelperInterfaces_kt_ap8in1) {
    properties_initialized_PluginHelperInterfaces_kt_ap8in1 = true;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    EMPTY_SERIALIZER_ARRAY = [];
  }
}
var CharArraySerializer_instance;
function CharArraySerializer_getInstance() {
  if (CharArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new CharArraySerializer();
  return CharArraySerializer_instance;
}
var DoubleArraySerializer_instance;
function DoubleArraySerializer_getInstance() {
  if (DoubleArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new DoubleArraySerializer();
  return DoubleArraySerializer_instance;
}
var FloatArraySerializer_instance;
function FloatArraySerializer_getInstance() {
  if (FloatArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new FloatArraySerializer();
  return FloatArraySerializer_instance;
}
var LongArraySerializer_instance;
function LongArraySerializer_getInstance() {
  if (LongArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new LongArraySerializer();
  return LongArraySerializer_instance;
}
var ULongArraySerializer_instance;
function ULongArraySerializer_getInstance() {
  if (ULongArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ULongArraySerializer();
  return ULongArraySerializer_instance;
}
var IntArraySerializer_instance;
function IntArraySerializer_getInstance() {
  if (IntArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new IntArraySerializer();
  return IntArraySerializer_instance;
}
var UIntArraySerializer_instance;
function UIntArraySerializer_getInstance() {
  if (UIntArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new UIntArraySerializer();
  return UIntArraySerializer_instance;
}
var ShortArraySerializer_instance;
function ShortArraySerializer_getInstance() {
  if (ShortArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ShortArraySerializer();
  return ShortArraySerializer_instance;
}
var UShortArraySerializer_instance;
function UShortArraySerializer_getInstance() {
  if (UShortArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new UShortArraySerializer();
  return UShortArraySerializer_instance;
}
var ByteArraySerializer_instance;
function ByteArraySerializer_getInstance() {
  if (ByteArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ByteArraySerializer();
  return ByteArraySerializer_instance;
}
var UByteArraySerializer_instance;
function UByteArraySerializer_getInstance() {
  if (UByteArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new UByteArraySerializer();
  return UByteArraySerializer_instance;
}
var BooleanArraySerializer_instance;
function BooleanArraySerializer_getInstance() {
  if (BooleanArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new BooleanArraySerializer();
  return BooleanArraySerializer_instance;
}
function get_BUILTIN_SERIALIZERS() {
  _init_properties_Primitives_kt__k0eto4();
  return BUILTIN_SERIALIZERS;
}
var BUILTIN_SERIALIZERS;
function builtinSerializerOrNull(_this__u8e3s4) {
  _init_properties_Primitives_kt__k0eto4();
  var tmp = get_BUILTIN_SERIALIZERS().q2(_this__u8e3s4);
  return (tmp == null ? true : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, KSerializer)) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
}
var StringSerializer_instance;
function StringSerializer_getInstance() {
  if (StringSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new StringSerializer();
  return StringSerializer_instance;
}
var CharSerializer_instance;
function CharSerializer_getInstance() {
  if (CharSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new CharSerializer();
  return CharSerializer_instance;
}
var DoubleSerializer_instance;
function DoubleSerializer_getInstance() {
  if (DoubleSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new DoubleSerializer();
  return DoubleSerializer_instance;
}
var FloatSerializer_instance;
function FloatSerializer_getInstance() {
  if (FloatSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new FloatSerializer();
  return FloatSerializer_instance;
}
var LongSerializer_instance;
function LongSerializer_getInstance() {
  if (LongSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new LongSerializer();
  return LongSerializer_instance;
}
var IntSerializer_instance;
function IntSerializer_getInstance() {
  if (IntSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new IntSerializer();
  return IntSerializer_instance;
}
var ShortSerializer_instance;
function ShortSerializer_getInstance() {
  if (ShortSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ShortSerializer();
  return ShortSerializer_instance;
}
var ByteSerializer_instance;
function ByteSerializer_getInstance() {
  if (ByteSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ByteSerializer();
  return ByteSerializer_instance;
}
var BooleanSerializer_instance;
function BooleanSerializer_getInstance() {
  if (BooleanSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new BooleanSerializer();
  return BooleanSerializer_instance;
}
var UnitSerializer_instance;
function UnitSerializer_getInstance() {
  if (UnitSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new UnitSerializer();
  return UnitSerializer_instance;
}
function error_0($this) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('Primitive descriptor does not have elements');
}
function PrimitiveDescriptorSafe(serialName, kind) {
  _init_properties_Primitives_kt__k0eto4();
  checkName(serialName);
  return new PrimitiveSerialDescriptor(serialName, kind);
}
function checkName(serialName) {
  _init_properties_Primitives_kt__k0eto4();
  var keys = get_BUILTIN_SERIALIZERS().r2();
  var tmp0_iterator = keys.w();
  while (tmp0_iterator.x()) {
    var primitive = tmp0_iterator.y();
    var simpleName = capitalize((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(primitive.je()));
    var qualifiedName = 'kotlin.' + simpleName;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(serialName, qualifiedName, true) || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(serialName, simpleName, true)) {
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.trimIndent1qytc1wvt8suh)('\n                The name of serial descriptor should uniquely identify associated serializer.\n                For serial name ' + serialName + ' there already exist ' + capitalize(simpleName) + 'Serializer.\n                Please refer to SerialDescriptor documentation for additional information.\n            '));
    }
  }
}
function capitalize(_this__u8e3s4) {
  _init_properties_Primitives_kt__k0eto4();
  // Inline function 'kotlin.text.replaceFirstChar' call
  var tmp;
  // Inline function 'kotlin.text.isNotEmpty' call
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(_this__u8e3s4) > 0) {
    // Inline function 'kotlinx.serialization.internal.capitalize.<anonymous>' call
    var it = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, 0);
    var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isLowerCase16nv9n55l9laa)(it) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.titlecase36e9fbud5gg4t)(it) : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)(it);
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(tmp$ret$1);
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = tmp_0 + _this__u8e3s4.substring(1);
  } else {
    tmp = _this__u8e3s4;
  }
  return tmp;
}
var properties_initialized_Primitives_kt_6dpii6;
function _init_properties_Primitives_kt__k0eto4() {
  if (!properties_initialized_Primitives_kt_6dpii6) {
    properties_initialized_Primitives_kt_6dpii6 = true;
    BUILTIN_SERIALIZERS = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.mapOf1xd03cq9cnmy8)([(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().if(), serializer_1(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringCompanionObject_instance2odz3s3zbrixa)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof), serializer_2((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance2g172z58li19e)())), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().lf(), CharArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().gf(), serializer_3(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.DoubleCompanionObject_instance2yqrcskeqd1tm)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().rf(), DoubleArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().ff(), serializer_4(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.FloatCompanionObject_instance29smzmmxq0czz)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().qf(), FloatArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki), serializer_5((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance1pxg306pnafvz)())), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().pf(), LongArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULong3f9k7s38t3rfp), serializer_6((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance1poxudqc1ru3p)())), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ULongArray3nd0d80mdwjj8), ULongArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().ef(), serializer_7(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IntCompanionObject_instance2nvyd29rdzxbs)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().of(), IntArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UInt1hthisrv6cndi), serializer_8((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance1z323tr26bmxd)())), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UIntArrayrp6cv44n5v4y), UIntArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().df(), serializer_9(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ShortCompanionObject_instanceyg0ko6hbt9iy)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().nf(), ShortArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShort26xnqty60t7le), serializer_10((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstanceojp2cj59jqir)())), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UShortArray11avpmknxdgvv), UShortArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().cf(), serializer_11(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ByteCompanionObject_instancerp27gpfua1xf)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().mf(), ByteArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UBytep4j7r1t64gz1), serializer_12((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance374brtr06v94p)())), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UByteArray2qu4d6gwssdf9), UByteArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().bf(), serializer_13(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.BooleanCompanionObject_instance3nvf6tg77gv83)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().kf(), BooleanArraySerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unitkvevlwgzwiuc), serializer_14(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().af(), NothingSerializer_0()), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Duration5ynfiptaqcrg), serializer_15((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Companion_getInstance2b73c6hwbaiuw)()))]);
  }
}
function tagBlock($this, tag, block) {
  $this.m3q(tag);
  var r = block();
  if (!$this.x3p_1) {
    $this.n3q();
  }
  $this.x3p_1 = false;
  return r;
}
function TaggedDecoder$decodeSerializableElement$lambda(this$0, $deserializer, $previousValue) {
  return function () {
    return this$0.o3c($deserializer, $previousValue);
  };
}
function get_NULL() {
  _init_properties_Tuples_kt__dz0qyd();
  return NULL;
}
var NULL;
function MapEntrySerializer$descriptor$lambda($keySerializer, $valueSerializer) {
  return function ($this$buildSerialDescriptor) {
    $this$buildSerialDescriptor.f39('key', $keySerializer.u38());
    $this$buildSerialDescriptor.f39('value', $valueSerializer.u38());
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function PairSerializer$descriptor$lambda($keySerializer, $valueSerializer) {
  return function ($this$buildClassSerialDescriptor) {
    $this$buildClassSerialDescriptor.f39('first', $keySerializer.u38());
    $this$buildClassSerialDescriptor.f39('second', $valueSerializer.u38());
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function decodeSequentially_1($this, composite) {
  var a = composite.d3d($this.j3r_1, 0, $this.g3r_1);
  var b = composite.d3d($this.j3r_1, 1, $this.h3r_1);
  var c = composite.d3d($this.j3r_1, 2, $this.i3r_1);
  composite.r3c($this.j3r_1);
  return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Triple1vhi3d0dgpnjb(a, b, c);
}
function decodeStructure($this, composite) {
  var a = get_NULL();
  var b = get_NULL();
  var c = get_NULL();
  mainLoop: while (true) {
    var index = composite.g3d($this.j3r_1);
    switch (index) {
      case -1:
        break mainLoop;
      case 0:
        a = composite.d3d($this.j3r_1, 0, $this.g3r_1);
        break;
      case 1:
        b = composite.d3d($this.j3r_1, 1, $this.h3r_1);
        break;
      case 2:
        c = composite.d3d($this.j3r_1, 2, $this.i3r_1);
        break;
      default:
        throw SerializationException.w39('Unexpected index ' + index);
    }
  }
  composite.r3c($this.j3r_1);
  if (a === get_NULL())
    throw SerializationException.w39("Element 'first' is missing");
  if (b === get_NULL())
    throw SerializationException.w39("Element 'second' is missing");
  if (c === get_NULL())
    throw SerializationException.w39("Element 'third' is missing");
  var tmp = (a == null ? true : !(a == null)) ? a : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  var tmp_0 = (b == null ? true : !(b == null)) ? b : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Triple1vhi3d0dgpnjb(tmp, tmp_0, (c == null ? true : !(c == null)) ? c : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
}
function TripleSerializer$descriptor$lambda(this$0) {
  return function ($this$buildClassSerialDescriptor) {
    $this$buildClassSerialDescriptor.f39('first', this$0.g3r_1.u38());
    $this$buildClassSerialDescriptor.f39('second', this$0.h3r_1.u38());
    $this$buildClassSerialDescriptor.f39('third', this$0.i3r_1.u38());
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
var properties_initialized_Tuples_kt_3vs7ar;
function _init_properties_Tuples_kt__dz0qyd() {
  if (!properties_initialized_Tuples_kt_3vs7ar) {
    properties_initialized_Tuples_kt_3vs7ar = true;
    NULL = new Object();
  }
}
var ULongSerializer_instance;
function ULongSerializer_getInstance() {
  if (ULongSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new ULongSerializer();
  return ULongSerializer_instance;
}
var UIntSerializer_instance;
function UIntSerializer_getInstance() {
  if (UIntSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new UIntSerializer();
  return UIntSerializer_instance;
}
var UShortSerializer_instance;
function UShortSerializer_getInstance() {
  if (UShortSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new UShortSerializer();
  return UShortSerializer_instance;
}
var UByteSerializer_instance;
function UByteSerializer_getInstance() {
  if (UByteSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new UByteSerializer();
  return UByteSerializer_instance;
}
function get_EmptySerializersModuleLegacyJs() {
  _init_properties_SerializersModule_kt__u78ha3();
  return EmptySerializersModule;
}
var EmptySerializersModule;
var properties_initialized_SerializersModule_kt_fjigjn;
function _init_properties_SerializersModule_kt__u78ha3() {
  if (!properties_initialized_SerializersModule_kt_fjigjn) {
    properties_initialized_SerializersModule_kt_fjigjn = true;
    EmptySerializersModule = new SerialModuleImpl((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)());
  }
}
function EmptySerializersModule_0() {
  return get_EmptySerializersModuleLegacyJs();
}
function SerializersModuleCollector$contextual$lambda($serializer) {
  return function (it) {
    return $serializer;
  };
}
function createCache(factory) {
  return new createCache$1(factory);
}
function createParametrizedCache(factory) {
  return new createParametrizedCache$1(factory);
}
function compiledSerializerImpl(_this__u8e3s4) {
  var tmp1_elvis_lhs = constructSerializerForGivenTypeArgs(_this__u8e3s4, []);
  var tmp;
  if (tmp1_elvis_lhs == null) {
    // Inline function 'kotlin.js.asDynamic' call
    var tmp0_safe_receiver = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_js1ale1wr4fbvs0)(_this__u8e3s4).Companion;
    var tmp_0 = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.serializer();
    tmp = (!(tmp_0 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_0, KSerializer) : false) ? tmp_0 : null;
  } else {
    tmp = tmp1_elvis_lhs;
  }
  return tmp;
}
function platformSpecificSerializerNotRegistered(_this__u8e3s4) {
  throw SerializationException.w39(notRegisteredMessage(_this__u8e3s4) + '\n' + 'On Kotlin/JS explicitly declared serializer should be used for interfaces and enums without @Serializable annotation');
}
function isReferenceArray(rootClass) {
  return rootClass.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().hf());
}
function constructSerializerForGivenTypeArgs(_this__u8e3s4, args) {
  var tmp;
  try {
    // Inline function 'kotlin.reflect.findAssociatedObject' call
    var assocObject = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.findAssociatedObject1kb88g16k1goa)(_this__u8e3s4, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(SerializableWith));
    var tmp_0;
    if (!(assocObject == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(assocObject, KSerializer) : false) {
      tmp_0 = (!(assocObject == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(assocObject, KSerializer) : false) ? assocObject : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    } else {
      if (!(assocObject == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(assocObject, SerializerFactory) : false) {
        var tmp_1 = assocObject.g3k(args.slice());
        tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_1, KSerializer) ? tmp_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      } else {
        if (get_isInterface(_this__u8e3s4)) {
          tmp_0 = new PolymorphicSerializer(_this__u8e3s4);
        } else {
          tmp_0 = null;
        }
      }
    }
    tmp = tmp_0;
  } catch ($p) {
    var tmp_2;
    var e = $p;
    tmp_2 = null;
    tmp = tmp_2;
  }
  return tmp;
}
function get_isInterface(_this__u8e3s4) {
  // Inline function 'kotlin.js.asDynamic' call
  var tmp0_safe_receiver = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_js1ale1wr4fbvs0)(_this__u8e3s4).$metadata$;
  return (tmp0_safe_receiver == null ? null : tmp0_safe_receiver.kind) == 'interface';
}
function toNativeArrayImpl(_this__u8e3s4, eClass) {
  // Inline function 'kotlin.collections.toTypedArray' call
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.copyToArray2j022khrow2yi)(_this__u8e3s4);
}
function getChecked(_this__u8e3s4, index) {
  if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexOutOfBoundsException1qfr429iumro0.md('Index ' + index + ' out of bounds ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_indicesc04v40g017hw)(_this__u8e3s4).toString());
  return _this__u8e3s4[index];
}
function getChecked_0(_this__u8e3s4, index) {
  if (!(0 <= index ? index <= (_this__u8e3s4.length - 1 | 0) : false))
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexOutOfBoundsException1qfr429iumro0.md('Index ' + index + ' out of bounds ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_indices377latqcai313)(_this__u8e3s4).toString());
  return _this__u8e3s4[index];
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(SerializationStrategy, 'SerializationStrategy');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(DeserializationStrategy, 'DeserializationStrategy');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(KSerializer, 'KSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerializationStrategy, DeserializationStrategy]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AbstractPolymorphicSerializer, 'AbstractPolymorphicSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PolymorphicSerializer, 'PolymorphicSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SealedClassSerializer, 'SealedClassSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(StringFormat, 'StringFormat');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(BinaryFormat, 'BinaryFormat');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SerializationException, 'SerializationException', SerializationException.v39);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UnknownFieldException, 'UnknownFieldException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MissingFieldException, 'MissingFieldException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(SerialDescriptor, 'SerialDescriptor');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContextDescriptor, 'ContextDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(elementDescriptors$1$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(_no_name_provided__qut3iv);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ClassSerialDescriptorBuilder, 'ClassSerialDescriptorBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(CachedNames, 'CachedNames');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(SerialDescriptorImpl).t3a = get_isNullable;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(SerialDescriptorImpl).a3b = get_isInline;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SerialDescriptorImpl, 'SerialDescriptorImpl', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor, CachedNames]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SerialKind, 'SerialKind');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ENUM, 'ENUM');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(CONTEXTUAL, 'CONTEXTUAL');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PrimitiveKind, 'PrimitiveKind');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(BOOLEAN, 'BOOLEAN');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(BYTE, 'BYTE');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(CHAR, 'CHAR');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(SHORT, 'SHORT');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(INT, 'INT');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(LONG, 'LONG');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(FLOAT, 'FLOAT');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(DOUBLE, 'DOUBLE');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(STRING, 'STRING');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(StructureKind, 'StructureKind');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(CLASS, 'CLASS');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(LIST, 'LIST');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(MAP, 'MAP');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(OBJECT, 'OBJECT');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PolymorphicKind, 'PolymorphicKind');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(SEALED, 'SEALED');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(OPEN, 'OPEN');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Decoder, 'Decoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(CompositeDecoder, 'CompositeDecoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AbstractDecoder).d3d = decodeSerializableElement$default;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AbstractDecoder).p3c = decodeSerializableValue;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AbstractDecoder).f3d = decodeSequentially;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AbstractDecoder).h3d = decodeCollectionSize;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AbstractDecoder, 'AbstractDecoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Decoder, CompositeDecoder]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Encoder, 'Encoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AbstractEncoder).i3e = encodeNotNullMark;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AbstractEncoder).j3e = beginCollection;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AbstractEncoder).h3e = encodeSerializableValue;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AbstractEncoder, 'AbstractEncoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Encoder]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(NothingSerializer, 'NothingSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(DurationSerializer, 'DurationSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(ListLikeDescriptor).t3a = get_isNullable;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(ListLikeDescriptor).a3b = get_isInline;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(ListLikeDescriptor).y3a = get_annotations;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ListLikeDescriptor, 'ListLikeDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ArrayListClassDesc, 'ArrayListClassDesc');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HashSetClassDesc, 'HashSetClassDesc');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LinkedHashSetClassDesc, 'LinkedHashSetClassDesc');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(MapLikeDescriptor).t3a = get_isNullable;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(MapLikeDescriptor).a3b = get_isInline;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(MapLikeDescriptor).y3a = get_annotations;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MapLikeDescriptor, 'MapLikeDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HashMapClassDesc, 'HashMapClassDesc');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LinkedHashMapClassDesc, 'LinkedHashMapClassDesc');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ArrayClassDesc, 'ArrayClassDesc');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PrimitiveArrayDescriptor, 'PrimitiveArrayDescriptor');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AbstractCollectionSerializer, 'AbstractCollectionSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CollectionLikeSerializer, 'CollectionLikeSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CollectionSerializer, 'CollectionSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ArrayListSerializer, 'ArrayListSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HashSetSerializer, 'HashSetSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LinkedHashSetSerializer, 'LinkedHashSetSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MapLikeSerializer, 'MapLikeSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HashMapSerializer, 'HashMapSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LinkedHashMapSerializer, 'LinkedHashMapSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ReferenceArraySerializer, 'ReferenceArraySerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PrimitiveArraySerializer, 'PrimitiveArraySerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PrimitiveArrayBuilder, 'PrimitiveArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ElementMarker, 'ElementMarker');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(PluginGeneratedSerialDescriptor).t3a = get_isNullable;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(PluginGeneratedSerialDescriptor).a3b = get_isInline;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PluginGeneratedSerialDescriptor, 'PluginGeneratedSerialDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor, CachedNames]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InlineClassDescriptor, 'InlineClassDescriptor');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(GeneratedSerializer, 'GeneratedSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(InlinePrimitiveDescriptor$1).v3j = typeParametersSerializers;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InlinePrimitiveDescriptor$1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [GeneratedSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(NoOpEncoder, 'NoOpEncoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(NothingSerialDescriptor).t3a = get_isNullable;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(NothingSerialDescriptor).a3b = get_isInline;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(NothingSerialDescriptor).y3a = get_annotations;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(NothingSerialDescriptor, 'NothingSerialDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(NullableSerializer, 'NullableSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SerialDescriptorForNullable, 'SerialDescriptorForNullable', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor, CachedNames]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ObjectSerializer, 'ObjectSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(SerializerFactory, 'SerializerFactory');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(CharArraySerializer, 'CharArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(DoubleArraySerializer, 'DoubleArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(FloatArraySerializer, 'FloatArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(LongArraySerializer, 'LongArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ULongArraySerializer, 'ULongArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(IntArraySerializer, 'IntArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(UIntArraySerializer, 'UIntArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ShortArraySerializer, 'ShortArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(UShortArraySerializer, 'UShortArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ByteArraySerializer, 'ByteArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(UByteArraySerializer, 'UByteArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(BooleanArraySerializer, 'BooleanArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer, PrimitiveArraySerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CharArrayBuilder, 'CharArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DoubleArrayBuilder, 'DoubleArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(FloatArrayBuilder, 'FloatArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LongArrayBuilder, 'LongArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ULongArrayBuilder, 'ULongArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(IntArrayBuilder, 'IntArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UIntArrayBuilder, 'UIntArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ShortArrayBuilder, 'ShortArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UShortArrayBuilder, 'UShortArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ByteArrayBuilder, 'ByteArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UByteArrayBuilder, 'UByteArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(BooleanArrayBuilder, 'BooleanArrayBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(StringSerializer, 'StringSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(CharSerializer, 'CharSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(DoubleSerializer, 'DoubleSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(FloatSerializer, 'FloatSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(LongSerializer, 'LongSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(IntSerializer, 'IntSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ShortSerializer, 'ShortSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ByteSerializer, 'ByteSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(BooleanSerializer, 'BooleanSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(UnitSerializer, 'UnitSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(PrimitiveSerialDescriptor).t3a = get_isNullable;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(PrimitiveSerialDescriptor).a3b = get_isInline;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(PrimitiveSerialDescriptor).y3a = get_annotations;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PrimitiveSerialDescriptor, 'PrimitiveSerialDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [SerialDescriptor]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(TaggedDecoder).d3d = decodeSerializableElement$default;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(TaggedDecoder).p3c = decodeSerializableValue;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(TaggedDecoder).f3d = decodeSequentially;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(TaggedDecoder).h3d = decodeCollectionSize;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(TaggedDecoder, 'TaggedDecoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Decoder, CompositeDecoder]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(NamedValueDecoder, 'NamedValueDecoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MapEntry, 'MapEntry', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Entry2xmjmyutzoq3p]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(KeyValueSerializer, 'KeyValueSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MapEntrySerializer, 'MapEntrySerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PairSerializer, 'PairSerializer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(TripleSerializer, 'TripleSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(ULongSerializer, 'ULongSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(UIntSerializer, 'UIntSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(UShortSerializer, 'UShortSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(UByteSerializer, 'UByteSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [KSerializer]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SerializersModule, 'SerializersModule');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SerialModuleImpl, 'SerialModuleImpl');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContextualProvider, 'ContextualProvider');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Argless, 'Argless');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(WithTypeArguments, 'WithTypeArguments');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(SerializersModuleCollector, 'SerializersModuleCollector');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SerializableWith, 'SerializableWith', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, 0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(createCache$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(createParametrizedCache$1);
//endregion
//region block: exports

//endregion

//# sourceMappingURL=kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs.map


/***/ }),

/***/ "./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.mjs":
/*!***************************************************************************!*\
  !*** ./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Jsonsmkyu9xjl7fv: () => (/* binding */ Json_0)
/* harmony export */ });
/* harmony import */ var _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs */ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs");
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");


//region block: imports
var imul = Math.imul;
//endregion
//region block: pre-declaration
class Json {
  constructor(configuration, serializersModule) {
    Default_getInstance();
    this.g3x_1 = configuration;
    this.h3x_1 = serializersModule;
    this.i3x_1 = new DescriptorSchemaCache();
  }
  e3d() {
    return this.h3x_1;
  }
  n39(serializer, value) {
    var result = new JsonToStringWriter();
    try {
      encodeByWriter(this, result, serializer, value);
      return result.toString();
    }finally {
      result.j15();
    }
  }
  o39(deserializer, string) {
    var lexer = new StringJsonLexer(string);
    var input = new StreamingJsonDecoder(this, WriteMode_OBJ_getInstance(), lexer, deserializer.u38(), null);
    var result = input.p3c(deserializer);
    lexer.w3x();
    return result;
  }
}
class Default extends Json {
  constructor() {
    Default_instance = null;
    super(new JsonConfiguration(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.EmptySerializersModule991ju6pz9b79)());
    Default_instance = this;
  }
}
class JsonBuilder {
  constructor(json) {
    this.x3x_1 = json.g3x_1.m3y_1;
    this.y3x_1 = json.g3x_1.r3y_1;
    this.z3x_1 = json.g3x_1.n3y_1;
    this.a3y_1 = json.g3x_1.o3y_1;
    this.b3y_1 = json.g3x_1.p3y_1;
    this.c3y_1 = json.g3x_1.q3y_1;
    this.d3y_1 = json.g3x_1.s3y_1;
    this.e3y_1 = json.g3x_1.t3y_1;
    this.f3y_1 = json.g3x_1.u3y_1;
    this.g3y_1 = json.g3x_1.v3y_1;
    this.h3y_1 = json.g3x_1.w3y_1;
    this.i3y_1 = json.g3x_1.x3y_1;
    this.j3y_1 = json.g3x_1.y3y_1;
    this.k3y_1 = json.e3d();
  }
  l3y() {
    if (this.f3y_1) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(this.g3y_1 === 'type')) {
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        var message = 'Class discriminator should not be specified when array polymorphism is specified';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
      }
    }
    if (!this.c3y_1) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(this.d3y_1 === '    ')) {
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        var message_0 = 'Indent should not be specified when default printing mode is used';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message_0));
      }
    } else if (!(this.d3y_1 === '    ')) {
      var tmp$ret$3;
      $l$block: {
        // Inline function 'kotlin.text.all' call
        var indexedObject = this.d3y_1;
        var inductionVariable = 0;
        while (inductionVariable < (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(indexedObject)) {
          var element = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(indexedObject, inductionVariable);
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
          if (!(element === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32) || element === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9) || element === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13) || element === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10))) {
            tmp$ret$3 = false;
            break $l$block;
          }
        }
        tmp$ret$3 = true;
      }
      var allWhitespaces = tmp$ret$3;
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!allWhitespaces) {
        // Inline function 'kotlinx.serialization.json.JsonBuilder.build.<anonymous>' call
        var message_1 = 'Only whitespace, tab, newline and carriage return are allowed as pretty print symbols. Had ' + this.d3y_1;
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message_1));
      }
    }
    return new JsonConfiguration(this.x3x_1, this.z3x_1, this.a3y_1, this.b3y_1, this.c3y_1, this.y3x_1, this.d3y_1, this.e3y_1, this.f3y_1, this.g3y_1, this.h3y_1, this.i3y_1, this.j3y_1);
  }
}
class JsonImpl extends Json {
  constructor(configuration, module_0) {
    super(configuration, module_0);
    validateConfiguration(this);
  }
}
class JsonClassDiscriminator {}
class JsonNames {}
class JsonConfiguration {
  constructor(encodeDefaults, ignoreUnknownKeys, isLenient, allowStructuredMapKeys, prettyPrint, explicitNulls, prettyPrintIndent, coerceInputValues, useArrayPolymorphism, classDiscriminator, allowSpecialFloatingPointValues, useAlternativeNames, namingStrategy) {
    encodeDefaults = encodeDefaults === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : encodeDefaults;
    ignoreUnknownKeys = ignoreUnknownKeys === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : ignoreUnknownKeys;
    isLenient = isLenient === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : isLenient;
    allowStructuredMapKeys = allowStructuredMapKeys === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : allowStructuredMapKeys;
    prettyPrint = prettyPrint === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : prettyPrint;
    explicitNulls = explicitNulls === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? true : explicitNulls;
    prettyPrintIndent = prettyPrintIndent === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? '    ' : prettyPrintIndent;
    coerceInputValues = coerceInputValues === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : coerceInputValues;
    useArrayPolymorphism = useArrayPolymorphism === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : useArrayPolymorphism;
    classDiscriminator = classDiscriminator === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? 'type' : classDiscriminator;
    allowSpecialFloatingPointValues = allowSpecialFloatingPointValues === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : allowSpecialFloatingPointValues;
    useAlternativeNames = useAlternativeNames === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? true : useAlternativeNames;
    namingStrategy = namingStrategy === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : namingStrategy;
    this.m3y_1 = encodeDefaults;
    this.n3y_1 = ignoreUnknownKeys;
    this.o3y_1 = isLenient;
    this.p3y_1 = allowStructuredMapKeys;
    this.q3y_1 = prettyPrint;
    this.r3y_1 = explicitNulls;
    this.s3y_1 = prettyPrintIndent;
    this.t3y_1 = coerceInputValues;
    this.u3y_1 = useArrayPolymorphism;
    this.v3y_1 = classDiscriminator;
    this.w3y_1 = allowSpecialFloatingPointValues;
    this.x3y_1 = useAlternativeNames;
    this.y3y_1 = namingStrategy;
  }
  toString() {
    return 'JsonConfiguration(encodeDefaults=' + this.m3y_1 + ', ignoreUnknownKeys=' + this.n3y_1 + ', isLenient=' + this.o3y_1 + ', ' + ('allowStructuredMapKeys=' + this.p3y_1 + ', prettyPrint=' + this.q3y_1 + ', explicitNulls=' + this.r3y_1 + ', ') + ("prettyPrintIndent='" + this.s3y_1 + "', coerceInputValues=" + this.t3y_1 + ', useArrayPolymorphism=' + this.u3y_1 + ', ') + ("classDiscriminator='" + this.v3y_1 + "', allowSpecialFloatingPointValues=" + this.w3y_1 + ', useAlternativeNames=' + this.x3y_1 + ', ') + ('namingStrategy=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString30pk9tzaqopn)(this.y3y_1) + ')');
  }
}
class JsonDecoder {}
class Companion {}
class JsonElement {}
class Companion_0 {}
class JsonObject extends JsonElement {
  constructor(content) {
    super();
    this.b3z_1 = content;
  }
  j1() {
    return this.b3z_1.j1();
  }
  r2() {
    return this.b3z_1.r2();
  }
  z() {
    return this.b3z_1.z();
  }
  s2() {
    return this.b3z_1.s2();
  }
  e1l(key) {
    return this.b3z_1.o2(key);
  }
  o2(key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.e1l((!(key == null) ? typeof key === 'string' : false) ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  f1l(key) {
    return this.b3z_1.q2(key);
  }
  q2(key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.f1l((!(key == null) ? typeof key === 'string' : false) ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  f1() {
    return this.b3z_1.f1();
  }
  equals(other) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(this.b3z_1, other);
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.hashCodeq5arwsb9dgti)(this.b3z_1);
  }
  toString() {
    var tmp = this.b3z_1.j1();
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.joinToString1cxrrlmo0chqs)(tmp, ',', '{', '}', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, JsonObject$toString$lambda);
  }
}
class JsonPrimitive extends JsonElement {
  toString() {
    return this.l2b();
  }
}
class JsonNull extends JsonPrimitive {
  constructor() {
    JsonNull_instance = null;
    super();
    JsonNull_instance = this;
    this.c3z_1 = 'null';
    var tmp = this;
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LazyThreadSafetyMode_PUBLICATION_getInstance3hlj875zwihx0)();
    tmp.d3z_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.lazy1261dae0bgscp)(tmp_0, JsonNull$_anonymous__enib48);
  }
  l2b() {
    return this.c3z_1;
  }
  e3z() {
    return _get_$cachedSerializer__te6jhj(this);
  }
  g3k(typeParamsSerializers) {
    return this.e3z();
  }
}
class Companion_1 {}
class JsonLiteral extends JsonPrimitive {
  constructor(body, isString, coerceToInlineType) {
    coerceToInlineType = coerceToInlineType === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : coerceToInlineType;
    super();
    this.f3z_1 = isString;
    this.g3z_1 = coerceToInlineType;
    this.h3z_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(body);
    if (!(this.g3z_1 == null)) {
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.require' call
      // Inline function 'kotlin.contracts.contract' call
      if (!this.g3z_1.a3b()) {
        // Inline function 'kotlin.require.<anonymous>' call
        var message = 'Failed requirement.';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
      }
    }
  }
  l2b() {
    return this.h3z_1;
  }
  toString() {
    var tmp;
    if (this.f3z_1) {
      // Inline function 'kotlin.text.buildString' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.apply' call
      var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringBuildermazzzhj6kkai.u();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlinx.serialization.json.JsonLiteral.toString.<anonymous>' call
      printQuoted(this_0, this.h3z_1);
      tmp = this_0.toString();
    } else {
      tmp = this.h3z_1;
    }
    return tmp;
  }
  equals(other) {
    if (this === other)
      return true;
    if (other == null || !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(this).equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(other)))
      return false;
    if (!(other instanceof JsonLiteral))
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.f3z_1 === other.f3z_1))
      return false;
    if (!(this.h3z_1 === other.h3z_1))
      return false;
    return true;
  }
  hashCode() {
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getBooleanHashCode1bbj3u6b3v0a7)(this.f3z_1);
    result = imul(31, result) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getStringHashCode26igk1bx568vk)(this.h3z_1) | 0;
    return result;
  }
}
class Companion_2 {}
class JsonArray extends JsonElement {
  constructor(content) {
    super();
    this.i3z_1 = content;
  }
  z() {
    return this.i3z_1.z();
  }
  j3z(element) {
    return this.i3z_1.h2(element);
  }
  h2(element) {
    if (!(element instanceof JsonElement))
      return false;
    return this.j3z(element instanceof JsonElement ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  k3z(elements) {
    return this.i3z_1.i2(elements);
  }
  i2(elements) {
    return this.k3z(elements);
  }
  c1(index) {
    return this.i3z_1.c1(index);
  }
  f1() {
    return this.i3z_1.f1();
  }
  w() {
    return this.i3z_1.w();
  }
  equals(other) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(this.i3z_1, other);
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.hashCodeq5arwsb9dgti)(this.i3z_1);
  }
  toString() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.joinToString1cxrrlmo0chqs)(this.i3z_1, ',', '[', ']');
  }
}
class JsonElementSerializer {
  constructor() {
    JsonElementSerializer_instance = this;
    var tmp = this;
    var tmp_0 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SEALED_getInstance15u0wl5f5h4qk)();
    tmp.q3z_1 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.buildSerialDescriptor2873qmkp8r2ib)('kotlinx.serialization.json.JsonElement', tmp_0, [], JsonElementSerializer$descriptor$lambda);
  }
  u38() {
    return this.q3z_1;
  }
  r3z(encoder, value) {
    verify(encoder);
    if (value instanceof JsonPrimitive) {
      encoder.h3e(JsonPrimitiveSerializer_getInstance(), value);
    } else {
      if (value instanceof JsonObject) {
        encoder.h3e(JsonObjectSerializer_getInstance(), value);
      } else {
        if (value instanceof JsonArray) {
          encoder.h3e(JsonArraySerializer_getInstance(), value);
        }
      }
    }
  }
  v38(encoder, value) {
    return this.r3z(encoder, value instanceof JsonElement ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    var input = asJsonDecoder(decoder);
    return input.a3z();
  }
}
class JsonObjectDescriptor {
  constructor() {
    JsonObjectDescriptor_instance = this;
    this.s3z_1 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MapSerializer11kmegt3g5c1g)((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer1x79l67jvwntn)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringCompanionObject_instance2odz3s3zbrixa), JsonElementSerializer_getInstance()).u38();
    this.t3z_1 = 'kotlinx.serialization.json.JsonObject';
  }
  y3a() {
    return this.s3z_1.y3a();
  }
  z3a() {
    return this.s3z_1.z3a();
  }
  a3b() {
    return this.s3z_1.a3b();
  }
  t3a() {
    return this.s3z_1.t3a();
  }
  b3b() {
    return this.s3z_1.b3b();
  }
  c3b(index) {
    return this.s3z_1.c3b(index);
  }
  d3b(index) {
    return this.s3z_1.d3b(index);
  }
  e3b(name) {
    return this.s3z_1.e3b(name);
  }
  f3b(index) {
    return this.s3z_1.f3b(index);
  }
  g3b(index) {
    return this.s3z_1.g3b(index);
  }
  x3a() {
    return this.t3z_1;
  }
}
class JsonObjectSerializer {
  constructor() {
    JsonObjectSerializer_instance = this;
    this.o3z_1 = JsonObjectDescriptor_getInstance();
  }
  u38() {
    return this.o3z_1;
  }
  u3z(encoder, value) {
    verify(encoder);
    (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MapSerializer11kmegt3g5c1g)((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer1x79l67jvwntn)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringCompanionObject_instance2odz3s3zbrixa), JsonElementSerializer_getInstance()).v38(encoder, value);
  }
  v38(encoder, value) {
    return this.u3z(encoder, value instanceof JsonObject ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    verify_0(decoder);
    return new JsonObject((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MapSerializer11kmegt3g5c1g)((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer1x79l67jvwntn)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringCompanionObject_instance2odz3s3zbrixa), JsonElementSerializer_getInstance()).w38(decoder));
  }
}
class JsonArrayDescriptor {
  constructor() {
    JsonArrayDescriptor_instance = this;
    this.v3z_1 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ListSerializer1hxuk9dx5n9du)(JsonElementSerializer_getInstance()).u38();
    this.w3z_1 = 'kotlinx.serialization.json.JsonArray';
  }
  y3a() {
    return this.v3z_1.y3a();
  }
  z3a() {
    return this.v3z_1.z3a();
  }
  a3b() {
    return this.v3z_1.a3b();
  }
  t3a() {
    return this.v3z_1.t3a();
  }
  b3b() {
    return this.v3z_1.b3b();
  }
  c3b(index) {
    return this.v3z_1.c3b(index);
  }
  d3b(index) {
    return this.v3z_1.d3b(index);
  }
  e3b(name) {
    return this.v3z_1.e3b(name);
  }
  f3b(index) {
    return this.v3z_1.f3b(index);
  }
  g3b(index) {
    return this.v3z_1.g3b(index);
  }
  x3a() {
    return this.w3z_1;
  }
}
class JsonArraySerializer {
  constructor() {
    JsonArraySerializer_instance = this;
    this.p3z_1 = JsonArrayDescriptor_getInstance();
  }
  u38() {
    return this.p3z_1;
  }
  x3z(encoder, value) {
    verify(encoder);
    (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ListSerializer1hxuk9dx5n9du)(JsonElementSerializer_getInstance()).v38(encoder, value);
  }
  v38(encoder, value) {
    return this.x3z(encoder, value instanceof JsonArray ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    verify_0(decoder);
    return new JsonArray((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ListSerializer1hxuk9dx5n9du)(JsonElementSerializer_getInstance()).w38(decoder));
  }
}
class JsonPrimitiveSerializer {
  constructor() {
    JsonPrimitiveSerializer_instance = this;
    this.l3z_1 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.buildSerialDescriptor2873qmkp8r2ib)('kotlinx.serialization.json.JsonPrimitive', (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.STRING_getInstance2gbamclnmtzqa)(), []);
  }
  u38() {
    return this.l3z_1;
  }
  y3z(encoder, value) {
    verify(encoder);
    var tmp;
    if (value instanceof JsonNull) {
      encoder.h3e(JsonNullSerializer_getInstance(), JsonNull_getInstance());
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    } else {
      var tmp_0 = JsonLiteralSerializer_getInstance();
      encoder.h3e(tmp_0, value instanceof JsonLiteral ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    return tmp;
  }
  v38(encoder, value) {
    return this.y3z(encoder, value instanceof JsonPrimitive ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    var result = asJsonDecoder(decoder).a3z();
    if (!(result instanceof JsonPrimitive))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonPrimitive, had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(result)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(result));
    return result;
  }
}
class JsonNullSerializer {
  constructor() {
    JsonNullSerializer_instance = this;
    this.m3z_1 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.buildSerialDescriptor2873qmkp8r2ib)('kotlinx.serialization.json.JsonNull', (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ENUM_getInstance3doea03ve3rgg)(), []);
  }
  u38() {
    return this.m3z_1;
  }
  z3z(encoder, value) {
    verify(encoder);
    encoder.l3d();
  }
  v38(encoder, value) {
    return this.z3z(encoder, value instanceof JsonNull ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    verify_0(decoder);
    if (decoder.c3c()) {
      throw JsonDecodingException.g40("Expected 'null' literal");
    }
    decoder.d3c();
    return JsonNull_getInstance();
  }
}
class JsonLiteralSerializer {
  constructor() {
    JsonLiteralSerializer_instance = this;
    this.n3z_1 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveSerialDescriptor3egfp53lutxj2)('kotlinx.serialization.json.JsonLiteral', (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.STRING_getInstance2gbamclnmtzqa)());
  }
  u38() {
    return this.n3z_1;
  }
  h40(encoder, value) {
    verify(encoder);
    if (value.f3z_1) {
      return encoder.u3d(value.h3z_1);
    }
    if (!(value.g3z_1 == null)) {
      return encoder.v3d(value.g3z_1).u3d(value.h3z_1);
    }
    var tmp0_safe_receiver = get_longOrNull(value);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.q3d(tmp0_safe_receiver);
    }
    var tmp1_safe_receiver = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toULongOrNullojoyxi0i9tgj)(value.h3z_1);
    var tmp = tmp1_safe_receiver;
    if ((tmp == null ? null : new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ULong3f9k7s38t3rfp(tmp)) == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      var tmp_0 = tmp1_safe_receiver;
      // Inline function 'kotlin.contracts.contract' call
      var it = (tmp_0 == null ? null : new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ULong3f9k7s38t3rfp(tmp_0)).dm_1;
      var tmp_1 = encoder.v3d((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer2lw83vwvpnyms)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_getInstance1poxudqc1ru3p)()).u38());
      // Inline function 'kotlin.ULong.toLong' call
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._ULong___get_data__impl__fggpzb1fgc8uwlfcfgw)(it);
      tmp_1.q3d(tmp$ret$1);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    var tmp2_safe_receiver = get_doubleOrNull(value);
    if (tmp2_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.s3d(tmp2_safe_receiver);
    }
    var tmp3_safe_receiver = get_booleanOrNull(value);
    if (tmp3_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return encoder.m3d(tmp3_safe_receiver);
    }
    encoder.u3d(value.h3z_1);
  }
  v38(encoder, value) {
    return this.h40(encoder, value instanceof JsonLiteral ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    var result = asJsonDecoder(decoder).a3z();
    if (!(result instanceof JsonLiteral))
      throw JsonDecodingException_0(-1, 'Unexpected JSON element, expected JsonLiteral, had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(result)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(result));
    return result;
  }
}
class defer$1 {
  constructor($deferred) {
    this.i40_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.lazy2hsh8ze7j6ikd)($deferred);
  }
  x3a() {
    return _get_original__l7ku1m(this).x3a();
  }
  b3b() {
    return _get_original__l7ku1m(this).b3b();
  }
  z3a() {
    return _get_original__l7ku1m(this).z3a();
  }
  f3b(index) {
    return _get_original__l7ku1m(this).f3b(index);
  }
  e3b(name) {
    return _get_original__l7ku1m(this).e3b(name);
  }
  c3b(index) {
    return _get_original__l7ku1m(this).c3b(index);
  }
  d3b(index) {
    return _get_original__l7ku1m(this).d3b(index);
  }
  g3b(index) {
    return _get_original__l7ku1m(this).g3b(index);
  }
}
class JsonEncoder {}
class Composer {
  constructor(writer) {
    this.j40_1 = writer;
    this.k40_1 = true;
  }
  l40() {
    this.k40_1 = true;
  }
  m40() {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  }
  n40() {
    this.k40_1 = false;
  }
  o40() {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  }
  p40(v) {
    return this.j40_1.q40(v);
  }
  r40(v) {
    return this.j40_1.s40(v);
  }
  t40(v) {
    return this.j40_1.s40(v.toString());
  }
  u40(v) {
    return this.j40_1.s40(v.toString());
  }
  v40(v) {
    return this.j40_1.w40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(v));
  }
  x40(v) {
    return this.j40_1.w40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(v));
  }
  y40(v) {
    return this.j40_1.w40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(v));
  }
  z40(v) {
    return this.j40_1.w40(v);
  }
  a41(v) {
    return this.j40_1.s40(v.toString());
  }
  b41(value) {
    return this.j40_1.c41(value);
  }
}
class ComposerForUnsignedNumbers extends Composer {
  constructor(writer, forceQuoting) {
    super(writer);
    this.f41_1 = forceQuoting;
  }
  y40(v) {
    if (this.f41_1) {
      // Inline function 'kotlin.toUInt' call
      var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UInt___init__impl__l7qpdl2soskspn8hzmt)(v);
      this.b41((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.UInt__toString_impl_dbgl21aw2z4ehd4hej)(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toUInt' call
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UInt___init__impl__l7qpdl2soskspn8hzmt)(v);
      this.r40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.UInt__toString_impl_dbgl21aw2z4ehd4hej)(tmp$ret$1));
    }
  }
  z40(v) {
    if (this.f41_1) {
      // Inline function 'kotlin.toULong' call
      var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._ULong___init__impl__c78o9k3sq3egh1wtk64)(v);
      this.b41((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ULong__toString_impl_f9au7k297tbrrmikmfo)(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toULong' call
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._ULong___init__impl__c78o9k3sq3egh1wtk64)(v);
      this.r40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ULong__toString_impl_f9au7k297tbrrmikmfo)(tmp$ret$1));
    }
  }
  v40(v) {
    if (this.f41_1) {
      // Inline function 'kotlin.toUByte' call
      var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UByte___init__impl__g9hnc41eipfvebfo5lc)(v);
      this.b41((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.UByte__toString_impl_v72jg1vayrpmnw1b83)(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toUByte' call
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UByte___init__impl__g9hnc41eipfvebfo5lc)(v);
      this.r40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.UByte__toString_impl_v72jg1vayrpmnw1b83)(tmp$ret$1));
    }
  }
  x40(v) {
    if (this.f41_1) {
      // Inline function 'kotlin.toUShort' call
      var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UShort___init__impl__jigrne3hvr35xwb2tau)(v);
      this.b41((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.UShort__toString_impl_edaoeen2j89el2cr4q)(tmp$ret$0));
    } else {
      // Inline function 'kotlin.toUShort' call
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UShort___init__impl__jigrne3hvr35xwb2tau)(v);
      this.r40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.UShort__toString_impl_edaoeen2j89el2cr4q)(tmp$ret$1));
    }
  }
}
class ComposerForUnquotedLiterals extends Composer {
  constructor(writer, forceQuoting) {
    super(writer);
    this.i41_1 = forceQuoting;
  }
  b41(value) {
    if (this.i41_1) {
      super.b41(value);
    } else {
      super.r40(value);
    }
  }
}
class ComposerWithPrettyPrint extends Composer {
  constructor(writer, json) {
    super(writer);
    this.l41_1 = json;
    this.m41_1 = 0;
  }
  l40() {
    this.k40_1 = true;
    this.m41_1 = this.m41_1 + 1 | 0;
  }
  m40() {
    this.m41_1 = this.m41_1 - 1 | 0;
  }
  n40() {
    this.k40_1 = false;
    this.r40('\n');
    // Inline function 'kotlin.repeat' call
    var times = this.m41_1;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlinx.serialization.json.internal.ComposerWithPrettyPrint.nextItem.<anonymous>' call
        this.r40(this.l41_1.g3x_1.s3y_1);
      }
       while (inductionVariable < times);
  }
  o40() {
    this.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32));
  }
}
class JsonElementMarker {
  constructor(descriptor) {
    var tmp = this;
    tmp.n41_1 = new _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ElementMarker33ojvsajwmzts(descriptor, JsonElementMarker$readIfAbsent$ref(this));
    this.o41_1 = false;
  }
  p41(index) {
    this.n41_1.q3i(index);
  }
  q41() {
    return this.n41_1.r3i();
  }
}
class JsonException extends _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SerializationExceptioneqrdve3ts2n9 {
  static e42(message) {
    var $this = this.w39(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.d42_1);
    return $this;
  }
}
class JsonEncodingException extends JsonException {
  static y41(message) {
    var $this = this.e42(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.x41_1);
    return $this;
  }
}
class JsonDecodingException extends JsonException {
  static g40(message) {
    var $this = this.e42(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.f40_1);
    return $this;
  }
}
class Tombstone {}
class JsonPath {
  constructor() {
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    tmp.j42_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.fillArrayVali8eppxapiek4)(Array(8), null);
    var tmp_0 = this;
    var tmp_1 = 0;
    var tmp_2 = new Int32Array(8);
    while (tmp_1 < 8) {
      tmp_2[tmp_1] = -1;
      tmp_1 = tmp_1 + 1 | 0;
    }
    tmp_0.k42_1 = tmp_2;
    this.l42_1 = -1;
  }
  m42(sd) {
    this.l42_1 = this.l42_1 + 1 | 0;
    var depth = this.l42_1;
    if (depth === this.j42_1.length) {
      resize(this);
    }
    this.j42_1[depth] = sd;
  }
  n42(index) {
    this.k42_1[this.l42_1] = index;
  }
  o42(key) {
    var tmp;
    if (!(this.k42_1[this.l42_1] === -2)) {
      this.l42_1 = this.l42_1 + 1 | 0;
      tmp = this.l42_1 === this.j42_1.length;
    } else {
      tmp = false;
    }
    if (tmp) {
      resize(this);
    }
    this.j42_1[this.l42_1] = key;
    this.k42_1[this.l42_1] = -2;
  }
  p42() {
    if (this.k42_1[this.l42_1] === -2) {
      this.j42_1[this.l42_1] = Tombstone_instance;
    }
  }
  q42() {
    var depth = this.l42_1;
    if (this.k42_1[depth] === -2) {
      this.k42_1[depth] = -1;
      this.l42_1 = this.l42_1 - 1 | 0;
    }
    if (!(this.l42_1 === -1)) {
      this.l42_1 = this.l42_1 - 1 | 0;
    }
  }
  r42() {
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringBuildermazzzhj6kkai.u();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.internal.JsonPath.getPath.<anonymous>' call
    this_0.la('$');
    // Inline function 'kotlin.repeat' call
    var times = this.l42_1 + 1 | 0;
    // Inline function 'kotlin.contracts.contract' call
    var inductionVariable = 0;
    if (inductionVariable < times)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'kotlinx.serialization.json.internal.JsonPath.getPath.<anonymous>.<anonymous>' call
        var element = this.j42_1[index];
        if (!(element == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(element, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SerialDescriptor2pelqekb5ic3a) : false) {
          if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(element.b3b(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.LIST_getInstance3iji3zetpdcxm)())) {
            if (!(this.k42_1[index] === -1)) {
              this_0.la('[');
              this_0.ka(this.k42_1[index]);
              this_0.la(']');
            }
          } else {
            var idx = this.k42_1[index];
            if (idx >= 0) {
              this_0.la('.');
              this_0.la(element.f3b(idx));
            }
          }
        } else {
          if (!(element === Tombstone_instance)) {
            this_0.la('[');
            this_0.la("'");
            this_0.ka(element);
            this_0.la("'");
            this_0.la(']');
          }
        }
      }
       while (inductionVariable < times);
    return this_0.toString();
  }
  toString() {
    return this.r42();
  }
}
class JsonTreeReader$readDeepRecursive$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(this$0, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.h44_1 = this$0;
    super(resultContinuation, $box);
  }
  m44($this$$receiver, it, $completion) {
    var tmp = this.n44($this$$receiver, it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.DeepRecursiveScope1pqaydvh4vdcu ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.m44(tmp, p2 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unitkvevlwgzwiuc ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.k44_1 = this.h44_1.b43_1.f43();
            if (this.k44_1 === 1) {
              this.l44_1 = readValue(this.h44_1, true);
              this.lb_1 = 2;
              continue $sm;
            } else {
              if (this.k44_1 === 0) {
                this.l44_1 = readValue(this.h44_1, false);
                this.lb_1 = 2;
                continue $sm;
              } else {
                if (this.k44_1 === 6) {
                  this.lb_1 = 1;
                  suspendResult = readObject_0(this.i44_1, this.h44_1, this);
                  if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  if (this.k44_1 === 8) {
                    this.l44_1 = readArray(this.h44_1);
                    this.lb_1 = 2;
                    continue $sm;
                  } else {
                    var tmp_0 = this;
                    this.h44_1.b43_1.r41("Can't begin reading element, unexpected token");
                  }
                }
              }
            }

            break;
          case 1:
            this.l44_1 = suspendResult;
            this.lb_1 = 2;
            continue $sm;
          case 2:
            return this.l44_1;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  n44($this$$receiver, it, completion) {
    var i = new JsonTreeReader$readDeepRecursive$slambda(this.h44_1, completion);
    i.i44_1 = $this$$receiver;
    i.j44_1 = it;
    return i;
  }
}
class $readObjectCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, _this__u8e3s4_0, resultContinuation) {
    super(resultContinuation);
    this.t43_1 = _this__u8e3s4;
    this.u43_1 = _this__u8e3s4_0;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            var tmp_0 = this;
            tmp_0.v43_1 = this.t43_1;
            this.w43_1 = this.v43_1.b43_1.e43(6);
            if (this.v43_1.b43_1.f43() === 4) {
              this.v43_1.b43_1.r41('Unexpected leading comma');
            }

            var tmp_1 = this;
            tmp_1.x43_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!this.v43_1.b43_1.g43()) {
              this.lb_1 = 4;
              continue $sm;
            }

            this.y43_1 = this.v43_1.c43_1 ? this.v43_1.b43_1.i43() : this.v43_1.b43_1.h43();
            this.v43_1.b43_1.e43(5);
            this.lb_1 = 2;
            suspendResult = this.u43_1.mk(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var element = suspendResult;
            var this_0 = this.x43_1;
            var key = this.y43_1;
            this_0.t2(key, element);
            this.w43_1 = this.v43_1.b43_1.k43();
            var tmp0_subject = this.w43_1;
            if (tmp0_subject === 4) {
              this.lb_1 = 3;
              continue $sm;
            } else {
              if (tmp0_subject === 7) {
                this.lb_1 = 4;
                continue $sm;
              } else {
                this.v43_1.b43_1.r41('Expected end of the object or comma');
              }
            }

            break;
          case 3:
            this.lb_1 = 1;
            continue $sm;
          case 4:
            if (this.w43_1 === 6) {
              this.v43_1.b43_1.e43(7);
            } else if (this.w43_1 === 4) {
              this.v43_1.b43_1.r41('Unexpected trailing comma');
            }

            return new JsonObject(this.x43_1);
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class JsonTreeReader {
  constructor(configuration, lexer) {
    this.b43_1 = lexer;
    this.c43_1 = configuration.o3y_1;
    this.d43_1 = 0;
  }
  j43() {
    var token = this.b43_1.f43();
    var tmp;
    if (token === 1) {
      tmp = readValue(this, true);
    } else if (token === 0) {
      tmp = readValue(this, false);
    } else if (token === 6) {
      var tmp_0;
      this.d43_1 = this.d43_1 + 1 | 0;
      if (this.d43_1 === 200) {
        tmp_0 = readDeepRecursive(this);
      } else {
        tmp_0 = readObject(this);
      }
      var result = tmp_0;
      this.d43_1 = this.d43_1 - 1 | 0;
      tmp = result;
    } else if (token === 8) {
      tmp = readArray(this);
    } else {
      this.b43_1.r41('Cannot begin reading element, unexpected token: ' + token);
    }
    return tmp;
  }
}
class PolymorphismValidator {
  constructor(useArrayPolymorphism, discriminator) {
    this.p44_1 = useArrayPolymorphism;
    this.q44_1 = discriminator;
  }
  f3s(kClass, provider) {
  }
  i3s(baseClass, actualClass, actualSerializer) {
    var descriptor = actualSerializer.u38();
    checkKind_0(this, descriptor, actualClass);
    if (!this.p44_1) {
      checkDiscriminatorCollisions(this, descriptor, actualClass);
    }
  }
  j3s(baseClass, defaultSerializerProvider) {
  }
  k3s(baseClass, defaultDeserializerProvider) {
  }
}
class Key {}
class DescriptorSchemaCache {
  constructor() {
    this.f42_1 = createMapForCache(16);
  }
  r44(descriptor, key, value) {
    // Inline function 'kotlin.collections.set' call
    // Inline function 'kotlin.collections.getOrPut' call
    var this_0 = this.f42_1;
    var value_0 = this_0.q2(descriptor);
    var tmp;
    if (value_0 == null) {
      // Inline function 'kotlinx.serialization.json.internal.DescriptorSchemaCache.set.<anonymous>' call
      var answer = createMapForCache(2);
      this_0.t2(descriptor, answer);
      tmp = answer;
    } else {
      tmp = value_0;
    }
    var this_1 = tmp;
    var key_0 = key instanceof Key ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    var value_1 = !(value == null) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    this_1.t2(key_0, value_1);
  }
  g42(descriptor, key, defaultValue) {
    var tmp0_safe_receiver = this.s44(descriptor, key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var value = defaultValue();
    this.r44(descriptor, key, value);
    return value;
  }
  s44(descriptor, key) {
    var tmp0_safe_receiver = this.f42_1.q2(descriptor);
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      tmp = tmp0_safe_receiver.q2(key instanceof Key ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
    }
    var tmp_0 = tmp;
    return !(tmp_0 == null) ? tmp_0 : null;
  }
}
class DiscriminatorHolder {
  constructor(discriminatorToSkip) {
    this.t44_1 = discriminatorToSkip;
  }
}
class StreamingJsonDecoder extends _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractDecoder35guh02ubh2hm {
  constructor(json, mode, lexer, descriptor, discriminatorHolder) {
    super();
    this.k3x_1 = json;
    this.l3x_1 = mode;
    this.m3x_1 = lexer;
    this.n3x_1 = this.k3x_1.e3d();
    this.o3x_1 = -1;
    this.p3x_1 = discriminatorHolder;
    this.q3x_1 = this.k3x_1.g3x_1;
    this.r3x_1 = this.q3x_1.r3y_1 ? null : new JsonElementMarker(descriptor);
  }
  z3y() {
    return this.k3x_1;
  }
  e3d() {
    return this.n3x_1;
  }
  a3z() {
    return (new JsonTreeReader(this.k3x_1.g3x_1, this.m3x_1)).j43();
  }
  p3c(deserializer) {
    try {
      var tmp;
      if (!(deserializer instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPolymorphicSerializer1ccxwp48nfy58)) {
        tmp = true;
      } else {
        tmp = this.k3x_1.g3x_1.u3y_1;
      }
      if (tmp) {
        return deserializer.w38(this);
      }
      var discriminator = classDiscriminator(deserializer.u38(), this.k3x_1);
      var type = this.m3x_1.c45(discriminator, this.q3x_1.o3y_1);
      var actualSerializer = null;
      if (!(type == null)) {
        actualSerializer = deserializer.l39(this, type);
      }
      if (actualSerializer == null) {
        return decodeSerializableValuePolymorphic(this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(deserializer, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.DeserializationStrategy1z3z5pj9f7zc8) ? deserializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
      }
      this.p3x_1 = new DiscriminatorHolder(discriminator);
      var tmp_0 = actualSerializer.w38(this);
      var result = !(tmp_0 == null) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
      return result;
    } catch ($p) {
      if ($p instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MissingFieldException24tqif29emcmi) {
        var e = $p;
        if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.contains3ue2qo8xhmpf1)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(e.message), 'at path'))
          throw e;
        throw _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MissingFieldException24tqif29emcmi.l3a(e.j3a_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.plus17rl43at52ays)(e.message, ' at path: ') + this.m3x_1.t3x_1.r42(), e);
      } else {
        throw $p;
      }
    }
  }
  q3c(descriptor) {
    var newMode = switchMode(this.k3x_1, descriptor);
    this.m3x_1.t3x_1.m42(descriptor);
    this.m3x_1.u44(newMode.f45_1);
    checkLeadingComma(this);
    var tmp;
    switch (newMode.x2_1) {
      case 1:
      case 2:
      case 3:
        tmp = new StreamingJsonDecoder(this.k3x_1, newMode, this.m3x_1, descriptor, this.p3x_1);
        break;
      default:
        var tmp_0;
        if (this.l3x_1.equals(newMode) && this.k3x_1.g3x_1.r3y_1) {
          tmp_0 = this;
        } else {
          tmp_0 = new StreamingJsonDecoder(this.k3x_1, newMode, this.m3x_1, descriptor, this.p3x_1);
        }

        tmp = tmp_0;
        break;
    }
    return tmp;
  }
  r3c(descriptor) {
    if (this.k3x_1.g3x_1.n3y_1 && descriptor.z3a() === 0) {
      skipLeftoverElements(this, descriptor);
    }
    this.m3x_1.u44(this.l3x_1.g45_1);
    this.m3x_1.t3x_1.q42();
  }
  c3c() {
    var tmp;
    var tmp0_safe_receiver = this.r3x_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.o41_1;
    if (!(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs)) {
      tmp = !this.m3x_1.h45();
    } else {
      tmp = false;
    }
    return tmp;
  }
  d3c() {
    return null;
  }
  c3d(descriptor, index, deserializer, previousValue) {
    var isMapKey = this.l3x_1.equals(WriteMode_MAP_getInstance()) && (index & 1) === 0;
    if (isMapKey) {
      this.m3x_1.t3x_1.p42();
    }
    var value = super.c3d(descriptor, index, deserializer, previousValue);
    if (isMapKey) {
      this.m3x_1.t3x_1.o42(value);
    }
    return value;
  }
  g3d(descriptor) {
    var index;
    switch (this.l3x_1.x2_1) {
      case 0:
        index = decodeObjectIndex(this, descriptor);
        break;
      case 2:
        index = decodeMapIndex(this);
        break;
      default:
        index = decodeListIndex(this);
        break;
    }
    if (!this.l3x_1.equals(WriteMode_MAP_getInstance())) {
      this.m3x_1.t3x_1.n42(index);
    }
    return index;
  }
  e3c() {
    var tmp;
    if (this.q3x_1.o3y_1) {
      tmp = this.m3x_1.j45();
    } else {
      tmp = this.m3x_1.i45();
    }
    return tmp;
  }
  f3c() {
    var value = this.m3x_1.k45();
    if (!value.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(value.s3()))) {
      this.m3x_1.r41("Failed to parse byte for input '" + value.toString() + "'");
    }
    return value.s3();
  }
  g3c() {
    var value = this.m3x_1.k45();
    if (!value.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(value.t3()))) {
      this.m3x_1.r41("Failed to parse short for input '" + value.toString() + "'");
    }
    return value.t3();
  }
  h3c() {
    var value = this.m3x_1.k45();
    if (!value.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(value.u3()))) {
      this.m3x_1.r41("Failed to parse int for input '" + value.toString() + "'");
    }
    return value.u3();
  }
  i3c() {
    return this.m3x_1.k45();
  }
  j3c() {
    var tmp$ret$4;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.m3x_1;
      var input = this_0.i43();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeFloat.<anonymous>' call
        // Inline function 'kotlin.text.toFloat' call
        // Inline function 'kotlin.js.unsafeCast' call
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toDouble1kn912gjoizjp)(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          this_0.r41("Failed to parse type '" + 'float' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$4;
    var specialFp = this.k3x_1.g3x_1.w3y_1;
    if (specialFp || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isFinite1tx0gn65nl9tj)(result))
      return result;
    throwInvalidFloatingPointDecoded(this.m3x_1, result);
  }
  k3c() {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.m3x_1;
      var input = this_0.i43();
      try {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeDouble.<anonymous>' call
        tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toDouble1kn912gjoizjp)(input);
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          this_0.r41("Failed to parse type '" + 'double' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.k3x_1.g3x_1.w3y_1;
    if (specialFp || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isFinite2t9l5a275mxm6)(result))
      return result;
    throwInvalidFloatingPointDecoded(this.m3x_1, result);
  }
  l3c() {
    var string = this.m3x_1.i43();
    if (!(string.length === 1)) {
      this.m3x_1.r41("Expected single char, but got '" + string + "'");
    }
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(string, 0);
  }
  m3c() {
    var tmp;
    if (this.q3x_1.o3y_1) {
      tmp = this.m3x_1.b45();
    } else {
      tmp = this.m3x_1.h43();
    }
    return tmp;
  }
  n3c(descriptor) {
    return get_isUnsignedNumber(descriptor) ? new JsonDecoderForUnsignedTypes(this.m3x_1, this.k3x_1) : super.n3c(descriptor);
  }
}
class JsonDecoderForUnsignedTypes extends _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractDecoder35guh02ubh2hm {
  constructor(lexer, json) {
    super();
    this.l45_1 = lexer;
    this.m45_1 = json.e3d();
  }
  e3d() {
    return this.m45_1;
  }
  g3d(descriptor) {
    var message = 'unsupported';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
  }
  h3c() {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.l45_1;
      var input = this_0.i43();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeInt.<anonymous>' call
        // Inline function 'kotlin.UInt.toInt' call
        var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toUInt21lx0mz8wkp7c)(input);
        tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UInt___get_data__impl__f0vqqw1vaw6fgw4kwl0)(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          this_0.r41("Failed to parse type '" + 'UInt' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  }
  i3c() {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.l45_1;
      var input = this_0.i43();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeLong.<anonymous>' call
        // Inline function 'kotlin.ULong.toLong' call
        var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toULong266mnyksbttkw)(input);
        tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._ULong___get_data__impl__fggpzb1fgc8uwlfcfgw)(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          this_0.r41("Failed to parse type '" + 'ULong' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  }
  f3c() {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.l45_1;
      var input = this_0.i43();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeByte.<anonymous>' call
        // Inline function 'kotlin.UByte.toByte' call
        var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toUByteh6p4wmqswkrs)(input);
        tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UByte___get_data__impl__jof9qr9d98aajdmpjx)(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          this_0.r41("Failed to parse type '" + 'UByte' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  }
  g3c() {
    var tmp$ret$2;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.parseString' call
      var this_0 = this.l45_1;
      var input = this_0.i43();
      try {
        // Inline function 'kotlinx.serialization.json.internal.JsonDecoderForUnsignedTypes.decodeShort.<anonymous>' call
        // Inline function 'kotlin.UShort.toShort' call
        var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toUShort7yqspfnhrot4)(input);
        tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._UShort___get_data__impl__g02453juyrdkc7n6xd)(this_1);
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          this_0.r41("Failed to parse type '" + 'UShort' + "' for input '" + input + "'");
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$2;
  }
}
class StreamingJsonEncoder extends _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEncoder2gxtu3xmy3f8j {
  static n45(composer, json, mode, modeReuseCache) {
    var $this = this.i3d();
    $this.s42_1 = composer;
    $this.t42_1 = json;
    $this.u42_1 = mode;
    $this.v42_1 = modeReuseCache;
    $this.w42_1 = $this.t42_1.e3d();
    $this.x42_1 = $this.t42_1.g3x_1;
    $this.y42_1 = false;
    $this.z42_1 = null;
    var i = $this.u42_1.x2_1;
    if (!($this.v42_1 == null)) {
      if (!($this.v42_1[i] === null) || !($this.v42_1[i] === $this)) {
        $this.v42_1[i] = $this;
      }
    }
    return $this;
  }
  z3y() {
    return this.t42_1;
  }
  static a43(output, json, mode, modeReuseCache) {
    return this.n45(Composer_0(output, json), json, mode, modeReuseCache);
  }
  e3d() {
    return this.w42_1;
  }
  h3e(serializer, value) {
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.encodePolymorphically' call
      var tmp;
      if (!(serializer instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPolymorphicSerializer1ccxwp48nfy58)) {
        tmp = true;
      } else {
        tmp = this.z3y().g3x_1.u3y_1;
      }
      if (tmp) {
        serializer.v38(this, value);
        break $l$block;
      }
      var casted = serializer instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPolymorphicSerializer1ccxwp48nfy58 ? serializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
      var baseClassDiscriminator = classDiscriminator(serializer.u38(), this.z3y());
      var actualSerializer = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.findPolymorphicSerializerk638ixyjovk5)(casted, this, !(value == null) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
      validateIfSealed$accessor$1ad0flx(casted, actualSerializer, baseClassDiscriminator);
      checkKind(actualSerializer.u38().b3b());
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.encodeSerializableValue.<anonymous>' call
      this.z42_1 = baseClassDiscriminator;
      actualSerializer.v38(this, value);
    }
  }
  q3c(descriptor) {
    var newMode = switchMode(this.t42_1, descriptor);
    if (!(newMode.f45_1 === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(0))) {
      this.s42_1.p40(newMode.f45_1);
      this.s42_1.l40();
    }
    if (!(this.z42_1 == null)) {
      encodeTypeInfo(this, descriptor);
      this.z42_1 = null;
    }
    if (this.u42_1.equals(newMode)) {
      return this;
    }
    var tmp0_safe_receiver = this.v42_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver[newMode.x2_1];
    return tmp1_elvis_lhs == null ? StreamingJsonEncoder.n45(this.s42_1, this.t42_1, newMode, this.v42_1) : tmp1_elvis_lhs;
  }
  r3c(descriptor) {
    if (!(this.u42_1.g45_1 === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(0))) {
      this.s42_1.m40();
      this.s42_1.n40();
      this.s42_1.p40(this.u42_1.g45_1);
    }
  }
  j3d(descriptor, index) {
    switch (this.u42_1.x2_1) {
      case 1:
        if (!this.s42_1.k40_1) {
          this.s42_1.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(44));
        }

        this.s42_1.n40();
        break;
      case 2:
        if (!this.s42_1.k40_1) {
          var tmp = this;
          var tmp_0;
          if ((index % 2 | 0) === 0) {
            this.s42_1.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(44));
            this.s42_1.n40();
            tmp_0 = true;
          } else {
            this.s42_1.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58));
            this.s42_1.o40();
            tmp_0 = false;
          }
          tmp.y42_1 = tmp_0;
        } else {
          this.y42_1 = true;
          this.s42_1.n40();
        }

        break;
      case 3:
        if (index === 0)
          this.y42_1 = true;
        if (index === 1) {
          this.s42_1.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(44));
          this.s42_1.o40();
          this.y42_1 = false;
        }

        break;
      default:
        if (!this.s42_1.k40_1) {
          this.s42_1.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(44));
        }

        this.s42_1.n40();
        this.u3d(getJsonElementName(descriptor, this.t42_1, index));
        this.s42_1.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58));
        this.s42_1.o40();
        break;
    }
    return true;
  }
  v3d(descriptor) {
    var tmp;
    if (get_isUnsignedNumber(descriptor)) {
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.composerAs' call
      var tmp_0;
      var tmp_1 = this.s42_1;
      if (tmp_1 instanceof ComposerForUnsignedNumbers) {
        tmp_0 = this.s42_1;
      } else {
        tmp_0 = new ComposerForUnsignedNumbers(this.s42_1.j40_1, this.y42_1);
      }
      var tmp$ret$1 = tmp_0;
      tmp = StreamingJsonEncoder.n45(tmp$ret$1, this.t42_1, this.u42_1, null);
    } else if (get_isUnquotedLiteral(descriptor)) {
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonEncoder.composerAs' call
      var tmp_2;
      var tmp_3 = this.s42_1;
      if (tmp_3 instanceof ComposerForUnquotedLiterals) {
        tmp_2 = this.s42_1;
      } else {
        tmp_2 = new ComposerForUnquotedLiterals(this.s42_1.j40_1, this.y42_1);
      }
      var tmp$ret$3 = tmp_2;
      tmp = StreamingJsonEncoder.n45(tmp$ret$3, this.t42_1, this.u42_1, null);
    } else {
      tmp = super.v3d(descriptor);
    }
    return tmp;
  }
  l3d() {
    this.s42_1.r40('null');
  }
  m3d(value) {
    if (this.y42_1) {
      this.u3d(value.toString());
    } else {
      this.s42_1.a41(value);
    }
  }
  n3d(value) {
    if (this.y42_1) {
      this.u3d(value.toString());
    } else {
      this.s42_1.v40(value);
    }
  }
  o3d(value) {
    if (this.y42_1) {
      this.u3d(value.toString());
    } else {
      this.s42_1.x40(value);
    }
  }
  p3d(value) {
    if (this.y42_1) {
      this.u3d(value.toString());
    } else {
      this.s42_1.y40(value);
    }
  }
  q3d(value) {
    if (this.y42_1) {
      this.u3d(value.toString());
    } else {
      this.s42_1.z40(value);
    }
  }
  r3d(value) {
    if (this.y42_1) {
      this.u3d(value.toString());
    } else {
      this.s42_1.t40(value);
    }
    if (!this.x42_1.w3y_1 && !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isFinite1tx0gn65nl9tj)(value)) {
      throw InvalidFloatingPointEncoded(value, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.s42_1.j40_1));
    }
  }
  s3d(value) {
    if (this.y42_1) {
      this.u3d(value.toString());
    } else {
      this.s42_1.u40(value);
    }
    if (!this.x42_1.w3y_1 && !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isFinite2t9l5a275mxm6)(value)) {
      throw InvalidFloatingPointEncoded(value, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.s42_1.j40_1));
    }
  }
  t3d(value) {
    this.u3d((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(value));
  }
  u3d(value) {
    return this.s42_1.b41(value);
  }
}
class AbstractJsonTreeDecoder extends _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.NamedValueDecoderzk26ztf92xbq {
  constructor(json, value) {
    super();
    this.q45_1 = json;
    this.r45_1 = value;
    this.s45_1 = this.z3y().g3x_1;
  }
  z3y() {
    return this.q45_1;
  }
  l1() {
    return this.r45_1;
  }
  e3d() {
    return this.z3y().e3d();
  }
  a3z() {
    return currentObject(this);
  }
  p3c(deserializer) {
    return decodeSerializableValuePolymorphic(this, deserializer);
  }
  z3p(parentName, childName) {
    return childName;
  }
  q3c(descriptor) {
    var currentObject_0 = currentObject(this);
    var tmp0_subject = descriptor.b3b();
    var tmp;
    var tmp_0;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(tmp0_subject, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.LIST_getInstance3iji3zetpdcxm)())) {
      tmp_0 = true;
    } else {
      tmp_0 = tmp0_subject instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PolymorphicKindla9gurooefwb;
    }
    if (tmp_0) {
      var tmp_1 = this.z3y();
      // Inline function 'kotlinx.serialization.json.internal.cast' call
      if (!(currentObject_0 instanceof JsonArray)) {
        throw JsonDecodingException_1(-1, 'Expected ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(JsonArray)) + ' as the serialized body of ' + descriptor.x3a() + ', but had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(currentObject_0)));
      }
      tmp = new JsonTreeListDecoder(tmp_1, currentObject_0);
    } else {
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(tmp0_subject, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MAP_getInstance2l4ulrz8ljw5i)())) {
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var this_0 = this.z3y();
        var keyDescriptor = carrierDescriptor(descriptor.d3b(0), this_0.e3d());
        var keyKind = keyDescriptor.b3b();
        var tmp_2;
        var tmp_3;
        if (keyKind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveKindndgbuh6is7ze) {
          tmp_3 = true;
        } else {
          tmp_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(keyKind, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ENUM_getInstance3doea03ve3rgg)());
        }
        if (tmp_3) {
          // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
          var tmp_4 = this.z3y();
          // Inline function 'kotlinx.serialization.json.internal.cast' call
          if (!(currentObject_0 instanceof JsonObject)) {
            throw JsonDecodingException_1(-1, 'Expected ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(JsonObject)) + ' as the serialized body of ' + descriptor.x3a() + ', but had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(currentObject_0)));
          }
          tmp_2 = new JsonTreeMapDecoder(tmp_4, currentObject_0);
        } else {
          if (this_0.g3x_1.p3y_1) {
            // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.beginStructure.<anonymous>' call
            var tmp_5 = this.z3y();
            // Inline function 'kotlinx.serialization.json.internal.cast' call
            if (!(currentObject_0 instanceof JsonArray)) {
              throw JsonDecodingException_1(-1, 'Expected ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(JsonArray)) + ' as the serialized body of ' + descriptor.x3a() + ', but had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(currentObject_0)));
            }
            tmp_2 = new JsonTreeListDecoder(tmp_5, currentObject_0);
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp = tmp_2;
      } else {
        var tmp_6 = this.z3y();
        // Inline function 'kotlinx.serialization.json.internal.cast' call
        if (!(currentObject_0 instanceof JsonObject)) {
          throw JsonDecodingException_1(-1, 'Expected ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(JsonObject)) + ' as the serialized body of ' + descriptor.x3a() + ', but had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(currentObject_0)));
        }
        tmp = new JsonTreeDecoder(tmp_6, currentObject_0);
      }
    }
    return tmp;
  }
  r3c(descriptor) {
  }
  c3c() {
    var tmp = currentObject(this);
    return !(tmp instanceof JsonNull);
  }
  u45(tag) {
    var currentElement = this.t45(tag);
    var tmp0_elvis_lhs = currentElement instanceof JsonPrimitive ? currentElement : null;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw JsonDecodingException_0(-1, 'Expected JsonPrimitive at ' + tag + ', found ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentElement), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentObject(this)));
    } else {
      tmp = tmp0_elvis_lhs;
    }
    return tmp;
  }
  v45(tag) {
    return !(this.t45(tag) === JsonNull_getInstance());
  }
  b3q(tag) {
    return this.v45((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w45(tag) {
    var value = this.u45(tag);
    if (!this.z3y().g3x_1.o3y_1) {
      var literal = asLiteral(value, this, 'boolean');
      if (literal.f3z_1)
        throw JsonDecodingException_0(-1, "Boolean literal for key '" + tag + "' should be unquoted.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentObject(this)));
    }
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedBoolean.<anonymous>' call
        var tmp0_elvis_lhs = get_booleanOrNull(value);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.ed();
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var tmp0_elvis_lhs_0 = tmp;
        var tmp_0;
        if (tmp0_elvis_lhs_0 == null) {
          unparsedPrimitive(this, 'boolean');
        } else {
          tmp_0 = tmp0_elvis_lhs_0;
        }
        tmp$ret$1 = tmp_0;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'boolean');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  }
  c3q(tag) {
    return this.w45((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  x45(tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var this_0 = this.u45(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedByte.<anonymous>' call
        var result = get_int(this_0);
        var tmp0_elvis_lhs = (-128 <= result ? result <= 127 : false) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toByte4i43936u611k)(result) : null;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'byte');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'byte');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  }
  d3q(tag) {
    return this.x45((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  y45(tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var this_0 = this.u45(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedShort.<anonymous>' call
        var result = get_int(this_0);
        var tmp0_elvis_lhs = (-32768 <= result ? result <= 32767 : false) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toShort36kaw0zjdq3ex)(result) : null;
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'short');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'short');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  }
  e3q(tag) {
    return this.y45((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  z45(tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var this_0 = this.u45(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedInt.<anonymous>' call
        var tmp0_elvis_lhs = get_int(this_0);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'int');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'int');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  }
  f3q(tag) {
    return this.z45((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  a46(tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var this_0 = this.u45(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedLong.<anonymous>' call
        var tmp0_elvis_lhs = get_long(this_0);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'long');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'long');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  }
  g3q(tag) {
    return this.a46((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  b46(tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var this_0 = this.u45(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedFloat.<anonymous>' call
        var tmp0_elvis_lhs = get_float(this_0);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'float');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'float');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.z3y().g3x_1.w3y_1;
    if (specialFp || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isFinite1tx0gn65nl9tj)(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentObject(this)));
  }
  h3q(tag) {
    return this.b46((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  c46(tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var this_0 = this.u45(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedDouble.<anonymous>' call
        var tmp0_elvis_lhs = get_double(this_0);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'double');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'double');
        } else {
          throw $p;
        }
      }
    }
    var result = tmp$ret$1;
    var specialFp = this.z3y().g3x_1.w3y_1;
    if (specialFp || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isFinite2t9l5a275mxm6)(result))
      return result;
    throw InvalidFloatingPointDecoded(result, tag, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentObject(this)));
  }
  i3q(tag) {
    return this.c46((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  d46(tag) {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.primitive' call
      var this_0 = this.u45(tag);
      try {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.decodeTaggedChar.<anonymous>' call
        var tmp0_elvis_lhs = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.single29ec4rh52687r)(this_0.l2b()));
        var tmp;
        if (tmp0_elvis_lhs == null) {
          unparsedPrimitive(this, 'char');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        tmp$ret$1 = tmp.v1_1;
        break $l$block;
      } catch ($p) {
        if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob) {
          var e = $p;
          unparsedPrimitive(this, 'char');
        } else {
          throw $p;
        }
      }
    }
    return tmp$ret$1;
  }
  j3q(tag) {
    return this.d46((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  e46(tag) {
    var value = this.u45(tag);
    if (!this.z3y().g3x_1.o3y_1) {
      var literal = asLiteral(value, this, 'string');
      if (!literal.f3z_1)
        throw JsonDecodingException_0(-1, "String literal for key '" + tag + "' should be quoted.\nUse 'isLenient = true' in 'Json {}` builder to accept non-compliant JSON.", (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentObject(this)));
    }
    if (value instanceof JsonNull)
      throw JsonDecodingException_0(-1, "Unexpected 'null' value instead of string literal", (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentObject(this)));
    return value.l2b();
  }
  k3q(tag) {
    return this.e46((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  f46(tag, inlineDescriptor) {
    return get_isUnsignedNumber(inlineDescriptor) ? new JsonDecoderForUnsignedTypes(new StringJsonLexer(this.u45(tag).l2b()), this.z3y()) : super.l3q(tag, inlineDescriptor);
  }
  l3q(tag, inlineDescriptor) {
    return this.f46((!(tag == null) ? typeof tag === 'string' : false) ? tag : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), inlineDescriptor);
  }
  n3c(descriptor) {
    return !(this.y3p() == null) ? super.n3c(descriptor) : (new JsonPrimitiveDecoder(this.z3y(), this.l1())).n3c(descriptor);
  }
}
class JsonTreeDecoder extends AbstractJsonTreeDecoder {
  constructor(json, value, polyDiscriminator, polyDescriptor) {
    polyDiscriminator = polyDiscriminator === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : polyDiscriminator;
    polyDescriptor = polyDescriptor === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : polyDescriptor;
    super(json, value);
    this.l46_1 = value;
    this.m46_1 = polyDiscriminator;
    this.n46_1 = polyDescriptor;
    this.o46_1 = 0;
    this.p46_1 = false;
  }
  l1() {
    return this.l46_1;
  }
  g3d(descriptor) {
    while (this.o46_1 < descriptor.z3a()) {
      var tmp1 = this.o46_1;
      this.o46_1 = tmp1 + 1 | 0;
      var name = this.t3p(descriptor, tmp1);
      var index = this.o46_1 - 1 | 0;
      this.p46_1 = false;
      var tmp;
      var tmp_0;
      // Inline function 'kotlin.collections.contains' call
      // Inline function 'kotlin.collections.containsKey' call
      var this_0 = this.l1();
      if (((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(this_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.KtMap140uvy3s5zad8) ? this_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)()).o2(name)) {
        tmp_0 = true;
      } else {
        tmp_0 = absenceIsNull(this, descriptor, index);
      }
      if (tmp_0) {
        tmp = !this.s45_1.t3y_1 || !coerceInputValue_0(this, descriptor, index, name);
      } else {
        tmp = false;
      }
      if (tmp) {
        return index;
      }
    }
    return -1;
  }
  c3c() {
    return !this.p46_1 && super.c3c();
  }
  u3p(descriptor, index) {
    var strategy = namingStrategy(descriptor, this.z3y());
    var baseName = descriptor.f3b(index);
    if (strategy == null) {
      if (!this.s45_1.x3y_1)
        return baseName;
      if (this.l1().r2().h2(baseName))
        return baseName;
    }
    var deserializationNamesMap_0 = deserializationNamesMap(this.z3y(), descriptor);
    // Inline function 'kotlin.collections.find' call
    var this_0 = this.l1().r2();
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = this_0.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.elementName.<anonymous>' call
        if (deserializationNamesMap_0.q2(element) === index) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    var tmp0_safe_receiver = tmp$ret$1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return tmp0_safe_receiver;
    }
    var fallbackName = strategy == null ? null : strategy.i42(descriptor, index, baseName);
    return fallbackName == null ? baseName : fallbackName;
  }
  t45(tag) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getValue48kllevslyh6)(this.l1(), tag);
  }
  q3c(descriptor) {
    if (descriptor === this.n46_1)
      return this;
    return super.q3c(descriptor);
  }
  r3c(descriptor) {
    var tmp;
    if (this.s45_1.n3y_1) {
      tmp = true;
    } else {
      var tmp_0 = descriptor.b3b();
      tmp = tmp_0 instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PolymorphicKindla9gurooefwb;
    }
    if (tmp)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    var strategy = namingStrategy(descriptor, this.z3y());
    var tmp_1;
    if (strategy == null && !this.s45_1.x3y_1) {
      tmp_1 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.jsonCachedSerialNameslxufy2gu43jt)(descriptor);
    } else if (!(strategy == null)) {
      tmp_1 = deserializationNamesMap(this.z3y(), descriptor).r2();
    } else {
      var tmp_2 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.jsonCachedSerialNameslxufy2gu43jt)(descriptor);
      // Inline function 'kotlin.collections.orEmpty' call
      var tmp0_safe_receiver = get_schemaCache(this.z3y()).s44(descriptor, get_JsonDeserializationNamesKey());
      var tmp0_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.r2();
      var tmp$ret$0 = tmp0_elvis_lhs == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.emptySetcxexqki71qfa)() : tmp0_elvis_lhs;
      tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.plus1ogy4liedzq5j)(tmp_2, tmp$ret$0);
    }
    var names = tmp_1;
    var tmp1_iterator = this.l1().r2().w();
    while (tmp1_iterator.x()) {
      var key = tmp1_iterator.y();
      if (!names.h2(key) && !(key === this.m46_1)) {
        throw UnknownKeyException(key, this.l1().toString());
      }
    }
  }
}
class JsonTreeListDecoder extends AbstractJsonTreeDecoder {
  constructor(json, value) {
    super(json, value);
    this.v46_1 = value;
    this.w46_1 = this.v46_1.z();
    this.x46_1 = -1;
  }
  l1() {
    return this.v46_1;
  }
  u3p(descriptor, index) {
    return index.toString();
  }
  t45(tag) {
    return this.v46_1.c1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toInt2q8uldh7sc951)(tag));
  }
  g3d(descriptor) {
    while (this.x46_1 < (this.w46_1 - 1 | 0)) {
      this.x46_1 = this.x46_1 + 1 | 0;
      return this.x46_1;
    }
    return -1;
  }
}
class JsonPrimitiveDecoder extends AbstractJsonTreeDecoder {
  constructor(json, value) {
    super(json, value);
    this.d47_1 = value;
    this.m3q('primitive');
  }
  l1() {
    return this.d47_1;
  }
  g3d(descriptor) {
    return 0;
  }
  t45(tag) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(tag === 'primitive')) {
      // Inline function 'kotlinx.serialization.json.internal.JsonPrimitiveDecoder.currentElement.<anonymous>' call
      var message = "This input can only handle primitives with 'primitive' tag";
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
    }
    return this.d47_1;
  }
}
class JsonTreeMapDecoder extends JsonTreeDecoder {
  constructor(json, value) {
    super(json, value);
    this.o47_1 = value;
    this.p47_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toList3jhuyej2anx2q)(this.o47_1.r2());
    this.q47_1 = imul(this.p47_1.z(), 2);
    this.r47_1 = -1;
  }
  l1() {
    return this.o47_1;
  }
  u3p(descriptor, index) {
    var i = index / 2 | 0;
    return this.p47_1.c1(i);
  }
  g3d(descriptor) {
    while (this.r47_1 < (this.q47_1 - 1 | 0)) {
      this.r47_1 = this.r47_1 + 1 | 0;
      return this.r47_1;
    }
    return -1;
  }
  t45(tag) {
    return (this.r47_1 % 2 | 0) === 0 ? JsonPrimitive_0(tag) : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getValue48kllevslyh6)(this.o47_1, tag);
  }
  r3c(descriptor) {
  }
}
class WriteMode extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Enum3alwj03lh1n41 {
  constructor(name, ordinal, begin, end) {
    super(name, ordinal);
    this.f45_1 = begin;
    this.g45_1 = end;
  }
}
class AbstractJsonLexer {
  constructor() {
    this.s3x_1 = 0;
    this.t3x_1 = new JsonPath();
    this.u3x_1 = null;
    this.v3x_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringBuildermazzzhj6kkai.u();
  }
  v47() {
  }
  w47(c) {
    return (((c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(125) ? true : c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(93)) ? true : c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58)) ? true : c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(44)) ? false : true;
  }
  w3x() {
    var nextToken = this.k43();
    if (!(nextToken === 10)) {
      this.r41('Expected EOF after parsing, but had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), this.s3x_1 - 1 | 0)) + ' instead');
    }
  }
  e43(expected) {
    var token = this.k43();
    if (!(token === expected)) {
      this.x47(expected);
    }
    return token;
  }
  u44(expected) {
    this.v47();
    var source = this.t47();
    var cpos = this.s3x_1;
    $l$loop_0: while (true) {
      cpos = this.u47(cpos);
      if (cpos === -1)
        break $l$loop_0;
      var tmp0 = cpos;
      cpos = tmp0 + 1 | 0;
      var c = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(source, tmp0);
      if (c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9))
        continue $l$loop_0;
      this.s3x_1 = cpos;
      if (c === expected)
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
      this.y47(expected);
    }
    this.s3x_1 = cpos;
    this.y47(expected);
  }
  y47(expected) {
    this.s3x_1 = this.s3x_1 - 1 | 0;
    if (this.s3x_1 >= 0 && expected === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34) && this.i43() === 'null') {
      this.z47("Expected string literal but 'null' literal was found", this.s3x_1 - 4 | 0, "Use 'coerceInputValues = true' in 'Json {}` builder to coerce nulls to default values.");
    }
    this.x47(charToTokenClass(expected));
  }
  x47(expectedToken) {
    var expected = expectedToken === 1 ? "quotation mark '\"'" : expectedToken === 4 ? "comma ','" : expectedToken === 5 ? "colon ':'" : expectedToken === 6 ? "start of the object '{'" : expectedToken === 7 ? "end of the object '}'" : expectedToken === 8 ? "start of the array '['" : expectedToken === 9 ? "end of the array ']'" : 'valid token';
    var s = this.s3x_1 === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47()) || this.s3x_1 <= 0 ? 'EOF' : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), this.s3x_1 - 1 | 0));
    this.r41('Expected ' + expected + ", but had '" + s + "' instead", this.s3x_1 - 1 | 0);
  }
  f43() {
    var source = this.t47();
    var cpos = this.s3x_1;
    $l$loop_0: while (true) {
      cpos = this.u47(cpos);
      if (cpos === -1)
        break $l$loop_0;
      var ch = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(source, cpos);
      if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32) || ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10) || ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13) || ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9)) {
        cpos = cpos + 1 | 0;
        continue $l$loop_0;
      }
      this.s3x_1 = cpos;
      return charToTokenClass(ch);
    }
    this.s3x_1 = cpos;
    return 10;
  }
  w44(doConsume) {
    var current = this.a48();
    current = this.u47(current);
    var len = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47()) - current | 0;
    if (len < 4 || current === -1)
      return false;
    var inductionVariable = 0;
    if (inductionVariable <= 3)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)('null', i) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current + i | 0)))
          return false;
      }
       while (inductionVariable <= 3);
    if (len > 4 && charToTokenClass((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current + 4 | 0)) === 0)
      return false;
    if (doConsume) {
      this.s3x_1 = current + 4 | 0;
    }
    return true;
  }
  h45(doConsume, $super) {
    doConsume = doConsume === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? true : doConsume;
    return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? this.w44(doConsume) : $super.w44.call(this, doConsume);
  }
  a48() {
    var current = this.s3x_1;
    $l$loop_0: while (true) {
      current = this.u47(current);
      if (current === -1)
        break $l$loop_0;
      var c = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current);
      if (c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9)) {
        current = current + 1 | 0;
      } else {
        break $l$loop_0;
      }
    }
    this.s3x_1 = current;
    return current;
  }
  x44(isLenient) {
    var token = this.f43();
    var tmp;
    if (isLenient) {
      if (!(token === 1) && !(token === 0))
        return null;
      tmp = this.i43();
    } else {
      if (!(token === 1))
        return null;
      tmp = this.h43();
    }
    var string = tmp;
    this.u3x_1 = string;
    return string;
  }
  b48(startPos, endPos) {
    // Inline function 'kotlin.text.substring' call
    var this_0 = this.t47();
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceSubSequence1iwpdba8s3jc7)(this_0, startPos, endPos));
  }
  h43() {
    if (!(this.u3x_1 == null)) {
      return takePeeked(this);
    }
    return this.a45();
  }
  consumeString2(source, startPosition, current) {
    var currentPosition = current;
    var lastPosition = startPosition;
    var char = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(source, currentPosition);
    var usedAppend = false;
    while (!(char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34))) {
      if (char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(92)) {
        usedAppend = true;
        currentPosition = this.u47(appendEscape(this, lastPosition, currentPosition));
        if (currentPosition === -1) {
          this.r41('EOF', currentPosition);
        }
        lastPosition = currentPosition;
      } else {
        currentPosition = currentPosition + 1 | 0;
        if (currentPosition >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(source)) {
          usedAppend = true;
          this.s47(lastPosition, currentPosition);
          currentPosition = this.u47(currentPosition);
          if (currentPosition === -1) {
            this.r41('EOF', currentPosition);
          }
          lastPosition = currentPosition;
        }
      }
      char = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(source, currentPosition);
    }
    var tmp;
    if (!usedAppend) {
      tmp = this.b48(lastPosition, currentPosition);
    } else {
      tmp = decodedString(this, lastPosition, currentPosition);
    }
    var string = tmp;
    this.s3x_1 = currentPosition + 1 | 0;
    return string;
  }
  b45() {
    var result = this.i43();
    if (result === 'null' && wasUnquotedString(this)) {
      this.r41("Unexpected 'null' value instead of string literal");
    }
    return result;
  }
  i43() {
    if (!(this.u3x_1 == null)) {
      return takePeeked(this);
    }
    var current = this.a48();
    if (current >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47()) || current === -1) {
      this.r41('EOF', current);
    }
    var token = charToTokenClass((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current));
    if (token === 1) {
      return this.h43();
    }
    if (!(token === 0)) {
      this.r41('Expected beginning of the string, but got ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current)));
    }
    var usedAppend = false;
    while (charToTokenClass((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current)) === 0) {
      current = current + 1 | 0;
      if (current >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47())) {
        usedAppend = true;
        this.s47(this.s3x_1, current);
        var eof = this.u47(current);
        if (eof === -1) {
          this.s3x_1 = current;
          return decodedString(this, 0, 0);
        } else {
          current = eof;
        }
      }
    }
    var tmp;
    if (!usedAppend) {
      tmp = this.b48(this.s3x_1, current);
    } else {
      tmp = decodedString(this, this.s3x_1, current);
    }
    var result = tmp;
    this.s3x_1 = current;
    return result;
  }
  s47(fromIndex, toIndex) {
    this.v3x_1.xf(this.t47(), fromIndex, toIndex);
  }
  z44(allowLenientStrings) {
    // Inline function 'kotlin.collections.mutableListOf' call
    var tokenStack = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
    var lastToken = this.f43();
    if (!(lastToken === 8) && !(lastToken === 6)) {
      this.i43();
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    $l$loop: while (true) {
      lastToken = this.f43();
      if (lastToken === 1) {
        if (allowLenientStrings) {
          this.i43();
        } else {
          this.a45();
        }
        continue $l$loop;
      }
      var tmp0_subject = lastToken;
      if (tmp0_subject === 8 ? true : tmp0_subject === 6) {
        tokenStack.g(lastToken);
      } else if (tmp0_subject === 9) {
        if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.last1vo29oleiqj36)(tokenStack) === 8))
          throw JsonDecodingException_0(this.s3x_1, 'found ] instead of } at path: ' + this.t3x_1.toString(), this.t47());
        (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.removeLast3759euu1xvfa3)(tokenStack);
      } else if (tmp0_subject === 7) {
        if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.last1vo29oleiqj36)(tokenStack) === 6))
          throw JsonDecodingException_0(this.s3x_1, 'found } instead of ] at path: ' + this.t3x_1.toString(), this.t47());
        (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.removeLast3759euu1xvfa3)(tokenStack);
      } else if (tmp0_subject === 10) {
        this.r41('Unexpected end of input due to malformed JSON during ignoring unknown keys');
      }
      this.k43();
      if (tokenStack.z() === 0)
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
  }
  toString() {
    return "JsonReader(source='" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.t47()) + "', currentPosition=" + this.s3x_1 + ')';
  }
  y44(key) {
    var processed = this.b48(0, this.s3x_1);
    var lastIndexOf_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.lastIndexOf2d52xhix5ymjr)(processed, key);
    this.z47("Encountered an unknown key '" + key + "'", lastIndexOf_0, "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.");
  }
  z47(message, position, hint) {
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(hint) === 0) {
      tmp = '';
    } else {
      tmp = '\n' + hint;
    }
    var hintMessage = tmp;
    throw JsonDecodingException_0(position, message + ' at path: ' + this.t3x_1.r42() + hintMessage, this.t47());
  }
  r41(message, position, hint, $super) {
    position = position === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? this.s3x_1 : position;
    hint = hint === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? '' : hint;
    return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? this.z47(message, position, hint) : $super.z47.call(this, message, position, hint);
  }
  k45() {
    var current = this.a48();
    current = this.u47(current);
    if (current >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47()) || current === -1) {
      this.r41('EOF');
    }
    var tmp;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34)) {
      current = current + 1 | 0;
      if (current === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47())) {
        this.r41('EOF');
      }
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var accumulator = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0);
    var isNegative = false;
    var start = current;
    var hasChars = true;
    $l$loop_0: while (hasChars) {
      var ch = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current);
      if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(45)) {
        if (!(current === start)) {
          this.r41("Unexpected symbol '-' in numeric literal");
        }
        isNegative = true;
        current = current + 1 | 0;
        continue $l$loop_0;
      }
      var token = charToTokenClass(ch);
      if (!(token === 0))
        break $l$loop_0;
      current = current + 1 | 0;
      hasChars = !(current === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47()));
      var digit = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__minus_impl_a2frrhp8twy13wqz9c)(ch, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(48));
      if (!(0 <= digit ? digit <= 9 : false)) {
        this.r41("Unexpected symbol '" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(ch) + "' in numeric literal");
      }
      // Inline function 'kotlin.Long.minus' call
      // Inline function 'kotlin.Long.times' call
      accumulator = accumulator.f3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(10)).e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(digit));
      if (accumulator.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0)) > 0) {
        this.r41('Numeric value overflow');
      }
    }
    if (start === current || (isNegative && start === (current - 1 | 0))) {
      this.r41('Expected numeric literal');
    }
    if (hasQuotation) {
      if (!hasChars) {
        this.r41('EOF');
      }
      if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34))) {
        this.r41('Expected closing quotation mark');
      }
      current = current + 1 | 0;
    }
    this.s3x_1 = current;
    var tmp_0;
    if (isNegative) {
      tmp_0 = accumulator;
    } else if (!accumulator.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, -2147483648))) {
      tmp_0 = accumulator.k3();
    } else {
      this.r41('Numeric value overflow');
    }
    return tmp_0;
  }
  i45() {
    return consumeBoolean2(this, this.a48());
  }
  j45() {
    var current = this.a48();
    if (current === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47())) {
      this.r41('EOF');
    }
    var tmp;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), current) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34)) {
      current = current + 1 | 0;
      tmp = true;
    } else {
      tmp = false;
    }
    var hasQuotation = tmp;
    var result = consumeBoolean2(this, current);
    if (hasQuotation) {
      if (this.s3x_1 === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this.t47())) {
        this.r41('EOF');
      }
      if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.t47(), this.s3x_1) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34))) {
        this.r41('Expected closing quotation mark');
      }
      this.s3x_1 = this.s3x_1 + 1 | 0;
    }
    return result;
  }
}
class CharMappings {
  constructor() {
    CharMappings_instance = this;
    this.c48_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charArray2ujmm1qusno00)(117);
    this.d48_1 = new Int8Array(126);
    initEscape(this);
    initCharToToken(this);
  }
}
class StringJsonLexer extends AbstractJsonLexer {
  constructor(source) {
    super();
    this.i48_1 = source;
  }
  t47() {
    return this.i48_1;
  }
  u47(position) {
    return position < this.i48_1.length ? position : -1;
  }
  k43() {
    var source = this.i48_1;
    $l$loop: while (!(this.s3x_1 === -1) && this.s3x_1 < source.length) {
      var tmp1 = this.s3x_1;
      this.s3x_1 = tmp1 + 1 | 0;
      var ch = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(source, tmp1);
      var tc = charToTokenClass(ch);
      var tmp;
      if (tc === 3) {
        continue $l$loop;
      } else {
        tmp = tc;
      }
      return tmp;
    }
    return 10;
  }
  v44() {
    var current = this.a48();
    if (current === this.i48_1.length || current === -1)
      return false;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.i48_1, current) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(44)) {
      this.s3x_1 = this.s3x_1 + 1 | 0;
      return true;
    }
    return false;
  }
  g43() {
    var current = this.s3x_1;
    if (current === -1)
      return false;
    $l$loop: while (current < this.i48_1.length) {
      var c = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.i48_1, current);
      if (c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9)) {
        current = current + 1 | 0;
        continue $l$loop;
      }
      this.s3x_1 = current;
      return this.w47(c);
    }
    this.s3x_1 = current;
    return false;
  }
  a48() {
    var current = this.s3x_1;
    if (current === -1)
      return current;
    $l$loop: while (current < this.i48_1.length) {
      var c = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.i48_1, current);
      if (c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9)) {
        current = current + 1 | 0;
      } else {
        break $l$loop;
      }
    }
    this.s3x_1 = current;
    return current;
  }
  u44(expected) {
    if (this.s3x_1 === -1) {
      this.y47(expected);
    }
    var source = this.i48_1;
    $l$loop: while (this.s3x_1 < source.length) {
      var tmp1 = this.s3x_1;
      this.s3x_1 = tmp1 + 1 | 0;
      var c = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(source, tmp1);
      if (c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(32) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13) || c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9))
        continue $l$loop;
      if (c === expected)
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
      this.y47(expected);
    }
    this.y47(expected);
  }
  a45() {
    this.u44((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34));
    var current = this.s3x_1;
    var closingQuote = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.indexOf1xbs558u7wr52)(this.i48_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34), current);
    if (closingQuote === -1) {
      this.x47(1);
    }
    var inductionVariable = current;
    if (inductionVariable < closingQuote)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(this.i48_1, i) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(92)) {
          return this.consumeString2(this.i48_1, this.s3x_1, i);
        }
      }
       while (inductionVariable < closingQuote);
    this.s3x_1 = closingQuote + 1 | 0;
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this.i48_1.substring(current, closingQuote);
  }
  c45(keyToMatch, isLenient) {
    var positionSnapshot = this.s3x_1;
    try {
      if (!(this.k43() === 6))
        return null;
      var firstKey = isLenient ? this.a45() : this.b45();
      if (firstKey === keyToMatch) {
        if (!(this.k43() === 5))
          return null;
        var result = isLenient ? this.h43() : this.b45();
        return result;
      }
      return null;
    }finally {
      this.s3x_1 = positionSnapshot;
    }
  }
}
class JsonToStringWriter {
  constructor() {
    this.j3x_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringBuildermazzzhj6kkai.qa(128);
  }
  w40(value) {
    this.j3x_1.ka(value);
  }
  q40(char) {
    this.j3x_1.ma(char);
  }
  s40(text) {
    this.j3x_1.la(text);
  }
  c41(text) {
    printQuoted(this.j3x_1, text);
  }
  j15() {
    this.j3x_1.dg();
  }
  toString() {
    return this.j3x_1.toString();
  }
}
//endregion
var Default_instance;
function Default_getInstance() {
  if (Default_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Default();
  return Default_instance;
}
function Json_0(from, builderAction) {
  from = from === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? Default_getInstance() : from;
  var builder = new JsonBuilder(from);
  builderAction(builder);
  var conf = builder.l3y();
  return new JsonImpl(conf, builder.k3y_1);
}
function validateConfiguration($this) {
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)($this.e3d(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.EmptySerializersModule991ju6pz9b79)()))
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  var collector = new PolymorphismValidator($this.g3x_1.u3y_1, $this.g3x_1.v3y_1);
  $this.e3d().x3r(collector);
}
function get_jsonUnquotedLiteralDescriptor() {
  _init_properties_JsonElement_kt__7cbdc2();
  return jsonUnquotedLiteralDescriptor;
}
var jsonUnquotedLiteralDescriptor;
var Companion_instance;
function Companion_getInstance_3() {
  return Companion_instance;
}
var Companion_instance_0;
function Companion_getInstance_4() {
  return Companion_instance_0;
}
function JsonObject$toString$lambda(_name_for_destructuring_parameter_0__wldtmu) {
  // Inline function 'kotlin.collections.component1' call
  var k = _name_for_destructuring_parameter_0__wldtmu.k1();
  // Inline function 'kotlin.collections.component2' call
  var v = _name_for_destructuring_parameter_0__wldtmu.l1();
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlinx.serialization.json.JsonObject.toString.<anonymous>.<anonymous>' call
  printQuoted(this_0, k);
  this_0.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58));
  this_0.ka(v);
  return this_0.toString();
}
function _get_$cachedSerializer__te6jhj($this) {
  return $this.d3z_1.l1();
}
function JsonNull$_anonymous__enib48() {
  return JsonNullSerializer_getInstance();
}
var JsonNull_instance;
function JsonNull_getInstance() {
  if (JsonNull_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonNull();
  return JsonNull_instance;
}
var Companion_instance_1;
function Companion_getInstance_5() {
  return Companion_instance_1;
}
function JsonPrimitive_0(value) {
  _init_properties_JsonElement_kt__7cbdc2();
  if (value == null)
    return JsonNull_getInstance();
  return new JsonLiteral(value, true);
}
var Companion_instance_2;
function Companion_getInstance_6() {
  return Companion_instance_2;
}
function get_booleanOrNull(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  return toBooleanStrictOrNull(_this__u8e3s4.l2b());
}
function get_int(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toInt2q8uldh7sc951)(_this__u8e3s4.l2b());
}
function get_long(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongkk4waq8msp1k)(_this__u8e3s4.l2b());
}
function get_float(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  // Inline function 'kotlin.text.toFloat' call
  var this_0 = _this__u8e3s4.l2b();
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toDouble1kn912gjoizjp)(this_0);
}
function get_double(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toDouble1kn912gjoizjp)(_this__u8e3s4.l2b());
}
function get_contentOrNull(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  var tmp;
  if (_this__u8e3s4 instanceof JsonNull) {
    tmp = null;
  } else {
    tmp = _this__u8e3s4.l2b();
  }
  return tmp;
}
function get_longOrNull(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongOrNullutqivezb0wx1)(_this__u8e3s4.l2b());
}
function get_doubleOrNull(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toDoubleOrNullkxwozihadygj)(_this__u8e3s4.l2b());
}
function get_jsonPrimitive(_this__u8e3s4) {
  _init_properties_JsonElement_kt__7cbdc2();
  var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonPrimitive ? _this__u8e3s4 : null;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    error(_this__u8e3s4, 'JsonPrimitive');
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function error(_this__u8e3s4, element) {
  _init_properties_JsonElement_kt__7cbdc2();
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o('Element ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(_this__u8e3s4)) + ' is not a ' + element);
}
var properties_initialized_JsonElement_kt_abxy8s;
function _init_properties_JsonElement_kt__7cbdc2() {
  if (!properties_initialized_JsonElement_kt_abxy8s) {
    properties_initialized_JsonElement_kt_abxy8s = true;
    jsonUnquotedLiteralDescriptor = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.InlinePrimitiveDescriptor3i6ccn1a4fw94)('kotlinx.serialization.json.JsonUnquotedLiteral', (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer1x79l67jvwntn)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringCompanionObject_instance2odz3s3zbrixa));
  }
}
function JsonElementSerializer$descriptor$lambda($this$buildSerialDescriptor) {
  $this$buildSerialDescriptor.f39('JsonPrimitive', defer(JsonElementSerializer$descriptor$lambda$lambda));
  $this$buildSerialDescriptor.f39('JsonNull', defer(JsonElementSerializer$descriptor$lambda$lambda_0));
  $this$buildSerialDescriptor.f39('JsonLiteral', defer(JsonElementSerializer$descriptor$lambda$lambda_1));
  $this$buildSerialDescriptor.f39('JsonObject', defer(JsonElementSerializer$descriptor$lambda$lambda_2));
  $this$buildSerialDescriptor.f39('JsonArray', defer(JsonElementSerializer$descriptor$lambda$lambda_3));
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function JsonElementSerializer$descriptor$lambda$lambda() {
  return JsonPrimitiveSerializer_getInstance().l3z_1;
}
function JsonElementSerializer$descriptor$lambda$lambda_0() {
  return JsonNullSerializer_getInstance().m3z_1;
}
function JsonElementSerializer$descriptor$lambda$lambda_1() {
  return JsonLiteralSerializer_getInstance().n3z_1;
}
function JsonElementSerializer$descriptor$lambda$lambda_2() {
  return JsonObjectSerializer_getInstance().o3z_1;
}
function JsonElementSerializer$descriptor$lambda$lambda_3() {
  return JsonArraySerializer_getInstance().p3z_1;
}
var JsonElementSerializer_instance;
function JsonElementSerializer_getInstance() {
  if (JsonElementSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonElementSerializer();
  return JsonElementSerializer_instance;
}
var JsonObjectDescriptor_instance;
function JsonObjectDescriptor_getInstance() {
  if (JsonObjectDescriptor_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonObjectDescriptor();
  return JsonObjectDescriptor_instance;
}
var JsonObjectSerializer_instance;
function JsonObjectSerializer_getInstance() {
  if (JsonObjectSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonObjectSerializer();
  return JsonObjectSerializer_instance;
}
var JsonArrayDescriptor_instance;
function JsonArrayDescriptor_getInstance() {
  if (JsonArrayDescriptor_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonArrayDescriptor();
  return JsonArrayDescriptor_instance;
}
var JsonArraySerializer_instance;
function JsonArraySerializer_getInstance() {
  if (JsonArraySerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonArraySerializer();
  return JsonArraySerializer_instance;
}
function defer(deferred) {
  return new defer$1(deferred);
}
var JsonPrimitiveSerializer_instance;
function JsonPrimitiveSerializer_getInstance() {
  if (JsonPrimitiveSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonPrimitiveSerializer();
  return JsonPrimitiveSerializer_instance;
}
var JsonNullSerializer_instance;
function JsonNullSerializer_getInstance() {
  if (JsonNullSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonNullSerializer();
  return JsonNullSerializer_instance;
}
var JsonLiteralSerializer_instance;
function JsonLiteralSerializer_getInstance() {
  if (JsonLiteralSerializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new JsonLiteralSerializer();
  return JsonLiteralSerializer_instance;
}
function verify(encoder) {
  asJsonEncoder(encoder);
}
function asJsonDecoder(_this__u8e3s4) {
  var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(_this__u8e3s4, JsonDecoder) ? _this__u8e3s4 : null;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4('This serializer can be used only with Json format.' + ('Expected Decoder to be JsonDecoder, got ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(_this__u8e3s4))));
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function verify_0(decoder) {
  asJsonDecoder(decoder);
}
function asJsonEncoder(_this__u8e3s4) {
  var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(_this__u8e3s4, JsonEncoder) ? _this__u8e3s4 : null;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4('This serializer can be used only with Json format.' + ('Expected Encoder to be JsonEncoder, got ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(_this__u8e3s4))));
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function _get_original__l7ku1m($this) {
  // Inline function 'kotlin.getValue' call
  var this_0 = $this.i40_1;
  original$factory();
  return this_0.l1();
}
function original$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getPropertyCallableRef1ajb9in178r5r)('original', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.KProperty1ca4yb4wlo496, function (receiver) {
    return _get_original__l7ku1m(receiver);
  }, null);
}
function Composer_0(sb, json) {
  return json.g3x_1.q3y_1 ? new ComposerWithPrettyPrint(sb, json) : new Composer(sb);
}
function readIfAbsent($this, descriptor, index) {
  $this.o41_1 = (!descriptor.g3b(index) && descriptor.d3b(index).t3a());
  return $this.o41_1;
}
function JsonElementMarker$readIfAbsent$ref($boundThis) {
  var l = function (p0, p1) {
    return readIfAbsent($boundThis, p0, p1);
  };
  l.callableName = 'readIfAbsent';
  return l;
}
function throwInvalidFloatingPointDecoded(_this__u8e3s4, result) {
  _this__u8e3s4.r41('Unexpected special floating-point value ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(result) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'");
}
function InvalidKeyKindException(keyDescriptor) {
  return JsonEncodingException.y41("Value of type '" + keyDescriptor.x3a() + "' can't be used in JSON as a key in the map. " + ("It should have either primitive or enum kind, but its kind is '" + keyDescriptor.b3b().toString() + "'.\n") + "Use 'allowStructuredMapKeys = true' in 'Json {}' builder to convert such maps to [key1, value1, key2, value2,...] arrays.");
}
function JsonDecodingException_0(offset, message, input) {
  return JsonDecodingException_1(offset, message + '\nJSON input: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(minify(input, offset)));
}
function InvalidFloatingPointDecoded(value, key, output) {
  return JsonDecodingException_1(-1, unexpectedFpErrorMessage(value, key, output));
}
function JsonDecodingException_1(offset, message) {
  return JsonDecodingException.g40(offset >= 0 ? 'Unexpected JSON token at offset ' + offset + ': ' + message : message);
}
function UnknownKeyException(key, input) {
  return JsonDecodingException_1(-1, "Encountered an unknown key '" + key + "'.\n" + "Use 'ignoreUnknownKeys = true' in 'Json {}' builder to ignore unknown keys.\n" + ('Current input: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(minify(input))));
}
function InvalidFloatingPointEncoded(value, output) {
  return JsonEncodingException.y41('Unexpected special floating-point value ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(value) + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n" + ('Current output: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(minify(output))));
}
function unexpectedFpErrorMessage(value, key, output) {
  return 'Unexpected special floating-point value ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(value) + ' with key ' + key + '. By default, ' + 'non-finite floating point values are prohibited because they do not conform JSON specification. ' + "It is possible to deserialize them using 'JsonBuilder.allowSpecialFloatingPointValues = true'\n" + ('Current output: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(minify(output)));
}
function minify(_this__u8e3s4, offset) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? -1 : offset;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(_this__u8e3s4) < 200)
    return _this__u8e3s4;
  if (offset === -1) {
    var start = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(_this__u8e3s4) - 60 | 0;
    if (start <= 0)
      return _this__u8e3s4;
    // Inline function 'kotlin.text.substring' call
    var endIndex = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(_this__u8e3s4);
    return '.....' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceSubSequence1iwpdba8s3jc7)(_this__u8e3s4, start, endIndex));
  }
  var start_0 = offset - 30 | 0;
  var end = offset + 30 | 0;
  var prefix = start_0 <= 0 ? '' : '.....';
  var suffix = end >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(_this__u8e3s4) ? '' : '.....';
  // Inline function 'kotlin.text.substring' call
  var startIndex = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.coerceAtLeast2bkz8m9ik7hep)(start_0, 0);
  var endIndex_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.coerceAtMost322komnqp70ag)(end, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(_this__u8e3s4));
  return prefix + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceSubSequence1iwpdba8s3jc7)(_this__u8e3s4, startIndex, endIndex_0)) + suffix;
}
function get_JsonDeserializationNamesKey() {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  return JsonDeserializationNamesKey;
}
var JsonDeserializationNamesKey;
function get_JsonSerializationNamesKey() {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  return JsonSerializationNamesKey;
}
var JsonSerializationNamesKey;
function getJsonNameIndex(_this__u8e3s4, json, name) {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  var strategy = namingStrategy(_this__u8e3s4, json);
  if (!(strategy == null))
    return getJsonNameIndex$getJsonNameIndexSlowPath(json, _this__u8e3s4, name);
  var index = _this__u8e3s4.e3b(name);
  if (!(index === -3))
    return index;
  if (!json.g3x_1.x3y_1)
    return index;
  return getJsonNameIndex$getJsonNameIndexSlowPath(json, _this__u8e3s4, name);
}
function getJsonElementName(_this__u8e3s4, json, index) {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  var strategy = namingStrategy(_this__u8e3s4, json);
  return strategy == null ? _this__u8e3s4.f3b(index) : serializationNamesIndices(_this__u8e3s4, json, strategy)[index];
}
function namingStrategy(_this__u8e3s4, json) {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(_this__u8e3s4.b3b(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.CLASS_getInstance1ss90e870vddp)()) ? json.g3x_1.y3y_1 : null;
}
function deserializationNamesMap(_this__u8e3s4, descriptor) {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  var tmp = get_schemaCache(_this__u8e3s4);
  var tmp_0 = get_JsonDeserializationNamesKey();
  return tmp.g42(descriptor, tmp_0, deserializationNamesMap$lambda(descriptor, _this__u8e3s4));
}
function serializationNamesIndices(_this__u8e3s4, json, strategy) {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  var tmp = get_schemaCache(json);
  var tmp_0 = get_JsonSerializationNamesKey();
  return tmp.g42(_this__u8e3s4, tmp_0, serializationNamesIndices$lambda(_this__u8e3s4, strategy));
}
function buildDeserializationNamesMap(_this__u8e3s4, json) {
  _init_properties_JsonNamesMap_kt__cbbp0k();
  // Inline function 'kotlin.collections.mutableMapOf' call
  var builder = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
  var strategy = namingStrategy(_this__u8e3s4, json);
  var inductionVariable = 0;
  var last = _this__u8e3s4.z3a();
  if (inductionVariable < last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.collections.filterIsInstance' call
      // Inline function 'kotlin.collections.filterIsInstanceTo' call
      var this_0 = _this__u8e3s4.c3b(i);
      var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
      var tmp0_iterator = this_0.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        if (element instanceof JsonNames) {
          destination.g(element);
        }
      }
      var tmp1_safe_receiver = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.singleOrNullrknfaxokm1sl)(destination);
      var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.h42_1;
      if (tmp2_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.collections.forEach' call
        var inductionVariable_0 = 0;
        var last_0 = tmp2_safe_receiver.length;
        while (inductionVariable_0 < last_0) {
          var element_0 = tmp2_safe_receiver[inductionVariable_0];
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          // Inline function 'kotlinx.serialization.json.internal.buildDeserializationNamesMap.<anonymous>' call
          buildDeserializationNamesMap$putOrThrow(builder, _this__u8e3s4, element_0, i);
        }
      }
      if (strategy == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        buildDeserializationNamesMap$putOrThrow(builder, _this__u8e3s4, strategy.i42(_this__u8e3s4, i, _this__u8e3s4.f3b(i)), i);
      }
    }
     while (inductionVariable < last);
  // Inline function 'kotlin.collections.ifEmpty' call
  // Inline function 'kotlin.contracts.contract' call
  var tmp;
  if (builder.f1()) {
    // Inline function 'kotlinx.serialization.json.internal.buildDeserializationNamesMap.<anonymous>' call
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.emptyMapr06gerzljqtm)();
  } else {
    tmp = builder;
  }
  return tmp;
}
function getJsonNameIndex$getJsonNameIndexSlowPath($json, $this_getJsonNameIndex, $name) {
  var tmp0_elvis_lhs = deserializationNamesMap($json, $this_getJsonNameIndex).q2($name);
  return tmp0_elvis_lhs == null ? -3 : tmp0_elvis_lhs;
}
function buildDeserializationNamesMap$putOrThrow(_this__u8e3s4, $this_buildDeserializationNamesMap, name, index) {
  // Inline function 'kotlin.collections.contains' call
  // Inline function 'kotlin.collections.containsKey' call
  if (((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.KtMap140uvy3s5zad8) ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)()).o2(name)) {
    throw JsonException.e42("The suggested name '" + name + "' for property " + $this_buildDeserializationNamesMap.f3b(index) + ' is already one of the names for property ' + ($this_buildDeserializationNamesMap.f3b((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getValue48kllevslyh6)(_this__u8e3s4, name)) + ' in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)($this_buildDeserializationNamesMap)));
  }
  // Inline function 'kotlin.collections.set' call
  _this__u8e3s4.t2(name, index);
}
function deserializationNamesMap$lambda($descriptor, $this_deserializationNamesMap) {
  return function () {
    return buildDeserializationNamesMap($descriptor, $this_deserializationNamesMap);
  };
}
function serializationNamesIndices$lambda($this_serializationNamesIndices, $strategy) {
  return function () {
    var tmp = 0;
    var tmp_0 = $this_serializationNamesIndices.z3a();
    // Inline function 'kotlin.arrayOfNulls' call
    var tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.fillArrayVali8eppxapiek4)(Array(tmp_0), null);
    while (tmp < tmp_0) {
      var tmp_2 = tmp;
      var baseName = $this_serializationNamesIndices.f3b(tmp_2);
      tmp_1[tmp_2] = $strategy.i42($this_serializationNamesIndices, tmp_2, baseName);
      tmp = tmp + 1 | 0;
    }
    return tmp_1;
  };
}
var properties_initialized_JsonNamesMap_kt_ljpf42;
function _init_properties_JsonNamesMap_kt__cbbp0k() {
  if (!properties_initialized_JsonNamesMap_kt_ljpf42) {
    properties_initialized_JsonNamesMap_kt_ljpf42 = true;
    JsonDeserializationNamesKey = new Key();
    JsonSerializationNamesKey = new Key();
  }
}
var Tombstone_instance;
function Tombstone_getInstance() {
  return Tombstone_instance;
}
function resize($this) {
  var newSize = imul($this.l42_1, 2);
  $this.j42_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.copyOf2ng0t8oizk6it)($this.j42_1, newSize);
  $this.k42_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.copyOf3rutauicler23)($this.k42_1, newSize);
}
function encodeByWriter(_this__u8e3s4, writer, serializer, value) {
  var tmp = WriteMode_OBJ_getInstance();
  // Inline function 'kotlin.arrayOfNulls' call
  var size = values().length;
  var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.fillArrayVali8eppxapiek4)(Array(size), null);
  var encoder = StreamingJsonEncoder.a43(writer, _this__u8e3s4, tmp, tmp$ret$0);
  encoder.h3e(serializer, value);
}
function readObject($this) {
  // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readObjectImpl' call
  var lastToken = $this.b43_1.e43(6);
  if ($this.b43_1.f43() === 4) {
    $this.b43_1.r41('Unexpected leading comma');
  }
  // Inline function 'kotlin.collections.linkedMapOf' call
  var result = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
  $l$loop: while ($this.b43_1.g43()) {
    var key = $this.c43_1 ? $this.b43_1.i43() : $this.b43_1.h43();
    $this.b43_1.e43(5);
    // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readObject.<anonymous>' call
    var element = $this.j43();
    // Inline function 'kotlin.collections.set' call
    result.t2(key, element);
    lastToken = $this.b43_1.k43();
    var tmp0_subject = lastToken;
    if (tmp0_subject !== 4)
      if (tmp0_subject === 7)
        break $l$loop;
      else {
        $this.b43_1.r41('Expected end of the object or comma');
      }
  }
  if (lastToken === 6) {
    $this.b43_1.e43(7);
  } else if (lastToken === 4) {
    $this.b43_1.r41('Unexpected trailing comma');
  }
  return new JsonObject(result);
}
function readObject_0(_this__u8e3s4, $this, $completion) {
  var tmp = new $readObjectCOROUTINE$0($this, _this__u8e3s4, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function readArray($this) {
  var lastToken = $this.b43_1.k43();
  if ($this.b43_1.f43() === 4) {
    $this.b43_1.r41('Unexpected leading comma');
  }
  // Inline function 'kotlin.collections.arrayListOf' call
  var result = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
  while ($this.b43_1.g43()) {
    var element = $this.j43();
    result.g(element);
    lastToken = $this.b43_1.k43();
    if (!(lastToken === 4)) {
      // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
      var this_0 = $this.b43_1;
      var condition = lastToken === 9;
      var position = this_0.s3x_1;
      if (!condition) {
        // Inline function 'kotlinx.serialization.json.internal.JsonTreeReader.readArray.<anonymous>' call
        var tmp$ret$1 = 'Expected end of the array or comma';
        this_0.r41(tmp$ret$1, position);
      }
    }
  }
  if (lastToken === 8) {
    $this.b43_1.e43(9);
  } else if (lastToken === 4) {
    $this.b43_1.r41('Unexpected trailing comma');
  }
  return new JsonArray(result);
}
function readValue($this, isString) {
  var tmp;
  if ($this.c43_1 || !isString) {
    tmp = $this.b43_1.i43();
  } else {
    tmp = $this.b43_1.h43();
  }
  var string = tmp;
  if (!isString && string === 'null')
    return JsonNull_getInstance();
  return new JsonLiteral(string, isString);
}
function readDeepRecursive($this) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.invoke246lvi6tzooz1)(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.DeepRecursiveFunction3r49v8igsve1g(JsonTreeReader$readDeepRecursive$slambda_0($this, null)), _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8);
}
function JsonTreeReader$readDeepRecursive$slambda_0(this$0, resultContinuation) {
  var i = new JsonTreeReader$readDeepRecursive$slambda(this$0, resultContinuation);
  var l = function ($this$$receiver, it, $completion) {
    return i.m44($this$$receiver, it, $completion);
  };
  l.$arity = 2;
  return l;
}
function classDiscriminator(_this__u8e3s4, json) {
  var tmp0_iterator = _this__u8e3s4.y3a().w();
  while (tmp0_iterator.x()) {
    var annotation = tmp0_iterator.y();
    if (annotation instanceof JsonClassDiscriminator)
      return annotation.o44_1;
  }
  return json.g3x_1.v3y_1;
}
function decodeSerializableValuePolymorphic(_this__u8e3s4, deserializer) {
  var tmp;
  if (!(deserializer instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPolymorphicSerializer1ccxwp48nfy58)) {
    tmp = true;
  } else {
    tmp = _this__u8e3s4.z3y().g3x_1.u3y_1;
  }
  if (tmp) {
    return deserializer.w38(_this__u8e3s4);
  }
  var discriminator = classDiscriminator(deserializer.u38(), _this__u8e3s4.z3y());
  // Inline function 'kotlinx.serialization.json.internal.cast' call
  var value = _this__u8e3s4.a3z();
  var descriptor = deserializer.u38();
  if (!(value instanceof JsonObject)) {
    throw JsonDecodingException_1(-1, 'Expected ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(JsonObject)) + ' as the serialized body of ' + descriptor.x3a() + ', but had ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(value)));
  }
  var jsonTree = value;
  var tmp0_safe_receiver = jsonTree.f1l(discriminator);
  var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : get_jsonPrimitive(tmp0_safe_receiver);
  var type = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.l2b();
  var tmp2_elvis_lhs = deserializer.l39(_this__u8e3s4, type);
  var tmp_0;
  if (tmp2_elvis_lhs == null) {
    throwSerializerNotFound(type, jsonTree);
  } else {
    tmp_0 = tmp2_elvis_lhs;
  }
  var actualSerializer = tmp_0;
  var tmp_1 = _this__u8e3s4.z3y();
  return readPolymorphicJson(tmp_1, discriminator, jsonTree, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(actualSerializer, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.DeserializationStrategy1z3z5pj9f7zc8) ? actualSerializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
}
function throwSerializerNotFound(type, jsonTree) {
  var suffix = type == null ? "missing class discriminator ('null')" : "class discriminator '" + type + "'";
  throw JsonDecodingException_0(-1, 'Polymorphic serializer was not found for ' + suffix, jsonTree.toString());
}
function validateIfSealed(serializer, actualSerializer, classDiscriminator) {
  if (!(serializer instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SealedClassSerializeriwipiibk55zc))
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  if ((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.jsonCachedSerialNameslxufy2gu43jt)(actualSerializer.u38()).h2(classDiscriminator)) {
    var baseName = serializer.u38().x3a();
    var actualName = actualSerializer.u38().x3a();
    // Inline function 'kotlin.error' call
    var message = "Sealed class '" + actualName + "' cannot be serialized as base class '" + baseName + "' because" + (" it has property name that conflicts with JSON class discriminator '" + classDiscriminator + "'. ") + 'You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation or fall back to array polymorphism';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
  }
}
function checkKind(kind) {
  if (kind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ENUMlmq49cvwy4ow) {
    // Inline function 'kotlin.error' call
    var message = "Enums cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
  }
  if (kind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveKindndgbuh6is7ze) {
    // Inline function 'kotlin.error' call
    var message_0 = "Primitives cannot be serialized polymorphically with 'type' parameter. You can use 'JsonBuilder.useArrayPolymorphism' instead";
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message_0));
  }
  if (kind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PolymorphicKindla9gurooefwb) {
    // Inline function 'kotlin.error' call
    var message_1 = 'Actual serializer for polymorphic cannot be polymorphic itself';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message_1));
  }
}
function validateIfSealed$accessor$1ad0flx(serializer, actualSerializer, classDiscriminator) {
  return validateIfSealed(serializer, actualSerializer, classDiscriminator);
}
function checkKind_0($this, descriptor, actualClass) {
  var kind = descriptor.b3b();
  var tmp;
  if (kind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PolymorphicKindla9gurooefwb) {
    tmp = true;
  } else {
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(kind, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.CONTEXTUAL_getInstance40twmib99zqv)());
  }
  if (tmp) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o('Serializer for ' + actualClass.je() + " can't be registered as a subclass for polymorphic serialization " + ('because its kind ' + kind.toString() + ' is not concrete. To work with multiple hierarchies, register it as a base class.'));
  }
  if ($this.p44_1)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  var tmp_0;
  var tmp_1;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(kind, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.LIST_getInstance3iji3zetpdcxm)()) || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(kind, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MAP_getInstance2l4ulrz8ljw5i)())) {
    tmp_1 = true;
  } else {
    tmp_1 = kind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveKindndgbuh6is7ze;
  }
  if (tmp_1) {
    tmp_0 = true;
  } else {
    tmp_0 = kind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ENUMlmq49cvwy4ow;
  }
  if (tmp_0) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o('Serializer for ' + actualClass.je() + ' of kind ' + kind.toString() + ' cannot be serialized polymorphically with class discriminator.');
  }
}
function checkDiscriminatorCollisions($this, descriptor, actualClass) {
  var inductionVariable = 0;
  var last = descriptor.z3a();
  if (inductionVariable < last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var name = descriptor.f3b(i);
      if (name === $this.q44_1) {
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o('Polymorphic serializer for ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(actualClass) + " has property '" + name + "' that conflicts " + 'with JSON class discriminator. You can either change class discriminator in JsonConfiguration, ' + 'rename property with @SerialName annotation ' + 'or fall back to array polymorphism');
      }
    }
     while (inductionVariable < last);
}
function trySkip(_this__u8e3s4, $this, unknownKey) {
  if (_this__u8e3s4 == null)
    return false;
  if (_this__u8e3s4.t44_1 === unknownKey) {
    _this__u8e3s4.t44_1 = null;
    return true;
  }
  return false;
}
function skipLeftoverElements($this, descriptor) {
  while (!($this.g3d(descriptor) === -1)) {
  }
}
function checkLeadingComma($this) {
  if ($this.m3x_1.f43() === 4) {
    $this.m3x_1.r41('Unexpected leading comma');
  }
}
function decodeMapIndex($this) {
  var hasComma = false;
  var decodingKey = !(($this.o3x_1 % 2 | 0) === 0);
  if (decodingKey) {
    if (!($this.o3x_1 === -1)) {
      hasComma = $this.m3x_1.v44();
    }
  } else {
    $this.m3x_1.u44((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58));
  }
  var tmp;
  if ($this.m3x_1.g43()) {
    if (decodingKey) {
      if ($this.o3x_1 === -1) {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
        var this_0 = $this.m3x_1;
        var condition = !hasComma;
        var position = this_0.s3x_1;
        if (!condition) {
          // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
          var tmp$ret$0 = 'Unexpected trailing comma';
          this_0.r41(tmp$ret$0, position);
        }
      } else {
        // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.require' call
        var this_1 = $this.m3x_1;
        var condition_0 = hasComma;
        var position_0 = this_1.s3x_1;
        if (!condition_0) {
          // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.decodeMapIndex.<anonymous>' call
          var tmp$ret$1 = 'Expected comma after the key-value pair';
          this_1.r41(tmp$ret$1, position_0);
        }
      }
    }
    $this.o3x_1 = $this.o3x_1 + 1 | 0;
    tmp = $this.o3x_1;
  } else {
    if (hasComma) {
      $this.m3x_1.r41("Expected '}', but had ',' instead");
    }
    tmp = -1;
  }
  return tmp;
}
function coerceInputValue($this, descriptor, index) {
  var tmp$ret$1;
  $l$block_2: {
    // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue' call
    var this_0 = $this.k3x_1;
    var elementDescriptor = descriptor.d3b(index);
    var tmp;
    if (!elementDescriptor.t3a()) {
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
      tmp = $this.m3x_1.w44(true);
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$1 = true;
      break $l$block_2;
    }
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(elementDescriptor.b3b(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ENUM_getInstance3doea03ve3rgg)())) {
      var tmp_0;
      if (elementDescriptor.t3a()) {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
        tmp_0 = $this.m3x_1.w44(false);
      } else {
        tmp_0 = false;
      }
      if (tmp_0) {
        tmp$ret$1 = false;
        break $l$block_2;
      }
      // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
      var tmp0_elvis_lhs = $this.m3x_1.x44($this.q3x_1.o3y_1);
      var tmp_1;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$1 = false;
        break $l$block_2;
      } else {
        tmp_1 = tmp0_elvis_lhs;
      }
      var enumValue = tmp_1;
      var enumIndex = getJsonNameIndex(elementDescriptor, this_0, enumValue);
      if (enumIndex === -3) {
        // Inline function 'kotlinx.serialization.json.internal.StreamingJsonDecoder.coerceInputValue.<anonymous>' call
        $this.m3x_1.h43();
        tmp$ret$1 = true;
        break $l$block_2;
      }
    }
    tmp$ret$1 = false;
  }
  return tmp$ret$1;
}
function decodeObjectIndex($this, descriptor) {
  var hasComma = $this.m3x_1.v44();
  while ($this.m3x_1.g43()) {
    hasComma = false;
    var key = decodeStringKey($this);
    $this.m3x_1.u44((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58));
    var index = getJsonNameIndex(descriptor, $this.k3x_1, key);
    var tmp;
    if (!(index === -3)) {
      var tmp_0;
      if ($this.q3x_1.t3y_1 && coerceInputValue($this, descriptor, index)) {
        hasComma = $this.m3x_1.v44();
        tmp_0 = false;
      } else {
        var tmp0_safe_receiver = $this.r3x_1;
        if (tmp0_safe_receiver == null)
          null;
        else {
          tmp0_safe_receiver.p41(index);
        }
        return index;
      }
      tmp = tmp_0;
    } else {
      tmp = true;
    }
    var isUnknown = tmp;
    if (isUnknown) {
      hasComma = handleUnknown($this, key);
    }
  }
  if (hasComma) {
    $this.m3x_1.r41('Unexpected trailing comma');
  }
  var tmp1_safe_receiver = $this.r3x_1;
  var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.q41();
  return tmp2_elvis_lhs == null ? -1 : tmp2_elvis_lhs;
}
function handleUnknown($this, key) {
  if ($this.q3x_1.n3y_1 || trySkip($this.p3x_1, $this, key)) {
    $this.m3x_1.z44($this.q3x_1.o3y_1);
  } else {
    $this.m3x_1.y44(key);
  }
  return $this.m3x_1.v44();
}
function decodeListIndex($this) {
  var hasComma = $this.m3x_1.v44();
  var tmp;
  if ($this.m3x_1.g43()) {
    if (!($this.o3x_1 === -1) && !hasComma) {
      $this.m3x_1.r41('Expected end of the array or comma');
    }
    $this.o3x_1 = $this.o3x_1 + 1 | 0;
    tmp = $this.o3x_1;
  } else {
    if (hasComma) {
      $this.m3x_1.r41('Unexpected trailing comma');
    }
    tmp = -1;
  }
  return tmp;
}
function decodeStringKey($this) {
  var tmp;
  if ($this.q3x_1.o3y_1) {
    tmp = $this.m3x_1.b45();
  } else {
    tmp = $this.m3x_1.a45();
  }
  return tmp;
}
function get_unsignedNumberDescriptors() {
  _init_properties_StreamingJsonEncoder_kt__pn1bsi();
  return unsignedNumberDescriptors;
}
var unsignedNumberDescriptors;
function encodeTypeInfo($this, descriptor) {
  $this.s42_1.n40();
  $this.u3d((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)($this.z42_1));
  $this.s42_1.p40((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58));
  $this.s42_1.o40();
  $this.u3d(descriptor.x3a());
}
function get_isUnsignedNumber(_this__u8e3s4) {
  _init_properties_StreamingJsonEncoder_kt__pn1bsi();
  return _this__u8e3s4.a3b() && get_unsignedNumberDescriptors().h2(_this__u8e3s4);
}
function get_isUnquotedLiteral(_this__u8e3s4) {
  _init_properties_StreamingJsonEncoder_kt__pn1bsi();
  return _this__u8e3s4.a3b() && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(_this__u8e3s4, get_jsonUnquotedLiteralDescriptor());
}
var properties_initialized_StreamingJsonEncoder_kt_6ifwwk;
function _init_properties_StreamingJsonEncoder_kt__pn1bsi() {
  if (!properties_initialized_StreamingJsonEncoder_kt_6ifwwk) {
    properties_initialized_StreamingJsonEncoder_kt_6ifwwk = true;
    unsignedNumberDescriptors = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.setOf45ia9pnfhe90)([(0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer3ikrxnm8b29d6)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_getInstance1z323tr26bmxd)()).u38(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer2lw83vwvpnyms)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_getInstance1poxudqc1ru3p)()).u38(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer36584sjyg5661)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_getInstance374brtr06v94p)()).u38(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.serializer1q7c5q67ysppr)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_getInstanceojp2cj59jqir)()).u38()]);
  }
}
function get_ESCAPE_STRINGS() {
  _init_properties_StringOps_kt__fcy1db();
  return ESCAPE_STRINGS;
}
var ESCAPE_STRINGS;
var ESCAPE_MARKERS;
function toHexChar(i) {
  _init_properties_StringOps_kt__fcy1db();
  var d = i & 15;
  var tmp;
  if (d < 10) {
    // Inline function 'kotlin.code' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(48);
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_0);
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.numberToChar93r9buh19yek)(d + tmp$ret$0 | 0);
  } else {
    var tmp_0 = d - 10 | 0;
    // Inline function 'kotlin.code' call
    var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(97);
    var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_1);
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.numberToChar93r9buh19yek)(tmp_0 + tmp$ret$1 | 0);
  }
  return tmp;
}
function printQuoted(_this__u8e3s4, value) {
  _init_properties_StringOps_kt__fcy1db();
  _this__u8e3s4.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34));
  var lastPos = 0;
  var inductionVariable = 0;
  var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(value) - 1 | 0;
  if (inductionVariable <= last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.code' call
      var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(value, i);
      var c = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_0);
      if (c < get_ESCAPE_STRINGS().length && !(get_ESCAPE_STRINGS()[c] == null)) {
        _this__u8e3s4.xf(value, lastPos, i);
        _this__u8e3s4.la(get_ESCAPE_STRINGS()[c]);
        lastPos = i + 1 | 0;
      }
    }
     while (inductionVariable <= last);
  if (!(lastPos === 0)) {
    _this__u8e3s4.xf(value, lastPos, value.length);
  } else {
    _this__u8e3s4.la(value);
  }
  _this__u8e3s4.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34));
}
function toBooleanStrictOrNull(_this__u8e3s4) {
  _init_properties_StringOps_kt__fcy1db();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2v6cggk171b6e)(_this__u8e3s4, 'true', true) ? true : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2v6cggk171b6e)(_this__u8e3s4, 'false', true) ? false : null;
}
var properties_initialized_StringOps_kt_wzaea7;
function _init_properties_StringOps_kt__fcy1db() {
  if (!properties_initialized_StringOps_kt_wzaea7) {
    properties_initialized_StringOps_kt_wzaea7 = true;
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.arrayOfNulls' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.fillArrayVali8eppxapiek4)(Array(93), null);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.internal.ESCAPE_STRINGS.<anonymous>' call
    var inductionVariable = 0;
    if (inductionVariable <= 31)
      do {
        var c = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var c1 = toHexChar(c >> 12);
        var c2 = toHexChar(c >> 8);
        var c3 = toHexChar(c >> 4);
        var c4 = toHexChar(c);
        this_0[c] = '\\u' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(c1) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(c2) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(c3) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(c4);
      }
       while (inductionVariable <= 31);
    // Inline function 'kotlin.code' call
    var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34);
    this_0[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_1)] = '\\"';
    // Inline function 'kotlin.code' call
    var this_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(92);
    this_0[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_2)] = '\\\\';
    // Inline function 'kotlin.code' call
    var this_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9);
    this_0[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_3)] = '\\t';
    // Inline function 'kotlin.code' call
    var this_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(8);
    this_0[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_4)] = '\\b';
    // Inline function 'kotlin.code' call
    var this_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10);
    this_0[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_5)] = '\\n';
    // Inline function 'kotlin.code' call
    var this_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13);
    this_0[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_6)] = '\\r';
    this_0[12] = '\\f';
    ESCAPE_STRINGS = this_0;
    // Inline function 'kotlin.apply' call
    var this_7 = new Int8Array(93);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.internal.ESCAPE_MARKERS.<anonymous>' call
    var inductionVariable_0 = 0;
    if (inductionVariable_0 <= 31)
      do {
        var c_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        this_7[c_0] = 1;
      }
       while (inductionVariable_0 <= 31);
    // Inline function 'kotlin.code' call
    var this_8 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34);
    this_7[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_8)] = 34;
    // Inline function 'kotlin.code' call
    var this_9 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(92);
    this_7[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_9)] = 92;
    // Inline function 'kotlin.code' call
    var this_10 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(9);
    this_7[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_10)] = 116;
    // Inline function 'kotlin.code' call
    var this_11 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(8);
    this_7[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_11)] = 98;
    // Inline function 'kotlin.code' call
    var this_12 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(10);
    this_7[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_12)] = 110;
    // Inline function 'kotlin.code' call
    var this_13 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(13);
    this_7[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_13)] = 114;
    this_7[12] = 102;
    ESCAPE_MARKERS = this_7;
  }
}
function currentObject($this) {
  var tmp0_safe_receiver = $this.y3p();
  var tmp;
  if (tmp0_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlinx.serialization.json.internal.AbstractJsonTreeDecoder.currentObject.<anonymous>' call
    tmp = $this.t45(tmp0_safe_receiver);
  }
  var tmp1_elvis_lhs = tmp;
  return tmp1_elvis_lhs == null ? $this.l1() : tmp1_elvis_lhs;
}
function unparsedPrimitive($this, primitive) {
  throw JsonDecodingException_0(-1, "Failed to parse '" + primitive + "'", (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(currentObject($this)));
}
function asLiteral(_this__u8e3s4, $this, type) {
  var tmp0_elvis_lhs = _this__u8e3s4 instanceof JsonLiteral ? _this__u8e3s4 : null;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    throw JsonDecodingException_1(-1, "Unexpected 'null' when " + type + ' was expected');
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function coerceInputValue_0($this, descriptor, index, tag) {
  var tmp$ret$1;
  $l$block_2: {
    // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue' call
    var this_0 = $this.z3y();
    var elementDescriptor = descriptor.d3b(index);
    var tmp;
    if (!elementDescriptor.t3a()) {
      // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
      var tmp_0 = $this.t45(tag);
      tmp = tmp_0 instanceof JsonNull;
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$1 = true;
      break $l$block_2;
    }
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(elementDescriptor.b3b(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ENUM_getInstance3doea03ve3rgg)())) {
      var tmp_1;
      if (elementDescriptor.t3a()) {
        // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
        var tmp_2 = $this.t45(tag);
        tmp_1 = tmp_2 instanceof JsonNull;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp$ret$1 = false;
        break $l$block_2;
      }
      // Inline function 'kotlinx.serialization.json.internal.JsonTreeDecoder.coerceInputValue.<anonymous>' call
      var tmp_3 = $this.t45(tag);
      var tmp0_safe_receiver = tmp_3 instanceof JsonPrimitive ? tmp_3 : null;
      var tmp0_elvis_lhs = tmp0_safe_receiver == null ? null : get_contentOrNull(tmp0_safe_receiver);
      var tmp_4;
      if (tmp0_elvis_lhs == null) {
        tmp$ret$1 = false;
        break $l$block_2;
      } else {
        tmp_4 = tmp0_elvis_lhs;
      }
      var enumValue = tmp_4;
      var enumIndex = getJsonNameIndex(elementDescriptor, this_0, enumValue);
      if (enumIndex === -3) {
        // Inline function 'kotlinx.serialization.json.internal.tryCoerceValue.<anonymous>' call
        tmp$ret$1 = true;
        break $l$block_2;
      }
    }
    tmp$ret$1 = false;
  }
  return tmp$ret$1;
}
function absenceIsNull($this, descriptor, index) {
  $this.p46_1 = (!$this.z3y().g3x_1.r3y_1 && !descriptor.g3b(index) && descriptor.d3b(index).t3a());
  return $this.p46_1;
}
function readPolymorphicJson(_this__u8e3s4, discriminator, element, deserializer) {
  return (new JsonTreeDecoder(_this__u8e3s4, element, discriminator, deserializer.u38())).p3c(deserializer);
}
var WriteMode_OBJ_instance;
var WriteMode_LIST_instance;
var WriteMode_MAP_instance;
var WriteMode_POLY_OBJ_instance;
function values() {
  return [WriteMode_OBJ_getInstance(), WriteMode_LIST_getInstance(), WriteMode_MAP_getInstance(), WriteMode_POLY_OBJ_getInstance()];
}
var WriteMode_entriesInitialized;
function WriteMode_initEntries() {
  if (WriteMode_entriesInitialized)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  WriteMode_entriesInitialized = true;
  WriteMode_OBJ_instance = new WriteMode('OBJ', 0, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(123), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(125));
  WriteMode_LIST_instance = new WriteMode('LIST', 1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(91), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(93));
  WriteMode_MAP_instance = new WriteMode('MAP', 2, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(123), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(125));
  WriteMode_POLY_OBJ_instance = new WriteMode('POLY_OBJ', 3, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(91), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(93));
}
function switchMode(_this__u8e3s4, desc) {
  var tmp0_subject = desc.b3b();
  var tmp;
  if (tmp0_subject instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PolymorphicKindla9gurooefwb) {
    tmp = WriteMode_POLY_OBJ_getInstance();
  } else {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(tmp0_subject, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.LIST_getInstance3iji3zetpdcxm)())) {
      tmp = WriteMode_LIST_getInstance();
    } else {
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(tmp0_subject, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.MAP_getInstance2l4ulrz8ljw5i)())) {
        // Inline function 'kotlinx.serialization.json.internal.selectMapMode' call
        var keyDescriptor = carrierDescriptor(desc.d3b(0), _this__u8e3s4.e3d());
        var keyKind = keyDescriptor.b3b();
        var tmp_0;
        var tmp_1;
        if (keyKind instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveKindndgbuh6is7ze) {
          tmp_1 = true;
        } else {
          tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(keyKind, (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.ENUM_getInstance3doea03ve3rgg)());
        }
        if (tmp_1) {
          // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
          tmp_0 = WriteMode_MAP_getInstance();
        } else {
          if (_this__u8e3s4.g3x_1.p3y_1) {
            // Inline function 'kotlinx.serialization.json.internal.switchMode.<anonymous>' call
            tmp_0 = WriteMode_LIST_getInstance();
          } else {
            throw InvalidKeyKindException(keyDescriptor);
          }
        }
        tmp = tmp_0;
      } else {
        tmp = WriteMode_OBJ_getInstance();
      }
    }
  }
  return tmp;
}
function carrierDescriptor(_this__u8e3s4, module_0) {
  var tmp;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(_this__u8e3s4.b3b(), (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.CONTEXTUAL_getInstance40twmib99zqv)())) {
    var tmp0_safe_receiver = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.getContextualDescriptor2n1gf3b895yb8)(module_0, _this__u8e3s4);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : carrierDescriptor(tmp0_safe_receiver, module_0);
    tmp = tmp1_elvis_lhs == null ? _this__u8e3s4 : tmp1_elvis_lhs;
  } else if (_this__u8e3s4.a3b()) {
    tmp = carrierDescriptor(_this__u8e3s4.d3b(0), module_0);
  } else {
    tmp = _this__u8e3s4;
  }
  return tmp;
}
function WriteMode_OBJ_getInstance() {
  WriteMode_initEntries();
  return WriteMode_OBJ_instance;
}
function WriteMode_LIST_getInstance() {
  WriteMode_initEntries();
  return WriteMode_LIST_instance;
}
function WriteMode_MAP_getInstance() {
  WriteMode_initEntries();
  return WriteMode_MAP_instance;
}
function WriteMode_POLY_OBJ_getInstance() {
  WriteMode_initEntries();
  return WriteMode_POLY_OBJ_instance;
}
function appendEscape($this, lastPosition, current) {
  $this.s47(lastPosition, current);
  return appendEsc($this, current + 1 | 0);
}
function decodedString($this, lastPosition, currentPosition) {
  $this.s47(lastPosition, currentPosition);
  var result = $this.v3x_1.toString();
  $this.v3x_1.cg(0);
  return result;
}
function takePeeked($this) {
  // Inline function 'kotlin.also' call
  var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)($this.u3x_1);
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlinx.serialization.json.internal.AbstractJsonLexer.takePeeked.<anonymous>' call
  $this.u3x_1 = null;
  return this_0;
}
function wasUnquotedString($this) {
  return !((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)($this.t47(), $this.s3x_1 - 1 | 0) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34));
}
function appendEsc($this, startPosition) {
  var currentPosition = startPosition;
  currentPosition = $this.u47(currentPosition);
  if (currentPosition === -1) {
    $this.r41('Expected escape sequence to continue, got EOF');
  }
  var tmp = $this.t47();
  var tmp0 = currentPosition;
  currentPosition = tmp0 + 1 | 0;
  var currentChar = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(tmp, tmp0);
  if (currentChar === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(117)) {
    return appendHex($this, $this.t47(), currentPosition);
  }
  // Inline function 'kotlin.code' call
  var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(currentChar);
  var c = escapeToChar(tmp$ret$0);
  if (c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(0)) {
    $this.r41("Invalid escaped char '" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(currentChar) + "'");
  }
  $this.v3x_1.ma(c);
  return currentPosition;
}
function appendHex($this, source, startPos) {
  if ((startPos + 4 | 0) >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(source)) {
    $this.s3x_1 = startPos;
    $this.v47();
    if (($this.s3x_1 + 4 | 0) >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(source)) {
      $this.r41('Unexpected EOF during unicode escape');
    }
    return appendHex($this, source, $this.s3x_1);
  }
  $this.v3x_1.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.numberToChar93r9buh19yek)((((fromHexChar($this, source, startPos) << 12) + (fromHexChar($this, source, startPos + 1 | 0) << 8) | 0) + (fromHexChar($this, source, startPos + 2 | 0) << 4) | 0) + fromHexChar($this, source, startPos + 3 | 0) | 0));
  return startPos + 4 | 0;
}
function fromHexChar($this, source, currentPosition) {
  var character = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(source, currentPosition);
  var tmp;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(48) <= character ? character <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(57) : false) {
    // Inline function 'kotlin.code' call
    var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(character);
    // Inline function 'kotlin.code' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(48);
    tmp = tmp_0 - (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_0) | 0;
  } else if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(97) <= character ? character <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(102) : false) {
    // Inline function 'kotlin.code' call
    var tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(character);
    // Inline function 'kotlin.code' call
    var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(97);
    tmp = (tmp_1 - (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_1) | 0) + 10 | 0;
  } else if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(65) <= character ? character <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(70) : false) {
    // Inline function 'kotlin.code' call
    var tmp_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(character);
    // Inline function 'kotlin.code' call
    var this_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(65);
    tmp = (tmp_2 - (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_2) | 0) + 10 | 0;
  } else {
    $this.r41("Invalid toHexChar char '" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString26mv3gzfo7fn)(character) + "' in unicode escape");
  }
  return tmp;
}
function consumeBoolean2($this, start) {
  var current = $this.u47(start);
  if (current >= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)($this.t47()) || current === -1) {
    $this.r41('EOF');
  }
  // Inline function 'kotlin.code' call
  var tmp = $this.t47();
  var tmp0 = current;
  current = tmp0 + 1 | 0;
  var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(tmp, tmp0);
  var tmp1_subject = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_0) | 32;
  var tmp_0;
  // Inline function 'kotlin.code' call
  var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(116);
  if (tmp1_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_1)) {
    consumeBooleanLiteral($this, 'rue', current);
    tmp_0 = true;
  } else {
    // Inline function 'kotlin.code' call
    var this_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(102);
    if (tmp1_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_2)) {
      consumeBooleanLiteral($this, 'alse', current);
      tmp_0 = false;
    } else {
      $this.r41("Expected valid boolean literal prefix, but had '" + $this.i43() + "'");
    }
  }
  return tmp_0;
}
function consumeBooleanLiteral($this, literalSuffix, current) {
  if (((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)($this.t47()) - current | 0) < literalSuffix.length) {
    $this.r41('Unexpected end of boolean literal');
  }
  var inductionVariable = 0;
  var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(literalSuffix) - 1 | 0;
  if (inductionVariable <= last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var expected = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)(literalSuffix, i);
      var actual = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceGet1vxk1y5n17t1z)($this.t47(), current + i | 0);
      // Inline function 'kotlin.code' call
      var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(expected);
      // Inline function 'kotlin.code' call
      if (!(tmp === ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(actual) | 32))) {
        $this.r41("Expected valid boolean literal prefix, but had '" + $this.i43() + "'");
      }
    }
     while (inductionVariable <= last);
  $this.s3x_1 = current + literalSuffix.length | 0;
}
function charToTokenClass(c) {
  var tmp;
  // Inline function 'kotlin.code' call
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(c) < 126) {
    var tmp_0 = CharMappings_getInstance().d48_1;
    // Inline function 'kotlin.code' call
    tmp = tmp_0[(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(c)];
  } else {
    tmp = 0;
  }
  return tmp;
}
function escapeToChar(c) {
  return c < 117 ? CharMappings_getInstance().c48_1[c] : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(0);
}
function initEscape($this) {
  var inductionVariable = 0;
  if (inductionVariable <= 31)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      initC2ESC($this, i, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(117));
    }
     while (inductionVariable <= 31);
  initC2ESC($this, 8, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(98));
  initC2ESC($this, 9, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(116));
  initC2ESC($this, 10, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(110));
  initC2ESC($this, 12, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(102));
  initC2ESC($this, 13, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(114));
  initC2ESC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(47), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(47));
  initC2ESC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34));
  initC2ESC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(92), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(92));
}
function initCharToToken($this) {
  var inductionVariable = 0;
  if (inductionVariable <= 32)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      initC2TC($this, i, 127);
    }
     while (inductionVariable <= 32);
  initC2TC($this, 9, 3);
  initC2TC($this, 10, 3);
  initC2TC($this, 13, 3);
  initC2TC($this, 32, 3);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(44), 4);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(58), 5);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(123), 6);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(125), 7);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(91), 8);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(93), 9);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(34), 1);
  initC2TC_0($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(92), 2);
}
function initC2ESC($this, c, esc) {
  if (!(esc === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__._Char___init__impl__6a9atx35f3p1971c8nj)(117))) {
    // Inline function 'kotlin.code' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(esc);
    $this.c48_1[tmp$ret$0] = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.numberToChar93r9buh19yek)(c);
  }
}
function initC2ESC_0($this, c, esc) {
  // Inline function 'kotlin.code' call
  var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(c);
  return initC2ESC($this, tmp$ret$0, esc);
}
function initC2TC($this, c, cl) {
  $this.d48_1[c] = cl;
}
function initC2TC_0($this, c, cl) {
  // Inline function 'kotlin.code' call
  var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(c);
  return initC2TC($this, tmp$ret$0, cl);
}
var CharMappings_instance;
function CharMappings_getInstance() {
  if (CharMappings_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new CharMappings();
  return CharMappings_instance;
}
function get_schemaCache(_this__u8e3s4) {
  return _this__u8e3s4.i3x_1;
}
function createMapForCache(initialCapacity) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.HashMap1a0ld5kgwhmhv.y7(initialCapacity);
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Json, 'Json', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.StringFormat2r2ka8mzcb3mi]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Default, 'Default');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonBuilder, 'JsonBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonImpl, 'JsonImpl');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonClassDiscriminator, 'JsonClassDiscriminator');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonNames, 'JsonNames');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonConfiguration, 'JsonConfiguration');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForInterface1egvbzx539z91)(JsonDecoder, 'JsonDecoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.Decoder23nde051s631g, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.CompositeDecoder2tzm7wpwkr0og]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonElement, 'JsonElement', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, {0: JsonElementSerializer_getInstance});
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion_0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonObject, 'JsonObject', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [JsonElement, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.KtMap140uvy3s5zad8], _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, {0: JsonObjectSerializer_getInstance});
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonPrimitive, 'JsonPrimitive', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, {0: JsonPrimitiveSerializer_getInstance});
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonNull, 'JsonNull', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [JsonPrimitive, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SerializerFactory1qv9hivitncuv], _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, {0: JsonNull_getInstance});
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion_1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonLiteral, 'JsonLiteral');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion_2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonArray, 'JsonArray', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [JsonElement, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.KtList3hktaavzmj137], _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, {0: JsonArraySerializer_getInstance});
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonElementSerializer, 'JsonElementSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.KSerializerzf77vz1967fq]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonObjectDescriptor, 'JsonObjectDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SerialDescriptor2pelqekb5ic3a]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonObjectSerializer, 'JsonObjectSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.KSerializerzf77vz1967fq]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonArrayDescriptor, 'JsonArrayDescriptor', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SerialDescriptor2pelqekb5ic3a]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonArraySerializer, 'JsonArraySerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.KSerializerzf77vz1967fq]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonPrimitiveSerializer, 'JsonPrimitiveSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.KSerializerzf77vz1967fq]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonNullSerializer, 'JsonNullSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.KSerializerzf77vz1967fq]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(JsonLiteralSerializer, 'JsonLiteralSerializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.KSerializerzf77vz1967fq]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(defer$1).t3a = _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.get_isNullable36pbikm8xb7bz;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(defer$1).a3b = _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.get_isInline5x26qrhi9qs6;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(defer$1).y3a = _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.get_annotationshjxdbdcl8kmv;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(defer$1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SerialDescriptor2pelqekb5ic3a]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForInterface1egvbzx539z91)(JsonEncoder, 'JsonEncoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.Encoderqvmrpqtq8hnu]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Composer, 'Composer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ComposerForUnsignedNumbers, 'ComposerForUnsignedNumbers');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ComposerForUnquotedLiterals, 'ComposerForUnquotedLiterals');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ComposerWithPrettyPrint, 'ComposerWithPrettyPrint');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonElementMarker, 'JsonElementMarker');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonException, 'JsonException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonEncodingException, 'JsonEncodingException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonDecodingException, 'JsonDecodingException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Tombstone, 'Tombstone');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonPath, 'JsonPath', JsonPath);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(JsonTreeReader$readDeepRecursive$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($readObjectCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonTreeReader, 'JsonTreeReader', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(PolymorphismValidator).h3s = _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.contextual3hpp1gupsu4al;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(PolymorphismValidator, 'PolymorphismValidator', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.SerializersModuleCollector3dddz14wd7brg]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Key, 'Key', Key);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DescriptorSchemaCache, 'DescriptorSchemaCache', DescriptorSchemaCache);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DiscriminatorHolder, 'DiscriminatorHolder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(StreamingJsonDecoder, 'StreamingJsonDecoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [JsonDecoder, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractDecoder35guh02ubh2hm]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonDecoderForUnsignedTypes, 'JsonDecoderForUnsignedTypes');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(StreamingJsonEncoder, 'StreamingJsonEncoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [JsonEncoder, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEncoder2gxtu3xmy3f8j]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(AbstractJsonTreeDecoder, 'AbstractJsonTreeDecoder', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_0__.NamedValueDecoderzk26ztf92xbq, JsonDecoder]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonTreeDecoder, 'JsonTreeDecoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonTreeListDecoder, 'JsonTreeListDecoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonPrimitiveDecoder, 'JsonPrimitiveDecoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonTreeMapDecoder, 'JsonTreeMapDecoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(WriteMode, 'WriteMode');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(AbstractJsonLexer, 'AbstractJsonLexer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(CharMappings, 'CharMappings');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(StringJsonLexer, 'StringJsonLexer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(JsonToStringWriter, 'JsonToStringWriter', JsonToStringWriter);
//endregion
//region block: init
Companion_instance = new Companion();
Companion_instance_0 = new Companion_0();
Companion_instance_1 = new Companion_1();
Companion_instance_2 = new Companion_2();
Tombstone_instance = new Tombstone();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=kotlinx-serialization-kotlinx-serialization-json-js-ir.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-client-content-negotiation.mjs":
/*!*********************************************************!*\
  !*** ./kotlin/ktor-ktor-client-content-negotiation.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Plugin_getInstance2kzyrw2awmziu: () => (/* binding */ Plugin_getInstance)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ktor-ktor-utils.mjs */ "./kotlin/ktor-ktor-utils.mjs");
/* harmony import */ var _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-client-core.mjs */ "./kotlin/ktor-ktor-client-core.mjs");
/* harmony import */ var _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ktor-ktor-http.mjs */ "./kotlin/ktor-ktor-http.mjs");
/* harmony import */ var _ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ktor-ktor-serialization.mjs */ "./kotlin/ktor-ktor-serialization.mjs");
/* harmony import */ var _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ktor-ktor-io.mjs */ "./kotlin/ktor-ktor-io.mjs");






//region block: imports
//endregion
//region block: pre-declaration
class ConverterRegistration {
  constructor(converter, contentTypeToSend, contentTypeMatcher) {
    this.q35_1 = converter;
    this.r35_1 = contentTypeToSend;
    this.s35_1 = contentTypeMatcher;
  }
}
class ContentNegotiation$Config$defaultMatcher$1 {
  constructor($pattern) {
    this.t35_1 = $pattern;
  }
  u35(contentType) {
    return contentType.o1s(this.t35_1);
  }
}
class ContentNegotiation$Plugin$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.d36_1 = $plugin;
    super(resultContinuation, $box);
  }
  e27($this$intercept, it, $completion) {
    var tmp = this.f27($this$intercept, it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.lb_1 = 1;
            suspendResult = this.d36_1.k36(this.e36_1.g1p_1, this.e36_1.h1o(), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.g36_1 = suspendResult;
            var tmp_0 = this;
            var tmp_1;
            if (this.g36_1 == null) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            } else {
              tmp_1 = this.g36_1;
            }

            tmp_0.h36_1 = tmp_1;
            this.lb_1 = 2;
            suspendResult = this.e36_1.i1o(this.h36_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, it, completion) {
    var i = new ContentNegotiation$Plugin$install$slambda(this.d36_1, completion);
    i.e36_1 = $this$intercept;
    i.f36_1 = it;
    return i;
  }
}
class ContentNegotiation$Plugin$install$slambda_0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.t36_1 = $plugin;
    super(resultContinuation, $box);
  }
  y27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion) {
    var tmp = this.z27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.y27(tmp, p2 instanceof _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__.HttpResponseContainer3r9yzy4mwwvc9 ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.w36_1 = this.v36_1.bi();
            this.x36_1 = this.v36_1.ci();
            var tmp_0 = this;
            var tmp0_elvis_lhs = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.contentType317fn4f991q9a)(this.u36_1.g1p_1.l27());
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              this.u36_1;
              get_LOGGER().j1q('Response doesn\'t have "Content-Type" header, skipping ContentNegotiation plugin');
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0.y36_1 = tmp_1;
            this.z36_1 = (0,_ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_4__.suitableCharset1jgdcpdzbzgzn)(this.u36_1.g1p_1.c2b().m1x());
            this.lb_1 = 1;
            suspendResult = this.t36_1.d37(this.u36_1.g1p_1.c2b().n2b(), this.w36_1, this.x36_1, this.y36_1, this.z36_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.a37_1 = suspendResult;
            var tmp_2 = this;
            var tmp_3;
            if (this.a37_1 == null) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            } else {
              tmp_3 = this.a37_1;
            }

            tmp_2.b37_1 = tmp_3;
            this.c37_1 = new _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__.HttpResponseContainer3r9yzy4mwwvc9(this.w36_1, this.b37_1);
            this.lb_1 = 2;
            suspendResult = this.u36_1.i1o(this.c37_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  z27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, completion) {
    var i = new ContentNegotiation$Plugin$install$slambda_0(this.t36_1, completion);
    i.u36_1 = $this$intercept;
    i.v36_1 = _name_for_destructuring_parameter_0__wldtmu;
    return i;
  }
}
class Config {
  constructor() {
    this.e37_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toMutableSetjdpdbr9jsqq8)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus1ogy4liedzq5j)(get_DefaultIgnoredTypes(), get_DefaultCommonIgnoredTypes()));
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.f37_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  }
  t23(contentType, converter, configuration) {
    var matcher = contentType.equals((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.Application_getInstance1d4ly18wdhadx)().i1r_1) ? JsonContentTypeMatcher_instance : defaultMatcher(this, contentType);
    this.g37(contentType, converter, matcher, configuration);
  }
  g37(contentTypeToSend, converter, contentTypeMatcher, configuration) {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.contracts.contract' call
    configuration(converter);
    var registration = new ConverterRegistration(converter, contentTypeToSend, contentTypeMatcher);
    this.f37_1.g(registration);
  }
}
class Plugin {
  constructor() {
    Plugin_instance = this;
    this.h37_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.AttributeKey3aq8ytwgx54f7('ContentNegotiation');
  }
  k1() {
    return this.h37_1;
  }
  i37(block) {
    // Inline function 'kotlin.apply' call
    var this_0 = new Config();
    // Inline function 'kotlin.contracts.contract' call
    block(this_0);
    var config = this_0;
    return new ContentNegotiation(config.f37_1, config.e37_1);
  }
  r29(block) {
    return this.i37(block);
  }
  j37(plugin, scope) {
    var tmp = (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Phases_getInstance1vc8hva5jz4n3)().j2g_1;
    scope.k26_1.m1p(tmp, ContentNegotiation$Plugin$install$slambda_1(plugin, null));
    var tmp_0 = (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Phases_getInstance4q6m5dkkvp0x)().l29_1;
    scope.l26_1.m1p(tmp_0, ContentNegotiation$Plugin$install$slambda_2(plugin, null));
  }
  s29(plugin, scope) {
    return this.j37(plugin instanceof ContentNegotiation ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class $convertRequestCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, request, body, resultContinuation) {
    super(resultContinuation);
    this.s37_1 = _this__u8e3s4;
    this.t37_1 = request;
    this.u37_1 = body;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 7;
            var tmp0_iterator = this.s37_1.i36_1.w();
            while (tmp0_iterator.x()) {
              var element = tmp0_iterator.y();
              l$ret$1: do {
                get_LOGGER().j1q('Adding Accept=' + element.r35_1.v1q_1 + ' header for ' + this.t37_1.k28_1.toString());
                if (this.t37_1.m28_1.n1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders_getInstancekqele34vb34f)().t1s_1, element.r35_1.toString())) {
                  break l$ret$1;
                }
                (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__.accept2gi3b7wj4jds9)(this.t37_1, element.r35_1);
              }
               while (false);
            }

            var tmp_0;
            var tmp_1 = this.u37_1;
            if (tmp_1 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.OutgoingContent3t2ohmyam9o76) {
              tmp_0 = true;
            } else {
              var tmp$ret$2;
              l$ret$3: do {
                var this_0 = this.s37_1.j36_1;
                var tmp_2;
                if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(this_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Collection1k04j3hzsbod0)) {
                  tmp_2 = this_0.f1();
                } else {
                  tmp_2 = false;
                }
                if (tmp_2) {
                  tmp$ret$2 = false;
                  break l$ret$3;
                }
                var tmp0_iterator_0 = this_0.w();
                while (tmp0_iterator_0.x()) {
                  var element_0 = tmp0_iterator_0.y();
                  if (element_0.ke(this.u37_1)) {
                    tmp$ret$2 = true;
                    break l$ret$3;
                  }
                }
                tmp$ret$2 = false;
              }
               while (false);
              tmp_0 = tmp$ret$2;
            }

            if (tmp_0) {
              get_LOGGER().j1q('Body type ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this.u37_1)) + ' is in ignored types. ' + ('Skipping ContentNegotiation for ' + this.t37_1.k28_1.toString() + '.'));
              return null;
            }

            var tmp_3 = this;
            var tmp0_elvis_lhs = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.contentType2zzm38yxo3syt)(this.t37_1);
            var tmp_4;
            if (tmp0_elvis_lhs == null) {
              this.s37_1;
              get_LOGGER().j1q("Request doesn't have Content-Type header. Skipping ContentNegotiation for " + this.t37_1.k28_1.toString() + '.');
              return null;
            } else {
              tmp_4 = tmp0_elvis_lhs;
            }

            tmp_3.v37_1 = tmp_4;
            var tmp_5 = this.u37_1;
            if (tmp_5 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unitkvevlwgzwiuc) {
              get_LOGGER().j1q('Sending empty body for ' + this.t37_1.k28_1.toString());
              this.t37_1.m28_1.s1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders_getInstancekqele34vb34f)().l1t_1);
              return (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__.EmptyContent_getInstance14idgfcuyuug)();
            }

            var tmp_6 = this;
            var this_1 = this.s37_1.i36_1;
            var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
            var tmp0_iterator_1 = this_1.w();
            while (tmp0_iterator_1.x()) {
              var element_1 = tmp0_iterator_1.y();
              if (element_1.s35_1.u35(this.v37_1)) {
                destination.g(element_1);
              }
            }

            var tmp_7;
            if (!destination.f1()) {
              tmp_7 = destination;
            } else {
              tmp_7 = null;
            }

            var tmp1_elvis_lhs = tmp_7;
            var tmp_8;
            if (tmp1_elvis_lhs == null) {
              this.s37_1;
              get_LOGGER().j1q('None of the registered converters match request Content-Type=' + this.v37_1.toString() + '. ' + ('Skipping ContentNegotiation for ' + this.t37_1.k28_1.toString() + '.'));
              return null;
            } else {
              tmp_8 = tmp1_elvis_lhs;
            }

            tmp_6.w37_1 = tmp_8;
            if (this.t37_1.e2x() == null) {
              get_LOGGER().j1q('Request has unknown body type. Skipping ContentNegotiation for ' + this.t37_1.k28_1.toString() + '.');
              return null;
            }

            this.t37_1.m28_1.s1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders_getInstancekqele34vb34f)().l1t_1);
            this.lb_1 = 1;
            continue $sm;
          case 1:
            var tmp_9 = this;
            tmp_9.y37_1 = this.w37_1;
            this.z37_1 = this.y37_1.w();
            this.lb_1 = 2;
            continue $sm;
          case 2:
            if (!this.z37_1.x()) {
              this.lb_1 = 5;
              continue $sm;
            }

            this.a38_1 = this.z37_1.y();
            var tmp_10 = this;
            tmp_10.b38_1 = this.a38_1;
            this.lb_1 = 3;
            var tmp0_elvis_lhs_0 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.charset1dribv3ku48b1)(this.v37_1);
            var tmp_11 = tmp0_elvis_lhs_0 == null ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_5__.Charsets_getInstancemd62gu5po4os)().l1g_1 : tmp0_elvis_lhs_0;
            var tmp_12 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(this.t37_1.e2x());
            var this_2 = this.u37_1;
            var tmp_13;
            if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this_2, _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.NullBody_instance9oj4j8z4op1j)) {
              tmp_13 = this_2;
            } else {
              tmp_13 = null;
            }

            suspendResult = this.b38_1.q35_1.w23(this.v37_1, tmp_11, tmp_12, tmp_13, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            var result = suspendResult;
            if (!(result == null)) {
              get_LOGGER().j1q('Converted request body using ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.b38_1.q35_1) + ' for ' + this.t37_1.k28_1.toString());
            }

            var result_0 = result;
            if (!(result_0 == null)) {
              this.x37_1 = result_0;
              this.lb_1 = 6;
              continue $sm;
            } else {
              this.lb_1 = 4;
              continue $sm;
            }

          case 4:
            this.lb_1 = 2;
            continue $sm;
          case 5:
            this.x37_1 = null;
            if (false) {}

            this.lb_1 = 6;
            continue $sm;
          case 6:
            var tmp2_elvis_lhs = this.x37_1;
            var tmp_14;
            if (tmp2_elvis_lhs == null) {
              var tmp_15 = "Can't convert " + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.u37_1) + ' with contentType ' + this.v37_1.toString() + ' using converters ';
              throw ContentConverterException.e38(tmp_15 + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.joinToString1cxrrlmo0chqs)(this.w37_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, ContentNegotiation$convertRequest$lambda));
            } else {
              tmp_14 = tmp2_elvis_lhs;
            }

            var serializedContent = tmp_14;
            return serializedContent;
          case 7:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 7) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $convertResponseCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, requestUrl, info, body, responseContentType, charset, resultContinuation) {
    super(resultContinuation);
    this.n38_1 = _this__u8e3s4;
    this.o38_1 = requestUrl;
    this.p38_1 = info;
    this.q38_1 = body;
    this.r38_1 = responseContentType;
    this.s38_1 = charset;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp_0 = this.q38_1;
            if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_0, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_5__.ByteReadChannel2wzou76jce72d)) {
              get_LOGGER().j1q('Response body is already transformed. Skipping ContentNegotiation for ' + this.o38_1.toString() + '.');
              return null;
            }

            if (this.n38_1.j36_1.h2(this.p38_1.z1p_1)) {
              get_LOGGER().j1q('Response body type ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.p38_1.z1p_1) + ' is in ignored types. ' + ('Skipping ContentNegotiation for ' + this.o38_1.toString() + '.'));
              return null;
            }

            var tmp_1 = this;
            var this_0 = this.n38_1.i36_1;
            var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
            var tmp0_iterator = this_0.w();
            while (tmp0_iterator.x()) {
              var element = tmp0_iterator.y();
              if (element.s35_1.u35(this.r38_1)) {
                destination.g(element);
              }
            }

            var destination_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(destination, 10));
            var tmp0_iterator_0 = destination.w();
            while (tmp0_iterator_0.x()) {
              var item = tmp0_iterator_0.y();
              destination_0.g(item.q35_1);
            }

            var tmp_2;
            if (!destination_0.f1()) {
              tmp_2 = destination_0;
            } else {
              tmp_2 = null;
            }

            var tmp0_elvis_lhs = tmp_2;
            var tmp_3;
            if (tmp0_elvis_lhs == null) {
              this.n38_1;
              get_LOGGER().j1q('None of the registered converters match response with Content-Type=' + this.r38_1.toString() + '. ' + ('Skipping ContentNegotiation for ' + this.o38_1.toString() + '.'));
              return null;
            } else {
              tmp_3 = tmp0_elvis_lhs;
            }

            tmp_1.t38_1 = tmp_3;
            this.lb_1 = 1;
            suspendResult = (0,_ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_4__.deserialize3rwoipl45p8oi)(this.t38_1, this.q38_1, this.p38_1, this.s38_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var result = suspendResult;
            if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(result, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_5__.ByteReadChannel2wzou76jce72d)) {
              get_LOGGER().j1q('Response body was converted to ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(result)) + ' for ' + this.o38_1.toString() + '.');
            }

            return result;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class ContentNegotiation {
  constructor(registrations, ignoredTypes) {
    Plugin_getInstance();
    this.i36_1 = registrations;
    this.j36_1 = ignoredTypes;
  }
  k36(request, body, $completion) {
    var tmp = new $convertRequestCOROUTINE$0(this, request, body, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  d37(requestUrl, info, body, responseContentType, charset, $completion) {
    var tmp = new $convertResponseCOROUTINE$1(this, requestUrl, info, body, responseContentType, charset, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
}
class ContentConverterException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {
  static e38(message) {
    var $this = this.t4(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.d38_1);
    return $this;
  }
}
class JsonContentTypeMatcher {
  u35(contentType) {
    if (contentType.o1s((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.Application_getInstance1d4ly18wdhadx)().i1r_1)) {
      return true;
    }
    var value = contentType.n1s().toString();
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.startsWith26w8qjqapeeq6)(value, 'application/') && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.endsWith3cq61xxngobwh)(value, '+json');
  }
}
//endregion
function get_LOGGER() {
  _init_properties_ContentNegotiation_kt__o183go();
  return LOGGER;
}
var LOGGER;
function get_DefaultCommonIgnoredTypes() {
  _init_properties_ContentNegotiation_kt__o183go();
  return DefaultCommonIgnoredTypes;
}
var DefaultCommonIgnoredTypes;
function defaultMatcher($this, pattern) {
  return new ContentNegotiation$Config$defaultMatcher$1(pattern);
}
function ContentNegotiation$Plugin$install$slambda_1($plugin, resultContinuation) {
  var i = new ContentNegotiation$Plugin$install$slambda($plugin, resultContinuation);
  var l = function ($this$intercept, it, $completion) {
    return i.e27($this$intercept, it, $completion);
  };
  l.$arity = 2;
  return l;
}
function ContentNegotiation$Plugin$install$slambda_2($plugin, resultContinuation) {
  var i = new ContentNegotiation$Plugin$install$slambda_0($plugin, resultContinuation);
  var l = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion) {
    return i.y27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion);
  };
  l.$arity = 2;
  return l;
}
var Plugin_instance;
function Plugin_getInstance() {
  if (Plugin_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Plugin();
  return Plugin_instance;
}
function ContentNegotiation$convertRequest$lambda(it) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(it.q35_1);
}
var properties_initialized_ContentNegotiation_kt_1ayduy;
function _init_properties_ContentNegotiation_kt__o183go() {
  if (!properties_initialized_ContentNegotiation_kt_1ayduy) {
    properties_initialized_ContentNegotiation_kt_1ayduy = true;
    LOGGER = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.contentnegotiation.ContentNegotiation');
    DefaultCommonIgnoredTypes = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setOf45ia9pnfhe90)([(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().mf(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().if(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.HttpStatusCode3o1wkms10pg4k), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_5__.ByteReadChannel2wzou76jce72d), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClass1s3j9wy1cofik)(_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_3__.OutgoingContent3t2ohmyam9o76)]);
  }
}
var JsonContentTypeMatcher_instance;
function JsonContentTypeMatcher_getInstance() {
  return JsonContentTypeMatcher_instance;
}
function get_DefaultIgnoredTypes() {
  _init_properties_DefaultIgnoredTypesJs_kt__rjtdk1();
  return DefaultIgnoredTypes;
}
var DefaultIgnoredTypes;
var properties_initialized_DefaultIgnoredTypesJs_kt_65g2xt;
function _init_properties_DefaultIgnoredTypesJs_kt__rjtdk1() {
  if (!properties_initialized_DefaultIgnoredTypesJs_kt_65g2xt) {
    properties_initialized_DefaultIgnoredTypesJs_kt_65g2xt = true;
    // Inline function 'kotlin.collections.mutableSetOf' call
    DefaultIgnoredTypes = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashSet2tkztfx86kyx2.d1();
  }
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ConverterRegistration, 'ConverterRegistration');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContentNegotiation$Config$defaultMatcher$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(ContentNegotiation$Plugin$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(ContentNegotiation$Plugin$install$slambda_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(Config).u23 = _ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_4__.register$default3vdkjcc7m2cj0;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Config, 'Config', Config, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_4__.Configuration20xgygxdzhlk5]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Plugin, 'Plugin', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_2__.HttpClientPlugin3rce8c1crrw1q]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($convertRequestCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($convertResponseCOROUTINE$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContentNegotiation, 'ContentNegotiation', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [2, 5]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContentConverterException, 'ContentConverterException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(JsonContentTypeMatcher, 'JsonContentTypeMatcher');
//endregion
//region block: init
JsonContentTypeMatcher_instance = new JsonContentTypeMatcher();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-client-content-negotiation.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-client-core.mjs":
/*!******************************************!*\
  !*** ./kotlin/ktor-ktor-client-core.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EmptyContent_getInstance14idgfcuyuug: () => (/* binding */ EmptyContent_getInstance),
/* harmony export */   HttpClient2x7qc5z8fmeal: () => (/* binding */ HttpClient_0),
/* harmony export */   HttpClientEngineBase2tgisnw4e4drr: () => (/* binding */ HttpClientEngineBase),
/* harmony export */   HttpClientEngineConfig53hvl3zmhf7d: () => (/* binding */ HttpClientEngineConfig),
/* harmony export */   HttpClientPlugin3rce8c1crrw1q: () => (/* binding */ HttpClientPlugin),
/* harmony export */   HttpRequestBuilder15f2nnx9sjuv1: () => (/* binding */ HttpRequestBuilder),
/* harmony export */   HttpResponseContainer3r9yzy4mwwvc9: () => (/* binding */ HttpResponseContainer),
/* harmony export */   HttpResponseData2dozo5khuplr6: () => (/* binding */ HttpResponseData),
/* harmony export */   HttpStatement3zxb33q8lku: () => (/* binding */ HttpStatement),
/* harmony export */   Phases_getInstance1vc8hva5jz4n3: () => (/* binding */ Phases_getInstance),
/* harmony export */   Phases_getInstance4q6m5dkkvp0x: () => (/* binding */ Phases_getInstance_1),
/* harmony export */   accept2gi3b7wj4jds9: () => (/* binding */ accept),
/* harmony export */   bearerAuthj128my0vj44j: () => (/* binding */ bearerAuth),
/* harmony export */   callContext1vmlct0otxsqs: () => (/* binding */ callContext),
/* harmony export */   isUpgradeRequest3msdo2i9hxs68: () => (/* binding */ isUpgradeRequest),
/* harmony export */   mergeHeadersub4y73mj759y: () => (/* binding */ mergeHeaders),
/* harmony export */   url2l6iw5ri21nxb: () => (/* binding */ url)
/* harmony export */ });
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-utils.mjs */ "./kotlin/ktor-ktor-utils.mjs");
/* harmony import */ var _kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kotlinx-atomicfu.mjs */ "./kotlin/kotlinx-atomicfu.mjs");
/* harmony import */ var _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ktor-ktor-events.mjs */ "./kotlin/ktor-ktor-events.mjs");
/* harmony import */ var _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ktor-ktor-http.mjs */ "./kotlin/ktor-ktor-http.mjs");
/* harmony import */ var _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ktor-ktor-io.mjs */ "./kotlin/ktor-ktor-io.mjs");







//region block: imports
var imul = Math.imul;
//endregion
//region block: pre-declaration
class HttpClient$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(this$0, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.a27_1 = this$0;
    super(resultContinuation, $box);
  }
  e27($this$intercept, call, $completion) {
    var tmp = this.f27($this$intercept, call, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp_0 = this.c27_1;
            if (!(tmp_0 instanceof HttpClientCall)) {
              var message = 'Error: HttpClientCall expected, but found ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.c27_1) + '(' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(this.c27_1)) + ').';
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
            }

            this.lb_1 = 1;
            suspendResult = this.a27_1.n26_1.f1p(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8, this.c27_1.l27(), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.d27_1 = suspendResult;
            this.c27_1.m27(this.d27_1);
            this.lb_1 = 2;
            suspendResult = this.b27_1.i1o(this.c27_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, call, completion) {
    var i = new HttpClient$slambda(this.a27_1, completion);
    i.b27_1 = $this$intercept;
    i.c27_1 = call;
    return i;
  }
}
class HttpClient$slambda_0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(this$0, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.v27_1 = this$0;
    super(resultContinuation, $box);
  }
  y27($this$intercept, it, $completion) {
    var tmp = this.z27($this$intercept, it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.y27(tmp, p2 instanceof HttpResponseContainer ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.w27_1.j1o(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.mb_1 = 3;
            this.lb_1 = 4;
            continue $sm;
          case 2:
            this.mb_1 = 3;
            var tmp_0 = this.ob_1;
            if (tmp_0 instanceof Error) {
              var cause = this.ob_1;
              this.v27_1.q26_1.h23(get_HttpResponseReceiveFailed(), new HttpResponseReceiveFail(this.w27_1.g1p_1.l27(), cause));
              throw cause;
            } else {
              throw this.ob_1;
            }

          case 3:
            throw this.ob_1;
          case 4:
            this.mb_1 = 3;
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  z27($this$intercept, it, completion) {
    var i = new HttpClient$slambda_0(this.v27_1, completion);
    i.w27_1 = $this$intercept;
    i.x27_1 = it;
    return i;
  }
}
class $executeCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, builder, resultContinuation) {
    super(resultContinuation);
    this.i28_1 = _this__u8e3s4;
    this.j28_1 = builder;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.i28_1.q26_1.h23(get_HttpRequestCreated(), this.j28_1);
            this.lb_1 = 1;
            suspendResult = this.i28_1.k26_1.f1p(this.j28_1, this.j28_1.n28_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult instanceof HttpClientCall ? suspendResult : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class HttpClient {
  static q28(engine, userConfig) {
    userConfig = userConfig === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? new HttpClientConfig() : userConfig;
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createThis2j2avj17cvnv2)(this);
    $this.e26_1 = engine;
    $this.f26_1 = userConfig;
    $this.g26_1 = false;
    $this.h26_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_3__.atomic$boolean$1iggki4z65a2h)(false);
    $this.i26_1 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Job13y4jkazwjho0)($this.e26_1.gn().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183));
    $this.j26_1 = $this.e26_1.gn().xi($this.i26_1);
    $this.k26_1 = new HttpRequestPipeline($this.f26_1.y28_1);
    $this.l26_1 = new HttpResponsePipeline($this.f26_1.y28_1);
    $this.m26_1 = new HttpSendPipeline($this.f26_1.y28_1);
    $this.n26_1 = new HttpReceivePipeline($this.f26_1.y28_1);
    $this.o26_1 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributesJsFn25rjfgcprgprf)(true);
    $this.p26_1 = $this.e26_1.z28();
    $this.q26_1 = new _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__.Events63tfxre48w4z();
    $this.r26_1 = new HttpClientConfig();
    if ($this.g26_1) {
      $this.i26_1.io(HttpClient$lambda($this));
    }
    $this.e26_1.a29($this);
    var tmp = Phases_getInstance_0().f29_1;
    $this.m26_1.m1p(tmp, HttpClient$slambda_1($this, null));
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    var $this$with = $this.f26_1;
    $this.r26_1.g29(Plugin_getInstance_2());
    $this.r26_1.g29(Plugin_getInstance());
    if ($this$with.w28_1) {
      $this.r26_1.h29('DefaultTransformers', HttpClient$lambda_0);
    }
    $this.r26_1.g29(Plugin_getInstance_3());
    $this.r26_1.g29(Companion_getInstance_4());
    if ($this$with.v28_1) {
      $this.r26_1.g29(Plugin_getInstance_1());
    }
    $this.r26_1.i29($this$with);
    if ($this$with.w28_1) {
      $this.r26_1.g29(Plugin_getInstance_0());
    }
    addDefaultResponseValidation($this.r26_1);
    $this.r26_1.a29($this);
    var tmp_0 = Phases_getInstance_1().j29_1;
    $this.l26_1.m1p(tmp_0, HttpClient$slambda_2($this, null));
    return $this;
  }
  static o29(engine, userConfig, manageEngine) {
    var $this = this.q28(engine, userConfig);
    $this.g26_1 = manageEngine;
    return $this;
  }
  gn() {
    return this.j26_1;
  }
  p29(builder, $completion) {
    var tmp = new $executeCOROUTINE$0(this, builder, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  toString() {
    return 'HttpClient[' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.e26_1) + ']';
  }
}
class HttpClientConfig {
  constructor() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.r28_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp_0.s28_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
    var tmp_1 = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp_1.t28_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
    var tmp_2 = this;
    tmp_2.u28_1 = HttpClientConfig$engineConfig$lambda;
    this.v28_1 = true;
    this.w28_1 = true;
    this.x28_1 = false;
    this.y28_1 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PlatformUtils_getInstance3trl22jwg7wgb)().c1m_1;
  }
  t29(plugin, configure) {
    var previousConfigBlock = this.s28_1.q2(plugin.k1());
    // Inline function 'kotlin.collections.set' call
    var this_0 = this.s28_1;
    var key = plugin.k1();
    var value = HttpClientConfig$install$lambda_0(previousConfigBlock, configure);
    this_0.t2(key, value);
    if (this.r28_1.o2(plugin.k1()))
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    // Inline function 'kotlin.collections.set' call
    var this_1 = this.r28_1;
    var key_0 = plugin.k1();
    var value_0 = HttpClientConfig$install$lambda_1(plugin);
    this_1.t2(key_0, value_0);
  }
  g29(plugin, configure, $super) {
    var tmp;
    if (configure === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya) {
      tmp = HttpClientConfig$install$lambda;
    } else {
      tmp = configure;
    }
    configure = tmp;
    var tmp_0;
    if ($super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya) {
      this.t29(plugin, configure);
      tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    } else {
      tmp_0 = $super.t29.call(this, plugin, configure);
    }
    return tmp_0;
  }
  h29(key, block) {
    // Inline function 'kotlin.collections.set' call
    this.t28_1.t2(key, block);
  }
  a29(client) {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = this.r28_1.s2().w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'io.ktor.client.HttpClientConfig.install.<anonymous>' call
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.contracts.contract' call
      element(client);
    }
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_0 = this.t28_1.s2().w();
    while (tmp0_iterator_0.x()) {
      var element_0 = tmp0_iterator_0.y();
      // Inline function 'io.ktor.client.HttpClientConfig.install.<anonymous>' call
      // Inline function 'kotlin.apply' call
      // Inline function 'kotlin.contracts.contract' call
      element_0(client);
    }
  }
  i29(other) {
    this.v28_1 = other.v28_1;
    this.w28_1 = other.w28_1;
    this.x28_1 = other.x28_1;
    // Inline function 'kotlin.collections.plusAssign' call
    var this_0 = this.r28_1;
    var map = other.r28_1;
    this_0.v2(map);
    // Inline function 'kotlin.collections.plusAssign' call
    var this_1 = this.s28_1;
    var map_0 = other.s28_1;
    this_1.v2(map_0);
    // Inline function 'kotlin.collections.plusAssign' call
    var this_2 = this.t28_1;
    var map_1 = other.t28_1;
    this_2.v2(map_1);
  }
}
class Companion {
  constructor() {
    Companion_instance = this;
    this.u29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('CustomResponse');
  }
}
class $bodyNullableCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, info, resultContinuation) {
    super(resultContinuation);
    this.d2a_1 = _this__u8e3s4;
    this.e2a_1 = info;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 10;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.f2a_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.lb_1 = 2;
            continue $sm;
          case 2:
            this.mb_1 = 9;
            this.mb_1 = 8;
            if ((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.instanceOf2cx3k00nj6a0p)(this.d2a_1.l27(), this.e2a_1.z1p_1)) {
              this.f2a_1 = this.d2a_1.l27();
              this.mb_1 = 10;
              this.lb_1 = 7;
              continue $sm;
            } else {
              this.lb_1 = 3;
              continue $sm;
            }

          case 3:
            if (!this.d2a_1.q2a() && !this.d2a_1.h27_1.atomicfu$compareAndSet(false, true)) {
              throw DoubleReceiveException.p2a(this.d2a_1);
            }

            this.g2a_1 = this.d2a_1.r2a().m1k(Companion_getInstance_2().u29_1);
            if (this.g2a_1 == null) {
              this.lb_1 = 4;
              suspendResult = this.d2a_1.s2a(this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.h2a_1 = this.g2a_1;
              this.lb_1 = 5;
              continue $sm;
            }

          case 4:
            this.h2a_1 = suspendResult;
            this.lb_1 = 5;
            continue $sm;
          case 5:
            this.i2a_1 = this.h2a_1;
            this.j2a_1 = new HttpResponseContainer(this.e2a_1, this.i2a_1);
            this.lb_1 = 6;
            suspendResult = this.d2a_1.g27_1.l26_1.f1p(this.d2a_1, this.j2a_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            var ARGUMENT = suspendResult;
            var this_0 = ARGUMENT.u2a_1;
            var tmp_0;
            if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(this_0, _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.NullBody_instance9oj4j8z4op1j)) {
              tmp_0 = this_0;
            } else {
              tmp_0 = null;
            }

            var result = tmp_0;
            if (!(result == null) && !(0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.instanceOf2cx3k00nj6a0p)(result, this.e2a_1.z1p_1)) {
              var from = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(result);
              var to = this.e2a_1.z1p_1;
              throw NoTransformationFoundException.a2b(this.d2a_1.l27(), from, to);
            }

            this.f2a_1 = result;
            this.mb_1 = 10;
            this.lb_1 = 7;
            var tmp_1 = this;
            continue $sm;
          case 7:
            var tmp_2 = this.f2a_1;
            this.mb_1 = 10;
            complete(this.d2a_1.l27());
            return tmp_2;
          case 8:
            this.mb_1 = 9;
            var tmp_3 = this.ob_1;
            if (tmp_3 instanceof Error) {
              var cause = this.ob_1;
              var tmp_4 = this;
              (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.cancel2ztysw4v4hav6)(this.d2a_1.l27(), 'Receive failed', cause);
              throw cause;
            } else {
              throw this.ob_1;
            }

          case 9:
            this.mb_1 = 10;
            var t = this.ob_1;
            complete(this.d2a_1.l27());
            throw t;
          case 10:
            throw this.ob_1;
          case 11:
            this.mb_1 = 10;
            complete(this.d2a_1.l27());
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 10) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class HttpClientCall {
  static b2b(client) {
    Companion_getInstance_2();
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createThis2j2avj17cvnv2)(this);
    $this.g27_1 = client;
    $this.h27_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_3__.atomic$boolean$1iggki4z65a2h)(false);
    $this.k27_1 = false;
    return $this;
  }
  gn() {
    return this.l27().gn();
  }
  r2a() {
    return this.c2b().r2a();
  }
  c2b() {
    var tmp = this.i27_1;
    if (!(tmp == null))
      return tmp;
    else {
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.throwUninitializedPropertyAccessExceptionyynx7gkm73wd)('request');
    }
  }
  l27() {
    var tmp = this.j27_1;
    if (!(tmp == null))
      return tmp;
    else {
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.throwUninitializedPropertyAccessExceptionyynx7gkm73wd)('response');
    }
  }
  static d2b(client, requestData, responseData) {
    Companion_getInstance_2();
    var $this = this.b2b(client);
    $this.i27_1 = new DefaultHttpRequest($this, requestData);
    $this.j27_1 = new DefaultHttpResponse($this, responseData);
    var tmp = responseData.i2b_1;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel2wzou76jce72d)) {
      $this.r2a().o1k(Companion_getInstance_2().u29_1, responseData.i2b_1);
    }
    return $this;
  }
  q2a() {
    return this.k27_1;
  }
  s2a($completion) {
    return this.l27().l2b();
  }
  m2b(info, $completion) {
    var tmp = new $bodyNullableCOROUTINE$1(this, info, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  toString() {
    return 'HttpClientCall[' + this.c2b().n2b().toString() + ', ' + this.l27().o2b().toString() + ']';
  }
  m27(response) {
    this.j27_1 = response;
  }
}
class DoubleReceiveException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr {
  static p2a(call) {
    var $this = this.gc();
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.o2a_1);
    $this.n2a_1 = 'Response already received: ' + call.toString();
    return $this;
  }
  kc() {
    return this.n2a_1;
  }
  get message() {
    return this.kc();
  }
}
class NoTransformationFoundException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.UnsupportedOperationException2tkumpmhredt3 {
  static a2b(response, from, to) {
    var $this = this.c7();
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.z2a_1);
    $this.y2a_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.trimIndent1qytc1wvt8suh)("\n        Expected response body of the type '" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(to) + "' but was '" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(from) + "'\n        In response from `" + get_request(response).n2b().toString() + '`\n        Response status `' + response.o2b().toString() + '`\n        Response header `ContentType: ' + response.m1x().f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().l1t_1) + '` \n        Request header `Accept: ' + get_request(response).m1x().f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().t1s_1) + '`\n        \n        You can read how to resolve NoTransformationFoundException at FAQ: \n        https://ktor.io/docs/faq.html#no-transformation-found-exception\n    ');
    return $this;
  }
  kc() {
    return this.y2a_1;
  }
  get message() {
    return this.kc();
  }
}
class SavedHttpCall extends HttpClientCall {
  static f2c(client, request, response, responseBody) {
    var $this = this.b2b(client);
    $this.d2c_1 = responseBody;
    $this.i27_1 = new SavedHttpRequest($this, request);
    $this.j27_1 = new SavedHttpResponse($this, $this.d2c_1, response);
    $this.e2c_1 = true;
    return $this;
  }
  s2a($completion) {
    return (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel1dp09w1xstn8w)(this.d2c_1);
  }
  q2a() {
    return this.e2c_1;
  }
}
class HttpRequest {}
function get_coroutineContext() {
  return this.i2c().gn();
}
class SavedHttpRequest {
  constructor(call, origin) {
    this.g2c_1 = call;
    this.h2c_1 = origin;
  }
  i2c() {
    return this.g2c_1;
  }
  r2a() {
    return this.h2c_1.r2a();
  }
  gn() {
    return this.h2c_1.gn();
  }
  m1x() {
    return this.h2c_1.m1x();
  }
  j2c() {
    return this.h2c_1.j2c();
  }
  n2b() {
    return this.h2c_1.n2b();
  }
}
class HttpResponse {
  toString() {
    return 'HttpResponse[' + get_request(this).n2b().toString() + ', ' + this.o2b().toString() + ']';
  }
}
class SavedHttpResponse extends HttpResponse {
  constructor(call, body, origin) {
    super();
    this.k2c_1 = call;
    this.l2c_1 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Job13y4jkazwjho0)();
    this.m2c_1 = origin.o2b();
    this.n2c_1 = origin.t2c();
    this.o2c_1 = origin.u2c();
    this.p2c_1 = origin.v2c();
    this.q2c_1 = origin.m1x();
    this.r2c_1 = origin.gn().xi(this.l2c_1);
    this.s2c_1 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel1dp09w1xstn8w)(body);
  }
  i2c() {
    return this.k2c_1;
  }
  o2b() {
    return this.m2c_1;
  }
  t2c() {
    return this.n2c_1;
  }
  u2c() {
    return this.o2c_1;
  }
  v2c() {
    return this.p2c_1;
  }
  m1x() {
    return this.q2c_1;
  }
  gn() {
    return this.r2c_1;
  }
  l2b() {
    return this.s2c_1;
  }
}
class $saveCOROUTINE$3 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, resultContinuation) {
    super(resultContinuation);
    this.x2b_1 = _this__u8e3s4;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.x2b_1.l27().l2b().l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            var responseBody = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.readBytes2b47ed7nra7rg)(ARGUMENT);
            return SavedHttpCall.f2c(this.x2b_1.g27_1, this.x2b_1.c2b(), this.x2b_1.l27(), responseBody);
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class UnsupportedContentTypeException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr {
  static a2d(content) {
    var $this = this.b4('Failed to write body: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(content)));
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.z2c_1);
    return $this;
  }
}
class ObservableContent$content$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(this$0, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.j2d_1 = this$0;
    super(resultContinuation, $box);
  }
  l2d($this$writer, $completion) {
    var tmp = this.m2d($this$writer, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.l2d((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.WriterScope3b0bo1enaee6b) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.j2d_1.o2d_1.z22(this.k2d_1.v1b(), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  m2d($this$writer, completion) {
    var i = new ObservableContent$content$slambda(this.j2d_1, completion);
    i.k2d_1 = $this$writer;
    return i;
  }
}
class ObservableContent extends _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.ReadChannelContentz1amb4hnpqp4 {
  constructor(delegate, callContext, listener) {
    super();
    this.o2d_1 = delegate;
    this.p2d_1 = callContext;
    this.q2d_1 = listener;
    var tmp = this;
    var tmp0_subject = this.o2d_1;
    var tmp_0;
    if (tmp0_subject instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.ByteArrayContent2n0wb43y6ugs1) {
      tmp_0 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel1dp09w1xstn8w)(this.o2d_1.u22());
    } else {
      if (tmp0_subject instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.ProtocolUpgradexnnpt2xliy8g) {
        throw UnsupportedContentTypeException.a2d(this.o2d_1);
      } else {
        if (tmp0_subject instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.NoContent1bdx48poqrifq) {
          tmp_0 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.Companion_getInstancekyay2rfrglll)().s1c();
        } else {
          if (tmp0_subject instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.ReadChannelContentz1amb4hnpqp4) {
            tmp_0 = this.o2d_1.x22();
          } else {
            if (tmp0_subject instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.WriteChannelContent1d7f40hsfcaxg) {
              var tmp_1 = _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.GlobalScope_instance3rq364dcgnf9q;
              tmp_0 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.writer1eia5its2a1fh)(tmp_1, this.p2d_1, true, ObservableContent$content$slambda_0(this, null)).v1b();
            } else {
              (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.noWhenBranchMatchedException2a6r7ubxgky5j)();
            }
          }
        }
      }
    }
    tmp.r2d_1 = tmp_0;
  }
  s22() {
    return this.o2d_1.s22();
  }
  t22() {
    return this.o2d_1.t22();
  }
  m1x() {
    return this.o2d_1.m1x();
  }
  x22() {
    return observable(this.r2d_1, this.p2d_1, this.t22(), this.q2d_1);
  }
}
class HttpClientEngine$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($client, this$0, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.u2e_1 = $client;
    $box.v2e_1 = this$0;
    super(resultContinuation, $box);
  }
  e27($this$intercept, content, $completion) {
    var tmp = this.f27($this$intercept, content, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp_0 = this;
            var this_0 = new HttpRequestBuilder();
            this_0.d2f(this.w2e_1.g1p_1);
            var body = this.x2e_1;
            if (body == null) {
              this_0.n28_1 = _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.NullBody_instance9oj4j8z4op1j;
              var tmp_1 = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.JsType_instance35xixcvz0qegz;
              var tmp_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().ye();
              var tmp_3;
              try {
                tmp_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createKType1lgox3mzhchp5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().ye(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.arrayOf1akklvh2at202)([]), false);
              } catch ($p) {
                var tmp_4;
                if ($p instanceof Error) {
                  var cause = $p;
                  tmp_4 = null;
                } else {
                  throw $p;
                }
                tmp_3 = tmp_4;
              }
              this_0.e2f((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.typeInfoImpl3ju54ew51hieg)(tmp_1, tmp_2, tmp_3));
            } else {
              if (body instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76) {
                this_0.n28_1 = body;
                this_0.e2f(null);
              } else {
                this_0.n28_1 = body;
                var tmp_5 = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.JsType_instance35xixcvz0qegz;
                var tmp_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().ye();
                var tmp_7;
                try {
                  tmp_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createKType1lgox3mzhchp5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().ye(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.arrayOf1akklvh2at202)([]), false);
                } catch ($p) {
                  var tmp_8;
                  if ($p instanceof Error) {
                    var cause_0 = $p;
                    tmp_8 = null;
                  } else {
                    throw $p;
                  }
                  tmp_7 = tmp_8;
                }
                this_0.e2f((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.typeInfoImpl3ju54ew51hieg)(tmp_5, tmp_6, tmp_7));
              }
            }

            tmp_0.y2e_1 = this_0;
            this.u2e_1.q26_1.h23(get_HttpRequestIsReadyForSending(), this.y2e_1);
            var tmp_9 = this;
            var this_1 = this.y2e_1.y18();
            this_1.j2e_1.o1k(get_CLIENT_CONFIG(), this.u2e_1.r26_1);
            tmp_9.z2e_1 = this_1;
            validateHeaders(this.z2e_1);
            checkExtensions(this.v2e_1, this.z2e_1);
            this.lb_1 = 1;
            suspendResult = executeWithinCallContext(this.v2e_1, this.z2e_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.a2f_1 = suspendResult;
            this.b2f_1 = HttpClientCall.d2b(this.u2e_1, this.z2e_1, this.a2f_1);
            this.c2f_1 = this.b2f_1.l27();
            this.u2e_1.q26_1.h23(get_HttpResponseReceived(), this.c2f_1);
            var tmp_10 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.get_job2zvlvce9o9a29)(this.c2f_1.gn());
            tmp_10.io(HttpClientEngine$install$slambda$lambda(this.u2e_1, this.c2f_1));
            this.lb_1 = 2;
            suspendResult = this.w2e_1.i1o(this.b2f_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, content, completion) {
    var i = new HttpClientEngine$install$slambda(this.u2e_1, this.v2e_1, completion);
    i.w2e_1 = $this$intercept;
    i.x2e_1 = content;
    return i;
  }
}
class HttpClientEngine$executeWithinCallContext$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(this$0, $requestData, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.n2f_1 = this$0;
    $box.o2f_1 = $requestData;
    super(resultContinuation, $box);
  }
  q2f($this$async, $completion) {
    var tmp = this.p1c($this$async, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.q2f((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineScopefcb5f5dwqcas) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            if (_get_closed__iwkfs1(this.n2f_1)) {
              throw ClientEngineClosedException.w2f();
            }

            this.lb_1 = 1;
            suspendResult = this.n2f_1.x2f(this.o2f_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  p1c($this$async, completion) {
    var i = new HttpClientEngine$executeWithinCallContext$slambda(this.n2f_1, this.o2f_1, completion);
    i.p2f_1 = $this$async;
    return i;
  }
}
class $executeWithinCallContextCOROUTINE$4 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, requestData, resultContinuation) {
    super(resultContinuation);
    this.a2e_1 = _this__u8e3s4;
    this.b2e_1 = requestData;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.lb_1 = 1;
            suspendResult = createCallContext(this.a2e_1, this.b2e_1.i2e_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.c2e_1 = suspendResult;
            this.d2e_1 = this.c2e_1.xi(new KtorCallContextElement(this.c2e_1));
            this.lb_1 = 2;
            suspendResult = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.asyncz02dsa2nb2zt)(this.a2e_1, this.d2e_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, HttpClientEngine$executeWithinCallContext$slambda_0(this.a2e_1, this.b2e_1, null)).wp(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return suspendResult;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class HttpClientEngine {}
function get_supportedCapabilities() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.emptySetcxexqki71qfa)();
}
function install(client) {
  var tmp = Phases_getInstance_0().e29_1;
  client.m26_1.m1p(tmp, HttpClientEngine$install$slambda_0(client, this, null));
}
class ClientEngineClosedException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr {
  static w2f(cause) {
    cause = cause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : cause;
    var $this = this.b4('Client already closed');
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.v2f_1);
    $this.u2f_1 = cause;
    return $this;
  }
  lc() {
    return this.u2f_1;
  }
  get cause() {
    return this.lc();
  }
}
class HttpClientEngineBase {
  constructor(engineName) {
    this.y2f_1 = engineName;
    this.z2f_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_3__.atomic$boolean$1iggki4z65a2h)(false);
    this.a2g_1 = ioDispatcher();
    var tmp = this;
    tmp.b2g_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.lazy2hsh8ze7j6ikd)(HttpClientEngineBase$coroutineContext$delegate$lambda(this));
  }
  c2g() {
    return this.a2g_1;
  }
  gn() {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.b2g_1;
    coroutineContext$factory();
    return this_0.l1();
  }
  l1f() {
    if (!this.z2f_1.atomicfu$compareAndSet(false, true))
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    var tmp = this.gn().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183);
    var tmp0_elvis_lhs = (!(tmp == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CompletableJob1w6swnu15iclo) : false) ? tmp : null;
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var requestJob = tmp_0;
    requestJob.is();
  }
}
class HttpClientEngineConfig {
  constructor() {
    this.d2g_1 = 4;
    this.e2g_1 = false;
    this.f2g_1 = null;
  }
}
class Companion_0 {}
class KtorCallContextElement {
  constructor(callContext) {
    this.g2g_1 = callContext;
  }
  k1() {
    return Companion_instance_0;
  }
}
class HttpClientPlugin {}
class Plugin {
  constructor() {
    Plugin_instance = this;
    this.p2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('BodyProgress');
  }
  k1() {
    return this.p2g_1;
  }
  q2g(block) {
    return new BodyProgress();
  }
  r29(block) {
    return this.q2g(block);
  }
  r2g(plugin, scope) {
    handle(plugin, scope);
  }
  s29(plugin, scope) {
    return this.r2g(plugin instanceof BodyProgress ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class BodyProgress$handle$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  e27($this$intercept, content, $completion) {
    var tmp = this.f27($this$intercept, content, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp_0 = this;
            var tmp0_elvis_lhs = this.a2h_1.g1p_1.p28_1.m1k(get_UploadProgressListenerAttributeKey());
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0.c2h_1 = tmp_1;
            var tmp_2 = this;
            var tmp_3 = this.b2h_1;
            tmp_2.d2h_1 = new ObservableContent(tmp_3 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76 ? tmp_3 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), this.a2h_1.g1p_1.o28_1, this.c2h_1);
            this.lb_1 = 1;
            suspendResult = this.a2h_1.i1o(this.d2h_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, content, completion) {
    var i = new BodyProgress$handle$slambda(completion);
    i.a2h_1 = $this$intercept;
    i.b2h_1 = content;
    return i;
  }
}
class BodyProgress$handle$slambda_0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  q2h($this$intercept, response, $completion) {
    var tmp = this.r2h($this$intercept, response, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.q2h(tmp, p2 instanceof HttpResponse ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp_0 = this;
            var tmp0_elvis_lhs = this.n2h_1.i2c().c2b().r2a().m1k(get_DownloadProgressListenerAttributeKey());
            var tmp_1;
            if (tmp0_elvis_lhs == null) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            } else {
              tmp_1 = tmp0_elvis_lhs;
            }

            tmp_0.o2h_1 = tmp_1;
            this.p2h_1 = withObservableDownload(this.n2h_1, this.o2h_1);
            this.lb_1 = 1;
            suspendResult = this.m2h_1.i1o(this.p2h_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  r2h($this$intercept, response, completion) {
    var i = new BodyProgress$handle$slambda_0(completion);
    i.m2h_1 = $this$intercept;
    i.n2h_1 = response;
    return i;
  }
}
class BodyProgress {
  constructor() {
    Plugin_getInstance();
  }
}
class ResponseException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr {
  static x2h(response, cachedResponseText) {
    var $this = this.b4('Bad response: ' + response.toString() + '. Text: "' + cachedResponseText + '"');
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.w2h_1);
    $this.v2h_1 = response;
    return $this;
  }
}
class RedirectResponseException extends ResponseException {
  static f2i(response, cachedResponseText) {
    var $this = this.x2h(response, cachedResponseText);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.e2i_1);
    $this.d2i_1 = 'Unhandled redirect: ' + response.i2c().c2b().j2c().v1x_1 + ' ' + response.i2c().c2b().n2b().toString() + '. ' + ('Status: ' + response.o2b().toString() + '. Text: "' + cachedResponseText + '"');
    return $this;
  }
  kc() {
    return this.d2i_1;
  }
  get message() {
    return this.kc();
  }
}
class ClientRequestException extends ResponseException {
  static n2i(response, cachedResponseText) {
    var $this = this.x2h(response, cachedResponseText);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.m2i_1);
    $this.l2i_1 = 'Client request(' + response.i2c().c2b().j2c().v1x_1 + ' ' + response.i2c().c2b().n2b().toString() + ') ' + ('invalid: ' + response.o2b().toString() + '. Text: "' + cachedResponseText + '"');
    return $this;
  }
  kc() {
    return this.l2i_1;
  }
  get message() {
    return this.kc();
  }
}
class ServerResponseException extends ResponseException {
  static v2i(response, cachedResponseText) {
    var $this = this.x2h(response, cachedResponseText);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.u2i_1);
    $this.t2i_1 = 'Server error(' + response.i2c().c2b().j2c().v1x_1 + ' ' + response.i2c().c2b().n2b().toString() + ': ' + (response.o2b().toString() + '. Text: "' + cachedResponseText + '"');
    return $this;
  }
  kc() {
    return this.t2i_1;
  }
  get message() {
    return this.kc();
  }
}
class addDefaultResponseValidation$lambda$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  m2j(response, $completion) {
    var tmp = this.n2j(response, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.m2j(p1 instanceof HttpResponse ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            this.f2j_1 = this.e2j_1.i2c().r2a().l1k(get_ExpectSuccessAttributeKey());
            if (!this.f2j_1) {
              get_LOGGER().j1q('Skipping default response validation for ' + this.e2j_1.i2c().c2b().n2b().toString());
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            }

            this.g2j_1 = this.e2j_1.o2b().h20_1;
            this.h2j_1 = this.e2j_1.i2c();
            if (this.g2j_1 < 300 || this.h2j_1.r2a().n1k(get_ValidateMark())) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            }

            this.lb_1 = 1;
            suspendResult = save(this.h2j_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.i2j_1 = suspendResult;
            this.i2j_1.r2a().o1k(get_ValidateMark(), _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8);
            this.j2j_1 = this.i2j_1;
            this.k2j_1 = this.j2j_1.l27();
            this.mb_1 = 3;
            this.lb_1 = 2;
            suspendResult = bodyAsText(this.k2j_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.l2j_1 = suspendResult;
            this.mb_1 = 5;
            this.lb_1 = 4;
            continue $sm;
          case 3:
            this.mb_1 = 5;
            var tmp_0 = this.ob_1;
            if (tmp_0 instanceof _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.MalformedInputExceptionbvc6h5ij0ias) {
              var _ = this.ob_1;
              var tmp_1 = this;
              tmp_1.l2j_1 = '<body failed decoding>';
              this.lb_1 = 4;
              continue $sm;
            } else {
              throw this.ob_1;
            }

          case 4:
            this.mb_1 = 5;
            var exceptionResponseText = this.l2j_1;
            var tmp0_subject = this.g2j_1;
            var exception = (300 <= tmp0_subject ? tmp0_subject <= 399 : false) ? RedirectResponseException.f2i(this.k2j_1, exceptionResponseText) : (400 <= tmp0_subject ? tmp0_subject <= 499 : false) ? ClientRequestException.n2i(this.k2j_1, exceptionResponseText) : (500 <= tmp0_subject ? tmp0_subject <= 599 : false) ? ServerResponseException.v2i(this.k2j_1, exceptionResponseText) : ResponseException.x2h(this.k2j_1, exceptionResponseText);
            get_LOGGER().j1q('Default response validation for ' + this.e2j_1.i2c().c2b().n2b().toString() + ' failed with ' + exception.toString());
            throw exception;
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  n2j(response, completion) {
    var i = new addDefaultResponseValidation$lambda$slambda(completion);
    i.e2j_1 = response;
    return i;
  }
}
class defaultTransformers$1$content$1 extends _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.ByteArrayContent2n0wb43y6ugs1 {
  constructor($contentType, $body, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.v2j_1 = $body;
    super($box);
    var tmp = this;
    tmp.t2j_1 = $contentType == null ? (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Application_getInstance1d4ly18wdhadx)().l1r_1 : $contentType;
    this.u2j_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)($body.length);
  }
  s22() {
    return this.t2j_1;
  }
  t22() {
    return this.u2j_1;
  }
  u22() {
    return this.v2j_1;
  }
}
class defaultTransformers$1$content$2 extends _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.ReadChannelContentz1amb4hnpqp4 {
  constructor($this_intercept, $contentType, $body, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.z2j_1 = $body;
    super($box);
    var tmp = this;
    var tmp0_safe_receiver = $this_intercept.g1p_1.m28_1.f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().i1t_1);
    tmp.x2j_1 = tmp0_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongkk4waq8msp1k)(tmp0_safe_receiver);
    var tmp_0 = this;
    tmp_0.y2j_1 = $contentType == null ? (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Application_getInstance1d4ly18wdhadx)().l1r_1 : $contentType;
  }
  t22() {
    return this.x2j_1;
  }
  s22() {
    return this.y2j_1;
  }
  x22() {
    return this.z2j_1;
  }
}
class defaultTransformers$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  e27($this$intercept, body, $completion) {
    var tmp = this.f27($this$intercept, body, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            if (this.i2k_1.g1p_1.m28_1.f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().t1s_1) == null) {
              this.i2k_1.g1p_1.m28_1.q1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().t1s_1, '*/*');
            }

            this.k2k_1 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.contentType2zzm38yxo3syt)(this.i2k_1.g1p_1);
            var tmp_0 = this;
            var tmp0_subject = this.j2k_1;
            var tmp_1;
            if (typeof tmp0_subject === 'string') {
              var tmp1_elvis_lhs = this.k2k_1;
              tmp_1 = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.TextContent1rb6ftlpvl1d2(this.j2k_1, tmp1_elvis_lhs == null ? (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Text_getInstance3g3w54guxue7x)().b1s_1 : tmp1_elvis_lhs);
            } else {
              if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isByteArray4nnzfn1x4o3w)(tmp0_subject)) {
                tmp_1 = new defaultTransformers$1$content$1(this.k2k_1, this.j2k_1);
              } else {
                if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp0_subject, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel2wzou76jce72d)) {
                  tmp_1 = new defaultTransformers$1$content$2(this.i2k_1, this.k2k_1, this.j2k_1);
                } else {
                  if (tmp0_subject instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76) {
                    tmp_1 = this.j2k_1;
                  } else {
                    tmp_1 = platformRequestDefaultTransform(this.k2k_1, this.i2k_1.g1p_1, this.j2k_1);
                  }
                }
              }
            }

            tmp_0.l2k_1 = tmp_1;
            var tmp2_safe_receiver = this.l2k_1;
            if (!((tmp2_safe_receiver == null ? null : tmp2_safe_receiver.s22()) == null)) {
              this.i2k_1.g1p_1.m28_1.s1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().l1t_1);
              get_LOGGER_0().j1q('Transformed with default transformers request body for ' + this.i2k_1.g1p_1.k28_1.toString() + ' from ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(this.j2k_1)));
              this.lb_1 = 1;
              suspendResult = this.i2k_1.i1o(this.l2k_1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.lb_1 = 2;
              continue $sm;
            }

          case 1:
            this.lb_1 = 2;
            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, body, completion) {
    var i = new defaultTransformers$slambda(completion);
    i.i2k_1 = $this$intercept;
    i.j2k_1 = body;
    return i;
  }
}
class defaultTransformers$slambda$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($body, $response, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.u2k_1 = $body;
    $box.v2k_1 = $response;
    super(resultContinuation, $box);
  }
  l2d($this$writer, $completion) {
    var tmp = this.m2d($this$writer, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.l2d((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.WriterScope3b0bo1enaee6b) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.mb_1 = 4;
            this.mb_1 = 3;
            this.lb_1 = 2;
            suspendResult = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.copyToaok2mnp3lrmm)(this.u2k_1, this.w2k_1.v1b(), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(-1, 2147483647), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp_0 = this;
            tmp_0.x2k_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.mb_1 = 5;
            this.lb_1 = 6;
            continue $sm;
          case 3:
            this.mb_1 = 4;
            var tmp_1 = this.ob_1;
            if (tmp_1 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CancellationException3b36o9qz53rgr) {
              var cause = this.ob_1;
              var tmp_2 = this;
              (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.cancel36mj9lv3a0whl)(this.v2k_1, cause);
              throw cause;
            } else {
              var tmp_3 = this.ob_1;
              if (tmp_3 instanceof Error) {
                var cause_0 = this.ob_1;
                var tmp_4 = this;
                (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.cancel2ztysw4v4hav6)(this.v2k_1, 'Receive failed', cause_0);
                throw cause_0;
              } else {
                throw this.ob_1;
              }
            }

          case 4:
            this.mb_1 = 5;
            var t = this.ob_1;
            complete(this.v2k_1);
            throw t;
          case 5:
            throw this.ob_1;
          case 6:
            this.mb_1 = 5;
            complete(this.v2k_1);
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  m2d($this$writer, completion) {
    var i = new defaultTransformers$slambda$slambda(this.u2k_1, this.v2k_1, completion);
    i.w2k_1 = $this$writer;
    return i;
  }
}
class defaultTransformers$slambda_0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  y27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion) {
    var tmp = this.z27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.y27(tmp, p2 instanceof HttpResponseContainer ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 11;
            this.i2l_1 = this.h2l_1.bi();
            this.j2l_1 = this.h2l_1.ci();
            var tmp_0 = this.j2l_1;
            if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp_0, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel2wzou76jce72d))
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.k2l_1 = this.g2l_1.g1p_1.l27();
            this.l2l_1 = this.i2l_1.z1p_1;
            if (this.l2l_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unitkvevlwgzwiuc))) {
              (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.canceldn4b3cdqcfny)(this.j2l_1);
              this.lb_1 = 9;
              suspendResult = this.g2l_1.i1o(new HttpResponseContainer(this.i2l_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8), this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              if (this.l2l_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().ef())) {
                this.lb_1 = 7;
                suspendResult = this.j2l_1.l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, this);
                if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                if (this.l2l_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadPacket19qnebry5xxpy)) ? true : this.l2l_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.Input1claccncp4iy3))) {
                  this.lb_1 = 5;
                  suspendResult = this.j2l_1.l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, this);
                  if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  if (this.l2l_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().mf())) {
                    this.lb_1 = 3;
                    suspendResult = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.toByteArray2wlo6zvfmc1un)(this.j2l_1, this);
                    if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                      return suspendResult;
                    }
                    continue $sm;
                  } else {
                    if (this.l2l_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel2wzou76jce72d))) {
                      this.n2l_1 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Job13y4jkazwjho0)(this.k2l_1.gn().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183));
                      var tmp_1 = this;
                      var tmp_2 = this.k2l_1.gn();
                      var this_0 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.writer1eia5its2a1fh)(this.g2l_1, tmp_2, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, defaultTransformers$slambda$slambda_0(this.j2l_1, this.k2l_1, null));
                      this_0.io(defaultTransformers$slambda$lambda(this.n2l_1));
                      tmp_1.o2l_1 = this_0.v1b();
                      this.lb_1 = 2;
                      suspendResult = this.g2l_1.i1o(new HttpResponseContainer(this.i2l_1, this.o2l_1), this);
                      if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                        return suspendResult;
                      }
                      continue $sm;
                    } else {
                      if (this.l2l_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpStatusCode3o1wkms10pg4k))) {
                        (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.canceldn4b3cdqcfny)(this.j2l_1);
                        this.lb_1 = 1;
                        suspendResult = this.g2l_1.i1o(new HttpResponseContainer(this.i2l_1, this.k2l_1.o2b()), this);
                        if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                          return suspendResult;
                        }
                        continue $sm;
                      } else {
                        this.m2l_1 = null;
                        this.lb_1 = 10;
                        continue $sm;
                      }
                    }
                  }
                }
              }
            }

          case 1:
            this.m2l_1 = suspendResult;
            this.lb_1 = 10;
            continue $sm;
          case 2:
            this.m2l_1 = suspendResult;
            this.lb_1 = 10;
            continue $sm;
          case 3:
            this.p2l_1 = suspendResult;
            this.q2l_1 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.contentLength2suzxu1lzutku)(this.k2l_1);
            this.r2l_1 = (!(0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PlatformUtils_getInstance3trl22jwg7wgb)().y1l_1 && this.k2l_1.m1x().f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().g1t_1) == null);
            this.s2l_1 = !this.g2l_1.g1p_1.c2b().j2c().equals((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancepumzx9q4106p)().s1x_1);
            if (this.r2l_1 && this.s2l_1 && !(this.q2l_1 == null) && this.q2l_1.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0)) > 0) {
              if (!(this.p2l_1.length === this.q2l_1.u3())) {
                var message = 'Expected ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString30pk9tzaqopn)(this.q2l_1) + ', actual ' + this.p2l_1.length;
                throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
              }
            }

            this.lb_1 = 4;
            suspendResult = this.g2l_1.i1o(new HttpResponseContainer(this.i2l_1, this.p2l_1), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.m2l_1 = suspendResult;
            this.lb_1 = 10;
            continue $sm;
          case 5:
            this.t2l_1 = suspendResult;
            this.u2l_1 = new HttpResponseContainer(this.i2l_1, this.t2l_1);
            this.lb_1 = 6;
            suspendResult = this.g2l_1.i1o(this.u2l_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            this.m2l_1 = suspendResult;
            this.lb_1 = 10;
            continue $sm;
          case 7:
            this.v2l_1 = suspendResult;
            this.w2l_1 = this.v2l_1.z1f();
            this.x2l_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toInt2q8uldh7sc951)(this.w2l_1);
            this.y2l_1 = new HttpResponseContainer(this.i2l_1, this.x2l_1);
            this.lb_1 = 8;
            suspendResult = this.g2l_1.i1o(this.y2l_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 8:
            this.m2l_1 = suspendResult;
            this.lb_1 = 10;
            continue $sm;
          case 9:
            this.m2l_1 = suspendResult;
            this.lb_1 = 10;
            continue $sm;
          case 10:
            var result = this.m2l_1;
            if (!(result == null)) {
              get_LOGGER_0().j1q('Transformed with default transformers response body ' + ('for ' + this.g2l_1.g1p_1.c2b().n2b().toString() + ' to ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.i2l_1.z1p_1)));
            }

            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 11:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 11) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  z27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, completion) {
    var i = new defaultTransformers$slambda_0(completion);
    i.g2l_1 = $this$intercept;
    i.h2l_1 = _name_for_destructuring_parameter_0__wldtmu;
    return i;
  }
}
class HttpCallValidator$Companion$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.k2m_1 = $plugin;
    super(resultContinuation, $box);
  }
  e27($this$intercept, it, $completion) {
    var tmp = this.f27($this$intercept, it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            this.mb_1 = 3;
            var tmp_0 = get_ExpectSuccessAttributeKey();
            this.l2m_1.g1p_1.p28_1.q1k(tmp_0, HttpCallValidator$Companion$install$slambda$lambda(this.k2m_1));
            this.lb_1 = 1;
            suspendResult = this.l2m_1.i1o(this.m2m_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.mb_1 = 5;
            this.lb_1 = 2;
            continue $sm;
          case 2:
            this.mb_1 = 5;
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 3:
            this.mb_1 = 5;
            var tmp_1 = this.ob_1;
            if (tmp_1 instanceof Error) {
              this.n2m_1 = this.ob_1;
              this.o2m_1 = unwrapCancellationException(this.n2m_1);
              this.lb_1 = 4;
              suspendResult = processException(this.k2m_1, this.o2m_1, HttpRequest_0(this.l2m_1.g1p_1), this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              throw this.ob_1;
            }

          case 4:
            throw this.o2m_1;
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, it, completion) {
    var i = new HttpCallValidator$Companion$install$slambda(this.k2m_1, completion);
    i.l2m_1 = $this$intercept;
    i.m2m_1 = it;
    return i;
  }
}
class HttpCallValidator$Companion$install$slambda_0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.x2m_1 = $plugin;
    super(resultContinuation, $box);
  }
  y27($this$intercept, container, $completion) {
    var tmp = this.z27($this$intercept, container, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.y27(tmp, p2 instanceof HttpResponseContainer ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            this.mb_1 = 3;
            this.lb_1 = 1;
            suspendResult = this.y2m_1.i1o(this.z2m_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.mb_1 = 5;
            this.lb_1 = 2;
            continue $sm;
          case 2:
            this.mb_1 = 5;
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 3:
            this.mb_1 = 5;
            var tmp_0 = this.ob_1;
            if (tmp_0 instanceof Error) {
              this.a2n_1 = this.ob_1;
              this.b2n_1 = unwrapCancellationException(this.a2n_1);
              this.lb_1 = 4;
              suspendResult = processException(this.x2m_1, this.b2n_1, this.y2m_1.g1p_1.c2b(), this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              throw this.ob_1;
            }

          case 4:
            throw this.b2n_1;
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  z27($this$intercept, container, completion) {
    var i = new HttpCallValidator$Companion$install$slambda_0(this.x2m_1, completion);
    i.y2m_1 = $this$intercept;
    i.z2m_1 = container;
    return i;
  }
}
class HttpCallValidator$Companion$install$slambda_1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.k2n_1 = $plugin;
    super(resultContinuation, $box);
  }
  o2n($this$intercept, request, $completion) {
    var tmp = this.p2n($this$intercept, request, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = (!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, Sender) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.o2n(tmp, p2 instanceof HttpRequestBuilder ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.lb_1 = 1;
            suspendResult = this.l2n_1.q2n(this.m2n_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.n2n_1 = suspendResult;
            this.lb_1 = 2;
            suspendResult = validateResponse(this.k2n_1, this.n2n_1.l27(), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return this.n2n_1;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  p2n($this$intercept, request, completion) {
    var i = new HttpCallValidator$Companion$install$slambda_1(this.k2n_1, completion);
    i.l2n_1 = $this$intercept;
    i.m2n_1 = request;
    return i;
  }
}
class Config {
  constructor() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.o2j_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp_0.p2j_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
    this.q2j_1 = true;
  }
  r2j(block) {
    // Inline function 'kotlin.collections.plusAssign' call
    this.o2j_1.g(block);
  }
}
class Companion_1 {
  constructor() {
    Companion_instance_1 = this;
    this.u2o_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('HttpResponseValidator');
  }
  k1() {
    return this.u2o_1;
  }
  v2o(block) {
    // Inline function 'kotlin.apply' call
    var this_0 = new Config();
    // Inline function 'kotlin.contracts.contract' call
    block(this_0);
    var config = this_0;
    return new HttpCallValidator((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.reversed22y3au42jl32b)(config.o2j_1), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.reversed22y3au42jl32b)(config.p2j_1), config.q2j_1);
  }
  r29(block) {
    return this.v2o(block);
  }
  w2o(plugin_0, scope) {
    var tmp = Phases_getInstance().h2g_1;
    scope.k26_1.m1p(tmp, HttpCallValidator$Companion$install$slambda_2(plugin_0, null));
    var BeforeReceive = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('BeforeReceive');
    scope.l26_1.l1p(Phases_getInstance_1().j29_1, BeforeReceive);
    scope.l26_1.m1p(BeforeReceive, HttpCallValidator$Companion$install$slambda_3(plugin_0, null));
    var tmp_0 = plugin(scope, Plugin_getInstance_3());
    tmp_0.z2o(HttpCallValidator$Companion$install$slambda_4(plugin_0, null));
  }
  s29(plugin, scope) {
    return this.w2o(plugin instanceof HttpCallValidator ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class $validateResponseCOROUTINE$5 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, response, resultContinuation) {
    super(resultContinuation);
    this.z2n_1 = _this__u8e3s4;
    this.a2o_1 = response;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            get_LOGGER_1().j1q('Validating response for request ' + this.a2o_1.i2c().c2b().n2b().toString());
            var tmp_0 = this;
            tmp_0.b2o_1 = this.z2n_1.z2l_1;
            this.c2o_1 = this.b2o_1.w();
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!this.c2o_1.x()) {
              this.lb_1 = 3;
              continue $sm;
            }

            this.d2o_1 = this.c2o_1.y();
            this.lb_1 = 2;
            suspendResult = this.d2o_1(this.a2o_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.lb_1 = 1;
            continue $sm;
          case 3:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $processExceptionCOROUTINE$6 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, cause, request, resultContinuation) {
    super(resultContinuation);
    this.m2o_1 = _this__u8e3s4;
    this.n2o_1 = cause;
    this.o2o_1 = request;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 6;
            get_LOGGER_1().j1q('Processing exception ' + this.n2o_1.toString() + ' for request ' + this.o2o_1.n2b().toString());
            var tmp_0 = this;
            tmp_0.p2o_1 = this.m2o_1.a2m_1;
            this.q2o_1 = this.p2o_1.w();
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!this.q2o_1.x()) {
              this.lb_1 = 5;
              continue $sm;
            }

            this.r2o_1 = this.q2o_1.y();
            var tmp_1 = this;
            tmp_1.s2o_1 = this.r2o_1;
            this.t2o_1 = this.s2o_1;
            var tmp_2 = this.t2o_1;
            if (tmp_2 instanceof ExceptionHandlerWrapper) {
              this.lb_1 = 3;
              suspendResult = this.s2o_1.b2p_1(this.n2o_1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              var tmp_3 = this.t2o_1;
              if (tmp_3 instanceof RequestExceptionHandlerWrapper) {
                this.lb_1 = 2;
                suspendResult = this.s2o_1.a2p_1(this.n2o_1, this.o2o_1, this);
                if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.lb_1 = 4;
                continue $sm;
              }
            }

          case 2:
            this.lb_1 = 4;
            continue $sm;
          case 3:
            this.lb_1 = 4;
            continue $sm;
          case 4:
            this.lb_1 = 1;
            continue $sm;
          case 5:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 6:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 6) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class HttpCallValidator {
  constructor(responseValidators, callExceptionHandlers, expectSuccess) {
    Companion_getInstance_4();
    this.z2l_1 = responseValidators;
    this.a2m_1 = callExceptionHandlers;
    this.b2m_1 = expectSuccess;
  }
}
class ExceptionHandlerWrapper {}
class RequestExceptionHandlerWrapper {}
class HttpRequest$1 {
  constructor($builder) {
    this.g2p_1 = $builder;
    this.c2p_1 = $builder.l28_1;
    this.d2p_1 = $builder.k28_1.y18();
    this.e2p_1 = $builder.p28_1;
    this.f2p_1 = $builder.m28_1.y18();
  }
  i2c() {
    var message = 'Call is not initialized';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
  }
  j2c() {
    return this.c2p_1;
  }
  n2b() {
    return this.d2p_1;
  }
  r2a() {
    return this.e2p_1;
  }
  m1x() {
    return this.f2p_1;
  }
}
class HttpPlainText$Plugin$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.p2p_1 = $plugin;
    super(resultContinuation, $box);
  }
  e27($this$intercept, content, $completion) {
    var tmp = this.f27($this$intercept, content, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.p2p_1.w2p(this.q2p_1.g1p_1);
            var tmp_0 = this.r2p_1;
            if (!(typeof tmp_0 === 'string'))
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.s2p_1 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.contentType2zzm38yxo3syt)(this.q2p_1.g1p_1);
            if (!(this.s2p_1 == null) && !(this.s2p_1.v1q_1 === (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Text_getInstance3g3w54guxue7x)().b1s_1.v1q_1)) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            }

            this.lb_1 = 1;
            suspendResult = this.q2p_1.i1o(wrapContent(this.p2p_1, this.q2p_1.g1p_1, this.r2p_1, this.s2p_1), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, content, completion) {
    var i = new HttpPlainText$Plugin$install$slambda(this.p2p_1, completion);
    i.q2p_1 = $this$intercept;
    i.r2p_1 = content;
    return i;
  }
}
class HttpPlainText$Plugin$install$slambda_0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.f2q_1 = $plugin;
    super(resultContinuation, $box);
  }
  y27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion) {
    var tmp = this.z27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.y27(tmp, p2 instanceof HttpResponseContainer ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.i2q_1 = this.h2q_1.bi();
            this.j2q_1 = this.h2q_1.ci();
            var tmp_0;
            if (!this.i2q_1.z1p_1.equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.PrimitiveClasses_getInstance28ukyr6i8fs0q)().if())) {
              tmp_0 = true;
            } else {
              var tmp_1 = this.j2q_1;
              tmp_0 = !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp_1, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel2wzou76jce72d);
            }

            if (tmp_0)
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.lb_1 = 1;
            suspendResult = this.j2q_1.l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.k2q_1 = suspendResult;
            this.l2q_1 = this.f2q_1.m2q(this.g2q_1.g1p_1, this.k2q_1);
            this.lb_1 = 2;
            suspendResult = this.g2q_1.i1o(new HttpResponseContainer(this.i2q_1, this.l2q_1), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  z27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, completion) {
    var i = new HttpPlainText$Plugin$install$slambda_0(this.f2q_1, completion);
    i.g2q_1 = $this$intercept;
    i.h2q_1 = _name_for_destructuring_parameter_0__wldtmu;
    return i;
  }
}
class Config_0 {
  constructor() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableSetOf' call
    tmp.n2q_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashSet2tkztfx86kyx2.d1();
    var tmp_0 = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp_0.o2q_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
    this.p2q_1 = null;
    this.q2q_1 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.Charsets_getInstancemd62gu5po4os)().l1g_1;
  }
}
class Plugin_0 {
  constructor() {
    Plugin_instance_0 = this;
    this.r2q_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('HttpPlainText');
  }
  k1() {
    return this.r2q_1;
  }
  s2q(block) {
    // Inline function 'kotlin.apply' call
    var this_0 = new Config_0();
    // Inline function 'kotlin.contracts.contract' call
    block(this_0);
    var config = this_0;
    // Inline function 'kotlin.with' call
    // Inline function 'kotlin.contracts.contract' call
    return new HttpPlainText(config.n2q_1, config.o2q_1, config.p2q_1, config.q2q_1);
  }
  r29(block) {
    return this.s2q(block);
  }
  t2q(plugin, scope) {
    var tmp = Phases_getInstance().k2g_1;
    scope.k26_1.m1p(tmp, HttpPlainText$Plugin$install$slambda_1(plugin, null));
    var tmp_0 = Phases_getInstance_1().l29_1;
    scope.l26_1.m1p(tmp_0, HttpPlainText$Plugin$install$slambda_2(plugin, null));
  }
  s29(plugin, scope) {
    return this.t2q(plugin instanceof HttpPlainText ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class sam$kotlin_Comparator$0 {
  constructor(function_0) {
    this.u2q_1 = function_0;
  }
  kg(a, b) {
    return this.u2q_1(a, b);
  }
  compare(a, b) {
    return this.kg(a, b);
  }
}
class HttpPlainText {
  constructor(charsets, charsetQuality, sendCharset, responseCharsetFallback) {
    Plugin_getInstance_0();
    this.t2p_1 = responseCharsetFallback;
    // Inline function 'kotlin.collections.sortedByDescending' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toList2zksu85ukrmi)(charsetQuality);
    // Inline function 'kotlin.comparisons.compareByDescending' call
    var tmp = HttpPlainText$lambda;
    var tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
    var withQuality = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.sortedWith2csnbbb21k0lg)(this_0, tmp$ret$0);
    // Inline function 'kotlin.collections.sortedBy' call
    // Inline function 'kotlin.collections.filter' call
    // Inline function 'kotlin.collections.filterTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
    var tmp0_iterator = charsets.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>' call
      if (!charsetQuality.o2(element)) {
        destination.g(element);
      }
    }
    // Inline function 'kotlin.comparisons.compareBy' call
    var tmp_0 = HttpPlainText$lambda_0;
    var tmp$ret$5 = new sam$kotlin_Comparator$0(tmp_0);
    var withoutQuality = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.sortedWith2csnbbb21k0lg)(destination, tmp$ret$5);
    var tmp_1 = this;
    // Inline function 'kotlin.text.buildString' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.StringBuildermazzzhj6kkai.u();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>' call
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_0 = withoutQuality.w();
    while (tmp0_iterator_0.x()) {
      var element_0 = tmp0_iterator_0.y();
      // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.text.isNotEmpty' call
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this_1) > 0) {
        this_1.la(',');
      }
      this_1.la((0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.get_name2f11g4r0d5pxp)(element_0));
    }
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_1 = withQuality.w();
    while (tmp0_iterator_1.x()) {
      var element_1 = tmp0_iterator_1.y();
      // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>.<anonymous>' call
      var charset = element_1.bi();
      var quality = element_1.ci();
      // Inline function 'kotlin.text.isNotEmpty' call
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this_1) > 0) {
        this_1.la(',');
      }
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(0.0 <= quality ? quality <= 1.0 : false)) {
        // Inline function 'kotlin.check.<anonymous>' call
        var message = 'Check failed.';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
      }
      // Inline function 'kotlin.math.roundToInt' call
      var this_2 = 100 * quality;
      var truncatedQuality = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.roundToInt1ue8x8yshtznx)(this_2) / 100.0;
      this_1.la((0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.get_name2f11g4r0d5pxp)(charset) + ';q=' + truncatedQuality);
    }
    // Inline function 'kotlin.text.isEmpty' call
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.charSequenceLength3278n89t01tmv)(this_1) === 0) {
      this_1.la((0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.get_name2f11g4r0d5pxp)(this.t2p_1));
    }
    tmp_1.v2p_1 = this_1.toString();
    var tmp_2 = this;
    var tmp2_elvis_lhs = sendCharset == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.firstOrNull1982767dljvdy)(withoutQuality) : sendCharset;
    var tmp_3;
    if (tmp2_elvis_lhs == null) {
      var tmp1_safe_receiver = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.firstOrNull1982767dljvdy)(withQuality);
      tmp_3 = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.zh_1;
    } else {
      tmp_3 = tmp2_elvis_lhs;
    }
    var tmp3_elvis_lhs = tmp_3;
    tmp_2.u2p_1 = tmp3_elvis_lhs == null ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.Charsets_getInstancemd62gu5po4os)().l1g_1 : tmp3_elvis_lhs;
  }
  m2q(call, body) {
    var tmp0_elvis_lhs = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.charset3qqtyytkmxogi)(call.l27());
    var actualCharset = tmp0_elvis_lhs == null ? this.t2p_1 : tmp0_elvis_lhs;
    get_LOGGER_2().j1q('Reading response body for ' + call.c2b().n2b().toString() + ' as String with charset ' + actualCharset.toString());
    return (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.readText3x4cv5p7hylp)(body, actualCharset);
  }
  w2p(context) {
    if (!(context.m28_1.f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().u1s_1) == null))
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    get_LOGGER_2().j1q('Adding Accept-Charset=' + this.v2p_1 + ' to ' + context.k28_1.toString());
    context.m28_1.o1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().u1s_1, this.v2p_1);
  }
}
class HttpRedirect$Plugin$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, $scope, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.w2r_1 = $plugin;
    $box.x2r_1 = $scope;
    super(resultContinuation, $box);
  }
  o2n($this$intercept, context, $completion) {
    var tmp = this.p2n($this$intercept, context, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = (!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, Sender) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.o2n(tmp, p2 instanceof HttpRequestBuilder ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.lb_1 = 1;
            suspendResult = this.y2r_1.q2n(this.z2r_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.a2s_1 = suspendResult;
            if (this.w2r_1.b2s_1 && !get_ALLOWED_FOR_REDIRECT().h2(this.a2s_1.c2b().j2c())) {
              return this.a2s_1;
            }

            this.lb_1 = 2;
            suspendResult = handleCall(this.y2r_1, Plugin_getInstance_1(), this.z2r_1, this.a2s_1, this.w2r_1.c2s_1, this.x2r_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return suspendResult;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  p2n($this$intercept, context, completion) {
    var i = new HttpRedirect$Plugin$install$slambda(this.w2r_1, this.x2r_1, completion);
    i.y2r_1 = $this$intercept;
    i.z2r_1 = context;
    return i;
  }
}
class $handleCallCOROUTINE$7 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, _this__u8e3s4_0, context, origin, allowHttpsDowngrade, client, resultContinuation) {
    super(resultContinuation);
    this.d2r_1 = _this__u8e3s4;
    this.e2r_1 = _this__u8e3s4_0;
    this.f2r_1 = context;
    this.g2r_1 = origin;
    this.h2r_1 = allowHttpsDowngrade;
    this.i2r_1 = client;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            if (!isRedirect(this.g2r_1.l27().o2b()))
              return this.g2r_1;
            this.j2r_1 = this.g2r_1;
            this.k2r_1 = this.f2r_1;
            this.l2r_1 = this.g2r_1.c2b().n2b().z20_1;
            this.m2r_1 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.get_authority2s3hk87lssumy)(this.g2r_1.c2b().n2b());
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (false) {}

            this.i2r_1.q26_1.h23(this.d2r_1.e2s_1, this.j2r_1.l27());
            this.n2r_1 = this.j2r_1.l27().m1x().f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().h1u_1);
            get_LOGGER_3().j1q('Received redirect response to ' + this.n2r_1 + ' for request ' + this.f2r_1.k28_1.toString());
            var tmp_0 = this;
            var this_0 = new HttpRequestBuilder();
            this_0.d2f(this.k2r_1);
            this_0.k28_1.w20_1.j2();
            var tmp0_safe_receiver = this.n2r_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.takeFrom3rd40szpqy350)(this_0.k28_1, tmp0_safe_receiver);
            }

            if (!this.h2r_1 && (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.isSecurex1qiiavqi0xu)(this.l2r_1) && !(0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.isSecurex1qiiavqi0xu)(this_0.k28_1.n20_1)) {
              get_LOGGER_3().j1q('Can not redirect ' + this.f2r_1.k28_1.toString() + ' because of security downgrade');
              return this.j2r_1;
            }

            if (!(this.m2r_1 === (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.get_authorityakhc3pgcrb9j)(this_0.k28_1))) {
              this_0.m28_1.s1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().c1t_1);
              get_LOGGER_3().j1q('Removing Authorization header from redirect for ' + this.f2r_1.k28_1.toString());
            }

            tmp_0.k2r_1 = this_0;
            this.lb_1 = 2;
            suspendResult = this.e2r_1.q2n(this.k2r_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.j2r_1 = suspendResult;
            if (!isRedirect(this.j2r_1.l27().o2b()))
              return this.j2r_1;
            this.lb_1 = 1;
            continue $sm;
          case 3:
            throw this.ob_1;
          case 4:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class Config_1 {
  constructor() {
    this.f2s_1 = true;
    this.g2s_1 = false;
  }
}
class Plugin_1 {
  constructor() {
    Plugin_instance_1 = this;
    this.d2s_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('HttpRedirect');
    this.e2s_1 = new _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__.EventDefinition1fymk8xrdelhn();
  }
  k1() {
    return this.d2s_1;
  }
  h2s(block) {
    // Inline function 'kotlin.apply' call
    var this_0 = new Config_1();
    // Inline function 'kotlin.contracts.contract' call
    block(this_0);
    var config = this_0;
    return new HttpRedirect(config.f2s_1, config.g2s_1);
  }
  r29(block) {
    return this.h2s(block);
  }
  i2s(plugin_0, scope) {
    var tmp = plugin(scope, Plugin_getInstance_3());
    tmp.z2o(HttpRedirect$Plugin$install$slambda_0(plugin_0, scope, null));
  }
  s29(plugin, scope) {
    return this.i2s(plugin instanceof HttpRedirect ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class HttpRedirect {
  constructor(checkHttpMethod, allowHttpsDowngrade) {
    Plugin_getInstance_1();
    this.b2s_1 = checkHttpMethod;
    this.c2s_1 = allowHttpsDowngrade;
  }
}
class HttpRequestLifecycle$Plugin$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($scope, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.r2s_1 = $scope;
    super(resultContinuation, $box);
  }
  e27($this$intercept, it, $completion) {
    var tmp = this.f27($this$intercept, it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 6;
            this.u2s_1 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.SupervisorJobythnfxkr3jxc)(this.s2s_1.g1p_1.o28_1);
            attachToClientEngineJob(this.u2s_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(this.r2s_1.j26_1.yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183)));
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.mb_1 = 4;
            this.mb_1 = 3;
            this.s2s_1.g1p_1.o28_1 = this.u2s_1;
            this.lb_1 = 2;
            suspendResult = this.s2s_1.j1o(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp_0 = this;
            tmp_0.v2s_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.mb_1 = 6;
            this.lb_1 = 5;
            continue $sm;
          case 3:
            this.mb_1 = 4;
            var tmp_1 = this.ob_1;
            if (tmp_1 instanceof Error) {
              var cause = this.ob_1;
              var tmp_2 = this;
              this.u2s_1.js(cause);
              throw cause;
            } else {
              throw this.ob_1;
            }

          case 4:
            this.mb_1 = 6;
            var t = this.ob_1;
            this.u2s_1.is();
            throw t;
          case 5:
            this.mb_1 = 6;
            this.u2s_1.is();
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 6:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 6) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, it, completion) {
    var i = new HttpRequestLifecycle$Plugin$install$slambda(this.r2s_1, completion);
    i.s2s_1 = $this$intercept;
    i.t2s_1 = it;
    return i;
  }
}
class Plugin_2 {
  constructor() {
    Plugin_instance_2 = this;
    this.w2s_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('RequestLifecycle');
  }
  k1() {
    return this.w2s_1;
  }
  q2g(block) {
    return new HttpRequestLifecycle();
  }
  r29(block) {
    return this.q2g(block);
  }
  x2s(plugin, scope) {
    var tmp = Phases_getInstance().h2g_1;
    scope.k26_1.m1p(tmp, HttpRequestLifecycle$Plugin$install$slambda_0(scope, null));
  }
  s29(plugin, scope) {
    return this.x2s(plugin instanceof HttpRequestLifecycle ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class HttpRequestLifecycle {
  constructor() {
    Plugin_getInstance_2();
  }
}
class HttpSend$Plugin$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, $scope, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.g2t_1 = $plugin;
    $box.h2t_1 = $scope;
    super(resultContinuation, $box);
  }
  e27($this$intercept, content, $completion) {
    var tmp = this.f27($this$intercept, content, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = p1 instanceof _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelineContext34fsb0mycu471 ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.e27(tmp, !(p2 == null) ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp_0 = this.j2t_1;
            if (!(tmp_0 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76)) {
              var message = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.trimMarginhyd3fsmh8iev)('\n|Fail to prepare request body for sending. \n|The body type is: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(this.j2t_1)) + ', with Content-Type: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString30pk9tzaqopn)((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.contentType2zzm38yxo3syt)(this.i2t_1.g1p_1)) + '.\n|\n|If you expect serialized body, please check that you have installed the corresponding plugin(like `ContentNegotiation`) and set `Content-Type` header.');
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
            }

            var this_0 = this.i2t_1.g1p_1;
            var body = this.j2t_1;
            if (body == null) {
              this_0.n28_1 = _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.NullBody_instance9oj4j8z4op1j;
              var tmp_1 = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.JsType_instance35xixcvz0qegz;
              var tmp_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76);
              var tmp_3;
              try {
                tmp_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createKType1lgox3mzhchp5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.arrayOf1akklvh2at202)([]), false);
              } catch ($p) {
                var tmp_4;
                if ($p instanceof Error) {
                  var cause = $p;
                  tmp_4 = null;
                } else {
                  throw $p;
                }
                tmp_3 = tmp_4;
              }
              this_0.e2f((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.typeInfoImpl3ju54ew51hieg)(tmp_1, tmp_2, tmp_3));
            } else {
              if (body instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76) {
                this_0.n28_1 = body;
                this_0.e2f(null);
              } else {
                this_0.n28_1 = body;
                var tmp_5 = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.JsType_instance35xixcvz0qegz;
                var tmp_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76);
                var tmp_7;
                try {
                  tmp_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createKType1lgox3mzhchp5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.arrayOf1akklvh2at202)([]), false);
                } catch ($p) {
                  var tmp_8;
                  if ($p instanceof Error) {
                    var cause_0 = $p;
                    tmp_8 = null;
                  } else {
                    throw $p;
                  }
                  tmp_7 = tmp_8;
                }
                this_0.e2f((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.typeInfoImpl3ju54ew51hieg)(tmp_5, tmp_6, tmp_7));
              }
            }

            this.k2t_1 = new DefaultSender(this.g2t_1.x2o_1, this.h2t_1);
            this.l2t_1 = this.k2t_1;
            var tmp0_iterator = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.downTo39qhfeycepm1j)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_lastIndex1yw0x4k50k51w)(this.g2t_1.y2o_1), 0).w();
            while (tmp0_iterator.x()) {
              var element = tmp0_iterator.y();
              var interceptor = this.g2t_1.y2o_1.c1(element);
              this.l2t_1 = new InterceptedSender(interceptor, this.l2t_1);
            }

            this.lb_1 = 1;
            suspendResult = this.l2t_1.q2n(this.i2t_1.g1p_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.m2t_1 = suspendResult;
            this.lb_1 = 2;
            suspendResult = this.i2t_1.i1o(this.m2t_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  f27($this$intercept, content, completion) {
    var i = new HttpSend$Plugin$install$slambda(this.g2t_1, this.h2t_1, completion);
    i.i2t_1 = $this$intercept;
    i.j2t_1 = content;
    return i;
  }
}
class $executeCOROUTINE$8 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, requestBuilder, resultContinuation) {
    super(resultContinuation);
    this.v2t_1 = _this__u8e3s4;
    this.w2t_1 = requestBuilder;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp0_safe_receiver = this.v2t_1.a2u_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.cancel36mj9lv3a0whl)(tmp0_safe_receiver);
            }

            if (this.v2t_1.z2t_1 >= this.v2t_1.x2t_1) {
              throw SendCountExceedException.f2u('Max send count ' + this.v2t_1.x2t_1 + ' exceeded. Consider increasing the property ' + 'maxSendCount if more is required.');
            }

            var tmp1_this = this.v2t_1;
            tmp1_this.z2t_1 = tmp1_this.z2t_1 + 1 | 0;
            this.lb_1 = 1;
            suspendResult = this.v2t_1.y2t_1.m26_1.f1p(this.w2t_1, this.w2t_1.n28_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var sendResult = suspendResult;
            var tmp3_elvis_lhs = sendResult instanceof HttpClientCall ? sendResult : null;
            var tmp_0;
            if (tmp3_elvis_lhs == null) {
              var message = 'Failed to execute send pipeline. Expected [HttpClientCall], but received ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(sendResult);
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
            } else {
              tmp_0 = tmp3_elvis_lhs;
            }

            var call = tmp_0;
            this.v2t_1.a2u_1 = call;
            return call;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class Config_2 {
  constructor() {
    this.g2u_1 = 20;
  }
}
class Plugin_3 {
  constructor() {
    Plugin_instance_3 = this;
    this.h2u_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('HttpSend');
  }
  k1() {
    return this.h2u_1;
  }
  i2u(block) {
    // Inline function 'kotlin.apply' call
    var this_0 = new Config_2();
    // Inline function 'kotlin.contracts.contract' call
    block(this_0);
    var config = this_0;
    return new HttpSend(config.g2u_1);
  }
  r29(block) {
    return this.i2u(block);
  }
  j2u(plugin, scope) {
    var tmp = Phases_getInstance().l2g_1;
    scope.k26_1.m1p(tmp, HttpSend$Plugin$install$slambda_0(plugin, scope, null));
  }
  s29(plugin, scope) {
    return this.j2u(plugin instanceof HttpSend ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class Sender {}
class InterceptedSender {
  constructor(interceptor, nextSender) {
    this.k2u_1 = interceptor;
    this.l2u_1 = nextSender;
  }
  q2n(requestBuilder, $completion) {
    return this.k2u_1(this.l2u_1, requestBuilder, $completion);
  }
}
class DefaultSender {
  constructor(maxSendCount, client) {
    this.x2t_1 = maxSendCount;
    this.y2t_1 = client;
    this.z2t_1 = 0;
    this.a2u_1 = null;
  }
  q2n(requestBuilder, $completion) {
    var tmp = new $executeCOROUTINE$8(this, requestBuilder, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
}
class HttpSend {
  constructor(maxSendCount) {
    Plugin_getInstance_3();
    maxSendCount = maxSendCount === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? 20 : maxSendCount;
    this.x2o_1 = maxSendCount;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.y2o_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
  }
  z2o(block) {
    // Inline function 'kotlin.collections.plusAssign' call
    this.y2o_1.g(block);
  }
}
class SendCountExceedException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr {
  static f2u(message) {
    var $this = this.b4(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.e2u_1);
    return $this;
  }
}
class Companion_2 {
  constructor() {
    Companion_instance_2 = this;
    this.m2u_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('TimeoutConfiguration');
  }
}
class HttpTimeout$Plugin$install$slambda$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($requestTimeout, $request, $executionContext, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.y2u_1 = $requestTimeout;
    $box.z2u_1 = $request;
    $box.a2v_1 = $executionContext;
    super(resultContinuation, $box);
  }
  o1c($this$launch, $completion) {
    var tmp = this.p1c($this$launch, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.o1c((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineScopefcb5f5dwqcas) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.delayop3h8lf643wg)(this.y2u_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var cause = HttpRequestTimeoutException.f2v(this.z2u_1);
            get_LOGGER_5().j1q('Request timeout: ' + this.z2u_1.k28_1.toString());
            (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.cancel1xim2hrvjmwpn)(this.a2v_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(cause.message), cause);
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  p1c($this$launch, completion) {
    var i = new HttpTimeout$Plugin$install$slambda$slambda(this.y2u_1, this.z2u_1, this.a2v_1, completion);
    i.b2v_1 = $this$launch;
    return i;
  }
}
class HttpTimeout$Plugin$install$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($plugin, $scope, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.o2v_1 = $plugin;
    $box.p2v_1 = $scope;
    super(resultContinuation, $box);
  }
  o2n($this$intercept, request, $completion) {
    var tmp = this.p2n($this$intercept, request, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  uk(p1, p2, $completion) {
    var tmp = (!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, Sender) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    return this.o2n(tmp, p2 instanceof HttpRequestBuilder ? p2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            this.s2v_1 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.isWebsocket1w1xog9vfgwm1)(this.r2v_1.k28_1.n20_1);
            var tmp_0;
            if (this.s2v_1) {
              tmp_0 = true;
            } else {
              var tmp_1 = this.r2v_1.n28_1;
              tmp_0 = tmp_1 instanceof ClientUpgradeContent;
            }

            if (tmp_0) {
              this.lb_1 = 3;
              suspendResult = this.q2v_1.q2n(this.r2v_1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.lb_1 = 1;
              continue $sm;
            }

          case 1:
            this.t2v_1 = this.r2v_1.u2v(Plugin_getInstance_4());
            if (this.t2v_1 == null && hasNotNullTimeouts(this.o2v_1)) {
              this.t2v_1 = HttpTimeoutCapabilityConfiguration.v2v();
              this.r2v_1.w2v(Plugin_getInstance_4(), this.t2v_1);
            }

            var tmp0_safe_receiver = this.t2v_1;
            if (tmp0_safe_receiver == null)
              null;
            else {
              l$ret$1: do {
                var tmp0_elvis_lhs = tmp0_safe_receiver.x2v();
                tmp0_safe_receiver.b2w(tmp0_elvis_lhs == null ? this.o2v_1.z2v_1 : tmp0_elvis_lhs);
                var tmp1_elvis_lhs = tmp0_safe_receiver.c2w();
                tmp0_safe_receiver.d2w(tmp1_elvis_lhs == null ? this.o2v_1.a2w_1 : tmp1_elvis_lhs);
                var tmp2_elvis_lhs = tmp0_safe_receiver.e2w();
                tmp0_safe_receiver.f2w(tmp2_elvis_lhs == null ? this.o2v_1.y2v_1 : tmp2_elvis_lhs);
                var tmp3_elvis_lhs = tmp0_safe_receiver.e2w();
                var requestTimeout = tmp3_elvis_lhs == null ? this.o2v_1.y2v_1 : tmp3_elvis_lhs;
                if (requestTimeout == null || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(requestTimeout, new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(-1, 2147483647))) {
                  break l$ret$1;
                }
                var executionContext = this.r2v_1.o28_1;
                var killer = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.launch1c91vkjzdi9sd)(this.p2v_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, HttpTimeout$Plugin$install$slambda$slambda_0(requestTimeout, this.r2v_1, executionContext, null));
                var tmp_2 = this.r2v_1.o28_1;
                tmp_2.io(HttpTimeout$Plugin$install$slambda$lambda(killer));
              }
               while (false);
            }

            this.lb_1 = 2;
            suspendResult = this.q2v_1.q2n(this.r2v_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return suspendResult;
          case 3:
            return suspendResult;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  p2n($this$intercept, request, completion) {
    var i = new HttpTimeout$Plugin$install$slambda(this.o2v_1, this.p2v_1, completion);
    i.q2v_1 = $this$intercept;
    i.r2v_1 = request;
    return i;
  }
}
class HttpTimeoutCapabilityConfiguration {
  static v2v(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis) {
    Companion_getInstance_5();
    requestTimeoutMillis = requestTimeoutMillis === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : requestTimeoutMillis;
    connectTimeoutMillis = connectTimeoutMillis === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : connectTimeoutMillis;
    socketTimeoutMillis = socketTimeoutMillis === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? null : socketTimeoutMillis;
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createThis2j2avj17cvnv2)(this);
    init_io_ktor_client_plugins_HttpTimeout_HttpTimeoutCapabilityConfiguration($this);
    $this.f2w(requestTimeoutMillis);
    $this.b2w(connectTimeoutMillis);
    $this.d2w(socketTimeoutMillis);
    return $this;
  }
  f2w(value) {
    this.n2u_1 = checkTimeoutValue(this, value);
  }
  e2w() {
    return this.n2u_1;
  }
  b2w(value) {
    this.o2u_1 = checkTimeoutValue(this, value);
  }
  x2v() {
    return this.o2u_1;
  }
  d2w(value) {
    this.p2u_1 = checkTimeoutValue(this, value);
  }
  c2w() {
    return this.p2u_1;
  }
  g2w() {
    return new HttpTimeout(this.e2w(), this.x2v(), this.c2w());
  }
  equals(other) {
    if (this === other)
      return true;
    if (other == null || !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(this).equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClassFromExpression3vpejubogshaw)(other)))
      return false;
    if (!(other instanceof HttpTimeoutCapabilityConfiguration))
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(this.n2u_1, other.n2u_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(this.o2u_1, other.o2u_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(this.p2u_1, other.p2u_1))
      return false;
    return true;
  }
  hashCode() {
    var tmp0_safe_receiver = this.n2u_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    var result = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var tmp = imul(31, result);
    var tmp2_safe_receiver = this.o2u_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp4_safe_receiver = this.p2u_1;
    var tmp5_elvis_lhs = tmp4_safe_receiver == null ? null : tmp4_safe_receiver.hashCode();
    result = tmp_0 + (tmp5_elvis_lhs == null ? 0 : tmp5_elvis_lhs) | 0;
    return result;
  }
}
class Plugin_4 {
  constructor() {
    Plugin_instance_4 = this;
    this.h2w_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('TimeoutPlugin');
    this.i2w_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(-1, 2147483647);
  }
  k1() {
    return this.h2w_1;
  }
  j2w(block) {
    // Inline function 'kotlin.apply' call
    var this_0 = HttpTimeoutCapabilityConfiguration.v2v();
    // Inline function 'kotlin.contracts.contract' call
    block(this_0);
    return this_0.g2w();
  }
  r29(block) {
    return this.j2w(block);
  }
  k2w(plugin_0, scope) {
    var tmp = plugin(scope, Plugin_getInstance_3());
    tmp.z2o(HttpTimeout$Plugin$install$slambda_0(plugin_0, scope, null));
  }
  s29(plugin, scope) {
    return this.k2w(plugin instanceof HttpTimeout ? plugin : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), scope);
  }
}
class HttpTimeout {
  constructor(requestTimeoutMillis, connectTimeoutMillis, socketTimeoutMillis) {
    Plugin_getInstance_4();
    this.y2v_1 = requestTimeoutMillis;
    this.z2v_1 = connectTimeoutMillis;
    this.a2w_1 = socketTimeoutMillis;
  }
}
class HttpRequestTimeoutException extends _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.IOExceptionktvzt3eudz3d {
  static l2w(url, timeoutMillis) {
    var $this = this.g1k('Request timeout has expired [url=' + url + ', request_timeout=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(timeoutMillis == null ? 'unknown' : timeoutMillis) + ' ms]');
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.captureStack1fzi4aczwc4hg)($this, $this.e2v_1);
    return $this;
  }
  static f2v(request) {
    var tmp = request.k28_1.c22();
    var tmp0_safe_receiver = request.u2v(Plugin_getInstance_4());
    return this.l2w(tmp, tmp0_safe_receiver == null ? null : tmp0_safe_receiver.e2w());
  }
}
class DelegatedCall extends HttpClientCall {
  static r2w(client, content, originCall) {
    var $this = this.b2b(client);
    $this.i27_1 = new DelegatedRequest($this, originCall.c2b());
    $this.j27_1 = new DelegatedResponse($this, content, originCall.l27());
    return $this;
  }
}
class DelegatedRequest {
  constructor(call, origin) {
    this.s2w_1 = call;
    this.t2w_1 = origin;
  }
  i2c() {
    return this.s2w_1;
  }
  r2a() {
    return this.t2w_1.r2a();
  }
  gn() {
    return this.t2w_1.gn();
  }
  m1x() {
    return this.t2w_1.m1x();
  }
  j2c() {
    return this.t2w_1.j2c();
  }
  n2b() {
    return this.t2w_1.n2b();
  }
}
class DelegatedResponse extends HttpResponse {
  constructor(call, content, origin) {
    super();
    this.u2w_1 = call;
    this.v2w_1 = content;
    this.w2w_1 = origin;
    this.x2w_1 = this.w2w_1.gn();
  }
  i2c() {
    return this.u2w_1;
  }
  l2b() {
    return this.v2w_1;
  }
  gn() {
    return this.x2w_1;
  }
  o2b() {
    return this.w2w_1.o2b();
  }
  t2c() {
    return this.w2w_1.t2c();
  }
  u2c() {
    return this.w2w_1.u2c();
  }
  v2c() {
    return this.w2w_1.v2c();
  }
  m1x() {
    return this.w2w_1.m1x();
  }
}
class ClientUpgradeContent extends _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.NoContent1bdx48poqrifq {}
class DefaultHttpRequest {
  constructor(call, data) {
    this.y2w_1 = call;
    this.z2w_1 = data.f2e_1;
    this.a2x_1 = data.e2e_1;
    this.b2x_1 = data.h2e_1;
    this.c2x_1 = data.g2e_1;
    this.d2x_1 = data.j2e_1;
  }
  i2c() {
    return this.y2w_1;
  }
  gn() {
    return this.i2c().gn();
  }
  j2c() {
    return this.z2w_1;
  }
  n2b() {
    return this.a2x_1;
  }
  m1x() {
    return this.c2x_1;
  }
  r2a() {
    return this.d2x_1;
  }
}
class Companion_3 {}
class HttpRequestBuilder {
  constructor() {
    this.k28_1 = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.URLBuilder2mz8zkz4u9ray();
    this.l28_1 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancepumzx9q4106p)().n1x_1;
    this.m28_1 = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HeadersBuilder3h7sn3kkvu98m();
    this.n28_1 = EmptyContent_getInstance();
    this.o28_1 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.SupervisorJobythnfxkr3jxc)();
    this.p28_1 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributesJsFn25rjfgcprgprf)(true);
  }
  m1x() {
    return this.m28_1;
  }
  e2f(value) {
    if (!(value == null)) {
      this.p28_1.o1k(get_BodyTypeAttributeKey(), value);
    } else {
      this.p28_1.p1k(get_BodyTypeAttributeKey());
    }
  }
  e2x() {
    return this.p28_1.m1k(get_BodyTypeAttributeKey());
  }
  y18() {
    var tmp = this.k28_1.y18();
    var tmp_0 = this.l28_1;
    var tmp_1 = this.m28_1.y18();
    var tmp_2 = this.n28_1;
    var tmp0_elvis_lhs = tmp_2 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.OutgoingContent3t2ohmyam9o76 ? tmp_2 : null;
    var tmp_3;
    if (tmp0_elvis_lhs == null) {
      var message = 'No request transformation found: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.n28_1);
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
    } else {
      tmp_3 = tmp0_elvis_lhs;
    }
    return new HttpRequestData(tmp, tmp_0, tmp_1, tmp_3, this.o28_1, this.p28_1);
  }
  d2f(builder) {
    this.o28_1 = builder.o28_1;
    return this.f2x(builder);
  }
  f2x(builder) {
    this.l28_1 = builder.l28_1;
    this.n28_1 = builder.n28_1;
    this.e2f(builder.e2x());
    (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.takeFromkqlcz7c6dx2r)(this.k28_1, builder.k28_1);
    this.k28_1.u20_1 = this.k28_1.u20_1;
    (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.appendAlltwnjnu28pmtx)(this.m28_1, builder.m28_1);
    (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.putAll10o0q8e6mgnzr)(this.p28_1, builder.p28_1);
    return this;
  }
  w2v(key, capability) {
    var tmp = get_ENGINE_CAPABILITIES_KEY();
    var capabilities = this.p28_1.q1k(tmp, HttpRequestBuilder$setCapability$lambda);
    // Inline function 'kotlin.collections.set' call
    capabilities.t2(key, capability);
  }
  u2v(key) {
    var tmp0_safe_receiver = this.p28_1.m1k(get_ENGINE_CAPABILITIES_KEY());
    var tmp = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q2(key);
    return (tmp == null ? true : !(tmp == null)) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
  }
}
class HttpRequestData {
  constructor(url, method, headers, body, executionContext, attributes) {
    this.e2e_1 = url;
    this.f2e_1 = method;
    this.g2e_1 = headers;
    this.h2e_1 = body;
    this.i2e_1 = executionContext;
    this.j2e_1 = attributes;
    var tmp = this;
    var tmp0_safe_receiver = this.j2e_1.m1k(get_ENGINE_CAPABILITIES_KEY());
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.r2();
    tmp.k2e_1 = tmp1_elvis_lhs == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.emptySetcxexqki71qfa)() : tmp1_elvis_lhs;
  }
  toString() {
    return 'HttpRequestData(url=' + this.e2e_1.toString() + ', method=' + this.f2e_1.toString() + ')';
  }
}
class HttpResponseData {
  constructor(statusCode, requestTime, headers, version, body, callContext) {
    this.e2b_1 = statusCode;
    this.f2b_1 = requestTime;
    this.g2b_1 = headers;
    this.h2b_1 = version;
    this.i2b_1 = body;
    this.j2b_1 = callContext;
    this.k2b_1 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.GMTDate36bhedawynxlf)();
  }
  toString() {
    return 'HttpResponseData=(statusCode=' + this.e2b_1.toString() + ')';
  }
}
class Phases {
  constructor() {
    Phases_instance = this;
    this.h2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Before');
    this.i2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('State');
    this.j2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Transform');
    this.k2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Render');
    this.l2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Send');
  }
}
class HttpRequestPipeline extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.Pipeline2vw6c5wpzxajt {
  constructor(developmentMode) {
    Phases_getInstance();
    developmentMode = developmentMode === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : developmentMode;
    super([Phases_getInstance().h2g_1, Phases_getInstance().i2g_1, Phases_getInstance().j2g_1, Phases_getInstance().k2g_1, Phases_getInstance().l2g_1]);
    this.n2x_1 = developmentMode;
  }
  e1p() {
    return this.n2x_1;
  }
}
class Phases_0 {
  constructor() {
    Phases_instance_0 = this;
    this.b29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Before');
    this.c29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('State');
    this.d29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Monitoring');
    this.e29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Engine');
    this.f29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Receive');
  }
}
class HttpSendPipeline extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.Pipeline2vw6c5wpzxajt {
  constructor(developmentMode) {
    Phases_getInstance_0();
    developmentMode = developmentMode === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : developmentMode;
    super([Phases_getInstance_0().b29_1, Phases_getInstance_0().c29_1, Phases_getInstance_0().d29_1, Phases_getInstance_0().e29_1, Phases_getInstance_0().f29_1]);
    this.v2x_1 = developmentMode;
  }
  e1p() {
    return this.v2x_1;
  }
}
class DefaultHttpResponse extends HttpResponse {
  constructor(call, responseData) {
    super();
    this.w2x_1 = call;
    this.x2x_1 = responseData.j2b_1;
    this.y2x_1 = responseData.e2b_1;
    this.z2x_1 = responseData.h2b_1;
    this.a2y_1 = responseData.f2b_1;
    this.b2y_1 = responseData.k2b_1;
    var tmp = this;
    var tmp_0 = responseData.i2b_1;
    var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp_0, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadChannel2wzou76jce72d) ? tmp_0 : null;
    tmp.c2y_1 = tmp0_elvis_lhs == null ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.Companion_getInstancekyay2rfrglll)().s1c() : tmp0_elvis_lhs;
    this.d2y_1 = responseData.g2b_1;
  }
  i2c() {
    return this.w2x_1;
  }
  gn() {
    return this.x2x_1;
  }
  o2b() {
    return this.y2x_1;
  }
  t2c() {
    return this.z2x_1;
  }
  u2c() {
    return this.a2y_1;
  }
  v2c() {
    return this.b2y_1;
  }
  l2b() {
    return this.c2y_1;
  }
  m1x() {
    return this.d2y_1;
  }
}
class $bodyAsTextCOROUTINE$13 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, fallbackCharset, resultContinuation) {
    super(resultContinuation);
    this.m2y_1 = _this__u8e3s4;
    this.n2y_1 = fallbackCharset;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp_0 = this;
            var tmp0_elvis_lhs = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.charset3qqtyytkmxogi)(this.m2y_1);
            tmp_0.o2y_1 = tmp0_elvis_lhs == null ? this.n2y_1 : tmp0_elvis_lhs;
            this.p2y_1 = this.o2y_1.o1g();
            var tmp_1 = this;
            tmp_1.q2y_1 = this.m2y_1;
            this.lb_1 = 1;
            var tmp_2 = this.q2y_1.i2c();
            var tmp_3 = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.JsType_instance35xixcvz0qegz;
            var tmp_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadPacket19qnebry5xxpy);
            var tmp_5;
            try {
              tmp_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createKType1lgox3mzhchp5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadPacket19qnebry5xxpy), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.arrayOf1akklvh2at202)([]), false);
            } catch ($p) {
              var tmp_6;
              if ($p instanceof Error) {
                var cause = $p;
                tmp_6 = null;
              } else {
                throw $p;
              }
              tmp_5 = tmp_6;
            }

            suspendResult = tmp_2.m2b((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.typeInfoImpl3ju54ew51hieg)(tmp_3, tmp_4, tmp_5), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var input = suspendResult instanceof _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.ByteReadPacket19qnebry5xxpy ? suspendResult : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
            return (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.decode1h5mw63lslzyq)(this.p2y_1, input);
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class Phases_1 {
  constructor() {
    Phases_instance_1 = this;
    this.j29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Receive');
    this.k29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Parse');
    this.l29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Transform');
    this.m29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('State');
    this.n29_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('After');
  }
}
class HttpResponsePipeline extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.Pipeline2vw6c5wpzxajt {
  constructor(developmentMode) {
    Phases_getInstance_1();
    developmentMode = developmentMode === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : developmentMode;
    super([Phases_getInstance_1().j29_1, Phases_getInstance_1().k29_1, Phases_getInstance_1().l29_1, Phases_getInstance_1().m29_1, Phases_getInstance_1().n29_1]);
    this.y2y_1 = developmentMode;
  }
  e1p() {
    return this.y2y_1;
  }
}
class Phases_2 {
  constructor() {
    Phases_instance_2 = this;
    this.m2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('Before');
    this.n2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('State');
    this.o2g_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('After');
  }
}
class HttpReceivePipeline extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.Pipeline2vw6c5wpzxajt {
  constructor(developmentMode) {
    Phases_getInstance_2();
    developmentMode = developmentMode === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? false : developmentMode;
    super([Phases_getInstance_2().m2g_1, Phases_getInstance_2().n2g_1, Phases_getInstance_2().o2g_1]);
    this.g2z_1 = developmentMode;
  }
  e1p() {
    return this.g2z_1;
  }
}
class HttpResponseContainer {
  constructor(expectedType, response) {
    this.t2a_1 = expectedType;
    this.u2a_1 = response;
  }
  bi() {
    return this.t2a_1;
  }
  ci() {
    return this.u2a_1;
  }
  toString() {
    return 'HttpResponseContainer(expectedType=' + this.t2a_1.toString() + ', response=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(this.u2a_1) + ')';
  }
  hashCode() {
    var result = this.t2a_1.hashCode();
    result = imul(result, 31) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.hashCodeq5arwsb9dgti)(this.u2a_1) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpResponseContainer))
      return false;
    var tmp0_other_with_cast = other instanceof HttpResponseContainer ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    if (!this.t2a_1.equals(tmp0_other_with_cast.t2a_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(this.u2a_1, tmp0_other_with_cast.u2a_1))
      return false;
    return true;
  }
}
class HttpStatement$execute$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  s2z(it, $completion) {
    var tmp = this.n2j(it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.s2z(p1 instanceof HttpResponse ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = save(this.r2z_1.i2c(), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var savedCall = suspendResult;
            return savedCall.l27();
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  n2j(it, completion) {
    var i = new HttpStatement$execute$slambda(completion);
    i.r2z_1 = it;
    return i;
  }
}
class $executeCOROUTINE$14 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, block, resultContinuation) {
    super(resultContinuation);
    this.b30_1 = _this__u8e3s4;
    this.c30_1 = block;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 13;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.mb_1 = 12;
            this.lb_1 = 2;
            suspendResult = this.b30_1.i30(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.e30_1 = suspendResult;
            this.lb_1 = 3;
            continue $sm;
          case 3:
            this.lb_1 = 4;
            continue $sm;
          case 4:
            this.mb_1 = 10;
            this.lb_1 = 5;
            suspendResult = this.c30_1(this.e30_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            this.f30_1 = suspendResult;
            this.lb_1 = 6;
            var tmp_0 = this;
            continue $sm;
          case 6:
            this.g30_1 = this.f30_1;
            this.mb_1 = 12;
            this.lb_1 = 7;
            suspendResult = this.b30_1.j30(this.e30_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 7:
            return this.g30_1;
          case 8:
            this.mb_1 = 12;
            this.lb_1 = 9;
            suspendResult = this.b30_1.j30(this.e30_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 9:
            var tmp_1 = this;
            tmp_1.d30_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.mb_1 = 13;
            this.lb_1 = 15;
            continue $sm;
          case 10:
            this.mb_1 = 12;
            this.h30_1 = this.ob_1;
            this.lb_1 = 11;
            suspendResult = this.b30_1.j30(this.e30_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 11:
            throw this.h30_1;
          case 12:
            this.mb_1 = 13;
            var tmp_2 = this.ob_1;
            if (tmp_2 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CancellationException3b36o9qz53rgr) {
              var cause = this.ob_1;
              throw unwrapCancellationException(cause);
            } else {
              throw this.ob_1;
            }

          case 13:
            throw this.ob_1;
          case 14:
            this.mb_1 = 13;
            if (false) {}

            this.lb_1 = 15;
            continue $sm;
          case 15:
            return this.d30_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 13) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $executeUnsafeCOROUTINE$15 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, resultContinuation) {
    super(resultContinuation);
    this.s30_1 = _this__u8e3s4;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.mb_1 = 3;
            this.u30_1 = (new HttpRequestBuilder()).d2f(this.s30_1.h2z_1);
            this.lb_1 = 2;
            suspendResult = this.s30_1.i2z_1.p29(this.u30_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var call = suspendResult;
            var tmp_0 = this;
            return call.l27();
          case 3:
            this.mb_1 = 4;
            var tmp_1 = this.ob_1;
            if (tmp_1 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CancellationException3b36o9qz53rgr) {
              var cause = this.ob_1;
              throw unwrapCancellationException(cause);
            } else {
              throw this.ob_1;
            }

          case 4:
            throw this.ob_1;
          case 5:
            this.mb_1 = 4;
            if (false) {}

            this.lb_1 = 6;
            continue $sm;
          case 6:
            return this.t30_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $cleanupCOROUTINE$16 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, _this__u8e3s4_0, resultContinuation) {
    super(resultContinuation);
    this.d31_1 = _this__u8e3s4;
    this.e31_1 = _this__u8e3s4_0;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            var tmp_0 = this;
            var tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(this.e31_1.gn().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183));
            tmp_0.f31_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp_1, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CompletableJob1w6swnu15iclo) ? tmp_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
            var tmp_2 = this;
            tmp_2.g31_1 = this.f31_1;
            var tmp_3 = this;
            tmp_3.h31_1 = this.g31_1;
            this.h31_1.is();
            this.mb_1 = 1;
            (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.canceldn4b3cdqcfny)(this.e31_1.l2b());
            this.mb_1 = 4;
            this.lb_1 = 2;
            continue $sm;
          case 1:
            this.mb_1 = 4;
            var tmp_4 = this.ob_1;
            if (tmp_4 instanceof Error) {
              this.i31_1 = this.ob_1;
              this.lb_1 = 2;
              continue $sm;
            } else {
              throw this.ob_1;
            }

          case 2:
            this.mb_1 = 4;
            this.lb_1 = 3;
            suspendResult = this.h31_1.ks(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class HttpStatement {
  constructor(builder, client) {
    this.h2z_1 = builder;
    this.i2z_1 = client;
    checkCapabilities(this);
  }
  j31(block, $completion) {
    var tmp = new $executeCOROUTINE$14(this, block, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  k31($completion) {
    return this.j31(HttpStatement$execute$slambda_0(null), $completion);
  }
  i30($completion) {
    var tmp = new $executeUnsafeCOROUTINE$15(this, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  j30(_this__u8e3s4, $completion) {
    var tmp = new $cleanupCOROUTINE$16(this, _this__u8e3s4, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  toString() {
    return 'HttpStatement[' + this.h2z_1.k28_1.toString() + ']';
  }
}
class observable$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($contentLength, $this_observable, $listener, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
      $box = {};
    $box.t31_1 = $contentLength;
    $box.u31_1 = $this_observable;
    $box.v31_1 = $listener;
    super(resultContinuation, $box);
  }
  l2d($this$writer, $completion) {
    var tmp = this.m2d($this$writer, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.l2d((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(p1, _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.WriterScope3b0bo1enaee6b) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 15;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            var tmp_0 = this;
            tmp_0.y31_1 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.get_ByteArrayPool3f7yrgvqxz9ct)();
            this.z31_1 = this.y31_1.z1e();
            this.lb_1 = 2;
            continue $sm;
          case 2:
            this.lb_1 = 3;
            continue $sm;
          case 3:
            this.mb_1 = 14;
            var tmp_1 = this;
            tmp_1.b32_1 = this.z31_1;
            var tmp_2 = this;
            var tmp0_elvis_lhs = this.t31_1;
            tmp_2.c32_1 = tmp0_elvis_lhs == null ? new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(-1, -1) : tmp0_elvis_lhs;
            this.d32_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0);
            this.lb_1 = 4;
            continue $sm;
          case 4:
            if (!!this.u31_1.y15()) {
              this.lb_1 = 8;
              continue $sm;
            }

            this.lb_1 = 5;
            suspendResult = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.readAvailable1yzhunw2q91ea)(this.u31_1, this.b32_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            this.e32_1 = suspendResult;
            this.lb_1 = 6;
            suspendResult = this.w31_1.v1b().j1b(this.b32_1, 0, this.e32_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            var tmp_3 = this;
            var this_0 = this.d32_1;
            var other = this.e32_1;
            tmp_3.d32_1 = this_0.d3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toLongw1zpgk99d84b)(other));
            this.lb_1 = 7;
            suspendResult = this.v31_1(this.d32_1, this.c32_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 7:
            this.lb_1 = 4;
            continue $sm;
          case 8:
            this.f32_1 = this.u31_1.b15();
            this.w31_1.v1b().q1b(this.f32_1);
            if (this.f32_1 == null && this.d32_1.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0))) {
              this.lb_1 = 9;
              suspendResult = this.v31_1(this.d32_1, this.c32_1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.lb_1 = 10;
              continue $sm;
            }

          case 9:
            this.lb_1 = 10;
            continue $sm;
          case 10:
            this.a32_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.mb_1 = 15;
            this.lb_1 = 11;
            var tmp_4 = this;
            continue $sm;
          case 11:
            this.mb_1 = 15;
            var tmp_5 = this;
            this.y31_1.a1f(this.z31_1);
            tmp_5.x31_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
            this.lb_1 = 13;
            continue $sm;
          case 12:
            this.mb_1 = 15;
            this.y31_1.a1f(this.z31_1);
            if (false) {}

            this.lb_1 = 13;
            continue $sm;
          case 13:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 14:
            this.mb_1 = 15;
            var t = this.ob_1;
            this.y31_1.a1f(this.z31_1);
            throw t;
          case 15:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 15) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  m2d($this$writer, completion) {
    var i = new observable$slambda(this.t31_1, this.u31_1, this.v31_1, completion);
    i.w31_1 = $this$writer;
    return i;
  }
}
class HttpResponseReceiveFail {
  constructor(response, cause) {
    this.g32_1 = response;
    this.h32_1 = cause;
  }
}
class EmptyContent extends _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.NoContent1bdx48poqrifq {
  constructor() {
    EmptyContent_instance = null;
    super();
    EmptyContent_instance = this;
    this.j32_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0);
  }
  t22() {
    return this.j32_1;
  }
  toString() {
    return 'EmptyContent';
  }
}
//endregion
function HttpClient$lambda(this$0) {
  return function (it) {
    var tmp;
    if (!(it == null)) {
      (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.cancel36mj9lv3a0whl)(this$0.e26_1);
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function HttpClient$slambda_1(this$0, resultContinuation) {
  var i = new HttpClient$slambda(this$0, resultContinuation);
  var l = function ($this$intercept, call, $completion) {
    return i.e27($this$intercept, call, $completion);
  };
  l.$arity = 2;
  return l;
}
function HttpClient$lambda_0($this$install) {
  defaultTransformers($this$install);
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function HttpClient$slambda_2(this$0, resultContinuation) {
  var i = new HttpClient$slambda_0(this$0, resultContinuation);
  var l = function ($this$intercept, it, $completion) {
    return i.y27($this$intercept, it, $completion);
  };
  l.$arity = 2;
  return l;
}
function HttpClient_0(engineFactory, block) {
  var tmp;
  if (block === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya) {
    tmp = HttpClient$lambda_1;
  } else {
    tmp = block;
  }
  block = tmp;
  // Inline function 'kotlin.apply' call
  var this_0 = new HttpClientConfig();
  // Inline function 'kotlin.contracts.contract' call
  block(this_0);
  var config = this_0;
  var engine = engineFactory.q29(config.u28_1);
  var client = HttpClient.o29(engine, config, true);
  var tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(client.j26_1.yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183));
  tmp_0.io(HttpClient$lambda_2(engine));
  return client;
}
function HttpClient$lambda_1($this$null) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function HttpClient$lambda_2($engine) {
  return function (it) {
    $engine.l1f();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function HttpClientConfig$engineConfig$lambda($this$null) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function HttpClientConfig$install$lambda($this$null) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function HttpClientConfig$install$lambda_0($previousConfigBlock, $configure) {
  return function ($this$null) {
    var tmp0_safe_receiver = $previousConfigBlock;
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver($this$null);
    $configure(!($this$null == null) ? $this$null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function HttpClientConfig$install$lambda$lambda() {
  return (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributesJsFn25rjfgcprgprf)(true);
}
function HttpClientConfig$install$lambda_1($plugin) {
  return function (scope) {
    var tmp = get_PLUGIN_INSTALLED_LIST();
    var attributes = scope.o26_1.q1k(tmp, HttpClientConfig$install$lambda$lambda);
    var config = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(scope.r26_1.s28_1.q2($plugin.k1()));
    var pluginData = $plugin.r29(config);
    $plugin.s29(pluginData, scope);
    attributes.o1k($plugin.k1(), pluginData);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
var Companion_instance;
function Companion_getInstance_2() {
  if (Companion_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Companion();
  return Companion_instance;
}
function save(_this__u8e3s4, $completion) {
  var tmp = new $saveCOROUTINE$3(_this__u8e3s4, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function ObservableContent$content$slambda_0(this$0, resultContinuation) {
  var i = new ObservableContent$content$slambda(this$0, resultContinuation);
  var l = function ($this$writer, $completion) {
    return i.l2d($this$writer, $completion);
  };
  l.$arity = 1;
  return l;
}
function get_CALL_COROUTINE() {
  _init_properties_HttpClientEngine_kt__h91z5h();
  return CALL_COROUTINE;
}
var CALL_COROUTINE;
function get_CLIENT_CONFIG() {
  _init_properties_HttpClientEngine_kt__h91z5h();
  return CLIENT_CONFIG;
}
var CLIENT_CONFIG;
function HttpClientEngine$install$slambda$lambda($client, $response) {
  return function (it) {
    var tmp;
    if (!(it == null)) {
      $client.q26_1.h23(get_HttpResponseCancelled(), $response);
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function _get_closed__iwkfs1($this) {
  var tmp0_safe_receiver = $this.gn().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183);
  var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hn();
  return !(tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs);
}
function executeWithinCallContext($this, requestData, $completion) {
  var tmp = new $executeWithinCallContextCOROUTINE$4($this, requestData, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function checkExtensions($this, requestData) {
  var tmp0_iterator = requestData.k2e_1.w();
  while (tmp0_iterator.x()) {
    var requestedExtension = tmp0_iterator.y();
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!$this.l2e().h2(requestedExtension)) {
      // Inline function 'io.ktor.client.engine.HttpClientEngine.checkExtensions.<anonymous>' call
      var message = "Engine doesn't support " + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(requestedExtension);
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
    }
  }
}
function HttpClientEngine$install$slambda_0($client, this$0, resultContinuation) {
  var i = new HttpClientEngine$install$slambda($client, this$0, resultContinuation);
  var l = function ($this$intercept, content, $completion) {
    return i.e27($this$intercept, content, $completion);
  };
  l.$arity = 2;
  return l;
}
function HttpClientEngine$executeWithinCallContext$slambda_0(this$0, $requestData, resultContinuation) {
  var i = new HttpClientEngine$executeWithinCallContext$slambda(this$0, $requestData, resultContinuation);
  var l = function ($this$async, $completion) {
    return i.q2f($this$async, $completion);
  };
  l.$arity = 1;
  return l;
}
function validateHeaders(request) {
  _init_properties_HttpClientEngine_kt__h91z5h();
  var requestHeaders = request.g2e_1;
  // Inline function 'kotlin.collections.filter' call
  // Inline function 'kotlin.collections.filterTo' call
  var this_0 = requestHeaders.g1m();
  var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
  var tmp0_iterator = this_0.w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'io.ktor.client.engine.validateHeaders.<anonymous>' call
    if ((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().o1w_1.h2(element)) {
      destination.g(element);
    }
  }
  var unsafeRequestHeaders = destination;
  // Inline function 'kotlin.collections.isNotEmpty' call
  if (!unsafeRequestHeaders.f1()) {
    throw _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.UnsafeHeaderException3ncvrrp48xjzq.l1x((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(unsafeRequestHeaders));
  }
}
function createCallContext(_this__u8e3s4, parentJob, $completion) {
  var callJob = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Job13y4jkazwjho0)(parentJob);
  var callContext = _this__u8e3s4.gn().xi(callJob).xi(get_CALL_COROUTINE());
  $l$block: {
    // Inline function 'io.ktor.client.engine.attachToUserJob' call
    // Inline function 'kotlin.js.getCoroutineContext' call
    var tmp0_elvis_lhs = $completion.rb().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      break $l$block;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var userJob = tmp;
    var cleanupHandler = userJob.ko(true, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, createCallContext$lambda(callJob));
    callJob.io(createCallContext$lambda_0(cleanupHandler));
  }
  return callContext;
}
function createCallContext$lambda($callJob) {
  return function (cause) {
    if (cause == null)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    $callJob.oo(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CancellationException3b36o9qz53rgr.hc(cause.message));
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function createCallContext$lambda_0($cleanupHandler) {
  return function (it) {
    $cleanupHandler.kq();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
var properties_initialized_HttpClientEngine_kt_5uiebb;
function _init_properties_HttpClientEngine_kt__h91z5h() {
  if (!properties_initialized_HttpClientEngine_kt_5uiebb) {
    properties_initialized_HttpClientEngine_kt_5uiebb = true;
    CALL_COROUTINE = new _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineName2g5zosw74tf0f('call-context');
    CLIENT_CONFIG = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('client-config');
  }
}
function HttpClientEngineBase$coroutineContext$delegate$lambda(this$0) {
  return function () {
    return (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.SilentSupervisorlzoikirj0zeo)().xi(this$0.c2g()).xi(new _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineName2g5zosw74tf0f(this$0.y2f_1 + '-context'));
  };
}
function coroutineContext$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getPropertyCallableRef1ajb9in178r5r)('coroutineContext', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.KProperty1ca4yb4wlo496, function (receiver) {
    return receiver.gn();
  }, null);
}
function get_ENGINE_CAPABILITIES_KEY() {
  _init_properties_HttpClientEngineCapability_kt__ifvyst();
  return ENGINE_CAPABILITIES_KEY;
}
var ENGINE_CAPABILITIES_KEY;
var DEFAULT_CAPABILITIES;
var properties_initialized_HttpClientEngineCapability_kt_qarzcf;
function _init_properties_HttpClientEngineCapability_kt__ifvyst() {
  if (!properties_initialized_HttpClientEngineCapability_kt_qarzcf) {
    properties_initialized_HttpClientEngineCapability_kt_qarzcf = true;
    ENGINE_CAPABILITIES_KEY = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('EngineCapabilities');
    DEFAULT_CAPABILITIES = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.setOf1u3mizs95ngxo)(Plugin_getInstance_4());
  }
}
function get_KTOR_DEFAULT_USER_AGENT() {
  _init_properties_Utils_kt__jo07cx();
  return KTOR_DEFAULT_USER_AGENT;
}
var KTOR_DEFAULT_USER_AGENT;
function get_DATE_HEADERS() {
  _init_properties_Utils_kt__jo07cx();
  return DATE_HEADERS;
}
var DATE_HEADERS;
var Companion_instance_0;
function Companion_getInstance_3() {
  return Companion_instance_0;
}
function callContext($completion) {
  // Inline function 'kotlin.js.getCoroutineContext' call
  var tmp$ret$0 = $completion.rb();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(tmp$ret$0.yb(Companion_instance_0)).g2g_1;
}
function mergeHeaders(requestHeaders, content, block) {
  _init_properties_Utils_kt__jo07cx();
  var tmp = buildHeaders(mergeHeaders$lambda(requestHeaders, content));
  tmp.i1m(mergeHeaders$lambda_0(block));
  var missingAgent = requestHeaders.f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().r1v_1) == null && content.m1x().f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().r1v_1) == null;
  if (missingAgent && needUserAgent()) {
    block((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().r1v_1, get_KTOR_DEFAULT_USER_AGENT());
  }
  var tmp0_safe_receiver = content.s22();
  var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.toString();
  var tmp2_elvis_lhs = tmp1_elvis_lhs == null ? content.m1x().f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().l1t_1) : tmp1_elvis_lhs;
  var type = tmp2_elvis_lhs == null ? requestHeaders.f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().l1t_1) : tmp2_elvis_lhs;
  var tmp3_safe_receiver = content.t22();
  var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.toString();
  var tmp5_elvis_lhs = tmp4_elvis_lhs == null ? content.m1x().f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().i1t_1) : tmp4_elvis_lhs;
  var length = tmp5_elvis_lhs == null ? requestHeaders.f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().i1t_1) : tmp5_elvis_lhs;
  if (type == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    block((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().l1t_1, type);
  }
  if (length == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    block((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().i1t_1, length);
  }
}
function needUserAgent() {
  _init_properties_Utils_kt__jo07cx();
  return !(0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PlatformUtils_getInstance3trl22jwg7wgb)().y1l_1;
}
function mergeHeaders$lambda($requestHeaders, $content) {
  return function ($this$buildHeaders) {
    $this$buildHeaders.r1m($requestHeaders);
    $this$buildHeaders.r1m($content.m1x());
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function mergeHeaders$lambda_0($block) {
  return function (key, values) {
    var tmp;
    if ((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().i1t_1 === key) {
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    var tmp_0;
    if ((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().l1t_1 === key) {
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    var tmp_1;
    if (get_DATE_HEADERS().h2(key)) {
      var tmp0_iterator = values.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'io.ktor.client.engine.mergeHeaders.<anonymous>.<anonymous>' call
        $block(key, element);
      }
      tmp_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    } else {
      var separator = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().m1t_1 === key ? '; ' : ',';
      tmp_1 = $block(key, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.joinToString1cxrrlmo0chqs)(values, separator));
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
var properties_initialized_Utils_kt_xvi83j;
function _init_properties_Utils_kt__jo07cx() {
  if (!properties_initialized_Utils_kt_xvi83j) {
    properties_initialized_Utils_kt_xvi83j = true;
    KTOR_DEFAULT_USER_AGENT = 'Ktor client';
    DATE_HEADERS = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.setOf45ia9pnfhe90)([(0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().o1t_1, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().u1t_1, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().g1u_1, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().b1u_1, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().f1u_1]);
  }
}
function get_UploadProgressListenerAttributeKey() {
  _init_properties_BodyProgress_kt__s0v569();
  return UploadProgressListenerAttributeKey;
}
var UploadProgressListenerAttributeKey;
function get_DownloadProgressListenerAttributeKey() {
  _init_properties_BodyProgress_kt__s0v569();
  return DownloadProgressListenerAttributeKey;
}
var DownloadProgressListenerAttributeKey;
function handle($this, scope) {
  var observableContentPhase = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PipelinePhase2q3d54imxjlma('ObservableContent');
  scope.k26_1.h1p(Phases_getInstance().k2g_1, observableContentPhase);
  scope.k26_1.m1p(observableContentPhase, BodyProgress$handle$slambda_1(null));
  var tmp = Phases_getInstance_2().o2g_1;
  scope.n26_1.m1p(tmp, BodyProgress$handle$slambda_2(null));
}
var Plugin_instance;
function Plugin_getInstance() {
  if (Plugin_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Plugin();
  return Plugin_instance;
}
function BodyProgress$handle$slambda_1(resultContinuation) {
  var i = new BodyProgress$handle$slambda(resultContinuation);
  var l = function ($this$intercept, content, $completion) {
    return i.e27($this$intercept, content, $completion);
  };
  l.$arity = 2;
  return l;
}
function BodyProgress$handle$slambda_2(resultContinuation) {
  var i = new BodyProgress$handle$slambda_0(resultContinuation);
  var l = function ($this$intercept, response, $completion) {
    return i.q2h($this$intercept, response, $completion);
  };
  l.$arity = 2;
  return l;
}
function withObservableDownload(_this__u8e3s4, listener) {
  _init_properties_BodyProgress_kt__s0v569();
  var observableByteChannel = observable(_this__u8e3s4.l2b(), _this__u8e3s4.gn(), (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.contentLength2suzxu1lzutku)(_this__u8e3s4), listener);
  return wrapWithContent(_this__u8e3s4.i2c(), observableByteChannel).l27();
}
var properties_initialized_BodyProgress_kt_pmfrhr;
function _init_properties_BodyProgress_kt__s0v569() {
  if (!properties_initialized_BodyProgress_kt_pmfrhr) {
    properties_initialized_BodyProgress_kt_pmfrhr = true;
    UploadProgressListenerAttributeKey = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('UploadProgressListenerAttributeKey');
    DownloadProgressListenerAttributeKey = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('DownloadProgressListenerAttributeKey');
  }
}
function get_ValidateMark() {
  _init_properties_DefaultResponseValidation_kt__wcn8vr();
  return ValidateMark;
}
var ValidateMark;
function get_LOGGER() {
  _init_properties_DefaultResponseValidation_kt__wcn8vr();
  return LOGGER;
}
var LOGGER;
function addDefaultResponseValidation(_this__u8e3s4) {
  _init_properties_DefaultResponseValidation_kt__wcn8vr();
  HttpResponseValidator(_this__u8e3s4, addDefaultResponseValidation$lambda(_this__u8e3s4));
}
function addDefaultResponseValidation$lambda$slambda_0(resultContinuation) {
  var i = new addDefaultResponseValidation$lambda$slambda(resultContinuation);
  var l = function (response, $completion) {
    return i.m2j(response, $completion);
  };
  l.$arity = 1;
  return l;
}
function addDefaultResponseValidation$lambda($this_addDefaultResponseValidation) {
  return function ($this$HttpResponseValidator) {
    $this$HttpResponseValidator.q2j_1 = $this_addDefaultResponseValidation.x28_1;
    $this$HttpResponseValidator.r2j(addDefaultResponseValidation$lambda$slambda_0(null));
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
var properties_initialized_DefaultResponseValidation_kt_akvzqt;
function _init_properties_DefaultResponseValidation_kt__wcn8vr() {
  if (!properties_initialized_DefaultResponseValidation_kt_akvzqt) {
    properties_initialized_DefaultResponseValidation_kt_akvzqt = true;
    ValidateMark = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('ValidateMark');
    LOGGER = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.DefaultResponseValidation');
  }
}
function get_LOGGER_0() {
  _init_properties_DefaultTransform_kt__20knxx();
  return LOGGER_0;
}
var LOGGER_0;
function defaultTransformers(_this__u8e3s4) {
  _init_properties_DefaultTransform_kt__20knxx();
  var tmp = Phases_getInstance().k2g_1;
  _this__u8e3s4.k26_1.m1p(tmp, defaultTransformers$slambda_1(null));
  var tmp_0 = Phases_getInstance_1().k29_1;
  _this__u8e3s4.l26_1.m1p(tmp_0, defaultTransformers$slambda_2(null));
  platformResponseDefaultTransformers(_this__u8e3s4);
}
function defaultTransformers$slambda_1(resultContinuation) {
  var i = new defaultTransformers$slambda(resultContinuation);
  var l = function ($this$intercept, body, $completion) {
    return i.e27($this$intercept, body, $completion);
  };
  l.$arity = 2;
  return l;
}
function defaultTransformers$slambda$slambda_0($body, $response, resultContinuation) {
  var i = new defaultTransformers$slambda$slambda($body, $response, resultContinuation);
  var l = function ($this$writer, $completion) {
    return i.l2d($this$writer, $completion);
  };
  l.$arity = 1;
  return l;
}
function defaultTransformers$slambda$lambda($responseJobHolder) {
  return function (it) {
    $responseJobHolder.is();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function defaultTransformers$slambda_2(resultContinuation) {
  var i = new defaultTransformers$slambda_0(resultContinuation);
  var l = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion) {
    return i.y27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion);
  };
  l.$arity = 2;
  return l;
}
var properties_initialized_DefaultTransform_kt_ossax9;
function _init_properties_DefaultTransform_kt__20knxx() {
  if (!properties_initialized_DefaultTransform_kt_ossax9) {
    properties_initialized_DefaultTransform_kt_ossax9 = true;
    LOGGER_0 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.defaultTransformers');
  }
}
function get_LOGGER_1() {
  _init_properties_HttpCallValidator_kt__r6yh2y();
  return LOGGER_1;
}
var LOGGER_1;
function get_ExpectSuccessAttributeKey() {
  _init_properties_HttpCallValidator_kt__r6yh2y();
  return ExpectSuccessAttributeKey;
}
var ExpectSuccessAttributeKey;
function HttpCallValidator$Companion$install$slambda$lambda($plugin) {
  return function () {
    return $plugin.b2m_1;
  };
}
function HttpCallValidator$Companion$install$slambda_2($plugin, resultContinuation) {
  var i = new HttpCallValidator$Companion$install$slambda($plugin, resultContinuation);
  var l = function ($this$intercept, it, $completion) {
    return i.e27($this$intercept, it, $completion);
  };
  l.$arity = 2;
  return l;
}
function HttpCallValidator$Companion$install$slambda_3($plugin, resultContinuation) {
  var i = new HttpCallValidator$Companion$install$slambda_0($plugin, resultContinuation);
  var l = function ($this$intercept, container, $completion) {
    return i.y27($this$intercept, container, $completion);
  };
  l.$arity = 2;
  return l;
}
function HttpCallValidator$Companion$install$slambda_4($plugin, resultContinuation) {
  var i = new HttpCallValidator$Companion$install$slambda_1($plugin, resultContinuation);
  var l = function ($this$intercept, request, $completion) {
    return i.o2n($this$intercept, request, $completion);
  };
  l.$arity = 2;
  return l;
}
function validateResponse($this, response, $completion) {
  var tmp = new $validateResponseCOROUTINE$5($this, response, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function processException($this, cause, request, $completion) {
  var tmp = new $processExceptionCOROUTINE$6($this, cause, request, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
var Companion_instance_1;
function Companion_getInstance_4() {
  if (Companion_instance_1 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Companion_1();
  return Companion_instance_1;
}
function HttpRequest_0(builder) {
  _init_properties_HttpCallValidator_kt__r6yh2y();
  return new HttpRequest$1(builder);
}
function HttpResponseValidator(_this__u8e3s4, block) {
  _init_properties_HttpCallValidator_kt__r6yh2y();
  _this__u8e3s4.t29(Companion_getInstance_4(), block);
}
var properties_initialized_HttpCallValidator_kt_xrx49w;
function _init_properties_HttpCallValidator_kt__r6yh2y() {
  if (!properties_initialized_HttpCallValidator_kt_xrx49w) {
    properties_initialized_HttpCallValidator_kt_xrx49w = true;
    LOGGER_1 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.HttpCallValidator');
    ExpectSuccessAttributeKey = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('ExpectSuccessAttributeKey');
  }
}
function get_PLUGIN_INSTALLED_LIST() {
  _init_properties_HttpClientPlugin_kt__cypu1m();
  return PLUGIN_INSTALLED_LIST;
}
var PLUGIN_INSTALLED_LIST;
function plugin(_this__u8e3s4, plugin) {
  _init_properties_HttpClientPlugin_kt__cypu1m();
  var tmp0_elvis_lhs = pluginOrNull(_this__u8e3s4, plugin);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalStateExceptionkoljg5n0nrlr.b4('Plugin ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(plugin) + ' is not installed. Consider using `install(' + plugin.k1().toString() + ')` in client config first.');
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function pluginOrNull(_this__u8e3s4, plugin) {
  _init_properties_HttpClientPlugin_kt__cypu1m();
  var tmp0_safe_receiver = _this__u8e3s4.o26_1.m1k(get_PLUGIN_INSTALLED_LIST());
  return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.m1k(plugin.k1());
}
var properties_initialized_HttpClientPlugin_kt_p98320;
function _init_properties_HttpClientPlugin_kt__cypu1m() {
  if (!properties_initialized_HttpClientPlugin_kt_p98320) {
    properties_initialized_HttpClientPlugin_kt_p98320 = true;
    PLUGIN_INSTALLED_LIST = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('ApplicationPluginRegistry');
  }
}
function get_LOGGER_2() {
  _init_properties_HttpPlainText_kt__iy89z1();
  return LOGGER_2;
}
var LOGGER_2;
function HttpPlainText$Plugin$install$slambda_1($plugin, resultContinuation) {
  var i = new HttpPlainText$Plugin$install$slambda($plugin, resultContinuation);
  var l = function ($this$intercept, content, $completion) {
    return i.e27($this$intercept, content, $completion);
  };
  l.$arity = 2;
  return l;
}
function HttpPlainText$Plugin$install$slambda_2($plugin, resultContinuation) {
  var i = new HttpPlainText$Plugin$install$slambda_0($plugin, resultContinuation);
  var l = function ($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion) {
    return i.y27($this$intercept, _name_for_destructuring_parameter_0__wldtmu, $completion);
  };
  l.$arity = 2;
  return l;
}
var Plugin_instance_0;
function Plugin_getInstance_0() {
  if (Plugin_instance_0 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Plugin_0();
  return Plugin_instance_0;
}
function wrapContent($this, request, content, requestContentType) {
  var contentType = requestContentType == null ? (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Text_getInstance3g3w54guxue7x)().b1s_1 : requestContentType;
  var tmp2_elvis_lhs = requestContentType == null ? null : (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.charset1dribv3ku48b1)(requestContentType);
  var charset_0 = tmp2_elvis_lhs == null ? $this.u2p_1 : tmp2_elvis_lhs;
  get_LOGGER_2().j1q('Sending request body to ' + request.k28_1.toString() + ' as text/plain with charset ' + charset_0.toString());
  return new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.TextContent1rb6ftlpvl1d2(content, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.withCharset27k3t3dvzhi4n)(contentType, charset_0));
}
function HttpPlainText$lambda(a, b) {
  // Inline function 'kotlin.comparisons.compareValuesBy' call
  // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>' call
  var tmp = b.ai_1;
  // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>' call
  var tmp$ret$1 = a.ai_1;
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.compareValues1n2ayl87ihzfk)(tmp, tmp$ret$1);
}
function HttpPlainText$lambda_0(a, b) {
  // Inline function 'kotlin.comparisons.compareValuesBy' call
  // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>' call
  var tmp = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.get_name2f11g4r0d5pxp)(a);
  // Inline function 'io.ktor.client.plugins.HttpPlainText.<anonymous>' call
  var tmp$ret$1 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.get_name2f11g4r0d5pxp)(b);
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.compareValues1n2ayl87ihzfk)(tmp, tmp$ret$1);
}
var properties_initialized_HttpPlainText_kt_2nx4ox;
function _init_properties_HttpPlainText_kt__iy89z1() {
  if (!properties_initialized_HttpPlainText_kt_2nx4ox) {
    properties_initialized_HttpPlainText_kt_2nx4ox = true;
    LOGGER_2 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.HttpPlainText');
  }
}
function get_ALLOWED_FOR_REDIRECT() {
  _init_properties_HttpRedirect_kt__ure7fo();
  return ALLOWED_FOR_REDIRECT;
}
var ALLOWED_FOR_REDIRECT;
function get_LOGGER_3() {
  _init_properties_HttpRedirect_kt__ure7fo();
  return LOGGER_3;
}
var LOGGER_3;
function handleCall(_this__u8e3s4, $this, context, origin, allowHttpsDowngrade, client, $completion) {
  var tmp = new $handleCallCOROUTINE$7($this, _this__u8e3s4, context, origin, allowHttpsDowngrade, client, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function HttpRedirect$Plugin$install$slambda_0($plugin, $scope, resultContinuation) {
  var i = new HttpRedirect$Plugin$install$slambda($plugin, $scope, resultContinuation);
  var l = function ($this$intercept, context, $completion) {
    return i.o2n($this$intercept, context, $completion);
  };
  l.$arity = 2;
  return l;
}
var Plugin_instance_1;
function Plugin_getInstance_1() {
  if (Plugin_instance_1 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Plugin_1();
  return Plugin_instance_1;
}
function isRedirect(_this__u8e3s4) {
  _init_properties_HttpRedirect_kt__ure7fo();
  var tmp0_subject = _this__u8e3s4.h20_1;
  return ((((tmp0_subject === (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancec9pdr3n9tfq9)().q1y_1.h20_1 ? true : tmp0_subject === (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancec9pdr3n9tfq9)().r1y_1.h20_1) ? true : tmp0_subject === (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancec9pdr3n9tfq9)().w1y_1.h20_1) ? true : tmp0_subject === (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancec9pdr3n9tfq9)().x1y_1.h20_1) ? true : tmp0_subject === (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancec9pdr3n9tfq9)().s1y_1.h20_1) ? true : false;
}
var properties_initialized_HttpRedirect_kt_klj746;
function _init_properties_HttpRedirect_kt__ure7fo() {
  if (!properties_initialized_HttpRedirect_kt_klj746) {
    properties_initialized_HttpRedirect_kt_klj746 = true;
    ALLOWED_FOR_REDIRECT = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.setOf45ia9pnfhe90)([(0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancepumzx9q4106p)().n1x_1, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.Companion_getInstancepumzx9q4106p)().s1x_1]);
    LOGGER_3 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.HttpRedirect');
  }
}
function get_LOGGER_4() {
  _init_properties_HttpRequestLifecycle_kt__jgkmfx();
  return LOGGER_4;
}
var LOGGER_4;
function HttpRequestLifecycle$Plugin$install$slambda_0($scope, resultContinuation) {
  var i = new HttpRequestLifecycle$Plugin$install$slambda($scope, resultContinuation);
  var l = function ($this$intercept, it, $completion) {
    return i.e27($this$intercept, it, $completion);
  };
  l.$arity = 2;
  return l;
}
var Plugin_instance_2;
function Plugin_getInstance_2() {
  if (Plugin_instance_2 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Plugin_2();
  return Plugin_instance_2;
}
function attachToClientEngineJob(requestJob, clientEngineJob) {
  _init_properties_HttpRequestLifecycle_kt__jgkmfx();
  var handler = clientEngineJob.io(attachToClientEngineJob$lambda(requestJob));
  requestJob.io(attachToClientEngineJob$lambda_0(handler));
}
function attachToClientEngineJob$lambda($requestJob) {
  return function (cause) {
    var tmp;
    if (!(cause == null)) {
      get_LOGGER_4().j1q('Cancelling request because engine Job failed with error: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString30pk9tzaqopn)(cause));
      (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.cancel1xim2hrvjmwpn)($requestJob, 'Engine failed', cause);
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    } else {
      get_LOGGER_4().j1q('Cancelling request because engine Job completed');
      $requestJob.is();
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function attachToClientEngineJob$lambda_0($handler) {
  return function (it) {
    $handler.kq();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
var properties_initialized_HttpRequestLifecycle_kt_3hmcrf;
function _init_properties_HttpRequestLifecycle_kt__jgkmfx() {
  if (!properties_initialized_HttpRequestLifecycle_kt_3hmcrf) {
    properties_initialized_HttpRequestLifecycle_kt_3hmcrf = true;
    LOGGER_4 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.HttpRequestLifecycle');
  }
}
function HttpSend$Plugin$install$slambda_0($plugin, $scope, resultContinuation) {
  var i = new HttpSend$Plugin$install$slambda($plugin, $scope, resultContinuation);
  var l = function ($this$intercept, content, $completion) {
    return i.e27($this$intercept, content, $completion);
  };
  l.$arity = 2;
  return l;
}
var Plugin_instance_3;
function Plugin_getInstance_3() {
  if (Plugin_instance_3 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Plugin_3();
  return Plugin_instance_3;
}
function get_LOGGER_5() {
  _init_properties_HttpTimeout_kt__pucqrr();
  return LOGGER_5;
}
var LOGGER_5;
function checkTimeoutValue($this, value) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(value == null || value.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0)) > 0)) {
    // Inline function 'io.ktor.client.plugins.HttpTimeoutCapabilityConfiguration.checkTimeoutValue.<anonymous>' call
    var message = 'Only positive timeout values are allowed, for infinite timeout use HttpTimeout.INFINITE_TIMEOUT_MS';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
  }
  return value;
}
var Companion_instance_2;
function Companion_getInstance_5() {
  if (Companion_instance_2 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Companion_2();
  return Companion_instance_2;
}
function init_io_ktor_client_plugins_HttpTimeout_HttpTimeoutCapabilityConfiguration(_this__u8e3s4) {
  Companion_getInstance_5();
  _this__u8e3s4.n2u_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0);
  _this__u8e3s4.o2u_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0);
  _this__u8e3s4.p2u_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Long2qws0ah9gnpki(0, 0);
}
function HttpTimeout$Plugin$install$slambda$slambda_0($requestTimeout, $request, $executionContext, resultContinuation) {
  var i = new HttpTimeout$Plugin$install$slambda$slambda($requestTimeout, $request, $executionContext, resultContinuation);
  var l = function ($this$launch, $completion) {
    return i.o1c($this$launch, $completion);
  };
  l.$arity = 1;
  return l;
}
function HttpTimeout$Plugin$install$slambda$lambda($killer) {
  return function (it) {
    $killer.po();
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  };
}
function HttpTimeout$Plugin$install$slambda_0($plugin, $scope, resultContinuation) {
  var i = new HttpTimeout$Plugin$install$slambda($plugin, $scope, resultContinuation);
  var l = function ($this$intercept, request, $completion) {
    return i.o2n($this$intercept, request, $completion);
  };
  l.$arity = 2;
  return l;
}
function hasNotNullTimeouts($this) {
  return !($this.y2v_1 == null) || !($this.z2v_1 == null) || !($this.a2w_1 == null);
}
var Plugin_instance_4;
function Plugin_getInstance_4() {
  if (Plugin_instance_4 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Plugin_4();
  return Plugin_instance_4;
}
var properties_initialized_HttpTimeout_kt_9oyjbd;
function _init_properties_HttpTimeout_kt__pucqrr() {
  if (!properties_initialized_HttpTimeout_kt_9oyjbd) {
    properties_initialized_HttpTimeout_kt_9oyjbd = true;
    LOGGER_5 = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.KtorSimpleLogger1xdphsp5l4e48)('io.ktor.client.plugins.HttpTimeout');
  }
}
function wrapWithContent(_this__u8e3s4, content) {
  return DelegatedCall.r2w(_this__u8e3s4.g27_1, content, _this__u8e3s4);
}
var Companion_instance_3;
function Companion_getInstance_6() {
  return Companion_instance_3;
}
function HttpRequestBuilder$setCapability$lambda() {
  // Inline function 'kotlin.collections.mutableMapOf' call
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.LinkedHashMap1zhqxkxv3xnkl.ya();
}
function url(_this__u8e3s4, urlString) {
  (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.takeFrom3rd40szpqy350)(_this__u8e3s4.k28_1, urlString);
}
function isUpgradeRequest(_this__u8e3s4) {
  var tmp = _this__u8e3s4.h2e_1;
  return tmp instanceof ClientUpgradeContent;
}
var Phases_instance;
function Phases_getInstance() {
  if (Phases_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Phases();
  return Phases_instance;
}
var Phases_instance_0;
function Phases_getInstance_0() {
  if (Phases_instance_0 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Phases_0();
  return Phases_instance_0;
}
function get_BodyTypeAttributeKey() {
  _init_properties_RequestBody_kt__bo3lwf();
  return BodyTypeAttributeKey;
}
var BodyTypeAttributeKey;
var properties_initialized_RequestBody_kt_agyv1b;
function _init_properties_RequestBody_kt__bo3lwf() {
  if (!properties_initialized_RequestBody_kt_agyv1b) {
    properties_initialized_RequestBody_kt_agyv1b = true;
    BodyTypeAttributeKey = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.AttributeKey3aq8ytwgx54f7('BodyTypeAttributeKey');
  }
}
function bearerAuth(_this__u8e3s4, token) {
  return header(_this__u8e3s4, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().c1t_1, 'Bearer ' + token);
}
function header(_this__u8e3s4, key, value) {
  var tmp;
  if (value == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    _this__u8e3s4.m1x().q1m(key, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(value));
    tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  }
  var tmp_0;
  if (tmp == null) {
    tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  } else {
    tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  }
  return tmp_0;
}
function accept(_this__u8e3s4, contentType) {
  return _this__u8e3s4.m1x().q1m((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HttpHeaders_getInstancekqele34vb34f)().t1s_1, contentType.toString());
}
function get_request(_this__u8e3s4) {
  return _this__u8e3s4.i2c().c2b();
}
function complete(_this__u8e3s4) {
  var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ensureNotNull1e947j3ixpazm)(_this__u8e3s4.gn().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Key_instance3o7pj7ik1b183));
  var job = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(tmp, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CompletableJob1w6swnu15iclo) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
  job.is();
}
function bodyAsText(_this__u8e3s4, fallbackCharset, $completion) {
  fallbackCharset = fallbackCharset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.Charsets_getInstancemd62gu5po4os)().l1g_1 : fallbackCharset;
  var tmp = new $bodyAsTextCOROUTINE$13(_this__u8e3s4, fallbackCharset, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
var Phases_instance_1;
function Phases_getInstance_1() {
  if (Phases_instance_1 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Phases_1();
  return Phases_instance_1;
}
var Phases_instance_2;
function Phases_getInstance_2() {
  if (Phases_instance_2 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new Phases_2();
  return Phases_instance_2;
}
function checkCapabilities($this) {
  var tmp0_safe_receiver = $this.h2z_1.p28_1.m1k(get_ENGINE_CAPABILITIES_KEY());
  var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.r2();
  var tmp;
  if (tmp1_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.collections.filterIsInstance' call
    // Inline function 'kotlin.collections.filterIsInstanceTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.ArrayList3it5z8td81qkl.e1();
    var tmp0_iterator = tmp1_safe_receiver.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      if (!(element == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.isInterface3d6p8outrmvmk)(element, HttpClientPlugin) : false) {
        destination.g(element);
      }
    }
    tmp = destination;
  }
  var tmp2_safe_receiver = tmp;
  if (tmp2_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_0 = tmp2_safe_receiver.w();
    while (tmp0_iterator_0.x()) {
      var element_0 = tmp0_iterator_0.y();
      // Inline function 'io.ktor.client.statement.HttpStatement.checkCapabilities.<anonymous>' call
      $l$block: {
        // Inline function 'kotlin.requireNotNull' call
        // Inline function 'kotlin.contracts.contract' call
        if (pluginOrNull($this.i2z_1, element_0) == null) {
          // Inline function 'io.ktor.client.statement.HttpStatement.checkCapabilities.<anonymous>.<anonymous>' call
          var message = 'Consider installing ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(element_0) + ' plugin because the request requires it to be installed';
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.toString1pkumu07cwy4m)(message));
        } else {
          break $l$block;
        }
      }
    }
  }
}
function HttpStatement$execute$slambda_0(resultContinuation) {
  var i = new HttpStatement$execute$slambda(resultContinuation);
  var l = function (it, $completion) {
    return i.s2z(it, $completion);
  };
  l.$arity = 1;
  return l;
}
function observable(_this__u8e3s4, context, contentLength, listener) {
  var tmp = _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.GlobalScope_instance3rq364dcgnf9q;
  return (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_6__.writer1eia5its2a1fh)(tmp, context, true, observable$slambda_0(contentLength, _this__u8e3s4, listener, null)).v1b();
}
function observable$slambda_0($contentLength, $this_observable, $listener, resultContinuation) {
  var i = new observable$slambda($contentLength, $this_observable, $listener, resultContinuation);
  var l = function ($this$writer, $completion) {
    return i.l2d($this$writer, $completion);
  };
  l.$arity = 1;
  return l;
}
function get_HttpRequestCreated() {
  _init_properties_ClientEvents_kt__xuvbz8();
  return HttpRequestCreated;
}
var HttpRequestCreated;
function get_HttpRequestIsReadyForSending() {
  _init_properties_ClientEvents_kt__xuvbz8();
  return HttpRequestIsReadyForSending;
}
var HttpRequestIsReadyForSending;
function get_HttpResponseReceived() {
  _init_properties_ClientEvents_kt__xuvbz8();
  return HttpResponseReceived;
}
var HttpResponseReceived;
function get_HttpResponseReceiveFailed() {
  _init_properties_ClientEvents_kt__xuvbz8();
  return HttpResponseReceiveFailed;
}
var HttpResponseReceiveFailed;
function get_HttpResponseCancelled() {
  _init_properties_ClientEvents_kt__xuvbz8();
  return HttpResponseCancelled;
}
var HttpResponseCancelled;
var properties_initialized_ClientEvents_kt_rdee4m;
function _init_properties_ClientEvents_kt__xuvbz8() {
  if (!properties_initialized_ClientEvents_kt_rdee4m) {
    properties_initialized_ClientEvents_kt_rdee4m = true;
    HttpRequestCreated = new _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__.EventDefinition1fymk8xrdelhn();
    HttpRequestIsReadyForSending = new _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__.EventDefinition1fymk8xrdelhn();
    HttpResponseReceived = new _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__.EventDefinition1fymk8xrdelhn();
    HttpResponseReceiveFailed = new _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__.EventDefinition1fymk8xrdelhn();
    HttpResponseCancelled = new _ktor_ktor_events_mjs__WEBPACK_IMPORTED_MODULE_4__.EventDefinition1fymk8xrdelhn();
  }
}
var EmptyContent_instance;
function EmptyContent_getInstance() {
  if (EmptyContent_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new EmptyContent();
  return EmptyContent_instance;
}
function buildHeaders(block) {
  var tmp;
  if (block === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya) {
    tmp = buildHeaders$lambda;
  } else {
    tmp = block;
  }
  block = tmp;
  // Inline function 'kotlin.apply' call
  var this_0 = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_5__.HeadersBuilder3h7sn3kkvu98m();
  // Inline function 'kotlin.contracts.contract' call
  block(this_0);
  return this_0.y18();
}
function buildHeaders$lambda($this$null) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function ioDispatcher() {
  return (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.Dispatchers_getInstance1nk2l7rcqz5wi)().hx_1;
}
function platformRequestDefaultTransform(contentType, context, body) {
  return null;
}
function platformResponseDefaultTransformers(_this__u8e3s4) {
}
function unwrapCancellationException(_this__u8e3s4) {
  var exception = _this__u8e3s4;
  $l$loop: while (exception instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CancellationException3b36o9qz53rgr) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(exception, exception.cause)) {
      return _this__u8e3s4;
    }
    exception = exception.cause;
  }
  var tmp0_elvis_lhs = exception;
  return tmp0_elvis_lhs == null ? _this__u8e3s4 : tmp0_elvis_lhs;
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpClient$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpClient$slambda_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($executeCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpClient, 'HttpClient', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineScopefcb5f5dwqcas], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpClientConfig, 'HttpClientConfig', HttpClientConfig);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($bodyNullableCOROUTINE$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpClientCall, 'HttpClientCall', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineScopefcb5f5dwqcas], [0, 1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DoubleReceiveException, 'DoubleReceiveException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(NoTransformationFoundException, 'NoTransformationFoundException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(SavedHttpCall, 'SavedHttpCall', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [0, 1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForInterface1egvbzx539z91)(HttpRequest, 'HttpRequest', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineScopefcb5f5dwqcas]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(SavedHttpRequest, 'SavedHttpRequest', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpRequest]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpResponse, 'HttpResponse', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineScopefcb5f5dwqcas]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(SavedHttpResponse, 'SavedHttpResponse');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($saveCOROUTINE$3);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(UnsupportedContentTypeException, 'UnsupportedContentTypeException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(ObservableContent$content$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ObservableContent, 'ObservableContent');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpClientEngine$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpClientEngine$executeWithinCallContext$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($executeWithinCallContextCOROUTINE$4);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForInterface1egvbzx539z91)(HttpClientEngine, 'HttpClientEngine', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineScopefcb5f5dwqcas], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ClientEngineClosedException, 'ClientEngineClosedException', ClientEngineClosedException.w2f);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(HttpClientEngineBase).l2e = get_supportedCapabilities;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(HttpClientEngineBase).a29 = install;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpClientEngineBase, 'HttpClientEngineBase', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientEngine], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpClientEngineConfig, 'HttpClientEngineConfig', HttpClientEngineConfig);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion_0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(KtorCallContextElement).yb = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get6d5x931vk0s;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(KtorCallContextElement).wi = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.fold36i9psb7d5v48;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(KtorCallContextElement).vi = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.minusKeyyqanvso9aovh;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(KtorCallContextElement).xi = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.plusolev77jfy5r9;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(KtorCallContextElement, 'KtorCallContextElement', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Element2gr7ezmxqaln7]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForInterface1egvbzx539z91)(HttpClientPlugin, 'HttpClientPlugin');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Plugin, 'Plugin', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientPlugin]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(BodyProgress$handle$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(BodyProgress$handle$slambda_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(BodyProgress, 'BodyProgress');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ResponseException, 'ResponseException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(RedirectResponseException, 'RedirectResponseException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ClientRequestException, 'ClientRequestException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ServerResponseException, 'ServerResponseException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(addDefaultResponseValidation$lambda$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(defaultTransformers$1$content$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(defaultTransformers$1$content$2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(defaultTransformers$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(defaultTransformers$slambda$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(defaultTransformers$slambda_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpCallValidator$Companion$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpCallValidator$Companion$install$slambda_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpCallValidator$Companion$install$slambda_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Config, 'Config', Config);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion_1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientPlugin]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($validateResponseCOROUTINE$5);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($processExceptionCOROUTINE$6);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpCallValidator, 'HttpCallValidator', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1, 2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ExceptionHandlerWrapper, 'ExceptionHandlerWrapper');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(RequestExceptionHandlerWrapper, 'RequestExceptionHandlerWrapper');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)(HttpRequest$1).gn = get_coroutineContext;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpRequest$1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpRequest]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpPlainText$Plugin$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpPlainText$Plugin$install$slambda_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Config_0, 'Config', Config_0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Plugin_0, 'Plugin', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientPlugin]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpPlainText, 'HttpPlainText');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpRedirect$Plugin$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($handleCallCOROUTINE$7);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Config_1, 'Config', Config_1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Plugin_1, 'Plugin', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientPlugin], [4]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpRedirect, 'HttpRedirect');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpRequestLifecycle$Plugin$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Plugin_2, 'Plugin', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientPlugin]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpRequestLifecycle, 'HttpRequestLifecycle');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpSend$Plugin$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($executeCOROUTINE$8);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Config_2, 'Config', Config_2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Plugin_3, 'Plugin', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientPlugin]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForInterface1egvbzx539z91)(Sender, 'Sender', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(InterceptedSender, 'InterceptedSender', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [Sender], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DefaultSender, 'DefaultSender', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [Sender], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpSend, 'HttpSend');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(SendCountExceedException, 'SendCountExceedException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion_2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpTimeout$Plugin$install$slambda$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpTimeout$Plugin$install$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpTimeoutCapabilityConfiguration, 'HttpTimeoutCapabilityConfiguration', HttpTimeoutCapabilityConfiguration.v2v);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Plugin_4, 'Plugin', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpClientPlugin]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpTimeout, 'HttpTimeout');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpRequestTimeoutException, 'HttpRequestTimeoutException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DelegatedCall, 'DelegatedCall', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [0, 1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DelegatedRequest, 'DelegatedRequest', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpRequest]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DelegatedResponse, 'DelegatedResponse');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(ClientUpgradeContent, 'ClientUpgradeContent', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DefaultHttpRequest, 'DefaultHttpRequest', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [HttpRequest]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion_3);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpRequestBuilder, 'HttpRequestBuilder', HttpRequestBuilder);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpRequestData, 'HttpRequestData');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpResponseData, 'HttpResponseData');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Phases, 'Phases');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpRequestPipeline, 'HttpRequestPipeline', HttpRequestPipeline, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Phases_0, 'Phases');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpSendPipeline, 'HttpSendPipeline', HttpSendPipeline, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(DefaultHttpResponse, 'DefaultHttpResponse');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($bodyAsTextCOROUTINE$13);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Phases_1, 'Phases');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpResponsePipeline, 'HttpResponsePipeline', HttpResponsePipeline, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(Phases_2, 'Phases');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpReceivePipeline, 'HttpReceivePipeline', HttpReceivePipeline, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpResponseContainer, 'HttpResponseContainer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(HttpStatement$execute$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($executeCOROUTINE$14);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($executeUnsafeCOROUTINE$15);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($cleanupCOROUTINE$16);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpStatement, 'HttpStatement', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1, 0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForLambda3af3he42mmnh)(observable$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HttpResponseReceiveFail, 'HttpResponseReceiveFail');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)(EmptyContent, 'EmptyContent');
//endregion
//region block: init
Companion_instance_0 = new Companion_0();
Companion_instance_3 = new Companion_3();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-client-core.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-events.mjs":
/*!*************************************!*\
  !*** ./kotlin/ktor-ktor-events.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EventDefinition1fymk8xrdelhn: () => (/* binding */ EventDefinition),
/* harmony export */   Events63tfxre48w4z: () => (/* binding */ Events)
/* harmony export */ });
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-utils.mjs */ "./kotlin/ktor-ktor-utils.mjs");



//region block: imports
//endregion
//region block: pre-declaration
class HandlerRegistration extends _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedListNode3tts9l6uzdsny {}
class Events {
  constructor() {
    this.g23_1 = new _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.CopyOnWriteHashMap2wz01l72sexe7();
  }
  h23(definition, value) {
    var exception = null;
    var tmp0_safe_receiver = this.g23_1.w1m(definition);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlinx.coroutines.internal.LinkedListHead.forEach' call
      var cur = tmp0_safe_receiver.vt_1;
      while (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.equals2au1ep9vhcato)(cur, tmp0_safe_receiver)) {
        if (cur instanceof HandlerRegistration) {
          // Inline function 'io.ktor.events.Events.raise.<anonymous>' call
          var registration = cur;
          try {
            var tmp = registration.l23_1;
            (typeof tmp === 'function' ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)())(value);
          } catch ($p) {
            if ($p instanceof Error) {
              var e = $p;
              var tmp0_safe_receiver_0 = exception;
              var tmp_0;
              if (tmp0_safe_receiver_0 == null) {
                tmp_0 = null;
              } else {
                (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.addSuppressedu5jwjfvsc039)(tmp0_safe_receiver_0, e);
                tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
              }
              if (tmp_0 == null) {
                // Inline function 'kotlin.run' call
                // Inline function 'kotlin.contracts.contract' call
                exception = e;
              }
            } else {
              throw $p;
            }
          }
        }
        cur = cur.vt_1;
      }
    }
    var tmp1_safe_receiver = exception;
    if (tmp1_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      throw tmp1_safe_receiver;
    }
  }
}
class EventDefinition {}
//endregion
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(HandlerRegistration, 'HandlerRegistration');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Events, 'Events', Events);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(EventDefinition, 'EventDefinition', EventDefinition);
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-events.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-http.mjs":
/*!***********************************!*\
  !*** ./kotlin/ktor-ktor-http.mjs ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Application_getInstance1d4ly18wdhadx: () => (/* binding */ Application_getInstance),
/* harmony export */   ByteArrayContent2n0wb43y6ugs1: () => (/* binding */ ByteArrayContent),
/* harmony export */   ByteArrayContent9zol65b22hp0: () => (/* binding */ ByteArrayContent_0),
/* harmony export */   Companion_getInstance12n7p6s0jad4v: () => (/* binding */ Companion_getInstance_1),
/* harmony export */   Companion_getInstance3s68g5cirsb1h: () => (/* binding */ Companion_getInstance_3),
/* harmony export */   Companion_getInstancec9pdr3n9tfq9: () => (/* binding */ Companion_getInstance_4),
/* harmony export */   Companion_getInstancepumzx9q4106p: () => (/* binding */ Companion_getInstance_2),
/* harmony export */   HeadersBuilder3h7sn3kkvu98m: () => (/* binding */ HeadersBuilder),
/* harmony export */   HttpHeaders_getInstancekqele34vb34f: () => (/* binding */ HttpHeaders_getInstance),
/* harmony export */   HttpStatusCode3o1wkms10pg4k: () => (/* binding */ HttpStatusCode),
/* harmony export */   NoContent1bdx48poqrifq: () => (/* binding */ NoContent),
/* harmony export */   NullBody_instance9oj4j8z4op1j: () => (/* binding */ NullBody_instance),
/* harmony export */   OutgoingContent3t2ohmyam9o76: () => (/* binding */ OutgoingContent),
/* harmony export */   ProtocolUpgradexnnpt2xliy8g: () => (/* binding */ ProtocolUpgrade),
/* harmony export */   ReadChannelContentz1amb4hnpqp4: () => (/* binding */ ReadChannelContent),
/* harmony export */   TextContent1rb6ftlpvl1d2: () => (/* binding */ TextContent),
/* harmony export */   Text_getInstance3g3w54guxue7x: () => (/* binding */ Text_getInstance),
/* harmony export */   URLBuilder2mz8zkz4u9ray: () => (/* binding */ URLBuilder),
/* harmony export */   UnsafeHeaderException3ncvrrp48xjzq: () => (/* binding */ UnsafeHeaderException),
/* harmony export */   WriteChannelContent1d7f40hsfcaxg: () => (/* binding */ WriteChannelContent),
/* harmony export */   charset1dribv3ku48b1: () => (/* binding */ charset),
/* harmony export */   charset3qqtyytkmxogi: () => (/* binding */ charset_0),
/* harmony export */   contentLength2suzxu1lzutku: () => (/* binding */ contentLength),
/* harmony export */   contentType2zzm38yxo3syt: () => (/* binding */ contentType),
/* harmony export */   contentType317fn4f991q9a: () => (/* binding */ contentType_0),
/* harmony export */   get_authority2s3hk87lssumy: () => (/* binding */ get_authority_0),
/* harmony export */   get_authorityakhc3pgcrb9j: () => (/* binding */ get_authority),
/* harmony export */   isSecurex1qiiavqi0xu: () => (/* binding */ isSecure),
/* harmony export */   isWebsocket1w1xog9vfgwm1: () => (/* binding */ isWebsocket),
/* harmony export */   parseAndSortHeader33xgq5fx7y6j1: () => (/* binding */ parseAndSortHeader),
/* harmony export */   takeFrom3rd40szpqy350: () => (/* binding */ takeFrom),
/* harmony export */   takeFromkqlcz7c6dx2r: () => (/* binding */ takeFrom_0),
/* harmony export */   withCharset27k3t3dvzhi4n: () => (/* binding */ withCharset),
/* harmony export */   withCharsetIfNeeded3sz33ys0x9vfx: () => (/* binding */ withCharsetIfNeeded)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ktor-ktor-io.mjs */ "./kotlin/ktor-ktor-io.mjs");
/* harmony import */ var _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-utils.mjs */ "./kotlin/ktor-ktor-utils.mjs");



//region block: imports
var imul = Math.imul;
//endregion
//region block: pre-declaration
class URLDecodeException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {
  static m1q(message) {
    var $this = this.t4(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.l1q_1);
    return $this;
  }
}
class Companion {
  constructor() {
    Companion_instance_0 = this;
    this.s1q_1 = ContentType.x1q('*', '*');
  }
  y1q(value) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBlank1dvkhjjvox3p0)(value))
      return this.s1q_1;
    // Inline function 'io.ktor.http.Companion.parse' call
    var headerValue = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.last1vo29oleiqj36)(parseHeaderValue(value));
    // Inline function 'io.ktor.http.Companion.parse.<anonymous>' call
    var parts = headerValue.z1q_1;
    var parameters = headerValue.a1r_1;
    var slash = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(parts, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47));
    if (slash === -1) {
      // Inline function 'kotlin.text.trim' call
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.trim11nh7r46at6sx)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharSequence1ju9jr1w86plq)(parts) ? parts : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)())) === '*')
        return Companion_getInstance().s1q_1;
      throw BadContentTypeFormatException.e1r(value);
    }
    // Inline function 'kotlin.text.trim' call
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    var this_0 = parts.substring(0, slash);
    var type = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.trim11nh7r46at6sx)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharSequence1ju9jr1w86plq)(this_0) ? this_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()));
    // Inline function 'kotlin.text.isEmpty' call
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(type) === 0) {
      throw BadContentTypeFormatException.e1r(value);
    }
    // Inline function 'kotlin.text.trim' call
    // Inline function 'kotlin.text.substring' call
    var startIndex = slash + 1 | 0;
    // Inline function 'kotlin.js.asDynamic' call
    var this_1 = parts.substring(startIndex);
    var subtype = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.trim11nh7r46at6sx)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharSequence1ju9jr1w86plq)(this_1) ? this_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()));
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contains2el4s70rdq4ld)(type, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(32)) || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contains2el4s70rdq4ld)(subtype, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(32))) {
      throw BadContentTypeFormatException.e1r(value);
    }
    var tmp;
    // Inline function 'kotlin.text.isEmpty' call
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(subtype) === 0) {
      tmp = true;
    } else {
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contains2el4s70rdq4ld)(subtype, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47));
    }
    if (tmp) {
      throw BadContentTypeFormatException.e1r(value);
    }
    return ContentType.x1q(type, subtype, parameters);
  }
}
class Application {
  constructor() {
    Application_instance = this;
    this.f1r_1 = ContentType.x1q('application', '*');
    this.g1r_1 = ContentType.x1q('application', 'atom+xml');
    this.h1r_1 = ContentType.x1q('application', 'cbor');
    this.i1r_1 = ContentType.x1q('application', 'json');
    this.j1r_1 = ContentType.x1q('application', 'hal+json');
    this.k1r_1 = ContentType.x1q('application', 'javascript');
    this.l1r_1 = ContentType.x1q('application', 'octet-stream');
    this.m1r_1 = ContentType.x1q('application', 'rss+xml');
    this.n1r_1 = ContentType.x1q('application', 'xml');
    this.o1r_1 = ContentType.x1q('application', 'xml-dtd');
    this.p1r_1 = ContentType.x1q('application', 'zip');
    this.q1r_1 = ContentType.x1q('application', 'gzip');
    this.r1r_1 = ContentType.x1q('application', 'x-www-form-urlencoded');
    this.s1r_1 = ContentType.x1q('application', 'pdf');
    this.t1r_1 = ContentType.x1q('application', 'vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    this.u1r_1 = ContentType.x1q('application', 'vnd.openxmlformats-officedocument.wordprocessingml.document');
    this.v1r_1 = ContentType.x1q('application', 'vnd.openxmlformats-officedocument.presentationml.presentation');
    this.w1r_1 = ContentType.x1q('application', 'protobuf');
    this.x1r_1 = ContentType.x1q('application', 'wasm');
    this.y1r_1 = ContentType.x1q('application', 'problem+json');
    this.z1r_1 = ContentType.x1q('application', 'problem+xml');
  }
}
class Text {
  constructor() {
    Text_instance = this;
    this.a1s_1 = ContentType.x1q('text', '*');
    this.b1s_1 = ContentType.x1q('text', 'plain');
    this.c1s_1 = ContentType.x1q('text', 'css');
    this.d1s_1 = ContentType.x1q('text', 'csv');
    this.e1s_1 = ContentType.x1q('text', 'html');
    this.f1s_1 = ContentType.x1q('text', 'javascript');
    this.g1s_1 = ContentType.x1q('text', 'vcard');
    this.h1s_1 = ContentType.x1q('text', 'xml');
    this.i1s_1 = ContentType.x1q('text', 'event-stream');
  }
}
class HeaderValueWithParameters {
  static k1s(content, parameters) {
    parameters = parameters === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : parameters;
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createThis2j2avj17cvnv2)(this);
    $this.n1q_1 = content;
    $this.o1q_1 = parameters;
    return $this;
  }
  p1s(name) {
    var inductionVariable = 0;
    var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1yw0x4k50k51w)(this.o1q_1);
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var parameter = this.o1q_1.c1(index);
        if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(parameter.p1q_1, name, true)) {
          return parameter.q1q_1;
        }
      }
       while (!(index === last));
    return null;
  }
  toString() {
    var tmp;
    if (this.o1q_1.f1()) {
      tmp = this.n1q_1;
    } else {
      var tmp_0 = this.n1q_1.length;
      // Inline function 'kotlin.collections.sumOf' call
      var sum = 0;
      var tmp0_iterator = this.o1q_1.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        var tmp_1 = sum;
        // Inline function 'io.ktor.http.HeaderValueWithParameters.toString.<anonymous>' call
        sum = tmp_1 + ((element.p1q_1.length + element.q1q_1.length | 0) + 3 | 0) | 0;
      }
      var size = tmp_0 + sum | 0;
      // Inline function 'kotlin.apply' call
      var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(size);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'io.ktor.http.HeaderValueWithParameters.toString.<anonymous>' call
      this_0.la(this.n1q_1);
      var inductionVariable = 0;
      var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1yw0x4k50k51w)(this.o1q_1);
      if (inductionVariable <= last)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var element_0 = this.o1q_1.c1(index);
          this_0.la('; ');
          this_0.la(element_0.p1q_1);
          this_0.la('=');
          // Inline function 'io.ktor.http.escapeIfNeededTo' call
          var this_1 = element_0.q1q_1;
          if (needQuotes$accessor$vynnj(this_1)) {
            this_0.la(quote(this_1));
          } else {
            this_0.la(this_1);
          }
        }
         while (!(index === last));
      tmp = this_0.toString();
    }
    return tmp;
  }
}
class ContentType extends HeaderValueWithParameters {
  static j1s(contentType, contentSubtype, existingContent, parameters) {
    Companion_getInstance();
    parameters = parameters === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : parameters;
    var $this = this.k1s(existingContent, parameters);
    $this.v1q_1 = contentType;
    $this.w1q_1 = contentSubtype;
    return $this;
  }
  static x1q(contentType, contentSubtype, parameters) {
    Companion_getInstance();
    parameters = parameters === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : parameters;
    return this.j1s(contentType, contentSubtype, contentType + '/' + contentSubtype, parameters);
  }
  l1s(name, value) {
    if (hasParameter(this, name, value))
      return this;
    return ContentType.j1s(this.v1q_1, this.w1q_1, this.n1q_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus20p0vtfmu0596)(this.o1q_1, HeaderValueParam.m1s(name, value)));
  }
  n1s() {
    return this.o1q_1.f1() ? this : ContentType.x1q(this.v1q_1, this.w1q_1);
  }
  o1s(pattern) {
    if (!(pattern.v1q_1 === '*') && !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(pattern.v1q_1, this.v1q_1, true)) {
      return false;
    }
    if (!(pattern.w1q_1 === '*') && !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(pattern.w1q_1, this.w1q_1, true)) {
      return false;
    }
    var tmp0_iterator = pattern.o1q_1.w();
    while (tmp0_iterator.x()) {
      var tmp1_loop_parameter = tmp0_iterator.y();
      var patternName = tmp1_loop_parameter.bi();
      var patternValue = tmp1_loop_parameter.ci();
      var tmp;
      if (patternName === '*') {
        var tmp_0;
        if (patternValue === '*') {
          tmp_0 = true;
        } else {
          var tmp$ret$0;
          $l$block_0: {
            // Inline function 'kotlin.collections.any' call
            var this_0 = this.o1q_1;
            var tmp_1;
            if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(this_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Collection1k04j3hzsbod0)) {
              tmp_1 = this_0.f1();
            } else {
              tmp_1 = false;
            }
            if (tmp_1) {
              tmp$ret$0 = false;
              break $l$block_0;
            }
            var tmp0_iterator_0 = this_0.w();
            while (tmp0_iterator_0.x()) {
              var element = tmp0_iterator_0.y();
              // Inline function 'io.ktor.http.ContentType.match.<anonymous>' call
              if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(element.q1q_1, patternValue, true)) {
                tmp$ret$0 = true;
                break $l$block_0;
              }
            }
            tmp$ret$0 = false;
          }
          tmp_0 = tmp$ret$0;
        }
        tmp = tmp_0;
      } else {
        var value = this.p1s(patternName);
        tmp = patternValue === '*' ? !(value == null) : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(value, patternValue, true);
      }
      var matches = tmp;
      if (!matches) {
        return false;
      }
    }
    return true;
  }
  equals(other) {
    var tmp;
    var tmp_0;
    var tmp_1;
    if (other instanceof ContentType) {
      tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(this.v1q_1, other.v1q_1, true);
    } else {
      tmp_1 = false;
    }
    if (tmp_1) {
      tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(this.w1q_1, other.w1q_1, true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.o1q_1, other.o1q_1);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$1 = this.v1q_1.toLowerCase();
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(tmp$ret$1);
    var tmp = result;
    var tmp_0 = imul(31, result);
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$3 = this.w1q_1.toLowerCase();
    result = tmp + (tmp_0 + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(tmp$ret$3) | 0) | 0;
    result = result + imul(31, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.o1q_1)) | 0;
    return result;
  }
}
class BadContentTypeFormatException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {
  static e1r(value) {
    var $this = this.t4('Bad Content-Type format: ' + value);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.d1r_1);
    return $this;
  }
}
class Companion_0 {}
class Companion_1 {
  constructor() {
    Companion_instance_2 = this;
    this.q1s_1 = EmptyHeaders_instance;
  }
}
class HeadersBuilder extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesBuilderImpl3ey9etj3bwnqf {
  constructor(size) {
    size = size === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 8 : size;
    super(true, size);
  }
  y18() {
    return new HeadersImpl(this.k1m_1);
  }
  l1m(name) {
    super.l1m(name);
    HttpHeaders_getInstance().p1w(name);
  }
  p1m(value) {
    super.p1m(value);
    HttpHeaders_getInstance().q1w(value);
  }
}
class EmptyHeaders {
  e1m() {
    return true;
  }
  f1m(name) {
    return null;
  }
  g1m() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptySetcxexqki71qfa)();
  }
  h1m() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptySetcxexqki71qfa)();
  }
  toString() {
    return 'Headers ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.h1m());
  }
}
class HeadersImpl extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesImpl2l95y9du7b61t {
  constructor(values) {
    values = values === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)() : values;
    super(true, values);
  }
  toString() {
    return 'Headers ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.h1m());
  }
}
class HeaderValueParam {
  static r1w(name, value, escapeValue) {
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createThis2j2avj17cvnv2)(this);
    $this.p1q_1 = name;
    $this.q1q_1 = value;
    $this.r1q_1 = escapeValue;
    return $this;
  }
  static m1s(name, value) {
    return this.r1w(name, value, false);
  }
  equals(other) {
    var tmp;
    var tmp_0;
    if (other instanceof HeaderValueParam) {
      tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(other.p1q_1, this.p1q_1, true);
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(other.q1q_1, this.q1q_1, true);
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$1 = this.p1q_1.toLowerCase();
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(tmp$ret$1);
    var tmp = result;
    var tmp_0 = imul(31, result);
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$3 = this.q1q_1.toLowerCase();
    result = tmp + (tmp_0 + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(tmp$ret$3) | 0) | 0;
    return result;
  }
  bi() {
    return this.p1q_1;
  }
  ci() {
    return this.q1q_1;
  }
  toString() {
    return 'HeaderValueParam(name=' + this.p1q_1 + ', value=' + this.q1q_1 + ', escapeValue=' + this.r1q_1 + ')';
  }
}
class HeaderValue {
  constructor(value, params) {
    params = params === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : params;
    this.z1q_1 = value;
    this.a1r_1 = params;
    var tmp = this;
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.firstOrNull' call
      var tmp0_iterator = this.a1r_1.w();
      while (tmp0_iterator.x()) {
        var element = tmp0_iterator.y();
        // Inline function 'io.ktor.http.HeaderValue.quality.<anonymous>' call
        if (element.p1q_1 === 'q') {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      tmp$ret$1 = null;
    }
    var tmp0_safe_receiver = tmp$ret$1;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q1q_1;
    var tmp2_safe_receiver = tmp1_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toDoubleOrNullkxwozihadygj)(tmp1_safe_receiver);
    var tmp_0;
    if (tmp2_safe_receiver == null) {
      tmp_0 = null;
    } else {
      // Inline function 'kotlin.takeIf' call
      // Inline function 'kotlin.contracts.contract' call
      var tmp_1;
      // Inline function 'io.ktor.http.HeaderValue.quality.<anonymous>' call
      if (0.0 <= tmp2_safe_receiver ? tmp2_safe_receiver <= 1.0 : false) {
        tmp_1 = tmp2_safe_receiver;
      } else {
        tmp_1 = null;
      }
      tmp_0 = tmp_1;
    }
    var tmp3_elvis_lhs = tmp_0;
    tmp.b1r_1 = tmp3_elvis_lhs == null ? 1.0 : tmp3_elvis_lhs;
  }
  bi() {
    return this.z1q_1;
  }
  toString() {
    return 'HeaderValue(value=' + this.z1q_1 + ', params=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.a1r_1) + ')';
  }
  hashCode() {
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.z1q_1);
    result = imul(result, 31) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.a1r_1) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof HeaderValue))
      return false;
    var tmp0_other_with_cast = other instanceof HeaderValue ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.z1q_1 === tmp0_other_with_cast.z1q_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.a1r_1, tmp0_other_with_cast.a1r_1))
      return false;
    return true;
  }
}
class sam$kotlin_Comparator$0 {
  constructor(function_0) {
    this.s1w_1 = function_0;
  }
  kg(a, b) {
    return this.s1w_1(a, b);
  }
  compare(a, b) {
    return this.kg(a, b);
  }
}
class HttpHeaders {
  constructor() {
    HttpHeaders_instance = this;
    this.t1s_1 = 'Accept';
    this.u1s_1 = 'Accept-Charset';
    this.v1s_1 = 'Accept-Encoding';
    this.w1s_1 = 'Accept-Language';
    this.x1s_1 = 'Accept-Ranges';
    this.y1s_1 = 'Age';
    this.z1s_1 = 'Allow';
    this.a1t_1 = 'ALPN';
    this.b1t_1 = 'Authentication-Info';
    this.c1t_1 = 'Authorization';
    this.d1t_1 = 'Cache-Control';
    this.e1t_1 = 'Connection';
    this.f1t_1 = 'Content-Disposition';
    this.g1t_1 = 'Content-Encoding';
    this.h1t_1 = 'Content-Language';
    this.i1t_1 = 'Content-Length';
    this.j1t_1 = 'Content-Location';
    this.k1t_1 = 'Content-Range';
    this.l1t_1 = 'Content-Type';
    this.m1t_1 = 'Cookie';
    this.n1t_1 = 'DASL';
    this.o1t_1 = 'Date';
    this.p1t_1 = 'DAV';
    this.q1t_1 = 'Depth';
    this.r1t_1 = 'Destination';
    this.s1t_1 = 'ETag';
    this.t1t_1 = 'Expect';
    this.u1t_1 = 'Expires';
    this.v1t_1 = 'From';
    this.w1t_1 = 'Forwarded';
    this.x1t_1 = 'Host';
    this.y1t_1 = 'HTTP2-Settings';
    this.z1t_1 = 'If';
    this.a1u_1 = 'If-Match';
    this.b1u_1 = 'If-Modified-Since';
    this.c1u_1 = 'If-None-Match';
    this.d1u_1 = 'If-Range';
    this.e1u_1 = 'If-Schedule-Tag-Match';
    this.f1u_1 = 'If-Unmodified-Since';
    this.g1u_1 = 'Last-Modified';
    this.h1u_1 = 'Location';
    this.i1u_1 = 'Lock-Token';
    this.j1u_1 = 'Link';
    this.k1u_1 = 'Max-Forwards';
    this.l1u_1 = 'MIME-Version';
    this.m1u_1 = 'Ordering-Type';
    this.n1u_1 = 'Origin';
    this.o1u_1 = 'Overwrite';
    this.p1u_1 = 'Position';
    this.q1u_1 = 'Pragma';
    this.r1u_1 = 'Prefer';
    this.s1u_1 = 'Preference-Applied';
    this.t1u_1 = 'Proxy-Authenticate';
    this.u1u_1 = 'Proxy-Authentication-Info';
    this.v1u_1 = 'Proxy-Authorization';
    this.w1u_1 = 'Public-Key-Pins';
    this.x1u_1 = 'Public-Key-Pins-Report-Only';
    this.y1u_1 = 'Range';
    this.z1u_1 = 'Referer';
    this.a1v_1 = 'Retry-After';
    this.b1v_1 = 'Schedule-Reply';
    this.c1v_1 = 'Schedule-Tag';
    this.d1v_1 = 'Sec-WebSocket-Accept';
    this.e1v_1 = 'Sec-WebSocket-Extensions';
    this.f1v_1 = 'Sec-WebSocket-Key';
    this.g1v_1 = 'Sec-WebSocket-Protocol';
    this.h1v_1 = 'Sec-WebSocket-Version';
    this.i1v_1 = 'Server';
    this.j1v_1 = 'Set-Cookie';
    this.k1v_1 = 'SLUG';
    this.l1v_1 = 'Strict-Transport-Security';
    this.m1v_1 = 'TE';
    this.n1v_1 = 'Timeout';
    this.o1v_1 = 'Trailer';
    this.p1v_1 = 'Transfer-Encoding';
    this.q1v_1 = 'Upgrade';
    this.r1v_1 = 'User-Agent';
    this.s1v_1 = 'Vary';
    this.t1v_1 = 'Via';
    this.u1v_1 = 'Warning';
    this.v1v_1 = 'WWW-Authenticate';
    this.w1v_1 = 'Access-Control-Allow-Origin';
    this.x1v_1 = 'Access-Control-Allow-Methods';
    this.y1v_1 = 'Access-Control-Allow-Credentials';
    this.z1v_1 = 'Access-Control-Allow-Headers';
    this.a1w_1 = 'Access-Control-Request-Method';
    this.b1w_1 = 'Access-Control-Request-Headers';
    this.c1w_1 = 'Access-Control-Expose-Headers';
    this.d1w_1 = 'Access-Control-Max-Age';
    this.e1w_1 = 'X-Http-Method-Override';
    this.f1w_1 = 'X-Forwarded-Host';
    this.g1w_1 = 'X-Forwarded-Server';
    this.h1w_1 = 'X-Forwarded-Proto';
    this.i1w_1 = 'X-Forwarded-For';
    this.j1w_1 = 'X-Forwarded-Port';
    this.k1w_1 = 'X-Request-ID';
    this.l1w_1 = 'X-Correlation-ID';
    this.m1w_1 = 'X-Total-Count';
    var tmp = this;
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp.n1w_1 = [this.p1v_1, this.q1v_1];
    this.o1w_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.asList2ho2pewtsfvv)(this.n1w_1);
  }
  p1w(name) {
    // Inline function 'kotlin.text.forEachIndexed' call
    var index = 0;
    var inductionVariable = 0;
    while (inductionVariable < (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(name)) {
      var item = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(name, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'io.ktor.http.HttpHeaders.checkHeaderName.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__compareTo_impl_ypi4mb25zzl63tc6wpg)(item, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(32)) <= 0 || isDelimiter(item)) {
        throw IllegalHeaderNameException.z1w(name, tmp1);
      }
    }
  }
  q1w(value) {
    // Inline function 'kotlin.text.forEachIndexed' call
    var index = 0;
    var inductionVariable = 0;
    while (inductionVariable < (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(value)) {
      var item = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(value, inductionVariable);
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'io.ktor.http.HttpHeaders.checkHeaderValue.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__compareTo_impl_ypi4mb25zzl63tc6wpg)(item, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(32)) < 0 && !(item === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(9))) {
        throw IllegalHeaderValueException.g1x(value, tmp1);
      }
    }
  }
}
class IllegalHeaderNameException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob {
  static z1w(headerName, position) {
    var tmp = "Header name '" + headerName + "' contains illegal character '" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(headerName, position)) + "'";
    // Inline function 'kotlin.code' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(headerName, position);
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_0);
    var $this = this.o(tmp + (' (code ' + (tmp$ret$0 & 255) + ')'));
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.y1w_1);
    $this.w1w_1 = headerName;
    $this.x1w_1 = position;
    return $this;
  }
}
class IllegalHeaderValueException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob {
  static g1x(headerValue, position) {
    var tmp = "Header value '" + headerValue + "' contains illegal character '" + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(headerValue, position)) + "'";
    // Inline function 'kotlin.code' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(headerValue, position);
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_0);
    var $this = this.o(tmp + (' (code ' + (tmp$ret$0 & 255) + ')'));
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.f1x_1);
    $this.d1x_1 = headerValue;
    $this.e1x_1 = position;
    return $this;
  }
}
class UnsafeHeaderException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob {
  static l1x(header) {
    var $this = this.o('Header(s) ' + header + ' are controlled by the engine and ' + 'cannot be set explicitly');
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.k1x_1);
    return $this;
  }
}
class Companion_2 {
  constructor() {
    Companion_instance_3 = this;
    this.n1x_1 = new HttpMethod('GET');
    this.o1x_1 = new HttpMethod('POST');
    this.p1x_1 = new HttpMethod('PUT');
    this.q1x_1 = new HttpMethod('PATCH');
    this.r1x_1 = new HttpMethod('DELETE');
    this.s1x_1 = new HttpMethod('HEAD');
    this.t1x_1 = new HttpMethod('OPTIONS');
    this.u1x_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.listOf1jh22dvmctj1r)([this.n1x_1, this.o1x_1, this.p1x_1, this.q1x_1, this.r1x_1, this.s1x_1, this.t1x_1]);
  }
}
class HttpMethod {
  constructor(value) {
    Companion_getInstance_2();
    this.v1x_1 = value;
  }
  toString() {
    return 'HttpMethod(value=' + this.v1x_1 + ')';
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.v1x_1);
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpMethod))
      return false;
    var tmp0_other_with_cast = other instanceof HttpMethod ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.v1x_1 === tmp0_other_with_cast.v1x_1))
      return false;
    return true;
  }
}
class Companion_3 {
  constructor() {
    Companion_instance_4 = this;
    this.w1x_1 = new HttpProtocolVersion('HTTP', 2, 0);
    this.x1x_1 = new HttpProtocolVersion('HTTP', 1, 1);
    this.y1x_1 = new HttpProtocolVersion('HTTP', 1, 0);
    this.z1x_1 = new HttpProtocolVersion('SPDY', 3, 0);
    this.a1y_1 = new HttpProtocolVersion('QUIC', 1, 0);
  }
}
class HttpProtocolVersion {
  constructor(name, major, minor) {
    Companion_getInstance_3();
    this.b1y_1 = name;
    this.c1y_1 = major;
    this.d1y_1 = minor;
  }
  toString() {
    return this.b1y_1 + '/' + this.c1y_1 + '.' + this.d1y_1;
  }
  hashCode() {
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.b1y_1);
    result = imul(result, 31) + this.c1y_1 | 0;
    result = imul(result, 31) + this.d1y_1 | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof HttpProtocolVersion))
      return false;
    var tmp0_other_with_cast = other instanceof HttpProtocolVersion ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.b1y_1 === tmp0_other_with_cast.b1y_1))
      return false;
    if (!(this.c1y_1 === tmp0_other_with_cast.c1y_1))
      return false;
    if (!(this.d1y_1 === tmp0_other_with_cast.d1y_1))
      return false;
    return true;
  }
}
class Companion_4 {
  constructor() {
    Companion_instance_5 = this;
    this.e1y_1 = new HttpStatusCode(100, 'Continue');
    this.f1y_1 = new HttpStatusCode(101, 'Switching Protocols');
    this.g1y_1 = new HttpStatusCode(102, 'Processing');
    this.h1y_1 = new HttpStatusCode(200, 'OK');
    this.i1y_1 = new HttpStatusCode(201, 'Created');
    this.j1y_1 = new HttpStatusCode(202, 'Accepted');
    this.k1y_1 = new HttpStatusCode(203, 'Non-Authoritative Information');
    this.l1y_1 = new HttpStatusCode(204, 'No Content');
    this.m1y_1 = new HttpStatusCode(205, 'Reset Content');
    this.n1y_1 = new HttpStatusCode(206, 'Partial Content');
    this.o1y_1 = new HttpStatusCode(207, 'Multi-Status');
    this.p1y_1 = new HttpStatusCode(300, 'Multiple Choices');
    this.q1y_1 = new HttpStatusCode(301, 'Moved Permanently');
    this.r1y_1 = new HttpStatusCode(302, 'Found');
    this.s1y_1 = new HttpStatusCode(303, 'See Other');
    this.t1y_1 = new HttpStatusCode(304, 'Not Modified');
    this.u1y_1 = new HttpStatusCode(305, 'Use Proxy');
    this.v1y_1 = new HttpStatusCode(306, 'Switch Proxy');
    this.w1y_1 = new HttpStatusCode(307, 'Temporary Redirect');
    this.x1y_1 = new HttpStatusCode(308, 'Permanent Redirect');
    this.y1y_1 = new HttpStatusCode(400, 'Bad Request');
    this.z1y_1 = new HttpStatusCode(401, 'Unauthorized');
    this.a1z_1 = new HttpStatusCode(402, 'Payment Required');
    this.b1z_1 = new HttpStatusCode(403, 'Forbidden');
    this.c1z_1 = new HttpStatusCode(404, 'Not Found');
    this.d1z_1 = new HttpStatusCode(405, 'Method Not Allowed');
    this.e1z_1 = new HttpStatusCode(406, 'Not Acceptable');
    this.f1z_1 = new HttpStatusCode(407, 'Proxy Authentication Required');
    this.g1z_1 = new HttpStatusCode(408, 'Request Timeout');
    this.h1z_1 = new HttpStatusCode(409, 'Conflict');
    this.i1z_1 = new HttpStatusCode(410, 'Gone');
    this.j1z_1 = new HttpStatusCode(411, 'Length Required');
    this.k1z_1 = new HttpStatusCode(412, 'Precondition Failed');
    this.l1z_1 = new HttpStatusCode(413, 'Payload Too Large');
    this.m1z_1 = new HttpStatusCode(414, 'Request-URI Too Long');
    this.n1z_1 = new HttpStatusCode(415, 'Unsupported Media Type');
    this.o1z_1 = new HttpStatusCode(416, 'Requested Range Not Satisfiable');
    this.p1z_1 = new HttpStatusCode(417, 'Expectation Failed');
    this.q1z_1 = new HttpStatusCode(422, 'Unprocessable Entity');
    this.r1z_1 = new HttpStatusCode(423, 'Locked');
    this.s1z_1 = new HttpStatusCode(424, 'Failed Dependency');
    this.t1z_1 = new HttpStatusCode(425, 'Too Early');
    this.u1z_1 = new HttpStatusCode(426, 'Upgrade Required');
    this.v1z_1 = new HttpStatusCode(429, 'Too Many Requests');
    this.w1z_1 = new HttpStatusCode(431, 'Request Header Fields Too Large');
    this.x1z_1 = new HttpStatusCode(500, 'Internal Server Error');
    this.y1z_1 = new HttpStatusCode(501, 'Not Implemented');
    this.z1z_1 = new HttpStatusCode(502, 'Bad Gateway');
    this.a20_1 = new HttpStatusCode(503, 'Service Unavailable');
    this.b20_1 = new HttpStatusCode(504, 'Gateway Timeout');
    this.c20_1 = new HttpStatusCode(505, 'HTTP Version Not Supported');
    this.d20_1 = new HttpStatusCode(506, 'Variant Also Negotiates');
    this.e20_1 = new HttpStatusCode(507, 'Insufficient Storage');
    this.f20_1 = allStatusCodes();
    var tmp = this;
    // Inline function 'kotlin.collections.associateBy' call
    var this_0 = this.f20_1;
    var capacity = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.mapCapacity1h45rc3eh9p2l)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_0, 10)), 16);
    // Inline function 'kotlin.collections.associateByTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.za(capacity);
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'io.ktor.http.Companion.statusCodesMap.<anonymous>' call
      var tmp$ret$0 = element.h20_1;
      destination.t2(tmp$ret$0, element);
    }
    tmp.g20_1 = destination;
  }
}
class HttpStatusCode {
  constructor(value, description) {
    Companion_getInstance_4();
    this.h20_1 = value;
    this.i20_1 = description;
  }
  toString() {
    return '' + this.h20_1 + ' ' + this.i20_1;
  }
  equals(other) {
    var tmp;
    if (other instanceof HttpStatusCode) {
      tmp = other.h20_1 === this.h20_1;
    } else {
      tmp = false;
    }
    return tmp;
  }
  hashCode() {
    return this.h20_1;
  }
  j20(other) {
    return this.h20_1 - other.h20_1 | 0;
  }
  d(other) {
    return this.j20(other instanceof HttpStatusCode ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class Companion_5 {
  constructor() {
    Companion_instance_6 = this;
    this.k20_1 = EmptyParameters_instance;
  }
}
class Parameters {}
class EmptyParameters {
  e1m() {
    return true;
  }
  f1m(name) {
    return null;
  }
  g1m() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptySetcxexqki71qfa)();
  }
  h1m() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptySetcxexqki71qfa)();
  }
  f1() {
    return true;
  }
  toString() {
    return 'Parameters ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.h1m());
  }
  equals(other) {
    var tmp;
    if (!(other == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(other, Parameters) : false) {
      tmp = other.f1();
    } else {
      tmp = false;
    }
    return tmp;
  }
}
class ParametersBuilderImpl extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesBuilderImpl3ey9etj3bwnqf {
  constructor(size) {
    size = size === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 8 : size;
    super(true, size);
  }
  y18() {
    return new ParametersImpl(this.k1m_1);
  }
}
class ParametersImpl extends _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesImpl2l95y9du7b61t {
  constructor(values) {
    values = values === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)() : values;
    super(true, values);
  }
  toString() {
    return 'Parameters ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.h1m());
  }
}
class Companion_6 {
  constructor() {
    Companion_instance_7 = this;
    this.p21_1 = Url_0(get_origin(this));
  }
}
class URLBuilder {
  constructor(protocol, host, port, user, password, pathSegments, parameters, fragment, trailingQuery) {
    Companion_getInstance_6();
    protocol = protocol === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Companion_getInstance_7().q21_1 : protocol;
    host = host === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? '' : host;
    port = port === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : port;
    user = user === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : user;
    password = password === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : password;
    pathSegments = pathSegments === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : pathSegments;
    parameters = parameters === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Companion_getInstance_5().k20_1 : parameters;
    fragment = fragment === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? '' : fragment;
    trailingQuery = trailingQuery === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : trailingQuery;
    this.n20_1 = protocol;
    this.o20_1 = host;
    this.p20_1 = port;
    this.q20_1 = trailingQuery;
    var tmp = this;
    tmp.r20_1 = user == null ? null : encodeURLParameter(user);
    var tmp_0 = this;
    tmp_0.s20_1 = password == null ? null : encodeURLParameter(password);
    this.t20_1 = encodeURLQueryComponent(fragment);
    var tmp_1 = this;
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(pathSegments, 10));
    var tmp0_iterator = pathSegments.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'io.ktor.http.URLBuilder.encodedPathSegments.<anonymous>' call
      var tmp$ret$0 = encodeURLPathPart(item);
      destination.g(tmp$ret$0);
    }
    tmp_1.u20_1 = destination;
    this.v20_1 = encodeParameters(parameters);
    this.w20_1 = new UrlDecodedParametersBuilder(this.v20_1);
  }
  w21(value) {
    var tmp = this;
    tmp.r20_1 = value == null ? null : encodeURLParameter(value);
  }
  x21() {
    var tmp0_safe_receiver = this.r20_1;
    return tmp0_safe_receiver == null ? null : decodeURLPart(tmp0_safe_receiver);
  }
  y21() {
    var tmp0_safe_receiver = this.s20_1;
    return tmp0_safe_receiver == null ? null : decodeURLPart(tmp0_safe_receiver);
  }
  z21() {
    return decodeURLQueryComponent(this.t20_1);
  }
  a22() {
    // Inline function 'kotlin.collections.map' call
    var this_0 = this.u20_1;
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_0, 10));
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'io.ktor.http.URLBuilder.<get-pathSegments>.<anonymous>' call
      var tmp$ret$0 = decodeURLPart(item);
      destination.g(tmp$ret$0);
    }
    return destination;
  }
  b22(value) {
    this.v20_1 = value;
    this.w20_1 = new UrlDecodedParametersBuilder(value);
  }
  c22() {
    applyOrigin(this);
    return appendTo(this, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(256)).toString();
  }
  toString() {
    return appendTo(this, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(256)).toString();
  }
  y18() {
    applyOrigin(this);
    return new Url(this.n20_1, this.o20_1, this.p20_1, this.a22(), this.w20_1.y18(), this.z21(), this.x21(), this.y21(), this.q20_1, this.c22());
  }
}
class URLParserException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr {
  static h22(urlString, cause) {
    var $this = this.jc('Fail to parse url: ' + urlString, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.g22_1);
    return $this;
  }
}
class Companion_7 {
  constructor() {
    Companion_instance_8 = this;
    this.q21_1 = new URLProtocol('http', 80);
    this.r21_1 = new URLProtocol('https', 443);
    this.s21_1 = new URLProtocol('ws', 80);
    this.t21_1 = new URLProtocol('wss', 443);
    this.u21_1 = new URLProtocol('socks', 1080);
    var tmp = this;
    // Inline function 'kotlin.collections.associateBy' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.listOf1jh22dvmctj1r)([this.q21_1, this.r21_1, this.s21_1, this.t21_1, this.u21_1]);
    var capacity = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.mapCapacity1h45rc3eh9p2l)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_0, 10)), 16);
    // Inline function 'kotlin.collections.associateByTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.za(capacity);
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'io.ktor.http.Companion.byName.<anonymous>' call
      var tmp$ret$0 = element.x20_1;
      destination.t2(tmp$ret$0, element);
    }
    tmp.v21_1 = destination;
  }
  i22(name) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.http.Companion.createOrDefault.<anonymous>' call
    var it = (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.toLowerCasePreservingASCIIRulesa2d90zyoc6kw)(name);
    var tmp0_elvis_lhs = Companion_getInstance_7().v21_1.q2(it);
    return tmp0_elvis_lhs == null ? new URLProtocol(it, 0) : tmp0_elvis_lhs;
  }
}
class URLProtocol {
  constructor(name, defaultPort) {
    Companion_getInstance_7();
    this.x20_1 = name;
    this.y20_1 = defaultPort;
    // Inline function 'kotlin.require' call
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.text.all' call
      var indexedObject = this.x20_1;
      var inductionVariable = 0;
      while (inductionVariable < (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(indexedObject)) {
        var element = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(indexedObject, inductionVariable);
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'io.ktor.http.URLProtocol.<anonymous>' call
        if (!(0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.isLowerCase2jodys5jo7d58)(element)) {
          tmp$ret$1 = false;
          break $l$block;
        }
      }
      tmp$ret$1 = true;
    }
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp$ret$1) {
      // Inline function 'io.ktor.http.URLProtocol.<anonymous>' call
      var message = 'All characters should be lower case';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
  }
  toString() {
    return 'URLProtocol(name=' + this.x20_1 + ', defaultPort=' + this.y20_1 + ')';
  }
  hashCode() {
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.x20_1);
    result = imul(result, 31) + this.y20_1 | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof URLProtocol))
      return false;
    var tmp0_other_with_cast = other instanceof URLProtocol ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.x20_1 === tmp0_other_with_cast.x20_1))
      return false;
    if (!(this.y20_1 === tmp0_other_with_cast.y20_1))
      return false;
    return true;
  }
}
class Companion_8 {}
class Url {
  constructor(protocol, host, specifiedPort, pathSegments, parameters, fragment, user, password, trailingQuery, urlString) {
    this.z20_1 = protocol;
    this.a21_1 = host;
    this.b21_1 = specifiedPort;
    this.c21_1 = pathSegments;
    this.d21_1 = parameters;
    this.e21_1 = fragment;
    this.f21_1 = user;
    this.g21_1 = password;
    this.h21_1 = trailingQuery;
    this.i21_1 = urlString;
    // Inline function 'kotlin.require' call
    var tmp;
    var containsArg = this.b21_1;
    if (0 <= containsArg ? containsArg <= 65535 : false) {
      tmp = true;
    } else {
      tmp = this.b21_1 === 0;
    }
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp) {
      // Inline function 'io.ktor.http.Url.<anonymous>' call
      var message = 'port must be between 0 and 65535, or 0 if not set';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    var tmp_0 = this;
    tmp_0.j21_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(Url$encodedPath$delegate$lambda(this));
    var tmp_1 = this;
    tmp_1.k21_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(Url$encodedQuery$delegate$lambda(this));
    var tmp_2 = this;
    tmp_2.l21_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(Url$encodedPathAndQuery$delegate$lambda(this));
    var tmp_3 = this;
    tmp_3.m21_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(Url$encodedUser$delegate$lambda(this));
    var tmp_4 = this;
    tmp_4.n21_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(Url$encodedPassword$delegate$lambda(this));
    var tmp_5 = this;
    tmp_5.o21_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(Url$encodedFragment$delegate$lambda(this));
  }
  j22() {
    // Inline function 'kotlin.takeUnless' call
    var this_0 = this.b21_1;
    // Inline function 'kotlin.contracts.contract' call
    var tmp;
    // Inline function 'io.ktor.http.Url.<get-port>.<anonymous>' call
    if (!(this_0 === 0)) {
      tmp = this_0;
    } else {
      tmp = null;
    }
    var tmp0_elvis_lhs = tmp;
    return tmp0_elvis_lhs == null ? this.z20_1.y20_1 : tmp0_elvis_lhs;
  }
  k22() {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.m21_1;
    encodedUser$factory();
    return this_0.l1();
  }
  l22() {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.n21_1;
    encodedPassword$factory();
    return this_0.l1();
  }
  toString() {
    return this.i21_1;
  }
  equals(other) {
    if (this === other)
      return true;
    if (other == null || !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this).equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(other)))
      return false;
    if (!(other instanceof Url))
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.i21_1 === other.i21_1))
      return false;
    return true;
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.i21_1);
  }
}
class UrlDecodedParametersBuilder {
  constructor(encodedParametersBuilder) {
    this.m22_1 = encodedParametersBuilder;
    this.n22_1 = this.m22_1.e1m();
  }
  y18() {
    return decodeParameters(this.m22_1);
  }
  e1m() {
    return this.n22_1;
  }
  f1m(name) {
    var tmp0_safe_receiver = this.m22_1.f1m(encodeURLParameter(name));
    var tmp;
    if (tmp0_safe_receiver == null) {
      tmp = null;
    } else {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(tmp0_safe_receiver, 10));
      var tmp0_iterator = tmp0_safe_receiver.w();
      while (tmp0_iterator.x()) {
        var item = tmp0_iterator.y();
        // Inline function 'io.ktor.http.UrlDecodedParametersBuilder.getAll.<anonymous>' call
        var tmp$ret$0 = decodeURLQueryComponent(item, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, true);
        destination.g(tmp$ret$0);
      }
      tmp = destination;
    }
    return tmp;
  }
  g1m() {
    // Inline function 'kotlin.collections.map' call
    var this_0 = this.m22_1.g1m();
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_0, 10));
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'io.ktor.http.UrlDecodedParametersBuilder.names.<anonymous>' call
      var tmp$ret$0 = decodeURLQueryComponent(item);
      destination.g(tmp$ret$0);
    }
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toSet2orjxp16sotqu)(destination);
  }
  f1() {
    return this.m22_1.f1();
  }
  h1m() {
    return decodeParameters(this.m22_1).h1m();
  }
  q1m(name, value) {
    return this.m22_1.q1m(encodeURLParameter(name), encodeURLParameterValue(value));
  }
  m1m(name, values) {
    var tmp = encodeURLParameter(name);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(values, 10));
    var tmp0_iterator = values.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'io.ktor.http.UrlDecodedParametersBuilder.appendAll.<anonymous>' call
      var tmp$ret$0 = encodeURLParameterValue(item);
      destination.g(tmp$ret$0);
    }
    return this.m22_1.m1m(tmp, destination);
  }
  j2() {
    return this.m22_1.j2();
  }
}
class OutgoingContent {
  constructor($box) {
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.boxApply1qmzdb3dh90hg)(this, $box);
    this.v22_1 = null;
  }
  s22() {
    return null;
  }
  t22() {
    return null;
  }
  m1x() {
    return Companion_getInstance_1().q1s_1;
  }
}
class ByteArrayContent extends OutgoingContent {}
class ByteArrayContent_0 extends ByteArrayContent {
  constructor(bytes, contentType, status) {
    contentType = contentType === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : contentType;
    status = status === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : status;
    super();
    this.p22_1 = bytes;
    this.q22_1 = contentType;
    this.r22_1 = status;
  }
  s22() {
    return this.q22_1;
  }
  t22() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.p22_1.length);
  }
  u22() {
    return this.p22_1;
  }
}
class NoContent extends OutgoingContent {}
class ReadChannelContent extends OutgoingContent {}
class WriteChannelContent extends OutgoingContent {}
class ProtocolUpgrade extends OutgoingContent {}
class NullBody {}
class TextContent extends ByteArrayContent {
  constructor(text, contentType, status) {
    status = status === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : status;
    super();
    this.c23_1 = text;
    this.d23_1 = contentType;
    this.e23_1 = status;
    var tmp = this;
    var tmp$ret$0;
    $l$block: {
      // Inline function 'io.ktor.utils.io.core.toByteArray' call
      var this_0 = this.c23_1;
      var tmp0_elvis_lhs = charset(this.d23_1);
      var charset_0 = tmp0_elvis_lhs == null ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1 : tmp0_elvis_lhs;
      if (charset_0.equals((0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1)) {
        tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.encodeToByteArray1onwao0uakjfh)(this_0);
        break $l$block;
      }
      tmp$ret$0 = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeToByteArrayomtvgs5lyogm)(charset_0.p1g(), this_0, 0, this_0.length);
    }
    tmp.f23_1 = tmp$ret$0;
  }
  s22() {
    return this.d23_1;
  }
  t22() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.f23_1.length);
  }
  u22() {
    return this.f23_1;
  }
  toString() {
    return 'TextContent[' + this.d23_1.toString() + '] "' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.take9j4462mea726)(this.c23_1, 30) + '"';
  }
}
//endregion
function get_URL_ALPHABET() {
  _init_properties_Codecs_kt__fudxxf();
  return URL_ALPHABET;
}
var URL_ALPHABET;
function get_URL_ALPHABET_CHARS() {
  _init_properties_Codecs_kt__fudxxf();
  return URL_ALPHABET_CHARS;
}
var URL_ALPHABET_CHARS;
function get_HEX_ALPHABET() {
  _init_properties_Codecs_kt__fudxxf();
  return HEX_ALPHABET;
}
var HEX_ALPHABET;
function get_URL_PROTOCOL_PART() {
  _init_properties_Codecs_kt__fudxxf();
  return URL_PROTOCOL_PART;
}
var URL_PROTOCOL_PART;
function get_VALID_PATH_PART() {
  _init_properties_Codecs_kt__fudxxf();
  return VALID_PATH_PART;
}
var VALID_PATH_PART;
var ATTRIBUTE_CHARACTERS;
function get_SPECIAL_SYMBOLS() {
  _init_properties_Codecs_kt__fudxxf();
  return SPECIAL_SYMBOLS;
}
var SPECIAL_SYMBOLS;
function encodeURLParameter(_this__u8e3s4, spaceToPlus) {
  spaceToPlus = spaceToPlus === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : spaceToPlus;
  _init_properties_Codecs_kt__fudxxf();
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.encodeURLParameter.<anonymous>' call
  var content = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.encode35e4rpnc94tb5)((0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1.p1g(), _this__u8e3s4);
  forEach_0(content, encodeURLParameter$lambda(this_0, spaceToPlus));
  return this_0.toString();
}
function decodeURLPart(_this__u8e3s4, start, end, charset) {
  start = start === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : start;
  end = end === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? _this__u8e3s4.length : end;
  charset = charset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1 : charset;
  _init_properties_Codecs_kt__fudxxf();
  return decodeScan(_this__u8e3s4, start, end, false, charset);
}
function encodeURLQueryComponent(_this__u8e3s4, encodeFull, spaceToPlus, charset) {
  encodeFull = encodeFull === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : encodeFull;
  spaceToPlus = spaceToPlus === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : spaceToPlus;
  charset = charset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1 : charset;
  _init_properties_Codecs_kt__fudxxf();
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.encodeURLQueryComponent.<anonymous>' call
  var content = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.encode35e4rpnc94tb5)(charset.p1g(), _this__u8e3s4);
  forEach_0(content, encodeURLQueryComponent$lambda(spaceToPlus, this_0, encodeFull));
  return this_0.toString();
}
function decodeURLQueryComponent(_this__u8e3s4, start, end, plusIsSpace, charset) {
  start = start === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : start;
  end = end === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? _this__u8e3s4.length : end;
  plusIsSpace = plusIsSpace === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : plusIsSpace;
  charset = charset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1 : charset;
  _init_properties_Codecs_kt__fudxxf();
  return decodeScan(_this__u8e3s4, start, end, plusIsSpace, charset);
}
function encodeURLPathPart(_this__u8e3s4) {
  _init_properties_Codecs_kt__fudxxf();
  return encodeURLPath(_this__u8e3s4, true);
}
function forEach_0(_this__u8e3s4, block) {
  _init_properties_Codecs_kt__fudxxf();
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.takeWhile' call
    var release = true;
    var tmp0_elvis_lhs = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.prepareReadFirstHead3bxvcvf0u196c)(_this__u8e3s4, 1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      break $l$block;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    try {
      $l$loop_1: do {
        // Inline function 'io.ktor.http.forEach.<anonymous>' call
        var buffer = current;
        $l$loop: while (true) {
          // Inline function 'io.ktor.utils.io.core.canRead' call
          if (!(buffer.h17_1 > buffer.g17_1)) {
            break $l$loop;
          }
          block(buffer.i1d());
        }
        if (false) {}
        release = false;
        var tmp1_elvis_lhs = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.prepareReadNextHead165u1tlz2sd0o)(_this__u8e3s4, current);
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          break $l$loop_1;
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }
        var next = tmp_0;
        current = next;
        release = true;
      }
       while (true);
    }finally {
      if (release) {
        (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.completeReadHeadmsbisaktufcz)(_this__u8e3s4, current);
      }
    }
  }
}
function percentEncode(_this__u8e3s4) {
  _init_properties_Codecs_kt__fudxxf();
  var code = _this__u8e3s4 & 255;
  var array = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charArray2ujmm1qusno00)(3);
  array[0] = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(37);
  array[1] = hexDigitToChar(code >> 4);
  array[2] = hexDigitToChar(code & 15);
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.concatToString2syawgu50khxi)(array);
}
function decodeScan(_this__u8e3s4, start, end, plusIsSpace, charset) {
  _init_properties_Codecs_kt__fudxxf();
  var inductionVariable = start;
  if (inductionVariable < end)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var ch = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index);
      if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(37) || (plusIsSpace && ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43))) {
        return decodeImpl(_this__u8e3s4, start, end, index, plusIsSpace, charset);
      }
    }
     while (inductionVariable < end);
  var tmp;
  if (start === 0 && end === _this__u8e3s4.length) {
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(_this__u8e3s4);
  } else {
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    tmp = _this__u8e3s4.substring(start, end);
  }
  return tmp;
}
function encodeURLPath(_this__u8e3s4, encodeSlash) {
  _init_properties_Codecs_kt__fudxxf();
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.encodeURLPath.<anonymous>' call
  var charset = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1;
  var index = 0;
  $l$loop_0: while (index < _this__u8e3s4.length) {
    var current = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index);
    if (!encodeSlash && current === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47) || get_URL_ALPHABET_CHARS().h2(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof(current)) || get_VALID_PATH_PART().h2(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof(current))) {
      this_0.ma(current);
      index = index + 1 | 0;
      continue $l$loop_0;
    }
    if (current === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(37) && (index + 2 | 0) < _this__u8e3s4.length && get_HEX_ALPHABET().h2(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 1 | 0))) && get_HEX_ALPHABET().h2(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 2 | 0)))) {
      this_0.ma(current);
      this_0.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 1 | 0));
      this_0.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 2 | 0));
      index = index + 3 | 0;
      continue $l$loop_0;
    }
    var symbolSize = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isSurrogatewe8xicw8z84n)(current) ? 2 : 1;
    var tmp = (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.encode35e4rpnc94tb5)(charset.p1g(), _this__u8e3s4, index, index + symbolSize | 0);
    forEach_0(tmp, encodeURLPath$lambda(this_0));
    index = index + symbolSize | 0;
  }
  return this_0.toString();
}
function hexDigitToChar(digit) {
  _init_properties_Codecs_kt__fudxxf();
  return (0 <= digit ? digit <= 9 : false) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__plus_impl_qi7pgjue8oeapgr66d)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(48), digit) : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__minus_impl_a2frrh1d5m178rbxqeu)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__plus_impl_qi7pgjue8oeapgr66d)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65), digit), 10);
}
function decodeImpl(_this__u8e3s4, start, end, prefixEnd, plusIsSpace, charset) {
  _init_properties_Codecs_kt__fudxxf();
  var length = end - start | 0;
  var sbSize = length > 255 ? length / 3 | 0 : length;
  var sb = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(sbSize);
  if (prefixEnd > start) {
    sb.xf(_this__u8e3s4, start, prefixEnd);
  }
  var index = prefixEnd;
  var bytes = null;
  while (index < end) {
    var c = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index);
    if (plusIsSpace && c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43)) {
      sb.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(32));
      index = index + 1 | 0;
    } else if (c === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(37)) {
      if (bytes == null) {
        bytes = new Int8Array((end - index | 0) / 3 | 0);
      }
      var count = 0;
      while (index < end && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(37)) {
        if ((index + 2 | 0) >= end) {
          // Inline function 'kotlin.text.substring' call
          var startIndex = index;
          var endIndex = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(_this__u8e3s4);
          var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceSubSequence1iwpdba8s3jc7)(_this__u8e3s4, startIndex, endIndex));
          throw URLDecodeException.m1q('Incomplete trailing HEX escape: ' + tmp$ret$0 + ', in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(_this__u8e3s4) + ' at ' + index);
        }
        var digit1 = charToHexDigit((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 1 | 0));
        var digit2 = charToHexDigit((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 2 | 0));
        if (digit1 === -1 || digit2 === -1) {
          throw URLDecodeException.m1q('Wrong HEX escape: %' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 1 | 0)) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index + 2 | 0)) + ', in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(_this__u8e3s4) + ', at ' + index);
        }
        var tmp = bytes;
        var tmp1 = count;
        count = tmp1 + 1 | 0;
        tmp[tmp1] = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(imul(digit1, 16) + digit2 | 0);
        index = index + 3 | 0;
      }
      sb.la((0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.String2althbpus3r3k)(bytes, 0, count, charset));
    } else {
      sb.ma(c);
      index = index + 1 | 0;
    }
  }
  return sb.toString();
}
function charToHexDigit(c2) {
  _init_properties_Codecs_kt__fudxxf();
  return ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(48) <= c2 ? c2 <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(57) : false) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__minus_impl_a2frrhp8twy13wqz9c)(c2, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(48)) : ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65) <= c2 ? c2 <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(70) : false) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__minus_impl_a2frrhp8twy13wqz9c)(c2, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65)) + 10 | 0 : ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(97) <= c2 ? c2 <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(102) : false) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__minus_impl_a2frrhp8twy13wqz9c)(c2, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(97)) + 10 | 0 : -1;
}
function encodeURLParameterValue(_this__u8e3s4) {
  _init_properties_Codecs_kt__fudxxf();
  return encodeURLParameter(_this__u8e3s4, true);
}
function encodeURLParameter$lambda($$this$buildString, $spaceToPlus) {
  return function (it) {
    var tmp;
    if (get_URL_ALPHABET().h2(it) || get_SPECIAL_SYMBOLS().h2(it)) {
      $$this$buildString.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToChar93r9buh19yek)(it));
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else if ($spaceToPlus && it === 32) {
      $$this$buildString.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43));
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      $$this$buildString.la(percentEncode(it));
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function encodeURLQueryComponent$lambda($spaceToPlus, $$this$buildString, $encodeFull) {
  return function (it) {
    var tmp;
    if (it === 32) {
      var tmp_0;
      if ($spaceToPlus) {
        $$this$buildString.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43));
        tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      } else {
        $$this$buildString.la('%20');
        tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      }
      tmp = tmp_0;
    } else if (get_URL_ALPHABET().h2(it) || (!$encodeFull && get_URL_PROTOCOL_PART().h2(it))) {
      $$this$buildString.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToChar93r9buh19yek)(it));
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      $$this$buildString.la(percentEncode(it));
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function encodeURLPath$lambda($$this$buildString) {
  return function (it) {
    $$this$buildString.la(percentEncode(it));
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
var properties_initialized_Codecs_kt_hkj9s1;
function _init_properties_Codecs_kt__fudxxf() {
  if (!properties_initialized_Codecs_kt_hkj9s1) {
    properties_initialized_Codecs_kt_hkj9s1 = true;
    // Inline function 'kotlin.collections.map' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus310ted5e4i90h)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus39kp8wyage607)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(97), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(122)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(90))), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(48), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(57)));
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_0, 10));
    var tmp0_iterator = this_0.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'io.ktor.http.URL_ALPHABET.<anonymous>' call
      // Inline function 'kotlin.code' call
      var this_1 = item.v1_1;
      var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_1);
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(tmp$ret$0);
      destination.g(tmp$ret$1);
    }
    URL_ALPHABET = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toSet2orjxp16sotqu)(destination);
    URL_ALPHABET_CHARS = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toSet2orjxp16sotqu)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus310ted5e4i90h)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus39kp8wyage607)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(97), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(122)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(90))), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(48), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(57))));
    HEX_ALPHABET = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toSet2orjxp16sotqu)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus310ted5e4i90h)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus39kp8wyage607)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(97), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(102)), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(70))), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__rangeTo_impl_tkncvp2up16j2a74v0)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(48), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(57))));
    // Inline function 'kotlin.collections.map' call
    var this_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setOf45ia9pnfhe90)([new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(63)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(91)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(93)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(64)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(33)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(36)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(38)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(39)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(40)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(41)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(42)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(44)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(59)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(61)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(45)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(46)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(95)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(126)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43))]);
    // Inline function 'kotlin.collections.mapTo' call
    var destination_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_2, 10));
    var tmp0_iterator_0 = this_2.w();
    while (tmp0_iterator_0.x()) {
      var item_0 = tmp0_iterator_0.y();
      // Inline function 'io.ktor.http.URL_PROTOCOL_PART.<anonymous>' call
      // Inline function 'kotlin.code' call
      var this_3 = item_0.v1_1;
      var tmp$ret$0_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_3);
      var tmp$ret$1_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(tmp$ret$0_0);
      destination_0.g(tmp$ret$1_0);
    }
    URL_PROTOCOL_PART = destination_0;
    VALID_PATH_PART = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setOf45ia9pnfhe90)([new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(64)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(33)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(36)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(38)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(39)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(40)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(41)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(42)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(44)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(59)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(61)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(45)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(46)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(95)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(126))]);
    ATTRIBUTE_CHARACTERS = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus1ogy4liedzq5j)(get_URL_ALPHABET_CHARS(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setOf45ia9pnfhe90)([new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(33)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(36)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(38)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(45)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(46)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(94)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(95)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(96)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(124)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(126))]));
    // Inline function 'kotlin.collections.map' call
    var this_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.listOf1jh22dvmctj1r)([new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(45)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(46)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(95)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(126))]);
    // Inline function 'kotlin.collections.mapTo' call
    var destination_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_4, 10));
    var tmp0_iterator_1 = this_4.w();
    while (tmp0_iterator_1.x()) {
      var item_1 = tmp0_iterator_1.y();
      // Inline function 'io.ktor.http.SPECIAL_SYMBOLS.<anonymous>' call
      // Inline function 'kotlin.code' call
      var this_5 = item_1.v1_1;
      var tmp$ret$0_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_5);
      var tmp$ret$1_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(tmp$ret$0_1);
      destination_1.g(tmp$ret$1_1);
    }
    SPECIAL_SYMBOLS = destination_1;
  }
}
function hasParameter($this, name, value) {
  var tmp;
  switch ($this.o1q_1.z()) {
    case 0:
      tmp = false;
      break;
    case 1:
      // Inline function 'kotlin.let' call

      // Inline function 'kotlin.contracts.contract' call

      // Inline function 'io.ktor.http.ContentType.hasParameter.<anonymous>' call

      var it = $this.o1q_1.c1(0);
      tmp = ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(it.p1q_1, name, true) && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(it.q1q_1, value, true));
      break;
    default:
      var tmp$ret$2;
      $l$block_0: {
        // Inline function 'kotlin.collections.any' call
        var this_0 = $this.o1q_1;
        var tmp_0;
        if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(this_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Collection1k04j3hzsbod0)) {
          tmp_0 = this_0.f1();
        } else {
          tmp_0 = false;
        }
        if (tmp_0) {
          tmp$ret$2 = false;
          break $l$block_0;
        }
        var tmp0_iterator = this_0.w();
        while (tmp0_iterator.x()) {
          var element = tmp0_iterator.y();
          // Inline function 'io.ktor.http.ContentType.hasParameter.<anonymous>' call
          if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(element.p1q_1, name, true) && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(element.q1q_1, value, true)) {
            tmp$ret$2 = true;
            break $l$block_0;
          }
        }
        tmp$ret$2 = false;
      }

      tmp = tmp$ret$2;
      break;
  }
  return tmp;
}
var Companion_instance_0;
function Companion_getInstance() {
  if (Companion_instance_0 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion();
  return Companion_instance_0;
}
var Application_instance;
function Application_getInstance() {
  if (Application_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Application();
  return Application_instance;
}
var Text_instance;
function Text_getInstance() {
  if (Text_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Text();
  return Text_instance;
}
function charset(_this__u8e3s4) {
  var tmp0_safe_receiver = _this__u8e3s4.p1s('charset');
  var tmp;
  if (tmp0_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.http.charset.<anonymous>' call
    var tmp_0;
    try {
      tmp_0 = _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_instance2svn8ax26syum.n1j(tmp0_safe_receiver);
    } catch ($p) {
      var tmp_1;
      if ($p instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob) {
        var exception = $p;
        tmp_1 = null;
      } else {
        throw $p;
      }
      tmp_0 = tmp_1;
    }
    tmp = tmp_0;
  }
  return tmp;
}
function withCharset(_this__u8e3s4, charset) {
  return _this__u8e3s4.l1s('charset', (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.get_name2f11g4r0d5pxp)(charset));
}
function withCharsetIfNeeded(_this__u8e3s4, charset) {
  var tmp;
  // Inline function 'kotlin.text.lowercase' call
  // Inline function 'kotlin.js.asDynamic' call
  if (!(_this__u8e3s4.v1q_1.toLowerCase() === 'text')) {
    tmp = _this__u8e3s4;
  } else {
    tmp = _this__u8e3s4.l1s('charset', (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.get_name2f11g4r0d5pxp)(charset));
  }
  return tmp;
}
function get_HeaderFieldValueSeparators() {
  _init_properties_HeaderValueWithParameters_kt__z6luvy();
  return HeaderFieldValueSeparators;
}
var HeaderFieldValueSeparators;
var Companion_instance_1;
function Companion_getInstance_0() {
  return Companion_instance_1;
}
function needQuotes(_this__u8e3s4) {
  _init_properties_HeaderValueWithParameters_kt__z6luvy();
  // Inline function 'kotlin.text.isEmpty' call
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(_this__u8e3s4) === 0)
    return true;
  if (isQuoted(_this__u8e3s4))
    return false;
  var inductionVariable = 0;
  var last = _this__u8e3s4.length;
  if (inductionVariable < last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (get_HeaderFieldValueSeparators().h2(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index))))
        return true;
    }
     while (inductionVariable < last);
  return false;
}
function quote(_this__u8e3s4) {
  _init_properties_HeaderValueWithParameters_kt__z6luvy();
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.quote.<anonymous>' call
  quoteTo(_this__u8e3s4, this_0);
  return this_0.toString();
}
function isQuoted(_this__u8e3s4) {
  _init_properties_HeaderValueWithParameters_kt__z6luvy();
  if (_this__u8e3s4.length < 2) {
    return false;
  }
  if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.first3kg261hmihapu)(_this__u8e3s4) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34)) || !((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.last2n4gf5az1lkn4)(_this__u8e3s4) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34))) {
    return false;
  }
  var startIndex = 1;
  $l$loop: do {
    var index = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(_this__u8e3s4, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34), startIndex);
    if (index === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(_this__u8e3s4)) {
      break $l$loop;
    }
    var slashesCount = 0;
    var slashIndex = index - 1 | 0;
    while ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, slashIndex) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(92)) {
      slashesCount = slashesCount + 1 | 0;
      slashIndex = slashIndex - 1 | 0;
    }
    if ((slashesCount % 2 | 0) === 0) {
      return false;
    }
    startIndex = index + 1 | 0;
  }
   while (startIndex < _this__u8e3s4.length);
  return true;
}
function quoteTo(_this__u8e3s4, out) {
  _init_properties_HeaderValueWithParameters_kt__z6luvy();
  out.la('"');
  var inductionVariable = 0;
  var last = _this__u8e3s4.length;
  if (inductionVariable < last)
    do {
      var i = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var ch = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, i);
      if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(92)) {
        out.la('\\\\');
      } else if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(10)) {
        out.la('\\n');
      } else if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(13)) {
        out.la('\\r');
      } else if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(9)) {
        out.la('\\t');
      } else if (ch === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34)) {
        out.la('\\"');
      } else {
        out.ma(ch);
      }
    }
     while (inductionVariable < last);
  out.la('"');
}
function needQuotes$accessor$vynnj(_this__u8e3s4) {
  _init_properties_HeaderValueWithParameters_kt__z6luvy();
  return needQuotes(_this__u8e3s4);
}
var properties_initialized_HeaderValueWithParameters_kt_yu5xg;
function _init_properties_HeaderValueWithParameters_kt__z6luvy() {
  if (!properties_initialized_HeaderValueWithParameters_kt_yu5xg) {
    properties_initialized_HeaderValueWithParameters_kt_yu5xg = true;
    HeaderFieldValueSeparators = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setOf45ia9pnfhe90)([new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(40)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(41)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(60)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(62)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(64)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(44)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(59)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(92)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(91)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(93)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(63)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(61)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(123)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(125)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(32)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(9)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(10)), new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char19o2r8palgjof((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(13))]);
  }
}
var Companion_instance_2;
function Companion_getInstance_1() {
  if (Companion_instance_2 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_1();
  return Companion_instance_2;
}
var EmptyHeaders_instance;
function EmptyHeaders_getInstance() {
  return EmptyHeaders_instance;
}
function parseHeaderValue(text) {
  return parseHeaderValue_0(text, false);
}
function parseHeaderValue_0(text, parametersOnly) {
  if (text == null) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
  }
  var position = 0;
  var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LazyThreadSafetyMode_NONE_getInstance2ezxh11hvaa3w)();
  var items = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy1261dae0bgscp)(tmp, parseHeaderValue$lambda);
  while (position <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(text)) {
    position = parseHeaderValueItem(text, position, items, parametersOnly);
  }
  return valueOrEmpty(items);
}
function parseHeaderValueItem(text, start, items, parametersOnly) {
  var position = start;
  var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LazyThreadSafetyMode_NONE_getInstance2ezxh11hvaa3w)();
  var parameters = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy1261dae0bgscp)(tmp, parseHeaderValueItem$lambda);
  var valueEnd = parametersOnly ? position : null;
  while (position <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(text)) {
    var tmp0_subject = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, position);
    if (tmp0_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(44)) {
      var tmp_0 = items.l1();
      var tmp1_elvis_lhs = valueEnd;
      tmp_0.g(new HeaderValue(subtrim(text, start, tmp1_elvis_lhs == null ? position : tmp1_elvis_lhs), valueOrEmpty(parameters)));
      return position + 1 | 0;
    } else if (tmp0_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(59)) {
      if (valueEnd == null)
        valueEnd = position;
      position = parseHeaderValueParameter(text, position + 1 | 0, parameters);
    } else {
      var tmp_1;
      if (parametersOnly) {
        tmp_1 = parseHeaderValueParameter(text, position, parameters);
      } else {
        tmp_1 = position + 1 | 0;
      }
      position = tmp_1;
    }
  }
  var tmp_2 = items.l1();
  var tmp2_elvis_lhs = valueEnd;
  tmp_2.g(new HeaderValue(subtrim(text, start, tmp2_elvis_lhs == null ? position : tmp2_elvis_lhs), valueOrEmpty(parameters)));
  return position;
}
function valueOrEmpty(_this__u8e3s4) {
  return _this__u8e3s4.xk() ? _this__u8e3s4.l1() : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
}
function subtrim(_this__u8e3s4, start, end) {
  // Inline function 'kotlin.text.trim' call
  // Inline function 'kotlin.text.substring' call
  // Inline function 'kotlin.js.asDynamic' call
  var this_0 = _this__u8e3s4.substring(start, end);
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.trim11nh7r46at6sx)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharSequence1ju9jr1w86plq)(this_0) ? this_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)()));
}
function parseHeaderValueParameter(text, start, parameters) {
  var position = start;
  while (position <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(text)) {
    var tmp0_subject = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, position);
    if (tmp0_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(61)) {
      var tmp1_container = parseHeaderValueParameterValue(text, position + 1 | 0);
      var paramEnd = tmp1_container.bi();
      var paramValue = tmp1_container.ci();
      parseHeaderValueParameter$addParam(parameters, text, start, position, paramValue);
      return paramEnd;
    } else if (tmp0_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(59) ? true : tmp0_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(44)) {
      parseHeaderValueParameter$addParam(parameters, text, start, position, '');
      return position;
    } else {
      position = position + 1 | 0;
    }
  }
  parseHeaderValueParameter$addParam(parameters, text, start, position, '');
  return position;
}
function parseHeaderValueParameterValue(value, start) {
  if (value.length === start) {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(start, '');
  }
  var position = start;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(value, start) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34)) {
    return parseHeaderValueParameterValueQuoted(value, position + 1 | 0);
  }
  while (position <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(value)) {
    var tmp0_subject = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(value, position);
    if (tmp0_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(59) ? true : tmp0_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(44))
      return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(position, subtrim(value, start, position));
    else {
      position = position + 1 | 0;
    }
  }
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(position, subtrim(value, start, position));
}
function parseHeaderValueParameterValueQuoted(value, start) {
  var position = start;
  var builder = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  loop: while (position <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(value)) {
    var currentChar = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(value, position);
    if (currentChar === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34) && nextIsSemicolonOrEnd(value, position)) {
      return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(position + 1 | 0, builder.toString());
    } else if (currentChar === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(92) && position < ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(value) - 2 | 0)) {
      builder.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(value, position + 1 | 0));
      position = position + 2 | 0;
      continue loop;
    }
    builder.ma(currentChar);
    position = position + 1 | 0;
  }
  var tmp = position;
  // Inline function 'kotlin.text.plus' call
  var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(34);
  var other = builder.toString();
  var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)(this_0) + other;
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(tmp, tmp$ret$0);
}
function nextIsSemicolonOrEnd(_this__u8e3s4, start) {
  var position = start + 1 | 0;
  loop: while (position < _this__u8e3s4.length && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, position) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(32)) {
    position = position + 1 | 0;
  }
  return position === _this__u8e3s4.length || (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, position) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(59);
}
function parseAndSortHeader(header) {
  // Inline function 'kotlin.collections.sortedByDescending' call
  var this_0 = parseHeaderValue(header);
  // Inline function 'kotlin.comparisons.compareByDescending' call
  var tmp = parseAndSortHeader$lambda;
  var tmp$ret$0 = new sam$kotlin_Comparator$0(tmp);
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.sortedWith2csnbbb21k0lg)(this_0, tmp$ret$0);
}
function parseHeaderValueParameter$addParam($parameters, text, start, end, value) {
  var name = subtrim(text, start, end);
  // Inline function 'kotlin.text.isEmpty' call
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(name) === 0) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  $parameters.l1().g(HeaderValueParam.m1s(name, value));
}
function parseHeaderValue$lambda() {
  // Inline function 'kotlin.collections.arrayListOf' call
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
}
function parseHeaderValueItem$lambda() {
  // Inline function 'kotlin.collections.arrayListOf' call
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
}
function parseAndSortHeader$lambda(a, b) {
  // Inline function 'kotlin.comparisons.compareValuesBy' call
  // Inline function 'io.ktor.http.parseAndSortHeader.<anonymous>' call
  var tmp = b.b1r_1;
  // Inline function 'io.ktor.http.parseAndSortHeader.<anonymous>' call
  var tmp$ret$1 = a.b1r_1;
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.compareValues1n2ayl87ihzfk)(tmp, tmp$ret$1);
}
var HttpHeaders_instance;
function HttpHeaders_getInstance() {
  if (HttpHeaders_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new HttpHeaders();
  return HttpHeaders_instance;
}
function isDelimiter(ch) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.contains2el4s70rdq4ld)('"(),/:;<=>?@[\\]{}', ch);
}
function contentType(_this__u8e3s4) {
  var tmp0_safe_receiver = _this__u8e3s4.m1x().f1l(HttpHeaders_getInstance().l1t_1);
  var tmp;
  if (tmp0_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.http.contentType.<anonymous>' call
    tmp = Companion_getInstance().y1q(tmp0_safe_receiver);
  }
  return tmp;
}
function contentLength(_this__u8e3s4) {
  var tmp0_safe_receiver = _this__u8e3s4.m1x().f1l(HttpHeaders_getInstance().i1t_1);
  return tmp0_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongkk4waq8msp1k)(tmp0_safe_receiver);
}
function charset_0(_this__u8e3s4) {
  var tmp0_safe_receiver = contentType_0(_this__u8e3s4);
  return tmp0_safe_receiver == null ? null : charset(tmp0_safe_receiver);
}
function contentType_0(_this__u8e3s4) {
  var tmp0_safe_receiver = _this__u8e3s4.m1x().f1l(HttpHeaders_getInstance().l1t_1);
  var tmp;
  if (tmp0_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.http.contentType.<anonymous>' call
    tmp = Companion_getInstance().y1q(tmp0_safe_receiver);
  }
  return tmp;
}
var Companion_instance_3;
function Companion_getInstance_2() {
  if (Companion_instance_3 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_2();
  return Companion_instance_3;
}
var Companion_instance_4;
function Companion_getInstance_3() {
  if (Companion_instance_4 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_3();
  return Companion_instance_4;
}
var Companion_instance_5;
function Companion_getInstance_4() {
  if (Companion_instance_5 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_4();
  return Companion_instance_5;
}
function allStatusCodes() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.listOf1jh22dvmctj1r)([Companion_getInstance_4().e1y_1, Companion_getInstance_4().f1y_1, Companion_getInstance_4().g1y_1, Companion_getInstance_4().h1y_1, Companion_getInstance_4().i1y_1, Companion_getInstance_4().j1y_1, Companion_getInstance_4().k1y_1, Companion_getInstance_4().l1y_1, Companion_getInstance_4().m1y_1, Companion_getInstance_4().n1y_1, Companion_getInstance_4().o1y_1, Companion_getInstance_4().p1y_1, Companion_getInstance_4().q1y_1, Companion_getInstance_4().r1y_1, Companion_getInstance_4().s1y_1, Companion_getInstance_4().t1y_1, Companion_getInstance_4().u1y_1, Companion_getInstance_4().v1y_1, Companion_getInstance_4().w1y_1, Companion_getInstance_4().x1y_1, Companion_getInstance_4().y1y_1, Companion_getInstance_4().z1y_1, Companion_getInstance_4().a1z_1, Companion_getInstance_4().b1z_1, Companion_getInstance_4().c1z_1, Companion_getInstance_4().d1z_1, Companion_getInstance_4().e1z_1, Companion_getInstance_4().f1z_1, Companion_getInstance_4().g1z_1, Companion_getInstance_4().h1z_1, Companion_getInstance_4().i1z_1, Companion_getInstance_4().j1z_1, Companion_getInstance_4().k1z_1, Companion_getInstance_4().l1z_1, Companion_getInstance_4().m1z_1, Companion_getInstance_4().n1z_1, Companion_getInstance_4().o1z_1, Companion_getInstance_4().p1z_1, Companion_getInstance_4().q1z_1, Companion_getInstance_4().r1z_1, Companion_getInstance_4().s1z_1, Companion_getInstance_4().t1z_1, Companion_getInstance_4().u1z_1, Companion_getInstance_4().v1z_1, Companion_getInstance_4().w1z_1, Companion_getInstance_4().x1z_1, Companion_getInstance_4().y1z_1, Companion_getInstance_4().z1z_1, Companion_getInstance_4().a20_1, Companion_getInstance_4().b20_1, Companion_getInstance_4().c20_1, Companion_getInstance_4().d20_1, Companion_getInstance_4().e20_1]);
}
var Companion_instance_6;
function Companion_getInstance_5() {
  if (Companion_instance_6 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_5();
  return Companion_instance_6;
}
function ParametersBuilder(size) {
  size = size === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 8 : size;
  return new ParametersBuilderImpl(size);
}
var EmptyParameters_instance;
function EmptyParameters_getInstance() {
  return EmptyParameters_instance;
}
function parseQueryString(query, startIndex, limit, decode) {
  startIndex = startIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : startIndex;
  limit = limit === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 1000 : limit;
  decode = decode === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? true : decode;
  var tmp;
  if (startIndex > (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(query)) {
    tmp = Companion_getInstance_5().k20_1;
  } else {
    // Inline function 'io.ktor.http.Companion.build' call
    Companion_getInstance_5();
    // Inline function 'kotlin.apply' call
    var this_0 = ParametersBuilder();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.http.parseQueryString.<anonymous>' call
    parse(this_0, query, startIndex, limit, decode);
    tmp = this_0.y18();
  }
  return tmp;
}
function parse(_this__u8e3s4, query, startIndex, limit, decode) {
  var count = 0;
  var nameIndex = startIndex;
  var equalIndex = -1;
  var inductionVariable = startIndex;
  var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(query);
  if (inductionVariable <= last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      if (count === limit) {
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      }
      var tmp1_subject = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(query, index);
      if (tmp1_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(38)) {
        appendParam(_this__u8e3s4, query, nameIndex, equalIndex, index, decode);
        nameIndex = index + 1 | 0;
        equalIndex = -1;
        count = count + 1 | 0;
      } else if (tmp1_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(61)) {
        if (equalIndex === -1) {
          equalIndex = index;
        }
      }
    }
     while (!(index === last));
  if (count === limit) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  appendParam(_this__u8e3s4, query, nameIndex, equalIndex, query.length, decode);
}
function appendParam(_this__u8e3s4, query, nameIndex, equalIndex, endIndex, decode) {
  if (equalIndex === -1) {
    var spaceNameIndex = trimStart(nameIndex, endIndex, query);
    var spaceEndIndex = trimEnd(spaceNameIndex, endIndex, query);
    if (spaceEndIndex > spaceNameIndex) {
      var tmp;
      if (decode) {
        tmp = decodeURLQueryComponent(query, spaceNameIndex, spaceEndIndex);
      } else {
        // Inline function 'kotlin.text.substring' call
        // Inline function 'kotlin.js.asDynamic' call
        tmp = query.substring(spaceNameIndex, spaceEndIndex);
      }
      var name = tmp;
      _this__u8e3s4.m1m(name, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)());
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  var spaceNameIndex_0 = trimStart(nameIndex, equalIndex, query);
  var spaceEqualIndex = trimEnd(spaceNameIndex_0, equalIndex, query);
  if (spaceEqualIndex > spaceNameIndex_0) {
    var tmp_0;
    if (decode) {
      tmp_0 = decodeURLQueryComponent(query, spaceNameIndex_0, spaceEqualIndex);
    } else {
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp_0 = query.substring(spaceNameIndex_0, spaceEqualIndex);
    }
    var name_0 = tmp_0;
    var spaceValueIndex = trimStart(equalIndex + 1 | 0, endIndex, query);
    var spaceEndIndex_0 = trimEnd(spaceValueIndex, endIndex, query);
    var tmp_1;
    if (decode) {
      tmp_1 = decodeURLQueryComponent(query, spaceValueIndex, spaceEndIndex_0, true);
    } else {
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      tmp_1 = query.substring(spaceValueIndex, spaceEndIndex_0);
    }
    var value = tmp_1;
    _this__u8e3s4.q1m(name_0, value);
  }
}
function trimStart(start, end, query) {
  var spaceIndex = start;
  while (spaceIndex < end && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isWhitespace25occ8z1ed1s9)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(query, spaceIndex))) {
    spaceIndex = spaceIndex + 1 | 0;
  }
  return spaceIndex;
}
function trimEnd(start, end, text) {
  var spaceIndex = end;
  while (spaceIndex > start && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isWhitespace25occ8z1ed1s9)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, spaceIndex - 1 | 0))) {
    spaceIndex = spaceIndex - 1 | 0;
  }
  return spaceIndex;
}
function applyOrigin($this) {
  var tmp;
  // Inline function 'kotlin.text.isNotEmpty' call
  var this_0 = $this.o20_1;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(this_0) > 0) {
    tmp = true;
  } else {
    tmp = $this.n20_1.x20_1 === 'file';
  }
  if (tmp)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  $this.o20_1 = Companion_getInstance_6().p21_1.a21_1;
  if ($this.n20_1.equals(Companion_getInstance_7().q21_1))
    $this.n20_1 = Companion_getInstance_6().p21_1.z20_1;
  if ($this.p20_1 === 0)
    $this.p20_1 = Companion_getInstance_6().p21_1.b21_1;
}
var Companion_instance_7;
function Companion_getInstance_6() {
  if (Companion_instance_7 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_6();
  return Companion_instance_7;
}
function get_authority(_this__u8e3s4) {
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.<get-authority>.<anonymous>' call
  this_0.la(get_encodedUserAndPassword(_this__u8e3s4));
  this_0.la(_this__u8e3s4.o20_1);
  if (!(_this__u8e3s4.p20_1 === 0) && !(_this__u8e3s4.p20_1 === _this__u8e3s4.n20_1.y20_1)) {
    this_0.la(':');
    this_0.la(_this__u8e3s4.p20_1.toString());
  }
  return this_0.toString();
}
function appendTo(_this__u8e3s4, out) {
  out.v(_this__u8e3s4.n20_1.x20_1);
  var tmp0_subject = _this__u8e3s4.n20_1.x20_1;
  if (tmp0_subject === 'file') {
    appendFile(out, _this__u8e3s4.o20_1, get_encodedPath(_this__u8e3s4));
    return out;
  } else if (tmp0_subject === 'mailto') {
    appendMailto(out, get_encodedUserAndPassword(_this__u8e3s4), _this__u8e3s4.o20_1);
    return out;
  }
  out.v('://');
  out.v(get_authority(_this__u8e3s4));
  appendUrlFullPath(out, get_encodedPath(_this__u8e3s4), _this__u8e3s4.v20_1, _this__u8e3s4.q20_1);
  // Inline function 'kotlin.text.isNotEmpty' call
  var this_0 = _this__u8e3s4.t20_1;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(this_0) > 0) {
    out.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35));
    out.v(_this__u8e3s4.t20_1);
  }
  return out;
}
function get_encodedUserAndPassword(_this__u8e3s4) {
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.<get-encodedUserAndPassword>.<anonymous>' call
  appendUserAndPassword(this_0, _this__u8e3s4.r20_1, _this__u8e3s4.s20_1);
  return this_0.toString();
}
function appendFile(_this__u8e3s4, host, encodedPath) {
  _this__u8e3s4.v('://');
  _this__u8e3s4.v(host);
  if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.startsWith1bgirhbedtv2y)(encodedPath, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47))) {
    _this__u8e3s4.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47));
  }
  _this__u8e3s4.v(encodedPath);
}
function set_encodedPath(_this__u8e3s4, value) {
  _this__u8e3s4.u20_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBlank1dvkhjjvox3p0)(value) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : value === '/' ? get_ROOT_PATH() : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toMutableList20rdgwi7d3cwi)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.split3d3yeauc4rm2n)(value, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charArrayOf27f4r3dozbrk1)([(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47)])));
}
function get_encodedPath(_this__u8e3s4) {
  return joinPath(_this__u8e3s4.u20_1);
}
function appendMailto(_this__u8e3s4, encodedUser, host) {
  _this__u8e3s4.v(':');
  _this__u8e3s4.v(encodedUser);
  _this__u8e3s4.v(host);
}
function joinPath(_this__u8e3s4) {
  if (_this__u8e3s4.f1())
    return '';
  if (_this__u8e3s4.z() === 1) {
    // Inline function 'kotlin.text.isEmpty' call
    var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.first58ocm7j58k3q)(_this__u8e3s4);
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(this_0) === 0)
      return '/';
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.first58ocm7j58k3q)(_this__u8e3s4);
  }
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.joinToString1cxrrlmo0chqs)(_this__u8e3s4, '/');
}
function get_ROOT_PATH() {
  _init_properties_URLParser_kt__sf11to();
  return ROOT_PATH;
}
var ROOT_PATH;
function takeFrom(_this__u8e3s4, urlString) {
  _init_properties_URLParser_kt__sf11to();
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBlank1dvkhjjvox3p0)(urlString))
    return _this__u8e3s4;
  var tmp;
  try {
    tmp = takeFromUnsafe(_this__u8e3s4, urlString);
  } catch ($p) {
    var tmp_0;
    if ($p instanceof Error) {
      var cause = $p;
      throw URLParserException.h22(urlString, cause);
    } else {
      throw $p;
    }
  }
  return tmp;
}
function takeFromUnsafe(_this__u8e3s4, urlString) {
  _init_properties_URLParser_kt__sf11to();
  var tmp$ret$1;
  $l$block: {
    // Inline function 'kotlin.text.indexOfFirst' call
    var inductionVariable = 0;
    var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(urlString) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'io.ktor.http.takeFromUnsafe.<anonymous>' call
        var it = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, index);
        if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isWhitespace25occ8z1ed1s9)(it)) {
          tmp$ret$1 = index;
          break $l$block;
        }
      }
       while (inductionVariable <= last);
    tmp$ret$1 = -1;
  }
  var startIndex = tmp$ret$1;
  var tmp$ret$3;
  $l$block_0: {
    // Inline function 'kotlin.text.indexOfLast' call
    var inductionVariable_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(urlString) - 1 | 0;
    if (0 <= inductionVariable_0)
      do {
        var index_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + -1 | 0;
        // Inline function 'io.ktor.http.takeFromUnsafe.<anonymous>' call
        var it_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, index_0);
        if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isWhitespace25occ8z1ed1s9)(it_0)) {
          tmp$ret$3 = index_0;
          break $l$block_0;
        }
      }
       while (0 <= inductionVariable_0);
    tmp$ret$3 = -1;
  }
  var endIndex = tmp$ret$3 + 1 | 0;
  var schemeLength = findScheme(urlString, startIndex, endIndex);
  if (schemeLength > 0) {
    // Inline function 'kotlin.text.substring' call
    var startIndex_0 = startIndex;
    var endIndex_0 = startIndex + schemeLength | 0;
    // Inline function 'kotlin.js.asDynamic' call
    var scheme = urlString.substring(startIndex_0, endIndex_0);
    _this__u8e3s4.n20_1 = Companion_getInstance_7().i22(scheme);
    startIndex = startIndex + (schemeLength + 1 | 0) | 0;
  }
  var slashCount = count(urlString, startIndex, endIndex, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47));
  startIndex = startIndex + slashCount | 0;
  if (_this__u8e3s4.n20_1.x20_1 === 'file') {
    parseFile(_this__u8e3s4, urlString, startIndex, endIndex, slashCount);
    return _this__u8e3s4;
  }
  if (_this__u8e3s4.n20_1.x20_1 === 'mailto') {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(slashCount === 0)) {
      // Inline function 'kotlin.require.<anonymous>' call
      var message = 'Failed requirement.';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    parseMailto(_this__u8e3s4, urlString, startIndex, endIndex);
    return _this__u8e3s4;
  }
  if (slashCount >= 2) {
    loop: while (true) {
      // Inline function 'kotlin.takeIf' call
      var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOfAny2ijjuuzpljsyd)(urlString, (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.toCharArray1qby3f4cdahde)('@/\\?#'), startIndex);
      // Inline function 'kotlin.contracts.contract' call
      var tmp;
      // Inline function 'io.ktor.http.takeFromUnsafe.<anonymous>' call
      if (this_0 > 0) {
        tmp = this_0;
      } else {
        tmp = null;
      }
      var tmp0_elvis_lhs = tmp;
      var delimiter = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
      if (delimiter < endIndex && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, delimiter) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(64)) {
        var passwordIndex = indexOfColonInHostPort(urlString, startIndex, delimiter);
        if (!(passwordIndex === -1)) {
          var tmp_0 = _this__u8e3s4;
          // Inline function 'kotlin.text.substring' call
          var startIndex_1 = startIndex;
          // Inline function 'kotlin.js.asDynamic' call
          tmp_0.r20_1 = urlString.substring(startIndex_1, passwordIndex);
          var tmp_1 = _this__u8e3s4;
          // Inline function 'kotlin.text.substring' call
          var startIndex_2 = passwordIndex + 1 | 0;
          // Inline function 'kotlin.js.asDynamic' call
          tmp_1.s20_1 = urlString.substring(startIndex_2, delimiter);
        } else {
          var tmp_2 = _this__u8e3s4;
          // Inline function 'kotlin.text.substring' call
          var startIndex_3 = startIndex;
          // Inline function 'kotlin.js.asDynamic' call
          tmp_2.r20_1 = urlString.substring(startIndex_3, delimiter);
        }
        startIndex = delimiter + 1 | 0;
      } else {
        fillHost(_this__u8e3s4, urlString, startIndex, delimiter);
        startIndex = delimiter;
        break loop;
      }
    }
  }
  if (startIndex >= endIndex) {
    _this__u8e3s4.u20_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, endIndex - 1 | 0) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47) ? get_ROOT_PATH() : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
    return _this__u8e3s4;
  }
  var tmp_3 = _this__u8e3s4;
  var tmp_4;
  if (slashCount === 0) {
    tmp_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.dropLast1vpiyky649o34)(_this__u8e3s4.u20_1, 1);
  } else {
    tmp_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
  }
  tmp_3.u20_1 = tmp_4;
  // Inline function 'kotlin.takeIf' call
  var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOfAny2ijjuuzpljsyd)(urlString, (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.toCharArray1qby3f4cdahde)('?#'), startIndex);
  // Inline function 'kotlin.contracts.contract' call
  var tmp_5;
  // Inline function 'io.ktor.http.takeFromUnsafe.<anonymous>' call
  if (this_1 > 0) {
    tmp_5 = this_1;
  } else {
    tmp_5 = null;
  }
  var tmp1_elvis_lhs = tmp_5;
  var pathEnd = tmp1_elvis_lhs == null ? endIndex : tmp1_elvis_lhs;
  if (pathEnd > startIndex) {
    // Inline function 'kotlin.text.substring' call
    var startIndex_4 = startIndex;
    // Inline function 'kotlin.js.asDynamic' call
    var rawPath = urlString.substring(startIndex_4, pathEnd);
    var tmp_6;
    var tmp_7;
    if (_this__u8e3s4.u20_1.z() === 1) {
      // Inline function 'kotlin.text.isEmpty' call
      var this_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.first58ocm7j58k3q)(_this__u8e3s4.u20_1);
      tmp_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(this_2) === 0;
    } else {
      tmp_7 = false;
    }
    if (tmp_7) {
      tmp_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
    } else {
      tmp_6 = _this__u8e3s4.u20_1;
    }
    var basePath = tmp_6;
    var rawChunks = rawPath === '/' ? get_ROOT_PATH() : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.split3d3yeauc4rm2n)(rawPath, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charArrayOf27f4r3dozbrk1)([(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47)]));
    var relativePath = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus310ted5e4i90h)(slashCount === 1 ? get_ROOT_PATH() : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)(), rawChunks);
    _this__u8e3s4.u20_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.plus310ted5e4i90h)(basePath, relativePath);
    startIndex = pathEnd;
  }
  if (startIndex < endIndex && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, startIndex) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(63)) {
    startIndex = parseQuery(_this__u8e3s4, urlString, startIndex, endIndex);
  }
  parseFragment(_this__u8e3s4, urlString, startIndex, endIndex);
  return _this__u8e3s4;
}
function findScheme(urlString, startIndex, endIndex) {
  _init_properties_URLParser_kt__sf11to();
  var current = startIndex;
  var incorrectSchemePosition = -1;
  var firstChar = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, current);
  if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(97) <= firstChar ? firstChar <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(122) : false) && !((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65) <= firstChar ? firstChar <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(90) : false)) {
    incorrectSchemePosition = current;
  }
  while (current < endIndex) {
    var char = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, current);
    if (char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58)) {
      if (!(incorrectSchemePosition === -1)) {
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Illegal character in scheme at position ' + incorrectSchemePosition);
      }
      return current - startIndex | 0;
    }
    if (char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47) || char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(63) || char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35))
      return -1;
    if (incorrectSchemePosition === -1 && !((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(97) <= char ? char <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(122) : false) && !((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65) <= char ? char <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(90) : false) && !((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(48) <= char ? char <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(57) : false) && !(char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(46)) && !(char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(43)) && !(char === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(45))) {
      incorrectSchemePosition = current;
    }
    current = current + 1 | 0;
  }
  return -1;
}
function count(urlString, startIndex, endIndex, char) {
  _init_properties_URLParser_kt__sf11to();
  var result = 0;
  $l$loop: while ((startIndex + result | 0) < endIndex && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, startIndex + result | 0) === char) {
    result = result + 1 | 0;
  }
  return result;
}
function parseFile(_this__u8e3s4, urlString, startIndex, endIndex, slashCount) {
  _init_properties_URLParser_kt__sf11to();
  switch (slashCount) {
    case 2:
      var nextSlash = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(urlString, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47), startIndex);
      if (nextSlash === -1 || nextSlash === endIndex) {
        var tmp = _this__u8e3s4;
        // Inline function 'kotlin.text.substring' call
        // Inline function 'kotlin.js.asDynamic' call
        tmp.o20_1 = urlString.substring(startIndex, endIndex);
        return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
      }

      var tmp_0 = _this__u8e3s4;
      // Inline function 'kotlin.text.substring' call

      // Inline function 'kotlin.js.asDynamic' call

      tmp_0.o20_1 = urlString.substring(startIndex, nextSlash);
      // Inline function 'kotlin.text.substring' call

      // Inline function 'kotlin.js.asDynamic' call

      var tmp$ret$5 = urlString.substring(nextSlash, endIndex);
      set_encodedPath(_this__u8e3s4, tmp$ret$5);
      break;
    case 3:
      _this__u8e3s4.o20_1 = '';
      // Inline function 'kotlin.text.substring' call

      // Inline function 'kotlin.js.asDynamic' call

      var tmp$ret$7 = urlString.substring(startIndex, endIndex);
      set_encodedPath(_this__u8e3s4, '/' + tmp$ret$7);
      break;
    default:
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Invalid file url: ' + urlString);
  }
}
function parseMailto(_this__u8e3s4, urlString, startIndex, endIndex) {
  _init_properties_URLParser_kt__sf11to();
  var delimiter = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOfwa4w6635jewi)(urlString, '@', startIndex);
  if (delimiter === -1) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Invalid mailto url: ' + urlString + ", it should contain '@'.");
  }
  // Inline function 'kotlin.text.substring' call
  // Inline function 'kotlin.js.asDynamic' call
  var tmp$ret$1 = urlString.substring(startIndex, delimiter);
  _this__u8e3s4.w21(decodeURLPart(tmp$ret$1));
  var tmp = _this__u8e3s4;
  // Inline function 'kotlin.text.substring' call
  var startIndex_0 = delimiter + 1 | 0;
  // Inline function 'kotlin.js.asDynamic' call
  tmp.o20_1 = urlString.substring(startIndex_0, endIndex);
}
function indexOfColonInHostPort(_this__u8e3s4, startIndex, endIndex) {
  _init_properties_URLParser_kt__sf11to();
  var skip = false;
  var inductionVariable = startIndex;
  if (inductionVariable < endIndex)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var tmp1_subject = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index);
      if (tmp1_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(91))
        skip = true;
      else if (tmp1_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(93))
        skip = false;
      else if (tmp1_subject === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58))
        if (!skip)
          return index;
    }
     while (inductionVariable < endIndex);
  return -1;
}
function fillHost(_this__u8e3s4, urlString, startIndex, endIndex) {
  _init_properties_URLParser_kt__sf11to();
  // Inline function 'kotlin.takeIf' call
  var this_0 = indexOfColonInHostPort(urlString, startIndex, endIndex);
  // Inline function 'kotlin.contracts.contract' call
  var tmp;
  // Inline function 'io.ktor.http.fillHost.<anonymous>' call
  if (this_0 > 0) {
    tmp = this_0;
  } else {
    tmp = null;
  }
  var tmp0_elvis_lhs = tmp;
  var colonIndex = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
  var tmp_0 = _this__u8e3s4;
  // Inline function 'kotlin.text.substring' call
  // Inline function 'kotlin.js.asDynamic' call
  tmp_0.o20_1 = urlString.substring(startIndex, colonIndex);
  if ((colonIndex + 1 | 0) < endIndex) {
    var tmp_1 = _this__u8e3s4;
    // Inline function 'kotlin.text.substring' call
    var startIndex_0 = colonIndex + 1 | 0;
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$5 = urlString.substring(startIndex_0, endIndex);
    tmp_1.p20_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toInt2q8uldh7sc951)(tmp$ret$5);
  } else {
    _this__u8e3s4.p20_1 = 0;
  }
}
function parseQuery(_this__u8e3s4, urlString, startIndex, endIndex) {
  _init_properties_URLParser_kt__sf11to();
  if ((startIndex + 1 | 0) === endIndex) {
    _this__u8e3s4.q20_1 = true;
    return endIndex;
  }
  // Inline function 'kotlin.takeIf' call
  var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(urlString, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35), startIndex + 1 | 0);
  // Inline function 'kotlin.contracts.contract' call
  var tmp;
  // Inline function 'io.ktor.http.parseQuery.<anonymous>' call
  if (this_0 > 0) {
    tmp = this_0;
  } else {
    tmp = null;
  }
  var tmp0_elvis_lhs = tmp;
  var fragmentStart = tmp0_elvis_lhs == null ? endIndex : tmp0_elvis_lhs;
  // Inline function 'kotlin.text.substring' call
  var startIndex_0 = startIndex + 1 | 0;
  // Inline function 'kotlin.js.asDynamic' call
  var tmp$ret$3 = urlString.substring(startIndex_0, fragmentStart);
  var rawParameters = parseQueryString(tmp$ret$3, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, false);
  rawParameters.i1m(parseQuery$lambda(_this__u8e3s4));
  return fragmentStart;
}
function parseFragment(_this__u8e3s4, urlString, startIndex, endIndex) {
  _init_properties_URLParser_kt__sf11to();
  if (startIndex < endIndex && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(urlString, startIndex) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35)) {
    var tmp = _this__u8e3s4;
    // Inline function 'kotlin.text.substring' call
    var startIndex_0 = startIndex + 1 | 0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp.t20_1 = urlString.substring(startIndex_0, endIndex);
  }
}
function parseQuery$lambda($this_parseQuery) {
  return function (key, values) {
    $this_parseQuery.v20_1.m1m(key, values);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
var properties_initialized_URLParser_kt_hd1g6a;
function _init_properties_URLParser_kt__sf11to() {
  if (!properties_initialized_URLParser_kt_hd1g6a) {
    properties_initialized_URLParser_kt_hd1g6a = true;
    ROOT_PATH = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.listOfvhqybd2zx248)('');
  }
}
function isWebsocket(_this__u8e3s4) {
  return _this__u8e3s4.x20_1 === 'ws' || _this__u8e3s4.x20_1 === 'wss';
}
var Companion_instance_8;
function Companion_getInstance_7() {
  if (Companion_instance_8 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_7();
  return Companion_instance_8;
}
function isSecure(_this__u8e3s4) {
  return _this__u8e3s4.x20_1 === 'https' || _this__u8e3s4.x20_1 === 'wss';
}
function takeFrom_0(_this__u8e3s4, url) {
  _this__u8e3s4.n20_1 = url.n20_1;
  _this__u8e3s4.o20_1 = url.o20_1;
  _this__u8e3s4.p20_1 = url.p20_1;
  _this__u8e3s4.u20_1 = url.u20_1;
  _this__u8e3s4.r20_1 = url.r20_1;
  _this__u8e3s4.s20_1 = url.s20_1;
  // Inline function 'kotlin.apply' call
  var this_0 = ParametersBuilder();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.takeFrom.<anonymous>' call
  (0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.appendAlltwnjnu28pmtx)(this_0, url.v20_1);
  _this__u8e3s4.b22(this_0);
  _this__u8e3s4.t20_1 = url.t20_1;
  _this__u8e3s4.q20_1 = url.q20_1;
  return _this__u8e3s4;
}
function Url_0(urlString) {
  return URLBuilder_0(urlString).y18();
}
function appendUrlFullPath(_this__u8e3s4, encodedPath, encodedQueryParameters, trailingQuery) {
  var tmp;
  // Inline function 'kotlin.text.isNotBlank' call
  if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isBlank1dvkhjjvox3p0)(encodedPath)) {
    tmp = !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.startsWith26w8qjqapeeq6)(encodedPath, '/');
  } else {
    tmp = false;
  }
  if (tmp) {
    _this__u8e3s4.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47));
  }
  _this__u8e3s4.v(encodedPath);
  if (!encodedQueryParameters.f1() || trailingQuery) {
    _this__u8e3s4.v('?');
  }
  // Inline function 'kotlin.collections.flatMap' call
  // Inline function 'kotlin.collections.flatMapTo' call
  var this_0 = encodedQueryParameters.h1m();
  var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  var tmp0_iterator = this_0.w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'io.ktor.http.appendUrlFullPath.<anonymous>' call
    // Inline function 'kotlin.collections.component1' call
    var key = element.k1();
    // Inline function 'kotlin.collections.component2' call
    var value = element.l1();
    var tmp_0;
    if (value.f1()) {
      tmp_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.listOfvhqybd2zx248)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(key, null));
    } else {
      // Inline function 'kotlin.collections.map' call
      // Inline function 'kotlin.collections.mapTo' call
      var destination_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(value, 10));
      var tmp0_iterator_0 = value.w();
      while (tmp0_iterator_0.x()) {
        var item = tmp0_iterator_0.y();
        // Inline function 'io.ktor.http.appendUrlFullPath.<anonymous>.<anonymous>' call
        var tmp$ret$3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.to2cs3ny02qtbcb)(key, item);
        destination_0.g(tmp$ret$3);
      }
      tmp_0 = destination_0;
    }
    var list = tmp_0;
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.addAll1k27qatfgp3k5)(destination, list);
  }
  var tmp_1 = destination;
  (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.joinTo3lkanfaxbzac2)(tmp_1, _this__u8e3s4, '&', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, appendUrlFullPath$lambda);
}
function appendUserAndPassword(_this__u8e3s4, encodedUser, encodedPassword) {
  if (encodedUser == null) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  _this__u8e3s4.la(encodedUser);
  if (!(encodedPassword == null)) {
    _this__u8e3s4.ma((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58));
    _this__u8e3s4.la(encodedPassword);
  }
  _this__u8e3s4.la('@');
}
function get_hostWithPort(_this__u8e3s4) {
  return _this__u8e3s4.a21_1 + ':' + _this__u8e3s4.j22();
}
function URLBuilder_0(urlString) {
  return takeFrom(new URLBuilder(), urlString);
}
function appendUrlFullPath$lambda(it) {
  var key = it.zh_1;
  var tmp;
  if (it.ai_1 == null) {
    tmp = key;
  } else {
    var value = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(it.ai_1);
    tmp = key + '=' + value;
  }
  return tmp;
}
var Companion_instance_9;
function Companion_getInstance_8() {
  return Companion_instance_9;
}
function Url$encodedPath$delegate$lambda(this$0) {
  return function () {
    var tmp;
    if (this$0.c21_1.f1()) {
      return '';
    }
    var pathStartIndex = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47), this$0.z20_1.x20_1.length + 3 | 0);
    var tmp_0;
    if (pathStartIndex === -1) {
      return '';
    }
    // Inline function 'kotlin.charArrayOf' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charArrayOf27f4r3dozbrk1)([(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(63), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35)]);
    var pathEndIndex = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOfAny2ijjuuzpljsyd)(this$0.i21_1, tmp$ret$0, pathStartIndex);
    var tmp_1;
    if (pathEndIndex === -1) {
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      return this$0.i21_1.substring(pathStartIndex);
    }
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this$0.i21_1.substring(pathStartIndex, pathEndIndex);
  };
}
function Url$encodedQuery$delegate$lambda(this$0) {
  return function () {
    var queryStart = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(63)) + 1 | 0;
    var tmp;
    if (queryStart === 0) {
      return '';
    }
    var queryEnd = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35), queryStart);
    var tmp_0;
    if (queryEnd === -1) {
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      return this$0.i21_1.substring(queryStart);
    }
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this$0.i21_1.substring(queryStart, queryEnd);
  };
}
function Url$encodedPathAndQuery$delegate$lambda(this$0) {
  return function () {
    var pathStart = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(47), this$0.z20_1.x20_1.length + 3 | 0);
    var tmp;
    if (pathStart === -1) {
      return '';
    }
    var queryEnd = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35), pathStart);
    var tmp_0;
    if (queryEnd === -1) {
      // Inline function 'kotlin.text.substring' call
      // Inline function 'kotlin.js.asDynamic' call
      return this$0.i21_1.substring(pathStart);
    }
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this$0.i21_1.substring(pathStart, queryEnd);
  };
}
function Url$encodedUser$delegate$lambda(this$0) {
  return function () {
    var tmp;
    if (this$0.f21_1 == null) {
      return null;
    }
    var tmp_0;
    // Inline function 'kotlin.text.isEmpty' call
    var this_0 = this$0.f21_1;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(this_0) === 0) {
      return '';
    }
    var usernameStart = this$0.z20_1.x20_1.length + 3 | 0;
    // Inline function 'kotlin.charArrayOf' call
    var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charArrayOf27f4r3dozbrk1)([(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(64)]);
    var usernameEnd = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOfAny2ijjuuzpljsyd)(this$0.i21_1, tmp$ret$1, usernameStart);
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this$0.i21_1.substring(usernameStart, usernameEnd);
  };
}
function Url$encodedPassword$delegate$lambda(this$0) {
  return function () {
    var tmp;
    if (this$0.g21_1 == null) {
      return null;
    }
    var tmp_0;
    // Inline function 'kotlin.text.isEmpty' call
    var this_0 = this$0.g21_1;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(this_0) === 0) {
      return '';
    }
    var passwordStart = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(58), this$0.z20_1.x20_1.length + 3 | 0) + 1 | 0;
    var passwordEnd = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(64));
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this$0.i21_1.substring(passwordStart, passwordEnd);
  };
}
function Url$encodedFragment$delegate$lambda(this$0) {
  return function () {
    var fragmentStart = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.indexOf1xbs558u7wr52)(this$0.i21_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(35)) + 1 | 0;
    var tmp;
    if (fragmentStart === 0) {
      return '';
    }
    // Inline function 'kotlin.text.substring' call
    // Inline function 'kotlin.js.asDynamic' call
    return this$0.i21_1.substring(fragmentStart);
  };
}
function get_authority_0(_this__u8e3s4) {
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.<get-authority>.<anonymous>' call
  this_0.la(get_encodedUserAndPassword_0(_this__u8e3s4));
  if (_this__u8e3s4.b21_1 === 0 || _this__u8e3s4.b21_1 === _this__u8e3s4.z20_1.y20_1) {
    this_0.la(_this__u8e3s4.a21_1);
  } else {
    this_0.la(get_hostWithPort(_this__u8e3s4));
  }
  return this_0.toString();
}
function get_encodedUserAndPassword_0(_this__u8e3s4) {
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.u();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.<get-encodedUserAndPassword>.<anonymous>' call
  appendUserAndPassword(this_0, _this__u8e3s4.k22(), _this__u8e3s4.l22());
  return this_0.toString();
}
function encodedUser$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('encodedUser', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return receiver.k22();
  }, null);
}
function encodedPassword$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('encodedPassword', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return receiver.l22();
  }, null);
}
function encodeParameters(parameters) {
  // Inline function 'kotlin.apply' call
  var this_0 = ParametersBuilder();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.encodeParameters.<anonymous>' call
  appendAllEncoded(this_0, parameters);
  return this_0;
}
function decodeParameters(parameters) {
  // Inline function 'kotlin.apply' call
  var this_0 = ParametersBuilder();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.http.decodeParameters.<anonymous>' call
  appendAllDecoded(this_0, parameters);
  return this_0.y18();
}
function appendAllEncoded(_this__u8e3s4, parameters) {
  // Inline function 'kotlin.collections.forEach' call
  var tmp0_iterator = parameters.g1m().w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'io.ktor.http.appendAllEncoded.<anonymous>' call
    var tmp0_elvis_lhs = parameters.f1m(element);
    var values = tmp0_elvis_lhs == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : tmp0_elvis_lhs;
    var tmp = encodeURLParameter(element);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(values, 10));
    var tmp0_iterator_0 = values.w();
    while (tmp0_iterator_0.x()) {
      var item = tmp0_iterator_0.y();
      // Inline function 'io.ktor.http.appendAllEncoded.<anonymous>.<anonymous>' call
      var tmp$ret$0 = encodeURLParameterValue(item);
      destination.g(tmp$ret$0);
    }
    _this__u8e3s4.m1m(tmp, destination);
  }
}
function appendAllDecoded(_this__u8e3s4, parameters) {
  // Inline function 'kotlin.collections.forEach' call
  var tmp0_iterator = parameters.g1m().w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'io.ktor.http.appendAllDecoded.<anonymous>' call
    var tmp0_elvis_lhs = parameters.f1m(element);
    var values = tmp0_elvis_lhs == null ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)() : tmp0_elvis_lhs;
    var tmp = decodeURLQueryComponent(element);
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(values, 10));
    var tmp0_iterator_0 = values.w();
    while (tmp0_iterator_0.x()) {
      var item = tmp0_iterator_0.y();
      // Inline function 'io.ktor.http.appendAllDecoded.<anonymous>.<anonymous>' call
      var tmp$ret$0 = decodeURLQueryComponent(item, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, true);
      destination.g(tmp$ret$0);
    }
    _this__u8e3s4.m1m(tmp, destination);
  }
}
var NullBody_instance;
function NullBody_getInstance() {
  return NullBody_instance;
}
function get_origin(_this__u8e3s4) {
  var tmp;
  if ((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.get_platform3348u7kp42j9x)((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.PlatformUtils_getInstance3trl22jwg7wgb)()).x2_1 === 2) {
    var tmp_0 = function () {
      var tmpLocation = null;
      if (typeof window !== 'undefined') {
        tmpLocation = window.location;
      } else if (typeof self !== 'undefined') {
        tmpLocation = self.location;
      }
      var origin = '';
      if (tmpLocation) {
        origin = tmpLocation.origin;
      }
      return origin && origin != 'null' ? origin : 'http://localhost';
    }();
    tmp = (!(tmp_0 == null) ? typeof tmp_0 === 'string' : false) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  } else {
    tmp = 'http://localhost';
  }
  return tmp;
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(URLDecodeException, 'URLDecodeException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Application, 'Application');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Text, 'Text');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HeaderValueWithParameters, 'HeaderValueWithParameters');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContentType, 'ContentType');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(BadContentTypeFormatException, 'BadContentTypeFormatException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HeadersBuilder, 'HeadersBuilder', HeadersBuilder);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(EmptyHeaders).f1l = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.get3oezx9z3zutmm;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(EmptyHeaders).i1m = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.forEachghjt92rkrpzo;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(EmptyHeaders, 'EmptyHeaders', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesjqid5a6cuday]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HeadersImpl, 'HeadersImpl', HeadersImpl, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesjqid5a6cuday, _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesImpl2l95y9du7b61t]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HeaderValueParam, 'HeaderValueParam');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HeaderValue, 'HeaderValue');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(HttpHeaders, 'HttpHeaders');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(IllegalHeaderNameException, 'IllegalHeaderNameException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(IllegalHeaderValueException, 'IllegalHeaderValueException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UnsafeHeaderException, 'UnsafeHeaderException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HttpMethod, 'HttpMethod');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_3);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HttpProtocolVersion, 'HttpProtocolVersion');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_4);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(HttpStatusCode, 'HttpStatusCode', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Comparable198qfk8pnblz0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_5);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Parameters, 'Parameters', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesjqid5a6cuday]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(EmptyParameters).i1m = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.forEachghjt92rkrpzo;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(EmptyParameters, 'EmptyParameters', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Parameters]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ParametersBuilderImpl, 'ParametersBuilderImpl', ParametersBuilderImpl);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ParametersImpl, 'ParametersImpl', ParametersImpl, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Parameters, _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringValuesImpl2l95y9du7b61t]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_6);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(URLBuilder, 'URLBuilder', URLBuilder);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(URLParserException, 'URLParserException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_7);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(URLProtocol, 'URLProtocol');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_8);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Url, 'Url');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(UrlDecodedParametersBuilder, 'UrlDecodedParametersBuilder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(OutgoingContent, 'OutgoingContent');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ByteArrayContent, 'ByteArrayContent');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ByteArrayContent_0, 'ByteArrayContent');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(NoContent, 'NoContent');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ReadChannelContent, 'ReadChannelContent');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(WriteChannelContent, 'WriteChannelContent', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ProtocolUpgrade, 'ProtocolUpgrade', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [4]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(NullBody, 'NullBody');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(TextContent, 'TextContent');
//endregion
//region block: init
Companion_instance_1 = new Companion_0();
EmptyHeaders_instance = new EmptyHeaders();
EmptyParameters_instance = new EmptyParameters();
Companion_instance_9 = new Companion_8();
NullBody_instance = new NullBody();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-http.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-io.mjs":
/*!*********************************!*\
  !*** ./kotlin/ktor-ktor-io.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ByteReadChannel1dp09w1xstn8w: () => (/* binding */ ByteReadChannel_0),
/* harmony export */   ByteReadChannel2wzou76jce72d: () => (/* binding */ ByteReadChannel),
/* harmony export */   ByteReadPacket19qnebry5xxpy: () => (/* binding */ ByteReadPacket),
/* harmony export */   Charsets_getInstancemd62gu5po4os: () => (/* binding */ Charsets_getInstance),
/* harmony export */   Companion_getInstancekyay2rfrglll: () => (/* binding */ Companion_getInstance_3),
/* harmony export */   Companion_instance2svn8ax26syum: () => (/* binding */ Companion_instance_5),
/* harmony export */   IOExceptionktvzt3eudz3d: () => (/* binding */ IOException),
/* harmony export */   Input1claccncp4iy3: () => (/* binding */ Input),
/* harmony export */   MalformedInputExceptionbvc6h5ij0ias: () => (/* binding */ MalformedInputException),
/* harmony export */   String2althbpus3r3k: () => (/* binding */ String_0),
/* harmony export */   WriterScope3b0bo1enaee6b: () => (/* binding */ WriterScope),
/* harmony export */   canceldn4b3cdqcfny: () => (/* binding */ cancel),
/* harmony export */   completeReadHeadmsbisaktufcz: () => (/* binding */ completeReadHead),
/* harmony export */   copyToaok2mnp3lrmm: () => (/* binding */ copyTo),
/* harmony export */   decode1h5mw63lslzyq: () => (/* binding */ decode),
/* harmony export */   discard2nktejhnnvzvk: () => (/* binding */ discard),
/* harmony export */   encode35e4rpnc94tb5: () => (/* binding */ encode),
/* harmony export */   encodeToByteArrayomtvgs5lyogm: () => (/* binding */ encodeToByteArray),
/* harmony export */   get_ByteArrayPool3f7yrgvqxz9ct: () => (/* binding */ get_ByteArrayPool),
/* harmony export */   get_name2f11g4r0d5pxp: () => (/* binding */ get_name),
/* harmony export */   prepareReadFirstHead3bxvcvf0u196c: () => (/* binding */ prepareReadFirstHead),
/* harmony export */   prepareReadNextHead165u1tlz2sd0o: () => (/* binding */ prepareReadNextHead),
/* harmony export */   readAvailable1yzhunw2q91ea: () => (/* binding */ readAvailable),
/* harmony export */   readBytes2b47ed7nra7rg: () => (/* binding */ readBytes),
/* harmony export */   readText3x4cv5p7hylp: () => (/* binding */ readText),
/* harmony export */   writeFully2uk0nvr5t2puu: () => (/* binding */ writeFully),
/* harmony export */   writer1eia5its2a1fh: () => (/* binding */ writer)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlinx-atomicfu.mjs */ "./kotlin/kotlinx-atomicfu.mjs");
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");



//region block: imports
var imul = Math.imul;
//endregion
//region block: pre-declaration
class $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, count, resultContinuation) {
    super(resultContinuation);
    this.h16_1 = _this__u8e3s4;
    this.i16_1 = count;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!(this.h16_1.x15() < this.i16_1 && !this.h16_1.i15())) {
              this.lb_1 = 5;
              continue $sm;
            }

            if (!flushImpl(this.h16_1)) {
              this.lb_1 = 2;
              suspendResult = this.h16_1.c14_1.j16(ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForWrite$lambda(this.h16_1, this.i16_1), this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.lb_1 = 3;
              continue $sm;
            }

          case 2:
            this.lb_1 = 3;
            continue $sm;
          case 3:
            this.lb_1 = 1;
            continue $sm;
          case 4:
            throw this.ob_1;
          case 5:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $awaitAtLeastNBytesAvailableForReadCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, count, resultContinuation) {
    super(resultContinuation);
    this.s16_1 = _this__u8e3s4;
    this.t16_1 = count;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!(this.s16_1.w15() < this.t16_1 && !this.s16_1.y15())) {
              this.lb_1 = 4;
              continue $sm;
            }

            this.lb_1 = 2;
            suspendResult = this.s16_1.c14_1.j16(ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForRead$lambda(this.s16_1, this.t16_1), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.lb_1 = 1;
            continue $sm;
          case 3:
            throw this.ob_1;
          case 4:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $writeFullyCOROUTINE$9 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, src, resultContinuation) {
    super(resultContinuation);
    this.c17_1 = _this__u8e3s4;
    this.d17_1 = src;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.c17_1.e17(1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var this_0 = this.d17_1;
            var count = this_0.h17_1 - this_0.g17_1 | 0;
            writeFully_2(this.c17_1.y13_1, this.d17_1);
            this.c17_1.l17(count);
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $writeFullyCOROUTINE$10 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, src, offset, length, resultContinuation) {
    super(resultContinuation);
    this.u17_1 = _this__u8e3s4;
    this.v17_1 = src;
    this.w17_1 = offset;
    this.x17_1 = length;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 4;
            this.y17_1 = this.w17_1;
            this.z17_1 = this.w17_1 + this.x17_1 | 0;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!(this.y17_1 < this.z17_1)) {
              this.lb_1 = 3;
              continue $sm;
            }

            this.lb_1 = 2;
            suspendResult = this.u17_1.e17(1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var a = this.u17_1.x15();
            var b = this.z17_1 - this.y17_1 | 0;
            var bytesCount = Math.min(a, b);
            writeFully_3(this.u17_1.y13_1, this.v17_1, this.y17_1, bytesCount);
            this.y17_1 = this.y17_1 + bytesCount | 0;
            this.u17_1.l17(bytesCount);
            this.lb_1 = 1;
            continue $sm;
          case 3:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 4:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 4) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $readRemainingCOROUTINE$26 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, limit, resultContinuation) {
    super(resultContinuation);
    this.i18_1 = _this__u8e3s4;
    this.j18_1 = limit;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            ensureNotFailed(this.i18_1);
            this.k18_1 = new BytePacketBuilder();
            var tmp_0 = this;
            var a = this.j18_1;
            var b = this.i18_1.z13_1.v18();
            tmp_0.l18_1 = a.q1(b) <= 0 ? a : b;
            this.k18_1.w18(this.i18_1.z13_1, this.l18_1);
            this.i18_1.x18(this.l18_1.u3());
            var tmp_1 = this;
            var this_0 = this.j18_1;
            var other = this.k18_1.z();
            tmp_1.m18_1 = this_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
            if (this.m18_1.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) || this.i18_1.y15()) {
              var tmp_2 = this;
              ensureNotFailed_0(this.i18_1, this.k18_1);
              tmp_2.n18_1 = this.k18_1.y18();
              this.lb_1 = 2;
              continue $sm;
            } else {
              this.lb_1 = 1;
              suspendResult = readRemainingSuspend(this.i18_1, this.k18_1, this.j18_1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            }

          case 1:
            this.n18_1 = suspendResult;
            this.lb_1 = 2;
            continue $sm;
          case 2:
            return this.n18_1;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $readRemainingSuspendCOROUTINE$27 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, builder, limit, resultContinuation) {
    super(resultContinuation);
    this.s15_1 = _this__u8e3s4;
    this.t15_1 = builder;
    this.u15_1 = limit;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.t15_1.z()).q1(this.u15_1) < 0)) {
              this.lb_1 = 4;
              continue $sm;
            }

            var tmp_0 = this;
            var this_0 = this.u15_1;
            var other = this.t15_1.z();
            var a = this_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
            var b = this.s15_1.z13_1.v18();
            tmp_0.v15_1 = a.q1(b) <= 0 ? a : b;
            this.t15_1.w18(this.s15_1.z13_1, this.v15_1);
            this.s15_1.x18(this.v15_1.u3());
            ensureNotFailed_0(this.s15_1, this.t15_1);
            if (this.s15_1.y15() || this.t15_1.z() === this.u15_1.u3()) {
              this.lb_1 = 4;
              continue $sm;
            } else {
              this.lb_1 = 2;
              continue $sm;
            }

          case 2:
            this.lb_1 = 3;
            suspendResult = this.s15_1.z18(1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.lb_1 = 1;
            continue $sm;
          case 4:
            ensureNotFailed_0(this.s15_1, this.t15_1);
            return this.t15_1.y18();
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $readAvailableCOROUTINE$30 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, dst, resultContinuation) {
    super(resultContinuation);
    this.i19_1 = _this__u8e3s4;
    this.j19_1 = dst;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp0_safe_receiver = this.i19_1.b15();
            if (tmp0_safe_receiver == null)
              null;
            else {
              throw tmp0_safe_receiver;
            }

            if (this.i19_1.i15() && this.i19_1.w15() === 0)
              return -1;
            var this_0 = this.j19_1;
            if ((this_0.j17_1 - this_0.h17_1 | 0) === 0)
              return 0;
            if (this.i19_1.w15() === 0) {
              this.lb_1 = 1;
              suspendResult = this.i19_1.z18(1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.lb_1 = 2;
              continue $sm;
            }

          case 1:
            this.lb_1 = 2;
            continue $sm;
          case 2:
            if (!this.i19_1.z13_1.l19()) {
              this.i19_1.k19();
            }

            var this_1 = this.j19_1;
            var a = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this_1.j17_1 - this_1.h17_1 | 0);
            var b = this.i19_1.z13_1.v18();
            var size = (a.q1(b) <= 0 ? a : b).u3();
            readFully_2(this.i19_1.z13_1, this.j19_1, size);
            this.i19_1.x18(size);
            return size;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $readAvailableCOROUTINE$33 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, dst, offset, length, resultContinuation) {
    super(resultContinuation);
    this.u19_1 = _this__u8e3s4;
    this.v19_1 = dst;
    this.w19_1 = offset;
    this.x19_1 = length;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp0_safe_receiver = this.u19_1.b15();
            if (tmp0_safe_receiver == null)
              null;
            else {
              throw tmp0_safe_receiver;
            }

            if (this.u19_1.i15() && this.u19_1.w15() === 0)
              return -1;
            if (this.x19_1 === 0)
              return 0;
            if (this.u19_1.w15() === 0) {
              this.lb_1 = 1;
              suspendResult = this.u19_1.z18(1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.lb_1 = 2;
              continue $sm;
            }

          case 1:
            this.lb_1 = 2;
            continue $sm;
          case 2:
            if (!this.u19_1.z13_1.l19()) {
              this.u19_1.k19();
            }

            var a = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.x19_1);
            var b = this.u19_1.z13_1.v18();
            var size = (a.q1(b) <= 0 ? a : b).u3();
            readFully_1(this.u19_1.z13_1, this.v19_1, this.w19_1, size);
            this.u19_1.x18(size);
            return size;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $awaitInternalAtLeast1COROUTINE$38 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, resultContinuation) {
    super(resultContinuation);
    this.g1a_1 = _this__u8e3s4;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            if (!this.g1a_1.z13_1.i1a()) {
              var tmp_0 = this;
              tmp_0.h1a_1 = true;
              this.lb_1 = 3;
              continue $sm;
            } else {
              this.lb_1 = 1;
              suspendResult = this.g1a_1.z18(1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            }

          case 1:
            this.h1a_1 = suspendResult;
            this.lb_1 = 3;
            continue $sm;
          case 2:
            throw this.ob_1;
          case 3:
            return this.h1a_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $awaitSuspendCOROUTINE$39 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, atLeast, resultContinuation) {
    super(resultContinuation);
    this.r1a_1 = _this__u8e3s4;
    this.s1a_1 = atLeast;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            if (!(this.s1a_1 >= 0)) {
              var message = 'Failed requirement.';
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
            }

            this.lb_1 = 1;
            suspendResult = this.r1a_1.t1a(this.s1a_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.r1a_1.k19();
            var tmp0_safe_receiver = this.r1a_1.b15();
            if (tmp0_safe_receiver == null)
              null;
            else {
              throw tmp0_safe_receiver;
            }

            return !this.r1a_1.y15() && this.r1a_1.w15() >= this.s1a_1;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class ByteReadChannel {}
function readRemaining$default(limit, $completion, $super) {
  limit = limit === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(-1, 2147483647) : limit;
  return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.k1b(limit, $completion) : $super.k1b.call(this, limit, $completion);
}
class ByteChannelSequentialBase {
  constructor(initial, autoFlush, pool) {
    pool = pool === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Companion_getInstance_2().y1a() : pool;
    this.r13_1 = autoFlush;
    this.s13_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(Companion_getInstance_2().v1a_1);
    this.t13_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$long$129k9zwo6n9ogd)(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
    this.u13_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$long$129k9zwo6n9ogd)(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
    this.v13_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$int$11d5swdyn6j0pu)(0);
    this.w13_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$int$11d5swdyn6j0pu)(0);
    this.x13_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(null);
    this.y13_1 = new BytePacketBuilder(pool);
    this.z13_1 = ByteReadPacket.g1b(initial, pool);
    this.a14_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$int$11d5swdyn6j0pu)(0);
    this.b14_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(Companion_getInstance_2().v1a_1);
    this.c14_1 = new AwaitingSlot();
    this.d14_1 = new Object();
    this.e14_1 = new BytePacketBuilder();
    var count = remainingAll(initial).u3();
    this.l17(count);
    this.v13_1.atomicfu$addAndGet(count);
  }
  h1b() {
    return this.r13_1;
  }
  i15() {
    return !(this.x13_1.kotlinx$atomicfu$value == null);
  }
  w15() {
    return this.v13_1.kotlinx$atomicfu$value;
  }
  x15() {
    // Inline function 'kotlin.comparisons.maxOf' call
    var b = 4088 - this.w13_1.kotlinx$atomicfu$value | 0;
    return Math.max(0, b);
  }
  y15() {
    return _get_isCancelled__nhbn6y(this) || (this.i15() && this.w13_1.kotlinx$atomicfu$value === 0);
  }
  b15() {
    var tmp0_safe_receiver = this.x13_1.kotlinx$atomicfu$value;
    return tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f14_1;
  }
  e17(count, $completion) {
    var tmp = new $awaitAtLeastNBytesAvailableForWriteCOROUTINE$0(this, count, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  t1a(count, $completion) {
    var tmp = new $awaitAtLeastNBytesAvailableForReadCOROUTINE$1(this, count, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ib() {
    flushImpl(this);
  }
  k19() {
    // Inline function 'kotlinx.atomicfu.locks.synchronized' call
    this.d14_1;
    // Inline function 'io.ktor.utils.io.ByteChannelSequentialBase.prepareFlushedBytes.<anonymous>' call
    unsafeAppend(this.z13_1, this.e14_1);
  }
  i1b(src, $completion) {
    var tmp = new $writeFullyCOROUTINE$9(this, src, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  j1b(src, offset, length, $completion) {
    var tmp = new $writeFullyCOROUTINE$10(this, src, offset, length, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  x18(count) {
    addBytesRead(this, count);
    this.c14_1.h14();
  }
  k1b(limit, $completion) {
    var tmp = new $readRemainingCOROUTINE$26(this, limit, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  m1b(dst, $completion) {
    return this.n1b(dst instanceof Buffer ? dst : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  n1b(dst, $completion) {
    var tmp = new $readAvailableCOROUTINE$30(this, dst, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  o1b(dst, offset, length, $completion) {
    var tmp = new $readAvailableCOROUTINE$33(this, dst, offset, length, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  p1b($completion) {
    var tmp = new $awaitInternalAtLeast1COROUTINE$38(this, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  z18(atLeast, $completion) {
    var tmp = new $awaitSuspendCOROUTINE$39(this, atLeast, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  tr(cause) {
    if (!(this.b15() == null) || this.i15()) {
      return false;
    }
    return this.q1b(cause == null ? _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr.hc('Channel cancelled') : cause);
  }
  q1b(cause) {
    var closeElement = cause == null ? get_CLOSED_SUCCESS() : new CloseElement(cause);
    if (!this.x13_1.atomicfu$compareAndSet(null, closeElement))
      return false;
    if (!(cause == null)) {
      this.z13_1.j15();
      this.y13_1.j15();
      this.e14_1.j15();
    } else {
      this.ib();
      this.y13_1.j15();
    }
    this.c14_1.r1b(cause);
    return true;
  }
  s1b(dst, limit) {
    var size = this.z13_1.v18();
    var tmp;
    if (size.q1(limit) <= 0) {
      dst.y13_1.t1b(this.z13_1);
      dst.l17(size.u3());
      this.x18(size.u3());
      tmp = size;
    } else {
      tmp = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0);
    }
    return tmp;
  }
  l17(count) {
    addBytesWritten(this, count);
    if (this.i15()) {
      this.y13_1.j15();
      ensureNotClosed(this);
    }
    if (this.h1b() || this.x15() === 0) {
      this.ib();
    }
  }
}
class ClosedWriteChannelException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr {
  static h15(message) {
    var $this = this.hc(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.g15_1);
    return $this;
  }
}
class CloseElement {
  constructor(cause) {
    this.f14_1 = cause;
  }
}
class WriterScope {}
class ChannelJob {
  constructor(delegate, channel) {
    this.w1b_1 = delegate;
    this.x1b_1 = channel;
  }
  v1b() {
    return this.x1b_1;
  }
  hn() {
    return this.w1b_1.hn();
  }
  k1() {
    return this.w1b_1.k1();
  }
  ao() {
    return this.w1b_1.ao();
  }
  vo(child) {
    return this.w1b_1.vo(child);
  }
  oo(cause) {
    this.w1b_1.oo(cause);
  }
  wi(initial, operation) {
    return this.w1b_1.wi(initial, operation);
  }
  yb(key) {
    return this.w1b_1.yb(key);
  }
  fo() {
    return this.w1b_1.fo();
  }
  jo(onCancelling, invokeImmediately, handler) {
    return this.w1b_1.jo(onCancelling, invokeImmediately, handler);
  }
  io(handler) {
    return this.w1b_1.io(handler);
  }
  vi(key) {
    return this.w1b_1.vi(key);
  }
  xi(context) {
    return this.w1b_1.xi(context);
  }
  do() {
    return this.w1b_1.do();
  }
  toString() {
    return 'ChannelJob[' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.w1b_1) + ']';
  }
}
class ChannelScope {
  constructor(delegate, channel) {
    this.y1b_1 = channel;
    this.z1b_1 = delegate;
  }
  v1b() {
    return this.y1b_1;
  }
  gn() {
    return this.z1b_1.gn();
  }
}
class launchChannel$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($attachJob, $channel, $block, $dispatcher, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.i1c_1 = $attachJob;
    $box.j1c_1 = $channel;
    $box.k1c_1 = $block;
    $box.l1c_1 = $dispatcher;
    super(resultContinuation, $box);
  }
  o1c($this$launch, $completion) {
    var tmp = this.p1c($this$launch, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.o1c((!(p1 == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(p1, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.CoroutineScopefcb5f5dwqcas) : false) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            if (this.i1c_1) {
              this.j1c_1.u1b((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(this.m1c_1.gn().yb(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Key_instance3o7pj7ik1b183)));
            }

            var tmp_0 = this;
            var tmp_1 = new ChannelScope(this.m1c_1, this.j1c_1);
            tmp_0.n1c_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_1, _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.CoroutineScopefcb5f5dwqcas) ? tmp_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.k1c_1(this.n1c_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.mb_1 = 3;
            this.lb_1 = 4;
            continue $sm;
          case 2:
            this.mb_1 = 3;
            var tmp_2 = this.ob_1;
            if (tmp_2 instanceof Error) {
              var cause = this.ob_1;
              if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.l1c_1, (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Dispatchers_getInstance1nk2l7rcqz5wi)().ix_1) && !(this.l1c_1 == null)) {
                throw cause;
              }
              this.j1c_1.tr(cause);
              this.lb_1 = 4;
              continue $sm;
            } else {
              throw this.ob_1;
            }

          case 3:
            throw this.ob_1;
          case 4:
            this.mb_1 = 3;
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  p1c($this$launch, completion) {
    var i = new launchChannel$slambda(this.i1c_1, this.j1c_1, this.k1c_1, this.l1c_1, completion);
    i.m1c_1 = $this$launch;
    return i;
  }
}
class Companion {
  constructor() {
    this.r1c_1 = 8;
  }
  s1c() {
    return Companion_getInstance_2().v1a_1;
  }
}
class Buffer {
  constructor(memory) {
    this.f17_1 = memory;
    this.g17_1 = 0;
    this.h17_1 = 0;
    this.i17_1 = 0;
    var tmp = this;
    // Inline function 'io.ktor.utils.io.bits.Memory.size32' call
    tmp.j17_1 = this.f17_1.t1c_1.byteLength;
    var tmp_0 = this;
    // Inline function 'io.ktor.utils.io.bits.Memory.size32' call
    tmp_0.k17_1 = this.f17_1.t1c_1.byteLength;
  }
  u1c(count) {
    if (count === 0)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    var newReadPosition = this.g17_1 + count | 0;
    if (count < 0 || newReadPosition > this.h17_1) {
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var tmp$ret$1 = this.h17_1 - this.g17_1 | 0;
      discardFailed(count, tmp$ret$1);
    }
    this.g17_1 = newReadPosition;
  }
  v1c(count) {
    var newWritePosition = this.h17_1 + count | 0;
    if (count < 0 || newWritePosition > this.j17_1) {
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var tmp$ret$0 = this.j17_1 - this.h17_1 | 0;
      commitWrittenFailed(count, tmp$ret$0);
    }
    this.h17_1 = newWritePosition;
  }
  w1c(position) {
    var limit = this.j17_1;
    if (position < this.h17_1) {
      var tmp = position - this.h17_1 | 0;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var tmp$ret$0 = this.j17_1 - this.h17_1 | 0;
      commitWrittenFailed(tmp, tmp$ret$0);
    }
    if (position >= limit) {
      if (position === limit) {
        this.h17_1 = position;
        return false;
      }
      var tmp_0 = position - this.h17_1 | 0;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var tmp$ret$1 = this.j17_1 - this.h17_1 | 0;
      commitWrittenFailed(tmp_0, tmp$ret$1);
    }
    this.h17_1 = position;
    return true;
  }
  x1c(position) {
    if (position < 0 || position > this.h17_1) {
      var tmp = position - this.g17_1 | 0;
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var tmp$ret$0 = this.h17_1 - this.g17_1 | 0;
      discardFailed(tmp, tmp$ret$0);
    }
    if (!(this.g17_1 === position)) {
      this.g17_1 = position;
    }
  }
  y1c(count) {
    var newReadPosition = this.g17_1 - count | 0;
    if (newReadPosition < this.i17_1) {
      rewindFailed(count, this.g17_1 - this.i17_1 | 0);
    }
    this.g17_1 = newReadPosition;
  }
  z1c(startGap) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(startGap >= 0)) {
      // Inline function 'io.ktor.utils.io.core.Buffer.reserveStartGap.<anonymous>' call
      var message = "startGap shouldn't be negative: " + startGap;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    if (this.g17_1 >= startGap) {
      this.i17_1 = startGap;
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    if (this.g17_1 === this.h17_1) {
      if (startGap > this.j17_1) {
        startGapReservationFailedDueToLimit(this, startGap);
      }
      this.h17_1 = startGap;
      this.g17_1 = startGap;
      this.i17_1 = startGap;
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    startGapReservationFailed(this, startGap);
  }
  a1d(endGap) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(endGap >= 0)) {
      // Inline function 'io.ktor.utils.io.core.Buffer.reserveEndGap.<anonymous>' call
      var message = "endGap shouldn't be negative: " + endGap;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    var newLimit = this.k17_1 - endGap | 0;
    if (newLimit >= this.h17_1) {
      this.j17_1 = newLimit;
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    if (newLimit < 0) {
      endGapReservationFailedDueToCapacity(this, endGap);
    }
    if (newLimit < this.i17_1) {
      endGapReservationFailedDueToStartGap(this, endGap);
    }
    if (this.g17_1 === this.h17_1) {
      this.j17_1 = newLimit;
      this.g17_1 = newLimit;
      this.h17_1 = newLimit;
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    endGapReservationFailedDueToContent(this, endGap);
  }
  b1d() {
    this.i17_1 = 0;
    this.g17_1 = 0;
    var capacity = this.k17_1;
    this.h17_1 = capacity;
  }
  c1d() {
    this.d1d(this.k17_1 - this.i17_1 | 0);
  }
  d1d(limit) {
    var startGap = this.i17_1;
    this.g17_1 = startGap;
    this.h17_1 = startGap;
    this.j17_1 = limit;
  }
  e1d() {
    this.f1d(0);
    this.g1d();
  }
  g1d() {
    this.j17_1 = this.k17_1;
  }
  f1d(newReadPosition) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newReadPosition >= 0)) {
      // Inline function 'io.ktor.utils.io.core.Buffer.releaseStartGap.<anonymous>' call
      var message = "newReadPosition shouldn't be negative: " + newReadPosition;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newReadPosition <= this.g17_1)) {
      // Inline function 'io.ktor.utils.io.core.Buffer.releaseStartGap.<anonymous>' call
      var message_0 = "newReadPosition shouldn't be ahead of the read position: " + newReadPosition + ' > ' + this.g17_1;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
    }
    this.g17_1 = newReadPosition;
    if (this.i17_1 > newReadPosition) {
      this.i17_1 = newReadPosition;
    }
  }
  h1d(copy) {
    copy.j17_1 = this.j17_1;
    copy.i17_1 = this.i17_1;
    copy.g17_1 = this.g17_1;
    copy.h17_1 = this.h17_1;
  }
  i1d() {
    var readPosition = this.g17_1;
    if (readPosition === this.h17_1) {
      throw EOFException.m1d('No readable bytes available.');
    }
    this.g17_1 = readPosition + 1 | 0;
    // Inline function 'io.ktor.utils.io.bits.get' call
    // Inline function 'io.ktor.utils.io.bits.Memory.loadAt' call
    return this.f17_1.t1c_1.getInt8(readPosition);
  }
  n1d(value) {
    var writePosition = this.h17_1;
    if (writePosition === this.j17_1) {
      throw InsufficientSpaceException.q1d('No free space in the buffer to write a byte');
    }
    // Inline function 'io.ktor.utils.io.bits.set' call
    this.f17_1.t1c_1.setInt8(writePosition, value);
    this.h17_1 = writePosition + 1 | 0;
  }
  r1d() {
    this.e1d();
    this.c1d();
  }
  toString() {
    var tmp = 'Buffer[0x' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1h6jjoch8cjt8)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this), 16) + ']';
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    var tmp_0 = this.h17_1 - this.g17_1 | 0;
    // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
    var tmp_1 = this.j17_1 - this.h17_1 | 0;
    var tmp_2 = this.i17_1;
    // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
    return tmp + ('(' + tmp_0 + ' used, ' + tmp_1 + ' free, ' + (tmp_2 + (this.k17_1 - this.j17_1 | 0) | 0) + ' reserved of ' + this.k17_1 + ')');
  }
}
class InsufficientSpaceException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {
  static q1d(message) {
    message = message === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 'Not enough free space' : message;
    var $this = this.t4(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.p1d_1);
    return $this;
  }
  static s1d(name, size, availableSpace) {
    return this.q1d('Not enough free space to write ' + name + ' of ' + size + ' bytes, available ' + availableSpace + ' bytes.');
  }
}
class DefaultPool {
  constructor(capacity) {
    this.d1e_1 = capacity;
    var tmp = this;
    // Inline function 'kotlin.arrayOfNulls' call
    var size = this.d1e_1;
    tmp.e1e_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.fillArrayVali8eppxapiek4)(Array(size), null);
    this.f1e_1 = 0;
  }
  g1e(instance) {
  }
  x1e(instance) {
    return instance;
  }
  t1e(instance) {
  }
  z1e() {
    if (this.f1e_1 === 0)
      return this.z1d();
    this.f1e_1 = this.f1e_1 - 1 | 0;
    var idx = this.f1e_1;
    var tmp = this.e1e_1[idx];
    var instance = !(tmp == null) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    this.e1e_1[idx] = null;
    return this.x1e(instance);
  }
  a1f(instance) {
    this.t1e(instance);
    if (this.f1e_1 === this.d1e_1) {
      this.g1e(instance);
    } else {
      var tmp1 = this.f1e_1;
      this.f1e_1 = tmp1 + 1 | 0;
      this.e1e_1[tmp1] = instance;
    }
  }
}
class DefaultBufferPool extends DefaultPool {
  constructor(bufferSize, capacity, allocator) {
    bufferSize = bufferSize === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 4096 : bufferSize;
    capacity = capacity === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 1000 : capacity;
    allocator = allocator === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? DefaultAllocator_instance : allocator;
    super(capacity);
    this.x1d_1 = bufferSize;
    this.y1d_1 = allocator;
  }
  z1d() {
    return new ChunkBuffer(this.y1d_1.a1e(this.x1d_1), null, this);
  }
  b1e(instance) {
    this.y1d_1.c1e(instance.f17_1);
    super.g1e(instance);
    instance.r1e();
  }
  g1e(instance) {
    return this.b1e(instance instanceof ChunkBuffer ? instance : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  s1e(instance) {
    super.t1e(instance);
    // Inline function 'kotlin.check' call
    // Inline function 'io.ktor.utils.io.bits.Memory.size' call
    var this_0 = instance.f17_1;
    // Inline function 'kotlin.contracts.contract' call
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this_0.t1c_1.byteLength).equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.x1d_1))) {
      // Inline function 'io.ktor.utils.io.core.DefaultBufferPool.validateInstance.<anonymous>' call
      // Inline function 'io.ktor.utils.io.bits.Memory.size' call
      var this_1 = instance.f17_1;
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this_1.t1c_1.byteLength);
      var message = 'Buffer size mismatch. Expected: ' + this.x1d_1 + ', actual: ' + tmp$ret$1.toString();
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(instance === Companion_getInstance_2().v1a_1)) {
      // Inline function 'io.ktor.utils.io.core.DefaultBufferPool.validateInstance.<anonymous>' call
      var message_0 = "ChunkBuffer.Empty couldn't be recycled";
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(instance === Companion_instance.s1c())) {
      // Inline function 'io.ktor.utils.io.core.DefaultBufferPool.validateInstance.<anonymous>' call
      var message_1 = "Empty instance couldn't be recycled";
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_1));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(instance.u1e() === 0)) {
      // Inline function 'io.ktor.utils.io.core.DefaultBufferPool.validateInstance.<anonymous>' call
      var message_2 = 'Unable to clear buffer: it is still in use.';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_2));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(instance.v1e() == null)) {
      // Inline function 'io.ktor.utils.io.core.DefaultBufferPool.validateInstance.<anonymous>' call
      var message_3 = "Recycled instance shouldn't be a part of a chain.";
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_3));
    }
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(instance.q1e_1 == null)) {
      // Inline function 'io.ktor.utils.io.core.DefaultBufferPool.validateInstance.<anonymous>' call
      var message_4 = "Recycled instance shouldn't be a view or another buffer.";
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_4));
    }
  }
  t1e(instance) {
    return this.s1e(instance instanceof ChunkBuffer ? instance : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  w1e(instance) {
    // Inline function 'kotlin.apply' call
    var this_0 = super.x1e(instance);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.utils.io.core.DefaultBufferPool.clearInstance.<anonymous>' call
    this_0.y1e();
    this_0.r1d();
    return this_0;
  }
  x1e(instance) {
    return this.w1e(instance instanceof ChunkBuffer ? instance : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class Output {
  constructor(pool) {
    this.r14_1 = pool;
    this.s14_1 = null;
    this.t14_1 = null;
    this.u14_1 = Companion_getInstance_4().k1g_1;
    this.v14_1 = 0;
    this.w14_1 = 0;
    this.x14_1 = 0;
    this.y14_1 = 0;
  }
  d1f() {
    return this.y14_1 + (this.v14_1 - this.x14_1 | 0) | 0;
  }
  i1f() {
    var tmp0_elvis_lhs = this.s14_1;
    return tmp0_elvis_lhs == null ? Companion_getInstance_2().v1a_1 : tmp0_elvis_lhs;
  }
  ib() {
    flushChain(this);
  }
  z14() {
    var tmp0_elvis_lhs = this.s14_1;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return null;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var head = tmp;
    var tmp1_safe_receiver = this.t14_1;
    if (tmp1_safe_receiver == null)
      null;
    else
      tmp1_safe_receiver.w1c(this.v14_1);
    this.s14_1 = null;
    this.t14_1 = null;
    this.v14_1 = 0;
    this.w14_1 = 0;
    this.x14_1 = 0;
    this.y14_1 = 0;
    this.u14_1 = Companion_getInstance_4().k1g_1;
    return head;
  }
  j1f(buffer) {
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(buffer.v1e() == null)) {
      // Inline function 'io.ktor.utils.io.core.Output.appendSingleChunk.<anonymous>' call
      var message = 'It should be a single buffer chunk.';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    appendChainImpl(this, buffer, buffer, 0);
  }
  k1f(head) {
    var tail = findTail(head);
    // Inline function 'io.ktor.utils.io.core.internal.toIntOrFail' call
    // Inline function 'kotlin.Long.minus' call
    var this_0 = remainingAll(head);
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    var other = tail.h17_1 - tail.g17_1 | 0;
    var this_1 = this_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
    var name = 'total size increase';
    if (this_1.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(2147483647, 0)) >= 0) {
      failLongToIntConversion(this_1, name);
    }
    var chainedSizeDelta = this_1.u3();
    appendChainImpl(this, head, tail, chainedSizeDelta);
  }
  n1d(v) {
    var index = this.v14_1;
    if (index < this.w14_1) {
      this.v14_1 = index + 1 | 0;
      // Inline function 'io.ktor.utils.io.bits.set' call
      this.u14_1.t1c_1.setInt8(index, v);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    return writeByteFallback(this, v);
  }
  l1f() {
    try {
      this.ib();
    }finally {
      this.e1f();
    }
  }
  ma(value) {
    var tailPosition = this.v14_1;
    if ((this.w14_1 - tailPosition | 0) >= 3) {
      // Inline function 'io.ktor.utils.io.core.internal.putUtf8Char' call
      var this_0 = this.u14_1;
      // Inline function 'kotlin.code' call
      var v = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(value);
      var tmp;
      if (0 <= v ? v <= 127 : false) {
        // Inline function 'io.ktor.utils.io.bits.Memory.storeAt' call
        var value_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(v);
        this_0.t1c_1.setInt8(tailPosition, value_0);
        tmp = 1;
      } else if (128 <= v ? v <= 2047 : false) {
        // Inline function 'io.ktor.utils.io.bits.set' call
        var value_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(192 | v >> 6 & 31);
        this_0.t1c_1.setInt8(tailPosition, value_1);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index = tailPosition + 1 | 0;
        var value_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v & 63);
        this_0.t1c_1.setInt8(index, value_2);
        tmp = 2;
      } else if (2048 <= v ? v <= 65535 : false) {
        // Inline function 'io.ktor.utils.io.bits.set' call
        var value_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(224 | v >> 12 & 15);
        this_0.t1c_1.setInt8(tailPosition, value_3);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_0 = tailPosition + 1 | 0;
        var value_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v >> 6 & 63);
        this_0.t1c_1.setInt8(index_0, value_4);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_1 = tailPosition + 2 | 0;
        var value_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v & 63);
        this_0.t1c_1.setInt8(index_1, value_5);
        tmp = 3;
      } else if (65536 <= v ? v <= 1114111 : false) {
        // Inline function 'io.ktor.utils.io.bits.set' call
        var value_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(240 | v >> 18 & 7);
        this_0.t1c_1.setInt8(tailPosition, value_6);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_2 = tailPosition + 1 | 0;
        var value_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v >> 12 & 63);
        this_0.t1c_1.setInt8(index_2, value_7);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_3 = tailPosition + 2 | 0;
        var value_8 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v >> 6 & 63);
        this_0.t1c_1.setInt8(index_3, value_8);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_4 = tailPosition + 3 | 0;
        var value_9 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v & 63);
        this_0.t1c_1.setInt8(index_4, value_9);
        tmp = 4;
      } else {
        malformedCodePoint(v);
      }
      var size = tmp;
      this.v14_1 = tailPosition + size | 0;
      return this;
    }
    appendCharFallback(this, value);
    return this;
  }
  v(value) {
    if (value == null) {
      this.xf('null', 0, 4);
    } else {
      this.xf(value, 0, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(value));
    }
    return this;
  }
  xf(value, startIndex, endIndex) {
    if (value == null) {
      return this.xf('null', startIndex, endIndex);
    }
    writeText(this, value, startIndex, endIndex, Charsets_getInstance().l1g_1);
    return this;
  }
  t1b(packet) {
    var foreignStolen = packet.z14();
    if (foreignStolen == null) {
      packet.j15();
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    var tail = this.t14_1;
    if (tail == null) {
      this.k1f(foreignStolen);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    writePacketMerging(this, tail, foreignStolen, packet.o18_1);
  }
  a15(chunkBuffer) {
    var _tail = this.t14_1;
    if (_tail == null) {
      this.k1f(chunkBuffer);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    writePacketMerging(this, _tail, chunkBuffer, this.r14_1);
  }
  w18(p, n) {
    var remaining = n;
    $l$loop: while (remaining.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) > 0) {
      // Inline function 'io.ktor.utils.io.core.Input.headRemaining' call
      var tmp$ret$0 = p.s18_1 - p.r18_1 | 0;
      var headRemaining = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(tmp$ret$0);
      if (headRemaining.q1(remaining) <= 0) {
        remaining = remaining.e3(headRemaining);
        var tmp0_elvis_lhs = p.t1f();
        var tmp;
        if (tmp0_elvis_lhs == null) {
          throw EOFException.m1d('Unexpected end of packet');
        } else {
          tmp = tmp0_elvis_lhs;
        }
        this.j1f(tmp);
      } else {
        // Inline function 'io.ktor.utils.io.core.read' call
        // Inline function 'kotlin.contracts.contract' call
        var tmp0_elvis_lhs_0 = p.e1g(1);
        var tmp_0;
        if (tmp0_elvis_lhs_0 == null) {
          prematureEndOfStream(1);
        } else {
          tmp_0 = tmp0_elvis_lhs_0;
        }
        var buffer = tmp_0;
        var positionBefore = buffer.g17_1;
        try {
          // Inline function 'io.ktor.utils.io.core.Output.writePacket.<anonymous>' call
          writeFully_2(this, buffer, remaining.u3());
        }finally {
          var positionAfter = buffer.g17_1;
          if (positionAfter < positionBefore) {
            throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4("Buffer's position shouldn't be rewinded");
          }
          if (positionAfter === buffer.h17_1) {
            p.c1g(buffer);
          } else {
            p.r18_1 = positionAfter;
          }
        }
        break $l$loop;
      }
    }
  }
  j15() {
    this.l1f();
  }
  m1f(n) {
    // Inline function 'io.ktor.utils.io.core.Output.tailRemaining' call
    if ((this.w14_1 - this.v14_1 | 0) >= n) {
      var tmp0_safe_receiver = this.t14_1;
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        tmp0_safe_receiver.w1c(this.v14_1);
        return tmp0_safe_receiver;
      }
    }
    return appendNewChunk(this);
  }
  q1c() {
    var tmp0_safe_receiver = this.t14_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      this.v14_1 = tmp0_safe_receiver.h17_1;
    }
  }
  n1f() {
    var head = this.i1f();
    if (!(head === Companion_getInstance_2().v1a_1)) {
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(head.v1e() == null)) {
        // Inline function 'kotlin.check.<anonymous>' call
        var message = 'Check failed.';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      }
      head.c1d();
      head.a1d(8);
      this.v14_1 = head.h17_1;
      this.x14_1 = this.v14_1;
      this.w14_1 = head.j17_1;
    }
  }
}
class BytePacketBuilder extends Output {
  constructor(pool) {
    pool = pool === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Companion_getInstance_2().y1a() : pool;
    super(pool);
  }
  z() {
    return this.d1f();
  }
  q14() {
    return this.d1f() === 0;
  }
  e1f() {
  }
  f1f(source, offset, length) {
  }
  ma(value) {
    var tmp = super.ma(value);
    return tmp instanceof BytePacketBuilder ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  v(value) {
    var tmp = super.v(value);
    return tmp instanceof BytePacketBuilder ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  xf(value, startIndex, endIndex) {
    var tmp = super.xf(value, startIndex, endIndex);
    return tmp instanceof BytePacketBuilder ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  y18() {
    var size = this.z();
    var head = this.z14();
    return head == null ? Companion_getInstance_0().h1f_1 : ByteReadPacket.g1f(head, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(size), this.r14_1);
  }
  toString() {
    return 'BytePacketBuilder[0x' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this) + ']';
  }
}
class Companion_0 {
  constructor() {
    Companion_instance_0 = this;
    this.h1f_1 = ByteReadPacket.g1f(Companion_getInstance_2().v1a_1, new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0), Companion_getInstance_2().u1a_1);
  }
}
class Input {
  static o1f(head, remaining, pool) {
    head = head === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Companion_getInstance_2().v1a_1 : head;
    remaining = remaining === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? remainingAll(head) : remaining;
    pool = pool === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Companion_getInstance_2().y1a() : pool;
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createThis2j2avj17cvnv2)(this);
    $this.o18_1 = pool;
    $this.p18_1 = head;
    $this.q18_1 = head.f17_1;
    $this.r18_1 = head.g17_1;
    $this.s18_1 = head.h17_1;
    var tmp = $this;
    // Inline function 'kotlin.Long.minus' call
    var other = $this.s18_1 - $this.r18_1 | 0;
    tmp.t18_1 = remaining.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
    $this.u18_1 = false;
    return $this;
  }
  i1a() {
    var tmp;
    var tmp_0;
    // Inline function 'io.ktor.utils.io.core.Input.headRemaining' call
    if ((this.s18_1 - this.r18_1 | 0) === 0) {
      tmp_0 = this.t18_1.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
    } else {
      tmp_0 = false;
    }
    if (tmp_0) {
      tmp = this.u18_1 || doFill(this) == null;
    } else {
      tmp = false;
    }
    return tmp;
  }
  i1f() {
    // Inline function 'kotlin.also' call
    var this_0 = this.p18_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.utils.io.core.Input.<get-head>.<anonymous>' call
    this_0.x1c(this.r18_1);
    return this_0;
  }
  s1f(newValue) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(newValue.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) >= 0)) {
      // Inline function 'io.ktor.utils.io.core.Input.<set-tailRemaining>.<anonymous>' call
      var message = "tailRemaining shouldn't be negative: " + newValue.toString();
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    this.t18_1 = newValue;
  }
  v18() {
    // Inline function 'io.ktor.utils.io.core.Input.headRemaining' call
    var tmp$ret$0 = this.s18_1 - this.r18_1 | 0;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(tmp$ret$0).d3(this.t18_1);
  }
  l19() {
    return !(this.r18_1 === this.s18_1) || !this.t18_1.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
  }
  j15() {
    var head = this.i1f();
    var empty = Companion_getInstance_2().v1a_1;
    if (!(head === empty)) {
      _set__head__b4pap2(this, empty);
      this.s1f(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
      releaseAll(head, this.o18_1);
    }
  }
  z14() {
    var head = this.i1f();
    var empty = Companion_getInstance_2().v1a_1;
    if (head === empty)
      return null;
    _set__head__b4pap2(this, empty);
    this.s1f(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
    return head;
  }
  t1f() {
    var head = this.i1f();
    var next = head.v1e();
    var empty = Companion_getInstance_2().v1a_1;
    if (head === empty)
      return null;
    if (next == null) {
      _set__head__b4pap2(this, empty);
      this.s1f(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
    } else {
      _set__head__b4pap2(this, next);
      // Inline function 'kotlin.Long.minus' call
      var this_0 = this.t18_1;
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var other = next.h17_1 - next.g17_1 | 0;
      var tmp$ret$1 = this_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
      this.s1f(tmp$ret$1);
    }
    head.j1g(null);
    return head;
  }
  u1f(chain) {
    if (chain === Companion_getInstance_2().v1a_1)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    var size = remainingAll(chain);
    if (this.p18_1 === Companion_getInstance_2().v1a_1) {
      _set__head__b4pap2(this, chain);
      // Inline function 'kotlin.Long.minus' call
      // Inline function 'io.ktor.utils.io.core.Input.headRemaining' call
      var other = this.s18_1 - this.r18_1 | 0;
      var tmp$ret$1 = size.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
      this.s1f(tmp$ret$1);
    } else {
      findTail(this.p18_1).j1g(chain);
      this.s1f(this.t18_1.d3(size));
    }
  }
  v1f(chain) {
    var tail = findTail(this.i1f());
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    var size = chain.h17_1 - chain.g17_1 | 0;
    var tmp;
    if (size === 0) {
      tmp = true;
    } else {
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      tmp = (tail.j17_1 - tail.h17_1 | 0) < size;
    }
    if (tmp)
      return false;
    writeBufferAppend(tail, chain, size);
    if (this.i1f() === tail) {
      this.s18_1 = tail.h17_1;
    } else {
      // Inline function 'kotlin.Long.plus' call
      var tmp$ret$2 = this.t18_1.d3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(size));
      this.s1f(tmp$ret$2);
    }
    return true;
  }
  w1f(n) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(n >= 0)) {
      // Inline function 'io.ktor.utils.io.core.Input.discard.<anonymous>' call
      var message = 'Negative discard is not allowed: ' + n;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return discardAsMuchAsPossible_0(this, n, 0);
  }
  u1c(n) {
    if (!(this.w1f(n) === n))
      throw EOFException.m1d('Unable to discard ' + n + ' bytes due to end of packet');
  }
  x1f(n) {
    if (n.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) <= 0)
      return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0);
    return discardAsMuchAsPossible(this, n, new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
  }
  y1f(min, max) {
    if (min === 0 && (max === 0 || this.i1a()))
      return '';
    var remaining = this.v18();
    if (remaining.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) > 0 && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(max).q1(remaining) >= 0)
      return readTextExactBytes(this, remaining.u3());
    // Inline function 'kotlin.text.buildString' call
    var capacity = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtMost322komnqp70ag)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(min, 16), max);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'kotlin.apply' call
    var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(capacity);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.utils.io.core.Input.readText.<anonymous>' call
    readASCII(this, this_0, min, max);
    return this_0.toString();
  }
  z1f(min, max, $super) {
    min = min === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : min;
    max = max === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 2147483647 : max;
    return $super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? this.y1f(min, max) : $super.y1f.call(this, min, max);
  }
  a1g(minSize) {
    return prepareReadLoop(this, minSize, this.i1f());
  }
  b1g(current) {
    return this.c1g(current);
  }
  c1g(current) {
    return ensureNext(this, current, Companion_getInstance_2().v1a_1);
  }
  d1g(current) {
    var tmp0_elvis_lhs = current.v1e();
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return fixGapAfterReadFallback(this, current);
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var next = tmp;
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    var remaining = current.h17_1 - current.g17_1 | 0;
    // Inline function 'kotlin.comparisons.minOf' call
    // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
    var b = 8 - (current.k17_1 - current.j17_1 | 0) | 0;
    var overrunSize = Math.min(remaining, b);
    if (next.i17_1 < overrunSize) {
      return fixGapAfterReadFallback(this, current);
    }
    restoreStartGap(next, overrunSize);
    if (remaining > overrunSize) {
      current.g1d();
      this.s18_1 = current.h17_1;
      // Inline function 'kotlin.Long.plus' call
      var tmp$ret$3 = this.t18_1.d3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(overrunSize));
      this.s1f(tmp$ret$3);
    } else {
      _set__head__b4pap2(this, next);
      // Inline function 'kotlin.Long.minus' call
      var this_0 = this.t18_1;
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var other = (next.h17_1 - next.g17_1 | 0) - overrunSize | 0;
      var tmp$ret$5 = this_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
      this.s1f(tmp$ret$5);
      current.b1f();
      current.c1f(this.o18_1);
    }
  }
  q1f() {
    var buffer = this.o18_1.z1e();
    try {
      buffer.a1d(8);
      var tmp = buffer.h17_1;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var tmp$ret$0 = buffer.j17_1 - buffer.h17_1 | 0;
      var copied = this.r1f(buffer.f17_1, tmp, tmp$ret$0);
      if (copied === 0) {
        this.u18_1 = true;
        // Inline function 'io.ktor.utils.io.core.canRead' call
        if (!(buffer.h17_1 > buffer.g17_1)) {
          buffer.c1f(this.o18_1);
          return null;
        }
      }
      buffer.v1c(copied);
      return buffer;
    } catch ($p) {
      if ($p instanceof Error) {
        var t = $p;
        buffer.c1f(this.o18_1);
        throw t;
      } else {
        throw $p;
      }
    }
  }
  p1f() {
    if (!this.u18_1) {
      this.u18_1 = true;
    }
  }
  e1g(minSize) {
    var head = this.i1f();
    if ((this.s18_1 - this.r18_1 | 0) >= minSize)
      return head;
    return prepareReadLoop(this, minSize, head);
  }
  f1g(head) {
    var tmp0_elvis_lhs = head.b1f();
    var next = tmp0_elvis_lhs == null ? Companion_getInstance_2().v1a_1 : tmp0_elvis_lhs;
    _set__head__b4pap2(this, next);
    // Inline function 'kotlin.Long.minus' call
    var this_0 = this.t18_1;
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    var other = next.h17_1 - next.g17_1 | 0;
    var tmp$ret$1 = this_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
    this.s1f(tmp$ret$1);
    head.c1f(this.o18_1);
    return next;
  }
}
class ByteReadPacket extends Input {
  static g1f(head, remaining, pool) {
    Companion_getInstance_0();
    var $this = this.o1f(head, remaining, pool);
    $this.p1f();
    return $this;
  }
  static g1b(head, pool) {
    Companion_getInstance_0();
    return this.g1f(head, remainingAll(head), pool);
  }
  q1f() {
    return null;
  }
  r1f(destination, offset, length) {
    return 0;
  }
  toString() {
    return 'ByteReadPacket[' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this) + ']';
  }
}
class Companion_1 {}
class ChunkBuffer$Companion$EmptyPool$1 {
  z1e() {
    return Companion_getInstance_2().v1a_1;
  }
  q1g(instance) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(instance === Companion_getInstance_2().v1a_1)) {
      // Inline function 'io.ktor.utils.io.core.internal.<no name provided>.recycle.<anonymous>' call
      var message = 'Only ChunkBuffer.Empty instance could be recycled.';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
  }
  a1f(instance) {
    return this.q1g(instance instanceof ChunkBuffer ? instance : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class NoPoolImpl {
  a1f(instance) {
  }
}
class ChunkBuffer$Companion$NoPool$1 extends NoPoolImpl {
  z1e() {
    return new ChunkBuffer(DefaultAllocator_instance.a1e(4096), null, this);
  }
  q1g(instance) {
    DefaultAllocator_instance.c1e(instance.f17_1);
  }
  a1f(instance) {
    return this.q1g(instance instanceof ChunkBuffer ? instance : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class ChunkBuffer$Companion$NoPoolManuallyManaged$1 extends NoPoolImpl {
  z1e() {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.UnsupportedOperationException2tkumpmhredt3.x8("This pool doesn't support borrow");
  }
  q1g(instance) {
  }
  a1f(instance) {
    return this.q1g(instance instanceof ChunkBuffer ? instance : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
}
class Companion_2 {
  constructor() {
    Companion_instance_2 = this;
    var tmp = this;
    tmp.u1a_1 = new ChunkBuffer$Companion$EmptyPool$1();
    this.v1a_1 = new ChunkBuffer(Companion_getInstance_4().k1g_1, null, this.u1a_1);
    var tmp_0 = this;
    tmp_0.w1a_1 = new ChunkBuffer$Companion$NoPool$1();
    var tmp_1 = this;
    tmp_1.x1a_1 = new ChunkBuffer$Companion$NoPoolManuallyManaged$1();
  }
  y1a() {
    return get_DefaultChunkedBufferPool();
  }
}
class ChunkBuffer extends Buffer {
  constructor(memory, origin, parentPool) {
    Companion_getInstance_2();
    super(memory);
    this.n1e_1 = parentPool;
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!!(origin === this)) {
      // Inline function 'io.ktor.utils.io.core.internal.ChunkBuffer.<anonymous>' call
      var message = "A chunk couldn't be a view of itself.";
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    this.o1e_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(null);
    this.p1e_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$int$11d5swdyn6j0pu)(1);
    this.q1e_1 = origin;
  }
  j1g(newValue) {
    if (newValue == null) {
      this.b1f();
    } else {
      appendNext(this, newValue);
    }
  }
  v1e() {
    return this.o1e_1.kotlinx$atomicfu$value;
  }
  u1e() {
    return this.p1e_1.kotlinx$atomicfu$value;
  }
  b1f() {
    return this.o1e_1.atomicfu$getAndSet(null);
  }
  r1g() {
    // Inline function 'kotlin.let' call
    var tmp0_elvis_lhs = this.q1e_1;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.utils.io.core.internal.ChunkBuffer.duplicate.<anonymous>' call
    var newOrigin = tmp0_elvis_lhs == null ? this : tmp0_elvis_lhs;
    newOrigin.s1g();
    // Inline function 'kotlin.also' call
    var this_0 = new ChunkBuffer(this.f17_1, newOrigin, this.n1e_1);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.utils.io.core.internal.ChunkBuffer.duplicate.<anonymous>.<anonymous>' call
    this.h1d(this_0);
    return this_0;
  }
  c1f(pool) {
    if (this.t1g()) {
      var origin = this.q1e_1;
      if (!(origin == null)) {
        this.r1e();
        origin.c1f(pool);
      } else {
        var tmp0_elvis_lhs = this.n1e_1;
        var poolToUse = tmp0_elvis_lhs == null ? pool : tmp0_elvis_lhs;
        poolToUse.a1f(this);
      }
    }
  }
  r1e() {
    if (!this.p1e_1.atomicfu$compareAndSet(0, -1)) {
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('Unable to unlink: buffer is in use.');
    }
    this.b1f();
    this.q1e_1 = null;
  }
  s1g() {
    $l$block: {
      // Inline function 'kotlinx.atomicfu.update' call
      var this_0 = this.p1e_1;
      while (true) {
        var cur = this_0.kotlinx$atomicfu$value;
        // Inline function 'io.ktor.utils.io.core.internal.ChunkBuffer.acquire.<anonymous>' call
        if (cur <= 0)
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('Unable to acquire chunk: it is already released.');
        var upd = cur + 1 | 0;
        if (this_0.atomicfu$compareAndSet(cur, upd)) {
          break $l$block;
        }
      }
    }
  }
  y1e() {
    $l$block: {
      // Inline function 'kotlinx.atomicfu.update' call
      var this_0 = this.p1e_1;
      while (true) {
        var cur = this_0.kotlinx$atomicfu$value;
        // Inline function 'io.ktor.utils.io.core.internal.ChunkBuffer.unpark.<anonymous>' call
        if (cur < 0) {
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4("This instance is already disposed and couldn't be borrowed.");
        }
        if (cur > 0) {
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('This instance is already in use but somehow appeared in the pool.');
        }
        var upd = 1;
        if (this_0.atomicfu$compareAndSet(cur, upd)) {
          break $l$block;
        }
      }
    }
  }
  t1g() {
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlinx.atomicfu.updateAndGet' call
      var this_0 = this.p1e_1;
      while (true) {
        var cur = this_0.kotlinx$atomicfu$value;
        // Inline function 'io.ktor.utils.io.core.internal.ChunkBuffer.release.<anonymous>' call
        if (cur <= 0)
          throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('Unable to release: it is already released.');
        var upd = cur - 1 | 0;
        if (this_0.atomicfu$compareAndSet(cur, upd)) {
          tmp$ret$1 = upd;
          break $l$block;
        }
      }
    }
    return tmp$ret$1 === 0;
  }
  r1d() {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(this.q1e_1 == null)) {
      // Inline function 'io.ktor.utils.io.core.internal.ChunkBuffer.reset.<anonymous>' call
      var message = 'Unable to reset buffer with origin';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    super.r1d();
    this.o1e_1.kotlinx$atomicfu$value = null;
  }
}
class MalformedUTF8InputException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {
  static i1g(message) {
    var $this = this.t4(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.h1g_1);
    return $this;
  }
}
class $sleepCOROUTINE$52 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, sleepCondition, resultContinuation) {
    super(resultContinuation);
    this.o1h_1 = _this__u8e3s4;
    this.p1h_1 = sleepCondition;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.lb_1 = 1;
            suspendResult = trySuspend(this.o1h_1, this.p1h_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            if (suspendResult) {
              return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
            } else {
              this.lb_1 = 2;
              continue $sm;
            }

          case 2:
            this.o1h_1.h14();
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $trySuspendCOROUTINE$53 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, sleepCondition, resultContinuation) {
    super(resultContinuation);
    this.c1h_1 = _this__u8e3s4;
    this.d1h_1 = sleepCondition;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.e1h_1 = false;
            this.f1h_1 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Job13y4jkazwjho0)();
            if (this.c1h_1.g14_1.atomicfu$compareAndSet(null, this.f1h_1) && this.d1h_1()) {
              this.e1h_1 = true;
              this.lb_1 = 1;
              suspendResult = this.f1h_1.ks(this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.lb_1 = 2;
              continue $sm;
            }

          case 1:
            this.lb_1 = 2;
            continue $sm;
          case 2:
            return this.e1h_1;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class AwaitingSlot {
  constructor() {
    this.g14_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_1__.atomic$ref$130aurmcwdfdf1)(null);
  }
  j16(sleepCondition, $completion) {
    var tmp = new $sleepCOROUTINE$52(this, sleepCondition, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  h14() {
    var tmp0_safe_receiver = this.g14_1.atomicfu$getAndSet(null);
    if (tmp0_safe_receiver == null)
      null;
    else
      tmp0_safe_receiver.is();
  }
  r1b(cause) {
    var tmp0_elvis_lhs = this.g14_1.atomicfu$getAndSet(null);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var continuation = tmp;
    if (!(cause == null)) {
      continuation.js(cause);
    } else {
      continuation.is();
    }
  }
}
class $copyToSequentialImplCOROUTINE$54 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, dst, limit, resultContinuation) {
    super(resultContinuation);
    this.y1h_1 = _this__u8e3s4;
    this.z1h_1 = dst;
    this.a1i_1 = limit;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 10;
            if (!!(this.y1h_1 === this.z1h_1)) {
              var message = 'Failed requirement.';
              throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
            }

            if (!(this.y1h_1.b15() == null)) {
              this.z1h_1.q1b(this.y1h_1.b15());
              return new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0);
            }

            this.b1i_1 = this.a1i_1;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            if (!(this.b1i_1.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) > 0)) {
              this.lb_1 = 9;
              continue $sm;
            }

            this.lb_1 = 2;
            suspendResult = this.y1h_1.p1b(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.c1i_1 = suspendResult;
            if (!this.c1i_1) {
              this.lb_1 = 9;
              continue $sm;
            } else {
              this.lb_1 = 3;
              continue $sm;
            }

          case 3:
            this.d1i_1 = this.y1h_1.s1b(this.z1h_1, this.b1i_1);
            if (this.d1i_1.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0))) {
              this.lb_1 = 6;
              suspendResult = copyToTail(this.y1h_1, this.z1h_1, this.b1i_1, this);
              if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              if (this.z1h_1.x15() === 0) {
                this.lb_1 = 4;
                suspendResult = this.z1h_1.e17(1, this);
                if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.lb_1 = 5;
                continue $sm;
              }
            }

          case 4:
            this.lb_1 = 5;
            continue $sm;
          case 5:
            this.e1i_1 = this.d1i_1;
            this.lb_1 = 8;
            continue $sm;
          case 6:
            var tail = suspendResult;
            if (tail.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0))) {
              this.lb_1 = 9;
              continue $sm;
            } else {
              this.lb_1 = 7;
              continue $sm;
            }

          case 7:
            this.e1i_1 = tail;
            this.lb_1 = 8;
            continue $sm;
          case 8:
            var copied = this.e1i_1;
            this.b1i_1 = this.b1i_1.e3(copied);
            if (copied.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)) > 0) {
              this.z1h_1.ib();
            }

            this.lb_1 = 1;
            continue $sm;
          case 9:
            return this.a1i_1.e3(this.b1i_1);
          case 10:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 10) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $copyToTailCOROUTINE$55 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, dst, limit, resultContinuation) {
    super(resultContinuation);
    this.n1i_1 = _this__u8e3s4;
    this.o1i_1 = dst;
    this.p1i_1 = limit;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 9;
            this.q1i_1 = Companion_getInstance_2().y1a().z1e();
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.lb_1 = 2;
            continue $sm;
          case 2:
            this.mb_1 = 8;
            this.q1i_1.d1d((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtMostmgknbongtqt)(this.p1i_1, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.q1i_1.k17_1)).u3());
            this.lb_1 = 3;
            suspendResult = this.n1i_1.m1b(this.q1i_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            this.s1i_1 = suspendResult;
            if (this.s1i_1 === -1) {
              this.q1i_1.c1f(Companion_getInstance_2().y1a());
              this.r1i_1 = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0);
              this.mb_1 = 9;
              this.lb_1 = 6;
              continue $sm;
            } else {
              this.lb_1 = 4;
              continue $sm;
            }

          case 4:
            this.lb_1 = 5;
            suspendResult = this.o1i_1.i1b(this.q1i_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 5:
            this.r1i_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.s1i_1);
            this.mb_1 = 9;
            this.lb_1 = 6;
            var tmp_0 = this;
            continue $sm;
          case 6:
            var tmp_1 = this.r1i_1;
            this.mb_1 = 9;
            this.q1i_1.c1f(Companion_getInstance_2().y1a());
            return tmp_1;
          case 7:
            this.mb_1 = 9;
            this.q1i_1.c1f(Companion_getInstance_2().y1a());
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 8:
            this.mb_1 = 9;
            var t = this.ob_1;
            this.q1i_1.c1f(Companion_getInstance_2().y1a());
            throw t;
          case 9:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 9) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class ByteArrayPool$1 extends DefaultPool {
  constructor() {
    super(128);
  }
  z1d() {
    return new Int8Array(4096);
  }
}
class ByteChannelJS extends ByteChannelSequentialBase {
  constructor(initial, autoFlush) {
    super(initial, autoFlush);
    this.l1j_1 = null;
  }
  u1b(job) {
    var tmp0_safe_receiver = this.l1j_1;
    if (tmp0_safe_receiver == null)
      null;
    else {
      tmp0_safe_receiver.po();
    }
    this.l1j_1 = job;
    job.ko(true, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, ByteChannelJS$attachJob$lambda(this));
  }
  toString() {
    return 'ByteChannel[' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.l1j_1) + ', ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this) + ']';
  }
}
class Companion_3 {
  constructor() {
    Companion_instance_3 = this;
    var tmp = this;
    tmp.w1i_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.lazy2hsh8ze7j6ikd)(ByteReadChannel$Companion$Empty$delegate$lambda);
  }
  s1c() {
    // Inline function 'kotlin.getValue' call
    var this_0 = this.w1i_1;
    Empty$factory();
    return this_0.l1();
  }
}
class DefaultAllocator {
  a1e(size) {
    return new Memory(new DataView(new ArrayBuffer(size)));
  }
  c1e(instance) {
  }
}
class Companion_4 {
  constructor() {
    Companion_instance_4 = this;
    this.k1g_1 = new Memory(new DataView(new ArrayBuffer(0)));
  }
}
class Memory {
  constructor(view) {
    Companion_getInstance_4();
    this.t1c_1 = view;
  }
  m1j(offset, length) {
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(offset >= 0)) {
      // Inline function 'io.ktor.utils.io.bits.Memory.slice.<anonymous>' call
      var message = "offset shouldn't be negative: " + offset;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!(length >= 0)) {
      // Inline function 'io.ktor.utils.io.bits.Memory.slice.<anonymous>' call
      var message_0 = "length shouldn't be negative: " + length;
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
    }
    var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(offset + length | 0);
    // Inline function 'io.ktor.utils.io.bits.Memory.size' call
    var tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.t1c_1.byteLength);
    if (tmp.q1(tmp$ret$2) > 0) {
      // Inline function 'io.ktor.utils.io.bits.Memory.size' call
      var tmp$ret$3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(this.t1c_1.byteLength);
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexOutOfBoundsException1qfr429iumro0.md('offset + length > size: ' + offset + ' + ' + length + ' > ' + tmp$ret$3.toString());
    }
    return new Memory(new DataView(this.t1c_1.buffer, this.t1c_1.byteOffset + offset | 0, length));
  }
  t1d(destination, offset, length, destinationOffset) {
    var src = new Int8Array(this.t1c_1.buffer, this.t1c_1.byteOffset + offset | 0, length);
    var dst = new Int8Array(destination.t1c_1.buffer, destination.t1c_1.byteOffset + destinationOffset | 0, length);
    dst.set(src);
  }
}
class Companion_5 {
  n1j(name) {
    switch (name) {
      case 'UTF-8':
      case 'utf-8':
      case 'UTF8':
      case 'utf8':
        return Charsets_getInstance().l1g_1;
    }
    var tmp;
    var tmp_0;
    var tmp_1;
    switch (name) {
      case 'ISO-8859-1':
      case 'iso-8859-1':
        tmp_1 = true;
        break;
      default:
        // Inline function 'kotlin.let' call

        // Inline function 'kotlin.contracts.contract' call

        // Inline function 'io.ktor.utils.io.charsets.Companion.forName.<anonymous>' call

        var it = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.replaceqbix900hl8kl)(name, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(95), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(45));
        var tmp_2;
        if (it === 'iso-8859-1') {
          tmp_2 = true;
        } else {
          // Inline function 'kotlin.text.lowercase' call
          // Inline function 'kotlin.js.asDynamic' call
          tmp_2 = it.toLowerCase() === 'iso-8859-1';
        }

        tmp_1 = tmp_2;
        break;
    }
    if (tmp_1) {
      tmp_0 = true;
    } else {
      tmp_0 = name === 'latin1';
    }
    if (tmp_0) {
      tmp = true;
    } else {
      tmp = name === 'Latin1';
    }
    if (tmp) {
      return Charsets_getInstance().m1g_1;
    }
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Charset ' + name + ' is not supported');
  }
  o1j(charset) {
    var tmp;
    switch (charset) {
      case 'UTF-8':
      case 'utf-8':
      case 'UTF8':
      case 'utf8':
        tmp = true;
        break;
      default:
        var tmp_0;
        var tmp_1;
        switch (charset) {
          case 'ISO-8859-1':
          case 'iso-8859-1':
            tmp_1 = true;
            break;
          default:
            // Inline function 'kotlin.let' call

            // Inline function 'kotlin.contracts.contract' call

            // Inline function 'io.ktor.utils.io.charsets.Companion.isSupported.<anonymous>' call

            var it = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.replaceqbix900hl8kl)(charset, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(95), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(45));
            var tmp_2;
            if (it === 'iso-8859-1') {
              tmp_2 = true;
            } else {
              // Inline function 'kotlin.text.lowercase' call
              // Inline function 'kotlin.js.asDynamic' call
              tmp_2 = it.toLowerCase() === 'iso-8859-1';
            }

            tmp_1 = tmp_2;
            break;
        }

        if (tmp_1) {
          tmp_0 = true;
        } else {
          tmp_0 = charset === 'latin1';
        }

        if (tmp_0) {
          tmp = true;
        } else {
          tmp = false;
        }

        break;
    }
    return tmp;
  }
}
class Charset {
  constructor(_name) {
    this.n1g_1 = _name;
  }
  equals(other) {
    if (this === other)
      return true;
    if (other == null || !(this.constructor == other.constructor))
      return false;
    if (!(other instanceof Charset))
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.n1g_1 === other.n1g_1))
      return false;
    return true;
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.n1g_1);
  }
  toString() {
    return this.n1g_1;
  }
}
class Charsets {
  constructor() {
    Charsets_instance = this;
    this.l1g_1 = new CharsetImpl('UTF-8');
    this.m1g_1 = new CharsetImpl('ISO-8859-1');
  }
}
class MalformedInputException extends Error {
  static q1j(message) {
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createThis2j2avj17cvnv2)(this);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setPropertiesToThrowableInstance1w2jjvl9y77yc)($this, message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.p1j_1);
    return $this;
  }
}
class CharsetDecoder {
  constructor(_charset) {
    this.r1j_1 = _charset;
  }
}
class CharsetEncoder {
  constructor(_charset) {
    this.s1j_1 = _charset;
  }
}
class CharsetImpl extends Charset {
  constructor(name) {
    super(name);
    this.u1j_1 = name;
  }
  p1g() {
    return new CharsetEncoderImpl(this);
  }
  o1g() {
    return new CharsetDecoderImpl(this);
  }
  toString() {
    return 'CharsetImpl(name=' + this.u1j_1 + ')';
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.u1j_1);
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetImpl))
      return false;
    var tmp0_other_with_cast = other instanceof CharsetImpl ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.u1j_1 === tmp0_other_with_cast.u1j_1))
      return false;
    return true;
  }
}
class CharsetEncoderImpl extends CharsetEncoder {
  constructor(charset) {
    super(charset);
    this.w1j_1 = charset;
  }
  toString() {
    return 'CharsetEncoderImpl(charset=' + this.w1j_1.toString() + ')';
  }
  hashCode() {
    return this.w1j_1.hashCode();
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetEncoderImpl))
      return false;
    var tmp0_other_with_cast = other instanceof CharsetEncoderImpl ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!this.w1j_1.equals(tmp0_other_with_cast.w1j_1))
      return false;
    return true;
  }
}
class CharsetDecoderImpl extends CharsetDecoder {
  constructor(charset) {
    super(charset);
    this.y1j_1 = charset;
  }
  toString() {
    return 'CharsetDecoderImpl(charset=' + this.y1j_1.toString() + ')';
  }
  hashCode() {
    return this.y1j_1.hashCode();
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof CharsetDecoderImpl))
      return false;
    var tmp0_other_with_cast = other instanceof CharsetDecoderImpl ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!this.y1j_1.equals(tmp0_other_with_cast.y1j_1))
      return false;
    return true;
  }
}
class DecodeBufferResult {
  constructor(charactersDecoded, bytesConsumed) {
    this.b1k_1 = charactersDecoded;
    this.c1k_1 = bytesConsumed;
  }
  toString() {
    return 'DecodeBufferResult(charactersDecoded=' + this.b1k_1 + ', bytesConsumed=' + this.c1k_1 + ')';
  }
  hashCode() {
    var result = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.b1k_1);
    result = imul(result, 31) + this.c1k_1 | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof DecodeBufferResult))
      return false;
    var tmp0_other_with_cast = other instanceof DecodeBufferResult ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.b1k_1 === tmp0_other_with_cast.b1k_1))
      return false;
    if (!(this.c1k_1 === tmp0_other_with_cast.c1k_1))
      return false;
    return true;
  }
}
class IOException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {
  static h1k(message, cause) {
    var $this = this.dd(message, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.f1k_1);
    return $this;
  }
  static g1k(message) {
    return this.h1k(message, null);
  }
}
class EOFException extends IOException {
  static m1d(message) {
    var $this = this.g1k(message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.l1d_1);
    return $this;
  }
}
class toKtor$1 {
  constructor($this_toKtor) {
    this.i1k_1 = $this_toKtor;
  }
  a1k() {
    return this.i1k_1.decode();
  }
  d1k(buffer) {
    return this.i1k_1.decode(buffer);
  }
  z1j(buffer, options) {
    return this.i1k_1.decode(buffer, options);
  }
}
class TextDecoderFallback {
  constructor(encoding, fatal) {
    this.j1k_1 = fatal;
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.text.trim' call
    // Inline function 'kotlin.js.asDynamic' call
    var requestedEncoding = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.trim11nh7r46at6sx)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isCharSequence1ju9jr1w86plq)(encoding) ? encoding : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)())).toLowerCase();
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!get_ENCODING_ALIASES().h2(requestedEncoding)) {
      // Inline function 'io.ktor.utils.io.js.TextDecoderFallback.<anonymous>' call
      var message = encoding + ' is not supported.';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
  }
  a1k() {
    return '';
  }
  d1k(buffer) {
    var tmp$ret$3;
    $l$block: {
      // Inline function 'io.ktor.utils.io.core.buildPacket' call
      // Inline function 'kotlin.contracts.contract' call
      var builder = new BytePacketBuilder();
      try {
        // Inline function 'io.ktor.utils.io.js.TextDecoderFallback.decode.<anonymous>' call
        var bytes = buffer instanceof Int8Array ? buffer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
        var inductionVariable = 0;
        var last = bytes.length;
        if (inductionVariable < last)
          $l$loop: do {
            var index = inductionVariable;
            inductionVariable = inductionVariable + 1 | 0;
            // Inline function 'org.khronos.webgl.get' call
            // Inline function 'kotlin.js.asDynamic' call
            var byte = bytes[index];
            var point = toCodePoint(byte);
            if (point < 0) {
              // Inline function 'kotlin.check' call
              // Inline function 'kotlin.contracts.contract' call
              if (!!this.j1k_1) {
                // Inline function 'io.ktor.utils.io.js.TextDecoderFallback.decode.<anonymous>.<anonymous>' call
                var message = 'Invalid character: ' + point;
                throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
              }
              writeFully_3(builder, get_REPLACEMENT());
              continue $l$loop;
            }
            if (point > 255) {
              builder.n1d((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(point >> 8));
            }
            builder.n1d((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(point & 255));
          }
           while (inductionVariable < last);
        tmp$ret$3 = builder.y18();
        break $l$block;
      } catch ($p) {
        if ($p instanceof Error) {
          var t = $p;
          builder.j15();
          throw t;
        } else {
          throw $p;
        }
      }
    }
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeToString1x4faah2liw2p)(readBytes(tmp$ret$3));
  }
  z1j(buffer, options) {
    return this.d1k(buffer);
  }
}
//endregion
function ByteReadChannel_0(content) {
  return ByteReadChannel_1(content, 0, content.length);
}
function _get_isCancelled__nhbn6y($this) {
  var tmp0_safe_receiver = $this.x13_1.kotlinx$atomicfu$value;
  return !((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f14_1) == null);
}
function flushImpl($this) {
  if ($this.y13_1.q14()) {
    $this.c14_1.h14();
    return false;
  }
  flushWrittenBytes($this);
  $this.c14_1.h14();
  return true;
}
function flushWrittenBytes($this) {
  // Inline function 'kotlinx.atomicfu.locks.synchronized' call
  $this.d14_1;
  // Inline function 'io.ktor.utils.io.ByteChannelSequentialBase.flushWrittenBytes.<anonymous>' call
  var size = $this.y13_1.z();
  var buffer = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)($this.y13_1.z14());
  $this.e14_1.a15(buffer);
  $this.v13_1.atomicfu$addAndGet(size);
}
function ensureNotClosed($this) {
  if ($this.i15()) {
    var tmp0_elvis_lhs = $this.b15();
    throw tmp0_elvis_lhs == null ? ClosedWriteChannelException.h15('Channel ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)($this) + ' is already closed') : tmp0_elvis_lhs;
  }
}
function ensureNotFailed($this) {
  var tmp0_safe_receiver = $this.b15();
  if (tmp0_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    throw tmp0_safe_receiver;
  }
}
function ensureNotFailed_0($this, closeable) {
  var tmp0_safe_receiver = $this.b15();
  if (tmp0_safe_receiver == null)
    null;
  else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    closeable.j15();
    throw tmp0_safe_receiver;
  }
}
function readRemainingSuspend($this, builder, limit, $completion) {
  var tmp = new $readRemainingSuspendCOROUTINE$27($this, builder, limit, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function addBytesRead($this, count) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(count >= 0)) {
    // Inline function 'io.ktor.utils.io.ByteChannelSequentialBase.addBytesRead.<anonymous>' call
    var message = "Can't read negative amount of bytes: " + count;
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  // Inline function 'kotlinx.atomicfu.AtomicInt.minusAssign' call
  $this.w13_1.atomicfu$getAndAdd(-count | 0);
  $this.t13_1.atomicfu$addAndGet$long((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(count));
  // Inline function 'kotlinx.atomicfu.AtomicInt.minusAssign' call
  $this.v13_1.atomicfu$getAndAdd(-count | 0);
  // Inline function 'kotlin.check' call
  // Inline function 'kotlin.contracts.contract' call
  if (!($this.w13_1.kotlinx$atomicfu$value >= 0)) {
    // Inline function 'io.ktor.utils.io.ByteChannelSequentialBase.addBytesRead.<anonymous>' call
    var message_0 = 'Readable bytes count is negative: ' + $this.w15() + ', ' + count + ' in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)($this);
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
  }
  // Inline function 'kotlin.check' call
  // Inline function 'kotlin.contracts.contract' call
  if (!($this.w15() >= 0)) {
    // Inline function 'io.ktor.utils.io.ByteChannelSequentialBase.addBytesRead.<anonymous>' call
    var message_1 = 'Readable bytes count is negative: ' + $this.w15() + ', ' + count + ' in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)($this);
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_1));
  }
}
function addBytesWritten($this, count) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(count >= 0)) {
    // Inline function 'io.ktor.utils.io.ByteChannelSequentialBase.addBytesWritten.<anonymous>' call
    var message = "Can't write negative amount of bytes: " + count;
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  // Inline function 'kotlinx.atomicfu.AtomicInt.plusAssign' call
  $this.w13_1.atomicfu$getAndAdd(count);
  $this.u13_1.atomicfu$addAndGet$long((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(count));
  // Inline function 'kotlin.check' call
  // Inline function 'kotlin.contracts.contract' call
  if (!($this.w13_1.kotlinx$atomicfu$value >= 0)) {
    // Inline function 'io.ktor.utils.io.ByteChannelSequentialBase.addBytesWritten.<anonymous>' call
    var message_0 = 'Readable bytes count is negative: ' + $this.w13_1.kotlinx$atomicfu$value + ', ' + count + ' in ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)($this);
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
  }
}
function ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForWrite$lambda(this$0, $count) {
  return function () {
    return this$0.x15() < $count && !this$0.i15();
  };
}
function ByteChannelSequentialBase$awaitAtLeastNBytesAvailableForRead$lambda(this$0, $count) {
  return function () {
    return this$0.w15() < $count && !this$0.y15();
  };
}
function cancel(_this__u8e3s4) {
  return _this__u8e3s4.tr(null);
}
function readAvailable(_this__u8e3s4, dst, $completion) {
  return _this__u8e3s4.o1b(dst, 0, dst.length, $completion);
}
function close(_this__u8e3s4) {
  return _this__u8e3s4.q1b(null);
}
function writeFully(_this__u8e3s4, src, $completion) {
  return _this__u8e3s4.j1b(src, 0, src.length, $completion);
}
function get_CLOSED_SUCCESS() {
  _init_properties_CloseElement_kt__5e72ik();
  return CLOSED_SUCCESS;
}
var CLOSED_SUCCESS;
var properties_initialized_CloseElement_kt_clkism;
function _init_properties_CloseElement_kt__5e72ik() {
  if (!properties_initialized_CloseElement_kt_clkism) {
    properties_initialized_CloseElement_kt_clkism = true;
    CLOSED_SUCCESS = new CloseElement(null);
  }
}
function writer(_this__u8e3s4, coroutineContext, autoFlush, block) {
  coroutineContext = coroutineContext === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.EmptyCoroutineContext_getInstance2bxophqwsfm9n)() : coroutineContext;
  autoFlush = autoFlush === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : autoFlush;
  return launchChannel(_this__u8e3s4, coroutineContext, ByteChannel(autoFlush), true, block);
}
function launchChannel(_this__u8e3s4, context, channel, attachJob, block) {
  var dispatcher = _this__u8e3s4.gn().yb((0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Key_getInstancekgqcxgd24j37)());
  var job = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.launch1c91vkjzdi9sd)(_this__u8e3s4, context, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, launchChannel$slambda_0(attachJob, channel, block, dispatcher, null));
  job.io(launchChannel$lambda(channel));
  return new ChannelJob(job, channel);
}
function launchChannel$slambda_0($attachJob, $channel, $block, $dispatcher, resultContinuation) {
  var i = new launchChannel$slambda($attachJob, $channel, $block, $dispatcher, resultContinuation);
  var l = function ($this$launch, $completion) {
    return i.o1c($this$launch, $completion);
  };
  l.$arity = 1;
  return l;
}
function launchChannel$lambda($channel) {
  return function (cause) {
    $channel.q1b(cause);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function unwrapCancellationException(_this__u8e3s4) {
  var exception = _this__u8e3s4;
  $l$loop: while (exception instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CancellationException3b36o9qz53rgr) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(exception, exception.cause)) {
      return _this__u8e3s4;
    }
    var tmp0_elvis_lhs = exception.cause;
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return exception;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    exception = tmp;
  }
  return exception;
}
function decode(_this__u8e3s4, input, max) {
  max = max === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 2147483647 : max;
  // Inline function 'kotlin.text.buildString' call
  // Inline function 'kotlin.comparisons.minOf' call
  var a = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(max);
  var b = sizeEstimate(input);
  var capacity = (a.q1(b) <= 0 ? a : b).u3();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(capacity);
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.charsets.decode.<anonymous>' call
  decode_0(_this__u8e3s4, input, this_0, max);
  return this_0.toString();
}
function encodeToImpl(_this__u8e3s4, destination, input, fromIndex, toIndex) {
  var start = fromIndex;
  if (start >= toIndex)
    return 0;
  var bytesWritten = 0;
  // Inline function 'io.ktor.utils.io.core.writeWhileSize' call
  var tail = prepareWriteHead(destination, 1, null);
  try {
    var size;
    $l$loop: while (true) {
      // Inline function 'io.ktor.utils.io.charsets.encodeToImpl.<anonymous>' call
      var view = tail;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var before = view.j17_1 - view.h17_1 | 0;
      var rc = encodeImpl(_this__u8e3s4, input, start, toIndex, view);
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(rc >= 0)) {
        // Inline function 'kotlin.check.<anonymous>' call
        var message = 'Check failed.';
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      }
      start = start + rc | 0;
      var tmp = bytesWritten;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      bytesWritten = tmp + (before - (view.j17_1 - view.h17_1 | 0) | 0) | 0;
      size = start >= toIndex ? 0 : rc === 0 ? 8 : 1;
      if (size <= 0)
        break $l$loop;
      tail = prepareWriteHead(destination, size, tail);
    }
  }finally {
    destination.q1c();
  }
  bytesWritten = bytesWritten + encodeCompleteImpl(_this__u8e3s4, destination) | 0;
  return bytesWritten;
}
function sizeEstimate(_this__u8e3s4) {
  var tmp;
  if (_this__u8e3s4 instanceof ByteReadPacket) {
    tmp = _this__u8e3s4.v18();
  } else {
    // Inline function 'kotlin.comparisons.maxOf' call
    var a = _this__u8e3s4.v18();
    var b = new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(16, 0);
    tmp = a.q1(b) >= 0 ? a : b;
  }
  return tmp;
}
function encodeCompleteImpl(_this__u8e3s4, dst) {
  var size = 1;
  var bytesWritten = 0;
  // Inline function 'io.ktor.utils.io.core.writeWhile' call
  var tail = prepareWriteHead(dst, 1, null);
  try {
    $l$loop: while (true) {
      // Inline function 'io.ktor.utils.io.charsets.encodeCompleteImpl.<anonymous>' call
      var view = tail;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var before = view.j17_1 - view.h17_1 | 0;
      if (encodeComplete(_this__u8e3s4, view)) {
        size = 0;
      } else {
        size = size + 1 | 0;
      }
      var tmp = bytesWritten;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      bytesWritten = tmp + (before - (view.j17_1 - view.h17_1 | 0) | 0) | 0;
      if (!(size > 0))
        break $l$loop;
      tail = prepareWriteHead(dst, 1, tail);
    }
  }finally {
    dst.q1c();
  }
  return bytesWritten;
}
function encode(_this__u8e3s4, input, fromIndex, toIndex) {
  fromIndex = fromIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : fromIndex;
  toIndex = toIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(input) : toIndex;
  var tmp$ret$0;
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.buildPacket' call
    // Inline function 'kotlin.contracts.contract' call
    var builder = new BytePacketBuilder();
    try {
      // Inline function 'io.ktor.utils.io.charsets.encode.<anonymous>' call
      encodeToImpl(_this__u8e3s4, builder, input, fromIndex, toIndex);
      tmp$ret$0 = builder.y18();
      break $l$block;
    } catch ($p) {
      if ($p instanceof Error) {
        var t = $p;
        builder.j15();
        throw t;
      } else {
        throw $p;
      }
    }
  }
  return tmp$ret$0;
}
var Companion_instance;
function Companion_getInstance() {
  return Companion_instance;
}
function discardFailed(count, readRemaining) {
  throw EOFException.m1d('Unable to discard ' + count + ' bytes: only ' + readRemaining + ' available for reading');
}
function commitWrittenFailed(count, writeRemaining) {
  throw EOFException.m1d('Unable to discard ' + count + ' bytes: only ' + writeRemaining + ' available for writing');
}
function rewindFailed(count, rewindRemaining) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Unable to rewind ' + count + ' bytes: only ' + rewindRemaining + ' could be rewinded');
}
function startGapReservationFailedDueToLimit(_this__u8e3s4, startGap) {
  if (startGap > _this__u8e3s4.k17_1) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Start gap ' + startGap + ' is bigger than the capacity ' + _this__u8e3s4.k17_1);
  }
  // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
  var tmp$ret$0 = _this__u8e3s4.k17_1 - _this__u8e3s4.j17_1 | 0;
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('Unable to reserve ' + startGap + ' start gap: there are already ' + tmp$ret$0 + ' bytes reserved in the end');
}
function startGapReservationFailed(_this__u8e3s4, startGap) {
  var tmp = 'Unable to reserve ' + startGap + ' start gap: ';
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  var tmp$ret$0 = _this__u8e3s4.h17_1 - _this__u8e3s4.g17_1 | 0;
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4(tmp + ('there are already ' + tmp$ret$0 + ' content bytes starting at offset ' + _this__u8e3s4.g17_1));
}
function endGapReservationFailedDueToCapacity(_this__u8e3s4, endGap) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('End gap ' + endGap + ' is too big: capacity is ' + _this__u8e3s4.k17_1);
}
function endGapReservationFailedDueToStartGap(_this__u8e3s4, endGap) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('End gap ' + endGap + ' is too big: there are already ' + _this__u8e3s4.i17_1 + ' bytes reserved in the beginning');
}
function endGapReservationFailedDueToContent(_this__u8e3s4, endGap) {
  var tmp = 'Unable to reserve end gap ' + endGap + ':';
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  var tmp$ret$0 = _this__u8e3s4.h17_1 - _this__u8e3s4.g17_1 | 0;
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o(tmp + (' there are already ' + tmp$ret$0 + ' content bytes at offset ' + _this__u8e3s4.g17_1));
}
function restoreStartGap(_this__u8e3s4, size) {
  _this__u8e3s4.f1d(_this__u8e3s4.g17_1 - size | 0);
}
function writeBufferAppend(_this__u8e3s4, other, maxSize) {
  // Inline function 'kotlin.comparisons.minOf' call
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  var a = other.h17_1 - other.g17_1 | 0;
  var size = Math.min(a, maxSize);
  // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
  if ((_this__u8e3s4.j17_1 - _this__u8e3s4.h17_1 | 0) <= size) {
    writeBufferAppendUnreserve(_this__u8e3s4, size);
  }
  // Inline function 'io.ktor.utils.io.core.write' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.writeBufferAppend.<anonymous>' call
  var dst = _this__u8e3s4.f17_1;
  var dstOffset = _this__u8e3s4.h17_1;
  _this__u8e3s4.j17_1;
  // Inline function 'io.ktor.utils.io.core.read' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.writeBufferAppend.<anonymous>.<anonymous>' call
  var src = other.f17_1;
  var srcOffset = other.g17_1;
  other.h17_1;
  src.t1d(dst, srcOffset, size, dstOffset);
  var rc = size;
  other.u1c(rc);
  var rc_0 = rc;
  _this__u8e3s4.v1c(rc_0);
  return rc_0;
}
function writeBufferAppendUnreserve(_this__u8e3s4, writeSize) {
  // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
  var tmp = _this__u8e3s4.j17_1 - _this__u8e3s4.h17_1 | 0;
  // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
  if ((tmp + (_this__u8e3s4.k17_1 - _this__u8e3s4.j17_1 | 0) | 0) < writeSize) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o("Can't append buffer: not enough free space at the end");
  }
  var newWritePosition = _this__u8e3s4.h17_1 + writeSize | 0;
  var overrunSize = newWritePosition - _this__u8e3s4.j17_1 | 0;
  if (overrunSize > 0) {
    _this__u8e3s4.g1d();
  }
}
function writeBufferPrepend(_this__u8e3s4, other) {
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  var size = other.h17_1 - other.g17_1 | 0;
  var readPosition = _this__u8e3s4.g17_1;
  if (readPosition < size) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Not enough space in the beginning to prepend bytes');
  }
  var newReadPosition = readPosition - size | 0;
  other.f17_1.t1d(_this__u8e3s4.f17_1, other.g17_1, size, newReadPosition);
  other.u1c(size);
  _this__u8e3s4.f1d(newReadPosition);
  return size;
}
function get_DefaultChunkedBufferPool() {
  _init_properties_BufferFactory_kt__uj6b48();
  return DefaultChunkedBufferPool;
}
var DefaultChunkedBufferPool;
var properties_initialized_BufferFactory_kt_q9tgbq;
function _init_properties_BufferFactory_kt__uj6b48() {
  if (!properties_initialized_BufferFactory_kt_q9tgbq) {
    properties_initialized_BufferFactory_kt_q9tgbq = true;
    DefaultChunkedBufferPool = new DefaultBufferPool();
  }
}
function writeFully_0(_this__u8e3s4, source, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? source.length - offset | 0 : length;
  // Inline function 'io.ktor.utils.io.core.writeExact' call
  var name = 'byte array';
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.write' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.writeExact.<anonymous>' call
  var memory = _this__u8e3s4.f17_1;
  var start = _this__u8e3s4.h17_1;
  var writeRemaining = _this__u8e3s4.j17_1 - start | 0;
  if (writeRemaining < length) {
    throw InsufficientSpaceException.s1d(name, length, writeRemaining);
  }
  // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
  // Inline function 'io.ktor.utils.io.bits.storeByteArray' call
  // Inline function 'io.ktor.utils.io.bits.useMemory' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.let' call
  // Inline function 'kotlin.contracts.contract' call
  of(Companion_getInstance_4(), source, offset, length).t1d(memory, 0, length, start);
  var rc = length;
  _this__u8e3s4.v1c(rc);
}
function writeFully_1(_this__u8e3s4, src, length) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(length >= 0)) {
    // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
    var message = "length shouldn't be negative: " + length;
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  // Inline function 'kotlin.require' call
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(length <= (src.h17_1 - src.g17_1 | 0))) {
    // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    var message_0 = "length shouldn't be greater than the source read remaining: " + length + ' > ' + (src.h17_1 - src.g17_1 | 0);
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
  }
  // Inline function 'kotlin.require' call
  // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(length <= (_this__u8e3s4.j17_1 - _this__u8e3s4.h17_1 | 0))) {
    // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
    // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
    var message_1 = "length shouldn't be greater than the destination write remaining space: " + length + ' > ' + (_this__u8e3s4.j17_1 - _this__u8e3s4.h17_1 | 0);
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_1));
  }
  // Inline function 'io.ktor.utils.io.core.writeExact' call
  var name = 'buffer readable content';
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.write' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.writeExact.<anonymous>' call
  var memory = _this__u8e3s4.f17_1;
  var start = _this__u8e3s4.h17_1;
  var writeRemaining = _this__u8e3s4.j17_1 - start | 0;
  if (writeRemaining < length) {
    throw InsufficientSpaceException.s1d(name, length, writeRemaining);
  }
  // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
  src.f17_1.t1d(memory, src.g17_1, length, start);
  src.u1c(length);
  var rc = length;
  _this__u8e3s4.v1c(rc);
}
function readFully(_this__u8e3s4, destination, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? destination.length - offset | 0 : length;
  // Inline function 'io.ktor.utils.io.core.readExact' call
  var name = 'byte array';
  // Inline function 'kotlin.contracts.contract' call
  var value;
  // Inline function 'io.ktor.utils.io.core.read' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.readExact.<anonymous>' call
  var memory = _this__u8e3s4.f17_1;
  var start = _this__u8e3s4.g17_1;
  if ((_this__u8e3s4.h17_1 - start | 0) < length) {
    throw EOFException.m1d('Not enough bytes to read a ' + name + ' of size ' + length + '.');
  }
  copyTo_1(memory, destination, start, length, offset);
  value = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  var rc = length;
  _this__u8e3s4.u1c(rc);
}
function readFully_0(_this__u8e3s4, dst, length) {
  var tmp;
  if (length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
    tmp = dst.j17_1 - dst.h17_1 | 0;
  } else {
    tmp = length;
  }
  length = tmp;
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(length >= 0)) {
    // Inline function 'kotlin.require.<anonymous>' call
    var message = 'Failed requirement.';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  // Inline function 'kotlin.require' call
  // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(length <= (dst.j17_1 - dst.h17_1 | 0))) {
    // Inline function 'kotlin.require.<anonymous>' call
    var message_0 = 'Failed requirement.';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
  }
  // Inline function 'io.ktor.utils.io.core.readExact' call
  var name = 'buffer content';
  // Inline function 'kotlin.contracts.contract' call
  var value;
  // Inline function 'io.ktor.utils.io.core.read' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.readExact.<anonymous>' call
  var memory = _this__u8e3s4.f17_1;
  var start = _this__u8e3s4.g17_1;
  if ((_this__u8e3s4.h17_1 - start | 0) < length) {
    throw EOFException.m1d('Not enough bytes to read a ' + name + ' of size ' + length + '.');
  }
  memory.t1d(dst.f17_1, start, length, dst.h17_1);
  dst.v1c(length);
  value = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  var rc = length;
  _this__u8e3s4.u1c(rc);
  return length;
}
function remainingAll(_this__u8e3s4) {
  return remainingAll_0(_this__u8e3s4, new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
}
function findTail(_this__u8e3s4) {
  var $this = _this__u8e3s4;
  $l$1: do {
    $l$0: do {
      var tmp0_elvis_lhs = $this.v1e();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return $this;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var next = tmp;
      $this = next;
      continue $l$0;
    }
     while (false);
  }
   while (true);
}
function releaseAll(_this__u8e3s4, pool) {
  var current = _this__u8e3s4;
  while (!(current == null)) {
    var next = current.b1f();
    current.c1f(pool);
    current = next;
  }
}
function remainingAll_0(_this__u8e3s4, n) {
  var $this = _this__u8e3s4;
  var n_0 = n;
  $l$1: do {
    $l$0: do {
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var this_0 = $this;
      var tmp$ret$0 = this_0.h17_1 - this_0.g17_1 | 0;
      var rem = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(tmp$ret$0).d3(n_0);
      var tmp0_elvis_lhs = $this.v1e();
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return rem;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var next = tmp;
      $this = next;
      n_0 = rem;
      continue $l$0;
    }
     while (false);
  }
   while (true);
}
var Companion_instance_0;
function Companion_getInstance_0() {
  if (Companion_instance_0 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_0();
  return Companion_instance_0;
}
function _set__head__b4pap2($this, newHead) {
  $this.p18_1 = newHead;
  $this.q18_1 = newHead.f17_1;
  $this.r18_1 = newHead.g17_1;
  $this.s18_1 = newHead.h17_1;
}
function readASCII($this, out, min, max) {
  if (max === 0 && min === 0)
    return 0;
  else if ($this.i1a())
    if (min === 0)
      return 0;
    else {
      atLeastMinCharactersRequire($this, min);
    }
   else if (max < min) {
    minShouldBeLess($this, min, max);
  }
  var copied = 0;
  var utf8 = false;
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.takeWhile' call
    var release = true;
    var tmp0_elvis_lhs = prepareReadFirstHead($this, 1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      break $l$block;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    try {
      $l$loop_0: do {
        // Inline function 'io.ktor.utils.io.core.Input.readASCII.<anonymous>' call
        var buffer = current;
        var tmp$ret$4;
        $l$block_0: {
          // Inline function 'io.ktor.utils.io.core.internal.decodeASCII' call
          // Inline function 'io.ktor.utils.io.core.read' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'io.ktor.utils.io.core.internal.decodeASCII.<anonymous>' call
          var memory = buffer.f17_1;
          var start = buffer.g17_1;
          var endExclusive = buffer.h17_1;
          var inductionVariable = start;
          if (inductionVariable < endExclusive)
            do {
              var index = inductionVariable;
              inductionVariable = inductionVariable + 1 | 0;
              // Inline function 'io.ktor.utils.io.bits.get' call
              // Inline function 'io.ktor.utils.io.bits.Memory.loadAt' call
              var codepoint = memory.t1c_1.getInt8(index) & 255;
              var tmp_0;
              if ((codepoint & 128) === 128) {
                tmp_0 = true;
              } else {
                // Inline function 'io.ktor.utils.io.core.Input.readASCII.<anonymous>.<anonymous>' call
                var it = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToChar93r9buh19yek)(codepoint);
                var tmp_1;
                if (copied === max) {
                  tmp_1 = false;
                } else {
                  out.ma(it);
                  copied = copied + 1 | 0;
                  tmp_1 = true;
                }
                tmp_0 = !tmp_1;
              }
              if (tmp_0) {
                buffer.u1c(index - start | 0);
                tmp$ret$4 = false;
                break $l$block_0;
              }
            }
             while (inductionVariable < endExclusive);
          var rc = endExclusive - start | 0;
          buffer.u1c(rc);
          tmp$ret$4 = true;
        }
        var rc_0 = tmp$ret$4;
        var tmp_2;
        if (rc_0) {
          tmp_2 = true;
        } else if (copied === max) {
          tmp_2 = false;
        } else {
          utf8 = true;
          tmp_2 = false;
        }
        if (!tmp_2) {
          break $l$loop_0;
        }
        release = false;
        var tmp1_elvis_lhs = prepareReadNextHead($this, current);
        var tmp_3;
        if (tmp1_elvis_lhs == null) {
          break $l$loop_0;
        } else {
          tmp_3 = tmp1_elvis_lhs;
        }
        var next = tmp_3;
        current = next;
        release = true;
      }
       while (true);
    }finally {
      if (release) {
        completeReadHead($this, current);
      }
    }
  }
  if (utf8) {
    return copied + readUtf8($this, out, min - copied | 0, max - copied | 0) | 0;
  }
  if (copied < min) {
    prematureEndOfStreamChars($this, min, copied);
  }
  return copied;
}
function atLeastMinCharactersRequire($this, min) {
  throw EOFException.m1d('at least ' + min + ' characters required but no bytes available');
}
function minShouldBeLess($this, min, max) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('min should be less or equal to max but min = ' + min + ', max = ' + max);
}
function prematureEndOfStreamChars($this, min, copied) {
  throw MalformedUTF8InputException.i1g('Premature end of stream: expected at least ' + min + ' chars but had only ' + copied);
}
function readUtf8($this, out, min, max) {
  var copied = 0;
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.takeWhileSize' call
    var release = true;
    var tmp0_elvis_lhs = prepareReadFirstHead($this, 1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      break $l$block;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    var size = 1;
    try {
      $l$loop_0: do {
        // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
        var this_0 = current;
        var before = this_0.h17_1 - this_0.g17_1 | 0;
        var after;
        if (before >= size) {
          try {
            // Inline function 'io.ktor.utils.io.core.Input.readUtf8.<anonymous>' call
            var buffer = current;
            var tmp$ret$5;
            $l$block_3: {
              // Inline function 'io.ktor.utils.io.core.internal.decodeUTF8' call
              var byteCount = 0;
              var value = 0;
              var lastByteCount = 0;
              // Inline function 'io.ktor.utils.io.core.read' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'io.ktor.utils.io.core.internal.decodeUTF8.<anonymous>' call
              var memory = buffer.f17_1;
              var start = buffer.g17_1;
              var endExclusive = buffer.h17_1;
              var inductionVariable = start;
              if (inductionVariable < endExclusive)
                do {
                  var index = inductionVariable;
                  inductionVariable = inductionVariable + 1 | 0;
                  // Inline function 'io.ktor.utils.io.bits.get' call
                  // Inline function 'io.ktor.utils.io.bits.Memory.loadAt' call
                  var v = memory.t1c_1.getInt8(index) & 255;
                  if ((v & 128) === 0) {
                    if (!(byteCount === 0)) {
                      malformedByteCount(byteCount);
                    }
                    // Inline function 'io.ktor.utils.io.core.Input.readUtf8.<anonymous>.<anonymous>' call
                    var it = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToChar93r9buh19yek)(v);
                    var tmp_0;
                    if (copied === max) {
                      tmp_0 = false;
                    } else {
                      out.ma(it);
                      copied = copied + 1 | 0;
                      tmp_0 = true;
                    }
                    if (!tmp_0) {
                      buffer.u1c(index - start | 0);
                      tmp$ret$5 = -1;
                      break $l$block_3;
                    }
                  } else if (byteCount === 0) {
                    var mask = 128;
                    value = v;
                    var inductionVariable_0 = 1;
                    if (inductionVariable_0 <= 6)
                      $l$loop: do {
                        var i = inductionVariable_0;
                        inductionVariable_0 = inductionVariable_0 + 1 | 0;
                        if (!((value & mask) === 0)) {
                          value = value & ~mask;
                          mask = mask >> 1;
                          byteCount = byteCount + 1 | 0;
                        } else {
                          break $l$loop;
                        }
                      }
                       while (inductionVariable_0 <= 6);
                    lastByteCount = byteCount;
                    byteCount = byteCount - 1 | 0;
                    if (lastByteCount > (endExclusive - index | 0)) {
                      buffer.u1c(index - start | 0);
                      tmp$ret$5 = lastByteCount;
                      break $l$block_3;
                    }
                  } else {
                    value = value << 6 | v & 127;
                    byteCount = byteCount - 1 | 0;
                    if (byteCount === 0) {
                      if (isBmpCodePoint(value)) {
                        // Inline function 'io.ktor.utils.io.core.Input.readUtf8.<anonymous>.<anonymous>' call
                        var it_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToChar93r9buh19yek)(value);
                        var tmp_1;
                        if (copied === max) {
                          tmp_1 = false;
                        } else {
                          out.ma(it_0);
                          copied = copied + 1 | 0;
                          tmp_1 = true;
                        }
                        if (!tmp_1) {
                          buffer.u1c(((index - start | 0) - lastByteCount | 0) + 1 | 0);
                          tmp$ret$5 = -1;
                          break $l$block_3;
                        }
                      } else if (!isValidCodePoint(value)) {
                        malformedCodePoint(value);
                      } else {
                        var tmp_2;
                        // Inline function 'io.ktor.utils.io.core.Input.readUtf8.<anonymous>.<anonymous>' call
                        var it_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToChar93r9buh19yek)(highSurrogate(value));
                        var tmp_3;
                        if (copied === max) {
                          tmp_3 = false;
                        } else {
                          out.ma(it_1);
                          copied = copied + 1 | 0;
                          tmp_3 = true;
                        }
                        if (!tmp_3) {
                          tmp_2 = true;
                        } else {
                          // Inline function 'io.ktor.utils.io.core.Input.readUtf8.<anonymous>.<anonymous>' call
                          var it_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToChar93r9buh19yek)(lowSurrogate(value));
                          var tmp_4;
                          if (copied === max) {
                            tmp_4 = false;
                          } else {
                            out.ma(it_2);
                            copied = copied + 1 | 0;
                            tmp_4 = true;
                          }
                          tmp_2 = !tmp_4;
                        }
                        if (tmp_2) {
                          buffer.u1c(((index - start | 0) - lastByteCount | 0) + 1 | 0);
                          tmp$ret$5 = -1;
                          break $l$block_3;
                        }
                      }
                      value = 0;
                    }
                  }
                }
                 while (inductionVariable < endExclusive);
              var rc = endExclusive - start | 0;
              buffer.u1c(rc);
              tmp$ret$5 = 0;
            }
            var size_0 = tmp$ret$5;
            size = size_0 === 0 ? 1 : size_0 > 0 ? size_0 : 0;
          }finally {
            // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
            var this_1 = current;
            after = this_1.h17_1 - this_1.g17_1 | 0;
          }
        } else {
          after = before;
        }
        release = false;
        var tmp_5;
        if (after === 0) {
          tmp_5 = prepareReadNextHead($this, current);
        } else {
          var tmp_6;
          if (after < size) {
            tmp_6 = true;
          } else {
            // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
            var this_2 = current;
            tmp_6 = (this_2.k17_1 - this_2.j17_1 | 0) < 8;
          }
          if (tmp_6) {
            completeReadHead($this, current);
            tmp_5 = prepareReadFirstHead($this, size);
          } else {
            tmp_5 = current;
          }
        }
        var tmp1_elvis_lhs = tmp_5;
        var tmp_7;
        if (tmp1_elvis_lhs == null) {
          break $l$loop_0;
        } else {
          tmp_7 = tmp1_elvis_lhs;
        }
        var next = tmp_7;
        current = next;
        release = true;
      }
       while (size > 0);
    }finally {
      if (release) {
        completeReadHead($this, current);
      }
    }
  }
  if (copied < min) {
    prematureEndOfStreamChars($this, min, copied);
  }
  return copied;
}
function discardAsMuchAsPossible($this, n, skipped) {
  var $this_0 = $this;
  var n_0 = n;
  var skipped_0 = skipped;
  $l$1: do {
    $l$0: do {
      if (n_0.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0)))
        return skipped_0;
      var tmp0_elvis_lhs = $this_0.e1g(1);
      var tmp;
      if (tmp0_elvis_lhs == null) {
        return skipped_0;
      } else {
        tmp = tmp0_elvis_lhs;
      }
      var current = tmp;
      // Inline function 'kotlin.comparisons.minOf' call
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var tmp$ret$0 = current.h17_1 - current.g17_1 | 0;
      var a = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(tmp$ret$0);
      var b = n_0;
      var size = (a.q1(b) <= 0 ? a : b).u3();
      current.u1c(size);
      var tmp1_this = $this_0;
      tmp1_this.r18_1 = tmp1_this.r18_1 + size | 0;
      afterRead($this_0, current);
      // Inline function 'kotlin.Long.minus' call
      // Inline function 'kotlin.Long.plus' call
      $this_0 = $this_0;
      n_0 = n_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(size));
      skipped_0 = skipped_0.d3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(size));
      continue $l$0;
    }
     while (false);
  }
   while (true);
}
function discardAsMuchAsPossible_0($this, n, skipped) {
  var currentCount = n;
  var currentSkipped = skipped;
  while (true) {
    if (currentCount === 0) {
      return currentSkipped;
    }
    var tmp0_elvis_lhs = $this.e1g(1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      return currentSkipped;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    // Inline function 'kotlin.comparisons.minOf' call
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    var a = current.h17_1 - current.g17_1 | 0;
    var b = currentCount;
    var size = Math.min(a, b);
    current.u1c(size);
    $this.r18_1 = $this.r18_1 + size | 0;
    afterRead($this, current);
    currentCount = currentCount - size | 0;
    currentSkipped = currentSkipped + size | 0;
  }
}
function fixGapAfterReadFallback($this, current) {
  if ($this.u18_1 && current.v1e() == null) {
    $this.r18_1 = current.g17_1;
    $this.s18_1 = current.h17_1;
    $this.s1f(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  var size = current.h17_1 - current.g17_1 | 0;
  // Inline function 'kotlin.comparisons.minOf' call
  // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
  var b = 8 - (current.k17_1 - current.j17_1 | 0) | 0;
  var overrun = Math.min(size, b);
  if (size > overrun) {
    fixGapAfterReadFallbackUnreserved($this, current, size, overrun);
  } else {
    var new_0 = $this.o18_1.z1e();
    new_0.a1d(8);
    new_0.j1g(current.b1f());
    writeBufferAppend(new_0, current, size);
    _set__head__b4pap2($this, new_0);
  }
  current.c1f($this.o18_1);
}
function fixGapAfterReadFallbackUnreserved($this, current, size, overrun) {
  var chunk1 = $this.o18_1.z1e();
  var chunk2 = $this.o18_1.z1e();
  chunk1.a1d(8);
  chunk2.a1d(8);
  chunk1.j1g(chunk2);
  chunk2.j1g(current.b1f());
  writeBufferAppend(chunk1, current, size - overrun | 0);
  writeBufferAppend(chunk2, current, overrun);
  _set__head__b4pap2($this, chunk1);
  $this.s1f(remainingAll(chunk2));
}
function ensureNext($this, current, empty) {
  var $this_0 = $this;
  var current_0 = current;
  var empty_0 = empty;
  $l$1: do {
    $l$0: do {
      if (current_0 === empty_0) {
        return doFill($this_0);
      }
      var next = current_0.b1f();
      current_0.c1f($this_0.o18_1);
      var tmp;
      if (next == null) {
        _set__head__b4pap2($this_0, empty_0);
        $this_0.s1f(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
        $this_0 = $this_0;
        current_0 = empty_0;
        empty_0 = empty_0;
        continue $l$0;
      } else {
        // Inline function 'io.ktor.utils.io.core.canRead' call
        if (next.h17_1 > next.g17_1) {
          _set__head__b4pap2($this_0, next);
          var tmp0_this = $this_0;
          // Inline function 'kotlin.Long.minus' call
          var this_0 = tmp0_this.t18_1;
          // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
          var other = next.h17_1 - next.g17_1 | 0;
          var tmp$ret$2 = this_0.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(other));
          tmp0_this.s1f(tmp$ret$2);
          tmp = next;
        } else {
          $this_0 = $this_0;
          current_0 = next;
          empty_0 = empty_0;
          continue $l$0;
        }
      }
      return tmp;
    }
     while (false);
  }
   while (true);
}
function doFill($this) {
  if ($this.u18_1)
    return null;
  var chunk = $this.q1f();
  if (chunk == null) {
    $this.u18_1 = true;
    return null;
  }
  appendView($this, chunk);
  return chunk;
}
function appendView($this, chunk) {
  var tail = findTail($this.p18_1);
  if (tail === Companion_getInstance_2().v1a_1) {
    _set__head__b4pap2($this, chunk);
    // Inline function 'kotlin.require' call
    // Inline function 'kotlin.contracts.contract' call
    if (!$this.t18_1.equals(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0))) {
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('It should be no tail remaining bytes if current tail is EmptyBuffer');
    }
    var tmp0_safe_receiver = chunk.v1e();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : remainingAll(tmp0_safe_receiver);
    $this.s1f(tmp1_elvis_lhs == null ? new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0) : tmp1_elvis_lhs);
  } else {
    tail.j1g(chunk);
    $this.s1f($this.t18_1.d3(remainingAll(chunk)));
  }
}
function prepareReadLoop($this, minSize, head) {
  var $this_0 = $this;
  var minSize_0 = minSize;
  var head_0 = head;
  $l$1: do {
    $l$0: do {
      // Inline function 'io.ktor.utils.io.core.Input.headRemaining' call
      var this_0 = $this_0;
      var headSize = this_0.s18_1 - this_0.r18_1 | 0;
      if (headSize >= minSize_0)
        return head_0;
      var tmp0_elvis_lhs = head_0.v1e();
      var tmp1_elvis_lhs = tmp0_elvis_lhs == null ? doFill($this_0) : tmp0_elvis_lhs;
      var tmp;
      if (tmp1_elvis_lhs == null) {
        return null;
      } else {
        tmp = tmp1_elvis_lhs;
      }
      var next = tmp;
      if (headSize === 0) {
        if (!(head_0 === Companion_getInstance_2().v1a_1)) {
          $this_0.f1g(head_0);
        }
        $this_0 = $this_0;
        minSize_0 = minSize_0;
        head_0 = next;
        continue $l$0;
      } else {
        var desiredExtraBytes = minSize_0 - headSize | 0;
        var copied = writeBufferAppend(head_0, next, desiredExtraBytes);
        $this_0.s18_1 = head_0.h17_1;
        var tmp2_this = $this_0;
        // Inline function 'kotlin.Long.minus' call
        var tmp$ret$1 = tmp2_this.t18_1.e3((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toLongw1zpgk99d84b)(copied));
        tmp2_this.s1f(tmp$ret$1);
        // Inline function 'io.ktor.utils.io.core.canRead' call
        if (!(next.h17_1 > next.g17_1)) {
          head_0.j1g(null);
          head_0.j1g(next.b1f());
          next.c1f($this_0.o18_1);
        } else {
          next.z1c(copied);
        }
      }
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var this_1 = head_0;
      if ((this_1.h17_1 - this_1.g17_1 | 0) >= minSize_0)
        return head_0;
      if (minSize_0 > 8) {
        minSizeIsTooBig($this_0, minSize_0);
      }
      $this_0 = $this_0;
      minSize_0 = minSize_0;
      head_0 = head_0;
      continue $l$0;
    }
     while (false);
  }
   while (true);
}
function minSizeIsTooBig($this, minSize) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('minSize of ' + minSize + ' is too big (should be less than 8)');
}
function afterRead($this, head) {
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  if ((head.h17_1 - head.g17_1 | 0) === 0) {
    $this.f1g(head);
  }
}
var Companion_instance_1;
function Companion_getInstance_1() {
  return Companion_instance_1;
}
function discard(_this__u8e3s4) {
  return _this__u8e3s4.x1f(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(-1, 2147483647));
}
function readFully_1(_this__u8e3s4, dst, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? dst.length - offset | 0 : length;
  // Inline function 'io.ktor.utils.io.core.requireNoRemaining' call
  // Inline function 'io.ktor.utils.io.core.readFullyBytesTemplate' call
  var remaining = length;
  var dstOffset = offset;
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.takeWhile' call
    var release = true;
    var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      break $l$block;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    try {
      $l$loop_0: do {
        // Inline function 'io.ktor.utils.io.core.readFullyBytesTemplate.<anonymous>' call
        var buffer = current;
        // Inline function 'kotlin.comparisons.minOf' call
        var a = remaining;
        // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
        var b = buffer.h17_1 - buffer.g17_1 | 0;
        var count = Math.min(a, b);
        // Inline function 'io.ktor.utils.io.core.readFully.<anonymous>' call
        var dstOffset_0 = dstOffset;
        readFully(buffer, dst, dstOffset_0, count);
        remaining = remaining - count | 0;
        dstOffset = dstOffset + count | 0;
        if (!(remaining > 0)) {
          break $l$loop_0;
        }
        release = false;
        var tmp1_elvis_lhs = prepareReadNextHead(_this__u8e3s4, current);
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          break $l$loop_0;
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }
        var next = tmp_0;
        current = next;
        release = true;
      }
       while (true);
    }finally {
      if (release) {
        completeReadHead(_this__u8e3s4, current);
      }
    }
  }
  var this_0 = remaining;
  if (this_0 > 0) {
    prematureEndOfStream(this_0);
  }
}
function readFully_2(_this__u8e3s4, dst, length) {
  var tmp;
  if (length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
    tmp = dst.j17_1 - dst.h17_1 | 0;
  } else {
    tmp = length;
  }
  length = tmp;
  // Inline function 'io.ktor.utils.io.core.requireNoRemaining' call
  // Inline function 'io.ktor.utils.io.core.readFullyBytesTemplate' call
  var remaining = length;
  var dstOffset = 0;
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.takeWhile' call
    var release = true;
    var tmp0_elvis_lhs = prepareReadFirstHead(_this__u8e3s4, 1);
    var tmp_0;
    if (tmp0_elvis_lhs == null) {
      break $l$block;
    } else {
      tmp_0 = tmp0_elvis_lhs;
    }
    var current = tmp_0;
    try {
      $l$loop_0: do {
        // Inline function 'io.ktor.utils.io.core.readFullyBytesTemplate.<anonymous>' call
        var buffer = current;
        // Inline function 'kotlin.comparisons.minOf' call
        var a = remaining;
        // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
        var b = buffer.h17_1 - buffer.g17_1 | 0;
        var count = Math.min(a, b);
        // Inline function 'io.ktor.utils.io.core.readFully.<anonymous>' call
        readFully_0(buffer, dst, count);
        remaining = remaining - count | 0;
        dstOffset = dstOffset + count | 0;
        if (!(remaining > 0)) {
          break $l$loop_0;
        }
        release = false;
        var tmp1_elvis_lhs = prepareReadNextHead(_this__u8e3s4, current);
        var tmp_1;
        if (tmp1_elvis_lhs == null) {
          break $l$loop_0;
        } else {
          tmp_1 = tmp1_elvis_lhs;
        }
        var next = tmp_1;
        current = next;
        release = true;
      }
       while (true);
    }finally {
      if (release) {
        completeReadHead(_this__u8e3s4, current);
      }
    }
  }
  var this_0 = remaining;
  if (this_0 > 0) {
    prematureEndOfStream(this_0);
  }
}
function flushChain($this) {
  var tmp0_elvis_lhs = $this.z14();
  var tmp;
  if (tmp0_elvis_lhs == null) {
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var oldTail = tmp;
  try {
    // Inline function 'io.ktor.utils.io.core.forEachChunk' call
    // Inline function 'kotlin.contracts.contract' call
    var current = oldTail;
    $l$loop: do {
      // Inline function 'io.ktor.utils.io.core.Output.flushChain.<anonymous>' call
      var chunk = current;
      var tmp_0 = chunk.g17_1;
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var tmp$ret$0 = chunk.h17_1 - chunk.g17_1 | 0;
      $this.f1f(chunk.f17_1, tmp_0, tmp$ret$0);
      var tmp0_elvis_lhs_0 = current.v1e();
      var tmp_1;
      if (tmp0_elvis_lhs_0 == null) {
        break $l$loop;
      } else {
        tmp_1 = tmp0_elvis_lhs_0;
      }
      current = tmp_1;
    }
     while (true);
  }finally {
    releaseAll(oldTail, $this.r14_1);
  }
}
function appendNewChunk($this) {
  var new_0 = $this.r14_1.z1e();
  new_0.a1d(8);
  $this.j1f(new_0);
  return new_0;
}
function appendChainImpl($this, head, newTail, chainedSizeDelta) {
  var _tail = $this.t14_1;
  if (_tail == null) {
    $this.s14_1 = head;
    $this.y14_1 = 0;
  } else {
    _tail.j1g(head);
    var tailPosition = $this.v14_1;
    _tail.w1c(tailPosition);
    $this.y14_1 = $this.y14_1 + (tailPosition - $this.x14_1 | 0) | 0;
  }
  $this.t14_1 = newTail;
  $this.y14_1 = $this.y14_1 + chainedSizeDelta | 0;
  $this.u14_1 = newTail.f17_1;
  $this.v14_1 = newTail.h17_1;
  $this.x14_1 = newTail.g17_1;
  $this.w14_1 = newTail.j17_1;
}
function writeByteFallback($this, v) {
  appendNewChunk($this).n1d(v);
  $this.v14_1 = $this.v14_1 + 1 | 0;
}
function appendCharFallback($this, c) {
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.Output.write' call
    var buffer = $this.m1f(3);
    try {
      // Inline function 'io.ktor.utils.io.core.Output.appendCharFallback.<anonymous>' call
      // Inline function 'io.ktor.utils.io.core.internal.putUtf8Char' call
      var this_0 = buffer.f17_1;
      var offset = buffer.h17_1;
      // Inline function 'kotlin.code' call
      var v = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(c);
      var tmp;
      if (0 <= v ? v <= 127 : false) {
        // Inline function 'io.ktor.utils.io.bits.Memory.storeAt' call
        var value = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(v);
        this_0.t1c_1.setInt8(offset, value);
        tmp = 1;
      } else if (128 <= v ? v <= 2047 : false) {
        // Inline function 'io.ktor.utils.io.bits.set' call
        var value_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(192 | v >> 6 & 31);
        this_0.t1c_1.setInt8(offset, value_0);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index = offset + 1 | 0;
        var value_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v & 63);
        this_0.t1c_1.setInt8(index, value_1);
        tmp = 2;
      } else if (2048 <= v ? v <= 65535 : false) {
        // Inline function 'io.ktor.utils.io.bits.set' call
        var value_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(224 | v >> 12 & 15);
        this_0.t1c_1.setInt8(offset, value_2);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_0 = offset + 1 | 0;
        var value_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v >> 6 & 63);
        this_0.t1c_1.setInt8(index_0, value_3);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_1 = offset + 2 | 0;
        var value_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v & 63);
        this_0.t1c_1.setInt8(index_1, value_4);
        tmp = 3;
      } else if (65536 <= v ? v <= 1114111 : false) {
        // Inline function 'io.ktor.utils.io.bits.set' call
        var value_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(240 | v >> 18 & 7);
        this_0.t1c_1.setInt8(offset, value_5);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_2 = offset + 1 | 0;
        var value_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v >> 12 & 63);
        this_0.t1c_1.setInt8(index_2, value_6);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_3 = offset + 2 | 0;
        var value_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v >> 6 & 63);
        this_0.t1c_1.setInt8(index_3, value_7);
        // Inline function 'io.ktor.utils.io.bits.set' call
        var index_4 = offset + 3 | 0;
        var value_8 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | v & 63);
        this_0.t1c_1.setInt8(index_4, value_8);
        tmp = 4;
      } else {
        malformedCodePoint(v);
      }
      var size = tmp;
      buffer.v1c(size);
      var result = size;
      // Inline function 'kotlin.check' call
      // Inline function 'kotlin.contracts.contract' call
      if (!(result >= 0)) {
        // Inline function 'io.ktor.utils.io.core.Output.write.<anonymous>' call
        var message = "The returned value shouldn't be negative";
        throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
      }
      break $l$block;
    }finally {
      $this.q1c();
    }
  }
}
function writePacketMerging($this, tail, foreignStolen, pool) {
  tail.w1c($this.v14_1);
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  var lastSize = tail.h17_1 - tail.g17_1 | 0;
  // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
  var nextSize = foreignStolen.h17_1 - foreignStolen.g17_1 | 0;
  var maxCopySize = get_PACKET_MAX_COPY_SIZE();
  var tmp;
  var tmp_0;
  if (nextSize < maxCopySize) {
    // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
    var tmp_1 = tail.k17_1 - tail.j17_1 | 0;
    // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
    tmp_0 = nextSize <= (tmp_1 + (tail.j17_1 - tail.h17_1 | 0) | 0);
  } else {
    tmp_0 = false;
  }
  if (tmp_0) {
    tmp = nextSize;
  } else {
    tmp = -1;
  }
  var appendSize = tmp;
  var tmp_2;
  if (lastSize < maxCopySize && lastSize <= foreignStolen.i17_1 && isExclusivelyOwned(foreignStolen)) {
    tmp_2 = lastSize;
  } else {
    tmp_2 = -1;
  }
  var prependSize = tmp_2;
  if (appendSize === -1 && prependSize === -1) {
    $this.k1f(foreignStolen);
  } else if (prependSize === -1 || appendSize <= prependSize) {
    // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
    var tmp_3 = tail.j17_1 - tail.h17_1 | 0;
    // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
    var tmp$ret$5 = tail.k17_1 - tail.j17_1 | 0;
    writeBufferAppend(tail, foreignStolen, tmp_3 + tmp$ret$5 | 0);
    $this.q1c();
    var tmp0_safe_receiver = foreignStolen.b1f();
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      $this.k1f(tmp0_safe_receiver);
    }
    foreignStolen.c1f(pool);
  } else if (appendSize === -1 || prependSize < appendSize) {
    writePacketSlowPrepend($this, foreignStolen, tail);
  } else {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('prep = ' + prependSize + ', app = ' + appendSize);
  }
}
function writePacketSlowPrepend($this, foreignStolen, tail) {
  writeBufferPrepend(foreignStolen, tail);
  var tmp0_elvis_lhs = $this.s14_1;
  var tmp;
  if (tmp0_elvis_lhs == null) {
    var message = "head should't be null since it is already handled in the fast-path";
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var _head = tmp;
  if (_head === tail) {
    $this.s14_1 = foreignStolen;
  } else {
    var pre = _head;
    $l$loop: while (true) {
      var next = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(pre.v1e());
      if (next === tail)
        break $l$loop;
      pre = next;
    }
    pre.j1g(foreignStolen);
  }
  tail.c1f($this.r14_1);
  $this.t14_1 = findTail(foreignStolen);
}
function writeFully_2(_this__u8e3s4, src, length) {
  var tmp;
  if (length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
    tmp = src.h17_1 - src.g17_1 | 0;
  } else {
    tmp = length;
  }
  length = tmp;
  // Inline function 'io.ktor.utils.io.core.writeFullyBytesTemplate' call
  var currentOffset = 0;
  var remaining = length;
  // Inline function 'io.ktor.utils.io.core.writeWhile' call
  var tail = prepareWriteHead(_this__u8e3s4, 1, null);
  try {
    $l$loop: while (true) {
      // Inline function 'io.ktor.utils.io.core.writeFullyBytesTemplate.<anonymous>' call
      var buffer = tail;
      // Inline function 'kotlin.comparisons.minOf' call
      var a = remaining;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var b = buffer.j17_1 - buffer.h17_1 | 0;
      var size = Math.min(a, b);
      // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
      writeFully_1(buffer, src, size);
      currentOffset = currentOffset + size | 0;
      remaining = remaining - size | 0;
      if (!(remaining > 0))
        break $l$loop;
      tail = prepareWriteHead(_this__u8e3s4, 1, tail);
    }
  }finally {
    _this__u8e3s4.q1c();
  }
}
function writeFully_3(_this__u8e3s4, src, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? src.length - offset | 0 : length;
  // Inline function 'io.ktor.utils.io.core.writeFullyBytesTemplate' call
  var currentOffset = offset;
  var remaining = length;
  // Inline function 'io.ktor.utils.io.core.writeWhile' call
  var tail = prepareWriteHead(_this__u8e3s4, 1, null);
  try {
    $l$loop: while (true) {
      // Inline function 'io.ktor.utils.io.core.writeFullyBytesTemplate.<anonymous>' call
      var buffer = tail;
      // Inline function 'kotlin.comparisons.minOf' call
      var a = remaining;
      // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
      var b = buffer.j17_1 - buffer.h17_1 | 0;
      var size = Math.min(a, b);
      // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
      var currentOffset_0 = currentOffset;
      writeFully_0(buffer, src, currentOffset_0, size);
      currentOffset = currentOffset + size | 0;
      remaining = remaining - size | 0;
      if (!(remaining > 0))
        break $l$loop;
      tail = prepareWriteHead(_this__u8e3s4, 1, tail);
    }
  }finally {
    _this__u8e3s4.q1c();
  }
}
function readText(_this__u8e3s4, charset, max) {
  charset = charset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Charsets_getInstance().l1g_1 : charset;
  max = max === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 2147483647 : max;
  return decode(charset.o1g(), _this__u8e3s4, max);
}
function readBytes(_this__u8e3s4, n) {
  var tmp;
  if (n === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    // Inline function 'io.ktor.utils.io.core.coerceAtMostMaxIntOrFail' call
    var this_0 = _this__u8e3s4.v18();
    var message = 'Unable to convert to a ByteArray: packet is too big';
    if (this_0.q1(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(2147483647, 0)) > 0)
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o(message);
    tmp = this_0.u3();
  } else {
    tmp = n;
  }
  n = tmp;
  var tmp_0;
  if (!(n === 0)) {
    // Inline function 'kotlin.also' call
    var this_1 = new Int8Array(n);
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.utils.io.core.readBytes.<anonymous>' call
    readFully_1(_this__u8e3s4, this_1, 0, n);
    tmp_0 = this_1;
  } else {
    tmp_0 = get_EmptyByteArray();
  }
  return tmp_0;
}
function prematureEndOfStream(size) {
  throw EOFException.m1d('Premature end of stream: expected ' + size + ' bytes');
}
function readTextExactBytes(_this__u8e3s4, bytesCount, charset) {
  charset = charset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Charsets_getInstance().l1g_1 : charset;
  return decodeExactBytes(charset.o1g(), _this__u8e3s4, bytesCount);
}
function writeText(_this__u8e3s4, text, fromIndex, toIndex, charset) {
  fromIndex = fromIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : fromIndex;
  toIndex = toIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(text) : toIndex;
  charset = charset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Charsets_getInstance().l1g_1 : charset;
  if (charset === Charsets_getInstance().l1g_1) {
    return writeTextUtf8(_this__u8e3s4, text, fromIndex, toIndex);
  }
  encodeToImpl(charset.p1g(), _this__u8e3s4, text, fromIndex, toIndex);
}
function writeTextUtf8(_this__u8e3s4, text, fromIndex, toIndex) {
  var index = fromIndex;
  // Inline function 'io.ktor.utils.io.core.writeWhileSize' call
  var tail = prepareWriteHead(_this__u8e3s4, 1, null);
  try {
    var size;
    $l$loop: while (true) {
      // Inline function 'io.ktor.utils.io.core.writeTextUtf8.<anonymous>' call
      var buffer = tail;
      var memory = buffer.f17_1;
      var dstOffset = buffer.h17_1;
      var dstLimit = buffer.j17_1;
      var tmp0_container = encodeUTF8(memory, text, index, toIndex, dstOffset, dstLimit);
      var characters = EncodeResult__component1_impl_36tlhi(tmp0_container);
      var bytes = EncodeResult__component2_impl_3nv7vp(tmp0_container);
      var tmp = index;
      // Inline function 'kotlin.UShort.toInt' call
      index = tmp + ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(characters) & 65535) | 0;
      // Inline function 'kotlin.UShort.toInt' call
      var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(bytes) & 65535;
      buffer.v1c(tmp$ret$1);
      var tmp_0;
      var tmp_1;
      // Inline function 'kotlin.UShort.toInt' call
      if (((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(characters) & 65535) === 0) {
        tmp_1 = index < toIndex;
      } else {
        tmp_1 = false;
      }
      if (tmp_1) {
        tmp_0 = 8;
      } else {
        if (index < toIndex) {
          tmp_0 = 1;
        } else {
          tmp_0 = 0;
        }
      }
      size = tmp_0;
      if (size <= 0)
        break $l$loop;
      tail = prepareWriteHead(_this__u8e3s4, size, tail);
    }
  }finally {
    _this__u8e3s4.q1c();
  }
}
function appendNext($this, chunk) {
  if (!$this.o1e_1.atomicfu$compareAndSet(null, chunk)) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('This chunk has already a next chunk.');
  }
}
var Companion_instance_2;
function Companion_getInstance_2() {
  if (Companion_instance_2 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_2();
  return Companion_instance_2;
}
function isExclusivelyOwned(_this__u8e3s4) {
  return _this__u8e3s4.u1e() === 1;
}
function _EncodeResult___init__impl__vkc0cy(value) {
  return value;
}
function _EncodeResult___get_value__impl__h0r466($this) {
  return $this;
}
function _EncodeResult___init__impl__vkc0cy_0(characters, bytes) {
  // Inline function 'kotlin.UShort.toInt' call
  var tmp = ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(characters) & 65535) << 16;
  // Inline function 'kotlin.UShort.toInt' call
  var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(bytes) & 65535;
  return _EncodeResult___init__impl__vkc0cy(tmp | tmp$ret$1);
}
function _EncodeResult___get_characters__impl__rrxzcv($this) {
  // Inline function 'kotlin.toUShort' call
  // Inline function 'io.ktor.utils.io.bits.highShort' call
  var this_0 = _EncodeResult___get_value__impl__h0r466($this);
  var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_0 >>> 16 | 0);
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)(this_1);
}
function _EncodeResult___get_bytes__impl__bt0kq0($this) {
  // Inline function 'kotlin.toUShort' call
  // Inline function 'io.ktor.utils.io.bits.lowShort' call
  var this_0 = _EncodeResult___get_value__impl__h0r466($this);
  var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_0 & 65535);
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)(this_1);
}
function EncodeResult__component1_impl_36tlhi($this) {
  return _EncodeResult___get_characters__impl__rrxzcv($this);
}
function EncodeResult__component2_impl_3nv7vp($this) {
  return _EncodeResult___get_bytes__impl__bt0kq0($this);
}
function failLongToIntConversion(value, name) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Long value ' + value.toString() + ' of ' + name + " doesn't fit into 32-bit integer");
}
function malformedByteCount(byteCount) {
  throw MalformedUTF8InputException.i1g('Expected ' + byteCount + ' more character bytes');
}
function isBmpCodePoint(cp) {
  return (cp >>> 16 | 0) === 0;
}
function isValidCodePoint(codePoint) {
  return codePoint <= 1114111;
}
function malformedCodePoint(value) {
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o('Malformed code-point ' + value + ' found');
}
function highSurrogate(cp) {
  return (cp >>> 10 | 0) + 55232 | 0;
}
function lowSurrogate(cp) {
  return (cp & 1023) + 56320 | 0;
}
function encodeUTF8(_this__u8e3s4, text, from, to, dstOffset, dstLimit) {
  // Inline function 'kotlin.comparisons.minOf' call
  // Inline function 'kotlin.UShort.toInt' call
  var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)(-1);
  var b = from + ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(this_0) & 65535) | 0;
  var lastCharIndex = Math.min(to, b);
  // Inline function 'kotlin.UShort.toInt' call
  var this_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)(-1);
  var tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___get_data__impl__g02453juyrdkc7n6xd)(this_1) & 65535;
  var resultLimit = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtMost322komnqp70ag)(dstLimit, tmp$ret$2);
  var resultPosition = dstOffset;
  var index = from;
  $l$loop: do {
    if (resultPosition >= resultLimit || index >= lastCharIndex) {
      // Inline function 'kotlin.toUShort' call
      var this_2 = index - from | 0;
      var tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_2));
      // Inline function 'kotlin.toUShort' call
      var this_3 = resultPosition - dstOffset | 0;
      var tmp$ret$4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_3));
      return _EncodeResult___init__impl__vkc0cy_0(tmp, tmp$ret$4);
    }
    // Inline function 'kotlin.code' call
    var tmp0 = index;
    index = tmp0 + 1 | 0;
    var this_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, tmp0);
    var character = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_4) & 65535;
    if ((character & 65408) === 0) {
      // Inline function 'io.ktor.utils.io.bits.Memory.storeAt' call
      var tmp1 = resultPosition;
      resultPosition = tmp1 + 1 | 0;
      var value = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(character);
      _this__u8e3s4.t1c_1.setInt8(tmp1, value);
    } else {
      break $l$loop;
    }
  }
   while (true);
  index = index - 1 | 0;
  return encodeUTF8Stage1(_this__u8e3s4, text, index, lastCharIndex, from, resultPosition, resultLimit, dstOffset);
}
function encodeUTF8Stage1(_this__u8e3s4, text, index1, lastCharIndex, from, resultPosition1, resultLimit, dstOffset) {
  var index = index1;
  var resultPosition = resultPosition1;
  var stage1Limit = resultLimit - 3 | 0;
  $l$loop: do {
    var freeSpace = stage1Limit - resultPosition | 0;
    if (freeSpace <= 0 || index >= lastCharIndex) {
      break $l$loop;
    }
    var tmp0 = index;
    index = tmp0 + 1 | 0;
    var character = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, tmp0);
    var tmp;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isHighSurrogate11jfjw70ar0zf)(character)) {
      var tmp_0;
      if (index === lastCharIndex || !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isLowSurrogateujxcv7hjn4ma)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, index))) {
        tmp_0 = 63;
      } else {
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        tmp_0 = codePoint(character, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, tmp1));
      }
      tmp = tmp_0;
    } else {
      // Inline function 'kotlin.code' call
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(character);
    }
    var codepoint = tmp;
    // Inline function 'io.ktor.utils.io.core.internal.putUtf8Char' call
    var offset = resultPosition;
    var tmp_1;
    if (0 <= codepoint ? codepoint <= 127 : false) {
      // Inline function 'io.ktor.utils.io.bits.Memory.storeAt' call
      var value = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(codepoint);
      _this__u8e3s4.t1c_1.setInt8(offset, value);
      tmp_1 = 1;
    } else if (128 <= codepoint ? codepoint <= 2047 : false) {
      // Inline function 'io.ktor.utils.io.bits.set' call
      var value_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(192 | codepoint >> 6 & 31);
      _this__u8e3s4.t1c_1.setInt8(offset, value_0);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_0 = offset + 1 | 0;
      var value_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint & 63);
      _this__u8e3s4.t1c_1.setInt8(index_0, value_1);
      tmp_1 = 2;
    } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
      // Inline function 'io.ktor.utils.io.bits.set' call
      var value_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(224 | codepoint >> 12 & 15);
      _this__u8e3s4.t1c_1.setInt8(offset, value_2);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_1 = offset + 1 | 0;
      var value_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint >> 6 & 63);
      _this__u8e3s4.t1c_1.setInt8(index_1, value_3);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_2 = offset + 2 | 0;
      var value_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint & 63);
      _this__u8e3s4.t1c_1.setInt8(index_2, value_4);
      tmp_1 = 3;
    } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
      // Inline function 'io.ktor.utils.io.bits.set' call
      var value_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(240 | codepoint >> 18 & 7);
      _this__u8e3s4.t1c_1.setInt8(offset, value_5);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_3 = offset + 1 | 0;
      var value_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint >> 12 & 63);
      _this__u8e3s4.t1c_1.setInt8(index_3, value_6);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_4 = offset + 2 | 0;
      var value_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint >> 6 & 63);
      _this__u8e3s4.t1c_1.setInt8(index_4, value_7);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_5 = offset + 3 | 0;
      var value_8 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint & 63);
      _this__u8e3s4.t1c_1.setInt8(index_5, value_8);
      tmp_1 = 4;
    } else {
      malformedCodePoint(codepoint);
    }
    var size = tmp_1;
    resultPosition = resultPosition + size | 0;
  }
   while (true);
  if (resultPosition === stage1Limit) {
    return encodeUTF8Stage2(_this__u8e3s4, text, index, lastCharIndex, from, resultPosition, resultLimit, dstOffset);
  }
  // Inline function 'kotlin.toUShort' call
  var this_0 = index - from | 0;
  var tmp_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_0));
  // Inline function 'kotlin.toUShort' call
  var this_1 = resultPosition - dstOffset | 0;
  var tmp$ret$12 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_1));
  return _EncodeResult___init__impl__vkc0cy_0(tmp_2, tmp$ret$12);
}
function codePoint(high, low) {
  // Inline function 'kotlin.code' call
  var highValue = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(high) - 55232 | 0;
  // Inline function 'kotlin.code' call
  var lowValue = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(low) - 56320 | 0;
  return highValue << 10 | lowValue;
}
function encodeUTF8Stage2(_this__u8e3s4, text, index1, lastCharIndex, from, resultPosition1, resultLimit, dstOffset) {
  var index = index1;
  var resultPosition = resultPosition1;
  $l$loop_0: do {
    var freeSpace = resultLimit - resultPosition | 0;
    if (freeSpace <= 0 || index >= lastCharIndex) {
      break $l$loop_0;
    }
    var tmp0 = index;
    index = tmp0 + 1 | 0;
    var character = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, tmp0);
    var tmp;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isHighSurrogate11jfjw70ar0zf)(character)) {
      // Inline function 'kotlin.code' call
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(character);
    } else {
      var tmp_0;
      if (index === lastCharIndex || !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isLowSurrogateujxcv7hjn4ma)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, index))) {
        tmp_0 = 63;
      } else {
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        tmp_0 = codePoint(character, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(text, tmp1));
      }
      tmp = tmp_0;
    }
    var codepoint = tmp;
    // Inline function 'io.ktor.utils.io.core.internal.charactersSize' call
    var tmp_1;
    if (1 <= codepoint ? codepoint <= 127 : false) {
      tmp_1 = 1;
    } else if (128 <= codepoint ? codepoint <= 2047 : false) {
      tmp_1 = 2;
    } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
      tmp_1 = 3;
    } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
      tmp_1 = 4;
    } else {
      malformedCodePoint(codepoint);
    }
    if (tmp_1 > freeSpace) {
      index = index - 1 | 0;
      break $l$loop_0;
    }
    // Inline function 'io.ktor.utils.io.core.internal.putUtf8Char' call
    var offset = resultPosition;
    var tmp_2;
    if (0 <= codepoint ? codepoint <= 127 : false) {
      // Inline function 'io.ktor.utils.io.bits.Memory.storeAt' call
      var value = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(codepoint);
      _this__u8e3s4.t1c_1.setInt8(offset, value);
      tmp_2 = 1;
    } else if (128 <= codepoint ? codepoint <= 2047 : false) {
      // Inline function 'io.ktor.utils.io.bits.set' call
      var value_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(192 | codepoint >> 6 & 31);
      _this__u8e3s4.t1c_1.setInt8(offset, value_0);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_0 = offset + 1 | 0;
      var value_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint & 63);
      _this__u8e3s4.t1c_1.setInt8(index_0, value_1);
      tmp_2 = 2;
    } else if (2048 <= codepoint ? codepoint <= 65535 : false) {
      // Inline function 'io.ktor.utils.io.bits.set' call
      var value_2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(224 | codepoint >> 12 & 15);
      _this__u8e3s4.t1c_1.setInt8(offset, value_2);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_1 = offset + 1 | 0;
      var value_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint >> 6 & 63);
      _this__u8e3s4.t1c_1.setInt8(index_1, value_3);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_2 = offset + 2 | 0;
      var value_4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint & 63);
      _this__u8e3s4.t1c_1.setInt8(index_2, value_4);
      tmp_2 = 3;
    } else if (65536 <= codepoint ? codepoint <= 1114111 : false) {
      // Inline function 'io.ktor.utils.io.bits.set' call
      var value_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(240 | codepoint >> 18 & 7);
      _this__u8e3s4.t1c_1.setInt8(offset, value_5);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_3 = offset + 1 | 0;
      var value_6 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint >> 12 & 63);
      _this__u8e3s4.t1c_1.setInt8(index_3, value_6);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_4 = offset + 2 | 0;
      var value_7 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint >> 6 & 63);
      _this__u8e3s4.t1c_1.setInt8(index_4, value_7);
      // Inline function 'io.ktor.utils.io.bits.set' call
      var index_5 = offset + 3 | 0;
      var value_8 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(128 | codepoint & 63);
      _this__u8e3s4.t1c_1.setInt8(index_5, value_8);
      tmp_2 = 4;
    } else {
      malformedCodePoint(codepoint);
    }
    var size = tmp_2;
    resultPosition = resultPosition + size | 0;
  }
   while (true);
  // Inline function 'kotlin.toUShort' call
  var this_0 = index - from | 0;
  var tmp_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_0));
  // Inline function 'kotlin.toUShort' call
  var this_1 = resultPosition - dstOffset | 0;
  var tmp$ret$13 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._UShort___init__impl__jigrne3hvr35xwb2tau)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toShort36kaw0zjdq3ex)(this_1));
  return _EncodeResult___init__impl__vkc0cy_0(tmp_3, tmp$ret$13);
}
function get_EmptyByteArray() {
  _init_properties_Unsafe_kt__orlvcq();
  return EmptyByteArray;
}
var EmptyByteArray;
function completeReadHead(_this__u8e3s4, current) {
  _init_properties_Unsafe_kt__orlvcq();
  if (current === _this__u8e3s4)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  else {
    // Inline function 'io.ktor.utils.io.core.canRead' call
    if (!(current.h17_1 > current.g17_1)) {
      _this__u8e3s4.c1g(current);
    } else {
      // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
      if ((current.k17_1 - current.j17_1 | 0) < 8) {
        _this__u8e3s4.d1g(current);
      } else {
        _this__u8e3s4.r18_1 = current.g17_1;
      }
    }
  }
}
function prepareReadFirstHead(_this__u8e3s4, minSize) {
  _init_properties_Unsafe_kt__orlvcq();
  return _this__u8e3s4.a1g(minSize);
}
function prepareReadNextHead(_this__u8e3s4, current) {
  _init_properties_Unsafe_kt__orlvcq();
  if (current === _this__u8e3s4) {
    return _this__u8e3s4.l19() ? _this__u8e3s4 : null;
  }
  return _this__u8e3s4.b1g(current);
}
function unsafeAppend(_this__u8e3s4, builder) {
  _init_properties_Unsafe_kt__orlvcq();
  var builderSize = builder.z();
  var tmp0_elvis_lhs = builder.z14();
  var tmp;
  if (tmp0_elvis_lhs == null) {
    return 0;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  var builderHead = tmp;
  if (builderSize <= get_PACKET_MAX_COPY_SIZE() && builderHead.v1e() == null && _this__u8e3s4.v1f(builderHead)) {
    builder.n1f();
    return builderSize;
  }
  _this__u8e3s4.u1f(builderHead);
  return builderSize;
}
function prepareWriteHead(_this__u8e3s4, capacity, current) {
  _init_properties_Unsafe_kt__orlvcq();
  if (!(current == null)) {
    _this__u8e3s4.q1c();
  }
  return _this__u8e3s4.m1f(capacity);
}
var properties_initialized_Unsafe_kt_o5mw48;
function _init_properties_Unsafe_kt__orlvcq() {
  if (!properties_initialized_Unsafe_kt_o5mw48) {
    properties_initialized_Unsafe_kt_o5mw48 = true;
    EmptyByteArray = new Int8Array(0);
  }
}
function trySuspend($this, sleepCondition, $completion) {
  var tmp = new $trySuspendCOROUTINE$53($this, sleepCondition, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function copyToSequentialImpl(_this__u8e3s4, dst, limit, $completion) {
  var tmp = new $copyToSequentialImplCOROUTINE$54(_this__u8e3s4, dst, limit, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function copyToTail(_this__u8e3s4, dst, limit, $completion) {
  var tmp = new $copyToTailCOROUTINE$55(_this__u8e3s4, dst, limit, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function get_ByteArrayPool() {
  _init_properties_ByteArrayPool_kt__kfi3uj();
  return ByteArrayPool;
}
var ByteArrayPool;
var properties_initialized_ByteArrayPool_kt_td6pfh;
function _init_properties_ByteArrayPool_kt__kfi3uj() {
  if (!properties_initialized_ByteArrayPool_kt_td6pfh) {
    properties_initialized_ByteArrayPool_kt_td6pfh = true;
    ByteArrayPool = new ByteArrayPool$1();
  }
}
function ByteChannel(autoFlush) {
  autoFlush = autoFlush === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : autoFlush;
  return new ByteChannelJS(Companion_getInstance_2().v1a_1, autoFlush);
}
function copyTo(_this__u8e3s4, dst, limit, $completion) {
  var tmp = _this__u8e3s4 instanceof ByteChannelSequentialBase ? _this__u8e3s4 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  return copyToSequentialImpl(tmp, dst instanceof ByteChannelSequentialBase ? dst : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), limit, $completion);
}
function ByteReadChannel_1(content, offset, length) {
  // Inline function 'kotlin.collections.isEmpty' call
  if (content.length === 0)
    return Companion_getInstance_3().s1c();
  var head = Companion_getInstance_2().y1a().z1e();
  var tail = head;
  var start = offset;
  var end = start + length | 0;
  $l$loop: while (true) {
    tail.a1d(8);
    // Inline function 'kotlin.comparisons.minOf' call
    var a = end - start | 0;
    // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
    var this_0 = tail;
    var b = this_0.j17_1 - this_0.h17_1 | 0;
    var size = Math.min(a, b);
    writeFully_0(tail instanceof Buffer ? tail : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), content, start, size);
    start = start + size | 0;
    if (start === end)
      break $l$loop;
    var current = tail;
    tail = Companion_getInstance_2().y1a().z1e();
    current.j1g(tail);
  }
  // Inline function 'kotlin.apply' call
  var this_1 = new ByteChannelJS(head, false);
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.ByteReadChannel.<anonymous>' call
  close(this_1);
  return this_1;
}
function ByteChannelJS$attachJob$lambda(this$0) {
  return function (cause) {
    this$0.l1j_1 = null;
    var tmp;
    if (!(cause == null)) {
      this$0.tr(unwrapCancellationException(cause));
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function ByteReadChannel$Companion$Empty$delegate$lambda() {
  // Inline function 'kotlin.apply' call
  var this_0 = new ByteChannelJS(Companion_getInstance_2().v1a_1, false);
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.Companion.Empty$delegate.<anonymous>.<anonymous>' call
  this_0.q1b(null);
  return this_0;
}
var Companion_instance_3;
function Companion_getInstance_3() {
  if (Companion_instance_3 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_3();
  return Companion_instance_3;
}
function Empty$factory() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getPropertyCallableRef1ajb9in178r5r)('Empty', 1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KProperty1ca4yb4wlo496, function (receiver) {
    return receiver.s1c();
  }, null);
}
var DefaultAllocator_instance;
function DefaultAllocator_getInstance() {
  return DefaultAllocator_instance;
}
function of(_this__u8e3s4, array, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? array.length - offset | 0 : length;
  // Inline function 'kotlin.js.asDynamic' call
  var typedArray = array;
  return of_0(Companion_getInstance_4(), typedArray, offset, length);
}
function of_0(_this__u8e3s4, view, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? view.byteLength : length;
  return of_1(Companion_getInstance_4(), view.buffer, view.byteOffset + offset | 0, length);
}
function of_1(_this__u8e3s4, buffer, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? buffer.byteLength - offset | 0 : length;
  return new Memory(new DataView(buffer, offset, length));
}
var Companion_instance_4;
function Companion_getInstance_4() {
  if (Companion_instance_4 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_4();
  return Companion_instance_4;
}
function copyTo_0(_this__u8e3s4, destination, offset, length, destinationOffset) {
  copyTo_2(_this__u8e3s4.buffer, destination, offset + _this__u8e3s4.byteOffset | 0, length, destinationOffset);
}
function copyTo_1(_this__u8e3s4, destination, offset, length, destinationOffset) {
  // Inline function 'kotlin.js.asDynamic' call
  var to = destination;
  var from = new Int8Array(_this__u8e3s4.t1c_1.buffer, _this__u8e3s4.t1c_1.byteOffset + offset | 0, length);
  to.set(from, destinationOffset);
}
function copyTo_2(_this__u8e3s4, destination, offset, length, destinationOffset) {
  var from = new Int8Array(_this__u8e3s4, offset, length);
  var to = new Int8Array(destination.t1c_1.buffer, destination.t1c_1.byteOffset + destinationOffset | 0, length);
  to.set(from, 0);
}
var Companion_instance_5;
function Companion_getInstance_5() {
  return Companion_instance_5;
}
function get_name(_this__u8e3s4) {
  return _this__u8e3s4.n1g_1;
}
var Charsets_instance;
function Charsets_getInstance() {
  if (Charsets_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Charsets();
  return Charsets_instance;
}
function encodeToByteArray(_this__u8e3s4, input, fromIndex, toIndex) {
  fromIndex = fromIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : fromIndex;
  toIndex = toIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(input) : toIndex;
  return encodeToByteArrayImpl1(_this__u8e3s4, input, fromIndex, toIndex);
}
function encodeToByteArrayImpl1(_this__u8e3s4, input, fromIndex, toIndex) {
  fromIndex = fromIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : fromIndex;
  toIndex = toIndex === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(input) : toIndex;
  var start = fromIndex;
  if (start >= toIndex)
    return get_EmptyByteArray();
  var single = Companion_getInstance_2().y1a().z1e();
  try {
    var rc = encodeImpl(_this__u8e3s4, input, start, toIndex, single);
    start = start + rc | 0;
    if (start === toIndex) {
      // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
      var tmp$ret$0 = single.h17_1 - single.g17_1 | 0;
      var result = new Int8Array(tmp$ret$0);
      // Inline function 'io.ktor.utils.io.core.readFully' call
      var length = result.length - 0 | 0;
      readFully(single instanceof Buffer ? single : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), result, 0, length);
      return result;
    }
    var tmp$ret$1;
    $l$block: {
      // Inline function 'io.ktor.utils.io.core.buildPacket' call
      // Inline function 'kotlin.contracts.contract' call
      var builder = new BytePacketBuilder();
      try {
        // Inline function 'io.ktor.utils.io.charsets.encodeToByteArrayImpl1.<anonymous>' call
        builder.j1f(single.r1g());
        encodeToImpl(_this__u8e3s4, builder, input, start, toIndex);
        tmp$ret$1 = builder.y18();
        break $l$block;
      } catch ($p) {
        if ($p instanceof Error) {
          var t = $p;
          builder.j15();
          throw t;
        } else {
          throw $p;
        }
      }
    }
    return readBytes(tmp$ret$1);
  }finally {
    single.c1f(Companion_getInstance_2().y1a());
  }
}
function encodeImpl(_this__u8e3s4, input, fromIndex, toIndex, dst) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(fromIndex <= toIndex)) {
    // Inline function 'kotlin.require.<anonymous>' call
    var message = 'Failed requirement.';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  if (get_charset(_this__u8e3s4).equals(Charsets_getInstance().m1g_1)) {
    return encodeISO88591(input, fromIndex, toIndex, dst);
  }
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(get_charset(_this__u8e3s4) === Charsets_getInstance().l1g_1)) {
    // Inline function 'io.ktor.utils.io.charsets.encodeImpl.<anonymous>' call
    var message_0 = 'Only UTF-8 encoding is supported in JS';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message_0));
  }
  var encoder = new TextEncoder();
  var start = fromIndex;
  // Inline function 'io.ktor.utils.io.core.Buffer.writeRemaining' call
  var dstRemaining = dst.j17_1 - dst.h17_1 | 0;
  $l$loop: while (start < toIndex && dstRemaining > 0) {
    // Inline function 'kotlin.comparisons.minOf' call
    var a = toIndex - start | 0;
    var b = dstRemaining / 6 | 0;
    var tmp$ret$3 = Math.min(a, b);
    var numChars = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtLeast2bkz8m9ik7hep)(tmp$ret$3, 1);
    var dropLastChar = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isHighSurrogate11jfjw70ar0zf)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(input, (start + numChars | 0) - 1 | 0));
    var endIndexExclusive = dropLastChar && numChars === 1 ? start + 2 | 0 : dropLastChar ? (start + numChars | 0) - 1 | 0 : start + numChars | 0;
    // Inline function 'kotlin.text.substring' call
    var startIndex = start;
    var tmp$ret$4 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceSubSequence1iwpdba8s3jc7)(input, startIndex, endIndexExclusive));
    var array1 = encoder.encode(tmp$ret$4);
    if (array1.length > dstRemaining)
      break $l$loop;
    writeFully_4(dst, array1);
    start = endIndexExclusive;
    dstRemaining = dstRemaining - array1.length | 0;
  }
  return start - fromIndex | 0;
}
function get_charset(_this__u8e3s4) {
  return _this__u8e3s4.s1j_1;
}
function decode_0(_this__u8e3s4, input, dst, max) {
  var decoder = Decoder(get_name(get_charset_0(_this__u8e3s4)), true);
  var charactersCopied = 0;
  $l$block: {
    // Inline function 'io.ktor.utils.io.core.takeWhileSize' call
    var release = true;
    var tmp0_elvis_lhs = prepareReadFirstHead(input, 1);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      break $l$block;
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var current = tmp;
    var size = 1;
    try {
      $l$loop: do {
        // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
        var this_0 = current;
        var before = this_0.h17_1 - this_0.g17_1 | 0;
        var after;
        if (before >= size) {
          try {
            var tmp$ret$3;
            $l$block_0: {
              // Inline function 'io.ktor.utils.io.charsets.decode.<anonymous>' call
              var buffer = current;
              var rem = max - charactersCopied | 0;
              // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
              var bufferSize = buffer.h17_1 - buffer.g17_1 | 0;
              if (rem < bufferSize) {
                tmp$ret$3 = 0;
                break $l$block_0;
              }
              // Inline function 'io.ktor.utils.io.core.readDirectInt8Array' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'io.ktor.utils.io.core.read' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'io.ktor.utils.io.core.readDirectInt8Array.<anonymous>' call
              var memory = buffer.f17_1;
              var start = buffer.g17_1;
              var endExclusive = buffer.h17_1;
              // Inline function 'io.ktor.utils.io.charsets.decode.<anonymous>.<anonymous>' call
              var view = new Int8Array(memory.t1c_1.buffer, memory.t1c_1.byteOffset + start | 0, endExclusive - start | 0);
              $l$block_2: {
                // Inline function 'io.ktor.utils.io.js.decodeWrap' call
                try {
                  // Inline function 'io.ktor.utils.io.charsets.decode.<anonymous>.<anonymous>.<anonymous>' call
                  var tmp$ret$4;
                  $l$block_1: {
                    // Inline function 'io.ktor.utils.io.js.decodeStream' call
                    // Inline function 'io.ktor.utils.io.js.decodeWrap' call
                    try {
                      tmp$ret$4 = decoder.z1j(view, decodeOptions(true));
                      break $l$block_1;
                    } catch ($p) {
                      if ($p instanceof Error) {
                        var t = $p;
                        var tmp0_elvis_lhs_0 = t.message;
                        throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs_0 == null ? 'no cause provided' : tmp0_elvis_lhs_0));
                      } else {
                        throw $p;
                      }
                    }
                  }
                  break $l$block_2;
                } catch ($p) {
                  if ($p instanceof Error) {
                    var t_0 = $p;
                    var tmp0_elvis_lhs_1 = t_0.message;
                    throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs_1 == null ? 'no cause provided' : tmp0_elvis_lhs_1));
                  } else {
                    throw $p;
                  }
                }
              }
              var decodedText = tmp$ret$4;
              dst.v(decodedText);
              charactersCopied = charactersCopied + decodedText.length | 0;
              var rc = view.byteLength;
              buffer.u1c(rc);
              var tmp_0;
              if (charactersCopied === max) {
                var tmp_1;
                try {
                  tmp_1 = decoder.a1k();
                } catch ($p) {
                  var tmp_2;
                  var _ = $p;
                  tmp_2 = '';
                  tmp_1 = tmp_2;
                }
                var tail = tmp_1;
                // Inline function 'kotlin.text.isNotEmpty' call
                if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(tail) > 0) {
                  buffer.y1c(bufferSize);
                }
                tmp_0 = 0;
              } else if (charactersCopied < max) {
                tmp_0 = 8;
              } else {
                tmp_0 = 0;
              }
              tmp$ret$3 = tmp_0;
            }
            size = tmp$ret$3;
          }finally {
            // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
            var this_1 = current;
            after = this_1.h17_1 - this_1.g17_1 | 0;
          }
        } else {
          after = before;
        }
        release = false;
        var tmp_3;
        if (after === 0) {
          tmp_3 = prepareReadNextHead(input, current);
        } else {
          var tmp_4;
          if (after < size) {
            tmp_4 = true;
          } else {
            // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
            var this_2 = current;
            tmp_4 = (this_2.k17_1 - this_2.j17_1 | 0) < 8;
          }
          if (tmp_4) {
            completeReadHead(input, current);
            tmp_3 = prepareReadFirstHead(input, size);
          } else {
            tmp_3 = current;
          }
        }
        var tmp1_elvis_lhs = tmp_3;
        var tmp_5;
        if (tmp1_elvis_lhs == null) {
          break $l$loop;
        } else {
          tmp_5 = tmp1_elvis_lhs;
        }
        var next = tmp_5;
        current = next;
        release = true;
      }
       while (size > 0);
    }finally {
      if (release) {
        completeReadHead(input, current);
      }
    }
  }
  if (charactersCopied < max) {
    var size_0 = 1;
    $l$block_3: {
      // Inline function 'io.ktor.utils.io.core.takeWhileSize' call
      var release_0 = true;
      var tmp0_elvis_lhs_2 = prepareReadFirstHead(input, 1);
      var tmp_6;
      if (tmp0_elvis_lhs_2 == null) {
        break $l$block_3;
      } else {
        tmp_6 = tmp0_elvis_lhs_2;
      }
      var current_0 = tmp_6;
      var size_1 = 1;
      try {
        $l$loop_0: do {
          // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
          var this_3 = current_0;
          var before_0 = this_3.h17_1 - this_3.g17_1 | 0;
          var after_0;
          if (before_0 >= size_1) {
            try {
              // Inline function 'io.ktor.utils.io.charsets.decode.<anonymous>' call
              // Inline function 'io.ktor.utils.io.core.readDirectInt8Array' call
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'io.ktor.utils.io.core.read' call
              var this_4 = current_0;
              // Inline function 'kotlin.contracts.contract' call
              // Inline function 'io.ktor.utils.io.core.readDirectInt8Array.<anonymous>' call
              var memory_0 = this_4.f17_1;
              var start_0 = this_4.g17_1;
              var endExclusive_0 = this_4.h17_1;
              // Inline function 'io.ktor.utils.io.charsets.decode.<anonymous>.<anonymous>' call
              var view_0 = new Int8Array(memory_0.t1c_1.buffer, memory_0.t1c_1.byteOffset + start_0 | 0, endExclusive_0 - start_0 | 0);
              var result = decodeBufferImpl(view_0, decoder, max - charactersCopied | 0);
              dst.v(result.b1k_1);
              charactersCopied = charactersCopied + result.b1k_1.length | 0;
              var rc_0 = result.c1k_1;
              this_4.u1c(rc_0);
              var rc_1 = rc_0;
              if (rc_1 > 0)
                size_0 = 1;
              else if (size_0 === 8)
                size_0 = 0;
              else {
                size_0 = size_0 + 1 | 0;
              }
              size_1 = size_0;
            }finally {
              // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
              var this_5 = current_0;
              after_0 = this_5.h17_1 - this_5.g17_1 | 0;
            }
          } else {
            after_0 = before_0;
          }
          release_0 = false;
          var tmp_7;
          if (after_0 === 0) {
            tmp_7 = prepareReadNextHead(input, current_0);
          } else {
            var tmp_8;
            if (after_0 < size_1) {
              tmp_8 = true;
            } else {
              // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
              var this_6 = current_0;
              tmp_8 = (this_6.k17_1 - this_6.j17_1 | 0) < 8;
            }
            if (tmp_8) {
              completeReadHead(input, current_0);
              tmp_7 = prepareReadFirstHead(input, size_1);
            } else {
              tmp_7 = current_0;
            }
          }
          var tmp1_elvis_lhs_0 = tmp_7;
          var tmp_9;
          if (tmp1_elvis_lhs_0 == null) {
            break $l$loop_0;
          } else {
            tmp_9 = tmp1_elvis_lhs_0;
          }
          var next_0 = tmp_9;
          current_0 = next_0;
          release_0 = true;
        }
         while (size_1 > 0);
      }finally {
        if (release_0) {
          completeReadHead(input, current_0);
        }
      }
    }
  }
  return charactersCopied;
}
function encodeComplete(_this__u8e3s4, dst) {
  return true;
}
function decodeExactBytes(_this__u8e3s4, input, inputLength) {
  if (inputLength === 0)
    return '';
  // Inline function 'io.ktor.utils.io.core.Input.headRemaining' call
  if ((input.s18_1 - input.r18_1 | 0) >= inputLength) {
    var decoder = Decoder(get_charset_0(_this__u8e3s4).n1g_1, true);
    var head = input.i1f();
    var view = input.q18_1.t1c_1;
    var tmp$ret$2;
    $l$block: {
      // Inline function 'io.ktor.utils.io.js.decodeWrap' call
      try {
        // Inline function 'io.ktor.utils.io.charsets.decodeExactBytes.<anonymous>' call
        var subView = head.g17_1 === 0 && inputLength === view.byteLength ? view : new DataView(view.buffer, view.byteOffset + head.g17_1 | 0, inputLength);
        tmp$ret$2 = decoder.d1k(subView);
        break $l$block;
      } catch ($p) {
        if ($p instanceof Error) {
          var t = $p;
          var tmp0_elvis_lhs = t.message;
          throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs == null ? 'no cause provided' : tmp0_elvis_lhs));
        } else {
          throw $p;
        }
      }
    }
    var text = tmp$ret$2;
    input.u1c(inputLength);
    return text;
  }
  return decodeExactBytesSlow(_this__u8e3s4, input, inputLength);
}
function get_charset_0(_this__u8e3s4) {
  return _this__u8e3s4.r1j_1;
}
function decodeExactBytesSlow(_this__u8e3s4, input, inputLength) {
  var decoder = Decoder(get_name(get_charset_0(_this__u8e3s4)), true);
  var inputRemaining = inputLength;
  var sb = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(inputLength);
  $l$block_4: {
    // Inline function 'io.ktor.utils.io.js.decodeWrap' call
    try {
      // Inline function 'io.ktor.utils.io.charsets.decodeExactBytesSlow.<anonymous>' call
      $l$block: {
        // Inline function 'io.ktor.utils.io.core.takeWhileSize' call
        var release = true;
        var tmp0_elvis_lhs = prepareReadFirstHead(input, 6);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          break $l$block;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var current = tmp;
        var size = 6;
        try {
          $l$loop: do {
            // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
            var this_0 = current;
            var before = this_0.h17_1 - this_0.g17_1 | 0;
            var after;
            if (before >= size) {
              try {
                // Inline function 'io.ktor.utils.io.charsets.decodeExactBytesSlow.<anonymous>.<anonymous>' call
                var buffer = current;
                // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
                var chunkSize = buffer.h17_1 - buffer.g17_1 | 0;
                // Inline function 'kotlin.comparisons.minOf' call
                var b = inputRemaining;
                var size_0 = Math.min(chunkSize, b);
                var tmp_0;
                if (buffer.g17_1 === 0 && buffer.f17_1.t1c_1.byteLength === size_0) {
                  var tmp$ret$4;
                  $l$block_0: {
                    // Inline function 'io.ktor.utils.io.js.decodeStream' call
                    var buffer_0 = buffer.f17_1.t1c_1;
                    // Inline function 'io.ktor.utils.io.js.decodeWrap' call
                    try {
                      tmp$ret$4 = decoder.z1j(buffer_0, decodeOptions(true));
                      break $l$block_0;
                    } catch ($p) {
                      if ($p instanceof Error) {
                        var t = $p;
                        var tmp0_elvis_lhs_0 = t.message;
                        throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs_0 == null ? 'no cause provided' : tmp0_elvis_lhs_0));
                      } else {
                        throw $p;
                      }
                    }
                  }
                  tmp_0 = tmp$ret$4;
                } else {
                  var tmp$ret$6;
                  $l$block_1: {
                    // Inline function 'io.ktor.utils.io.js.decodeStream' call
                    var buffer_1 = new Int8Array(buffer.f17_1.t1c_1.buffer, buffer.f17_1.t1c_1.byteOffset + buffer.g17_1 | 0, size_0);
                    // Inline function 'io.ktor.utils.io.js.decodeWrap' call
                    try {
                      tmp$ret$6 = decoder.z1j(buffer_1, decodeOptions(true));
                      break $l$block_1;
                    } catch ($p) {
                      if ($p instanceof Error) {
                        var t_0 = $p;
                        var tmp0_elvis_lhs_1 = t_0.message;
                        throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs_1 == null ? 'no cause provided' : tmp0_elvis_lhs_1));
                      } else {
                        throw $p;
                      }
                    }
                  }
                  tmp_0 = tmp$ret$6;
                }
                var text = tmp_0;
                sb.la(text);
                buffer.u1c(size_0);
                inputRemaining = inputRemaining - size_0 | 0;
                size = inputRemaining > 0 ? 6 : 0;
              }finally {
                // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
                var this_1 = current;
                after = this_1.h17_1 - this_1.g17_1 | 0;
              }
            } else {
              after = before;
            }
            release = false;
            var tmp_1;
            if (after === 0) {
              tmp_1 = prepareReadNextHead(input, current);
            } else {
              var tmp_2;
              if (after < size) {
                tmp_2 = true;
              } else {
                // Inline function 'io.ktor.utils.io.core.Buffer.endGap' call
                var this_2 = current;
                tmp_2 = (this_2.k17_1 - this_2.j17_1 | 0) < 8;
              }
              if (tmp_2) {
                completeReadHead(input, current);
                tmp_1 = prepareReadFirstHead(input, size);
              } else {
                tmp_1 = current;
              }
            }
            var tmp1_elvis_lhs = tmp_1;
            var tmp_3;
            if (tmp1_elvis_lhs == null) {
              break $l$loop;
            } else {
              tmp_3 = tmp1_elvis_lhs;
            }
            var next = tmp_3;
            current = next;
            release = true;
          }
           while (size > 0);
        }finally {
          if (release) {
            completeReadHead(input, current);
          }
        }
      }
      if (inputRemaining > 0) {
        $l$block_2: {
          // Inline function 'io.ktor.utils.io.core.takeWhile' call
          var release_0 = true;
          var tmp0_elvis_lhs_2 = prepareReadFirstHead(input, 1);
          var tmp_4;
          if (tmp0_elvis_lhs_2 == null) {
            break $l$block_2;
          } else {
            tmp_4 = tmp0_elvis_lhs_2;
          }
          var current_0 = tmp_4;
          try {
            $l$loop_1: do {
              // Inline function 'io.ktor.utils.io.charsets.decodeExactBytesSlow.<anonymous>.<anonymous>' call
              var buffer_2 = current_0;
              // Inline function 'io.ktor.utils.io.core.Buffer.readRemaining' call
              var chunkSize_0 = buffer_2.h17_1 - buffer_2.g17_1 | 0;
              // Inline function 'kotlin.comparisons.minOf' call
              var b_0 = inputRemaining;
              var size_1 = Math.min(chunkSize_0, b_0);
              var tmp_5;
              if (buffer_2.g17_1 === 0 && buffer_2.f17_1.t1c_1.byteLength === size_1) {
                tmp_5 = decoder.d1k(buffer_2.f17_1.t1c_1);
              } else {
                var tmp$ret$14;
                $l$block_3: {
                  // Inline function 'io.ktor.utils.io.js.decodeStream' call
                  var buffer_3 = new Int8Array(buffer_2.f17_1.t1c_1.buffer, buffer_2.f17_1.t1c_1.byteOffset + buffer_2.g17_1 | 0, size_1);
                  // Inline function 'io.ktor.utils.io.js.decodeWrap' call
                  try {
                    tmp$ret$14 = decoder.z1j(buffer_3, decodeOptions(true));
                    break $l$block_3;
                  } catch ($p) {
                    if ($p instanceof Error) {
                      var t_1 = $p;
                      var tmp0_elvis_lhs_3 = t_1.message;
                      throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs_3 == null ? 'no cause provided' : tmp0_elvis_lhs_3));
                    } else {
                      throw $p;
                    }
                  }
                }
                tmp_5 = tmp$ret$14;
              }
              var text_0 = tmp_5;
              sb.la(text_0);
              buffer_2.u1c(size_1);
              inputRemaining = inputRemaining - size_1 | 0;
              if (false) {}
              release_0 = false;
              var tmp1_elvis_lhs_0 = prepareReadNextHead(input, current_0);
              var tmp_6;
              if (tmp1_elvis_lhs_0 == null) {
                break $l$loop_1;
              } else {
                tmp_6 = tmp1_elvis_lhs_0;
              }
              var next_0 = tmp_6;
              current_0 = next_0;
              release_0 = true;
            }
             while (true);
          }finally {
            if (release_0) {
              completeReadHead(input, current_0);
            }
          }
        }
      }
      sb.la(decoder.a1k());
      break $l$block_4;
    } catch ($p) {
      if ($p instanceof Error) {
        var t_2 = $p;
        var tmp0_elvis_lhs_4 = t_2.message;
        throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs_4 == null ? 'no cause provided' : tmp0_elvis_lhs_4));
      } else {
        throw $p;
      }
    }
  }
  if (inputRemaining > 0) {
    throw EOFException.m1d('Not enough bytes available: had only ' + (inputLength - inputRemaining | 0) + ' instead of ' + inputLength);
  }
  return sb.toString();
}
function decodeBufferImpl(_this__u8e3s4, nativeDecoder, maxCharacters) {
  if (maxCharacters === 0) {
    return new DecodeBufferResult('', 0);
  }
  try {
    var sizeInBytes = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtMost322komnqp70ag)(maxCharacters, _this__u8e3s4.byteLength);
    var text = nativeDecoder.d1k(_this__u8e3s4.subarray(0, sizeInBytes));
    if (text.length <= maxCharacters) {
      return new DecodeBufferResult(text, sizeInBytes);
    }
  } catch ($p) {
    var _ = $p;
  }
  return decodeBufferImplSlow(_this__u8e3s4, nativeDecoder, maxCharacters);
}
function decodeBufferImplSlow(_this__u8e3s4, nativeDecoder, maxCharacters) {
  var maxBytes = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceAtMost322komnqp70ag)(maxCharacters >= 268435455 ? 2147483647 : imul(maxCharacters, 8), _this__u8e3s4.byteLength);
  var sizeInBytes = maxBytes;
  while (sizeInBytes > 8) {
    try {
      var text = nativeDecoder.d1k(_this__u8e3s4.subarray(0, sizeInBytes));
      if (text.length <= maxCharacters) {
        return new DecodeBufferResult(text, sizeInBytes);
      }
    } catch ($p) {
      var _ = $p;
    }
    sizeInBytes = sizeInBytes / 2 | 0;
  }
  sizeInBytes = 8;
  while (sizeInBytes > 0) {
    try {
      var text_0 = nativeDecoder.d1k(_this__u8e3s4.subarray(0, sizeInBytes));
      if (text_0.length <= maxCharacters) {
        return new DecodeBufferResult(text_0, sizeInBytes);
      }
    } catch ($p) {
      var __0 = $p;
    }
    sizeInBytes = sizeInBytes - 1 | 0;
  }
  $l$block: {
    // Inline function 'io.ktor.utils.io.js.decodeWrap' call
    try {
      // Inline function 'io.ktor.utils.io.charsets.decodeBufferImplSlow.<anonymous>' call
      nativeDecoder.d1k(_this__u8e3s4);
      break $l$block;
    } catch ($p) {
      if ($p instanceof Error) {
        var t = $p;
        var tmp0_elvis_lhs = t.message;
        throw MalformedInputException.q1j('Failed to decode bytes: ' + (tmp0_elvis_lhs == null ? 'no cause provided' : tmp0_elvis_lhs));
      } else {
        throw $p;
      }
    }
  }
  throw MalformedInputException.q1j('Unable to decode buffer');
}
function encodeISO88591(input, fromIndex, toIndex, dst) {
  if (fromIndex >= toIndex)
    return 0;
  // Inline function 'io.ktor.utils.io.core.writeDirect' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.write' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.writeDirect.<anonymous>' call
  var memory = dst.f17_1;
  var start = dst.h17_1;
  var endExclusive = dst.j17_1;
  // Inline function 'io.ktor.utils.io.charsets.encodeISO88591.<anonymous>' call
  var view = memory.m1j(start, endExclusive - start | 0).t1c_1;
  var i8 = new Int8Array(view.buffer, view.byteOffset, view.byteLength);
  var writeIndex = 0;
  var inductionVariable = fromIndex;
  if (inductionVariable < toIndex)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      // Inline function 'kotlin.code' call
      var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(input, index);
      var character = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__toInt_impl_vasixd1g1ubcha2b2yr)(this_0);
      if (character > 255) {
        failedToMapError(character);
      }
      // Inline function 'org.khronos.webgl.set' call
      var tmp1 = writeIndex;
      writeIndex = tmp1 + 1 | 0;
      // Inline function 'kotlin.js.asDynamic' call
      i8[tmp1] = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toByte4i43936u611k)(character);
    }
     while (inductionVariable < toIndex);
  var rc = writeIndex;
  dst.v1c(rc);
  return toIndex - fromIndex | 0;
}
function failedToMapError(ch) {
  throw MalformedInputException.q1j('The character with unicode point ' + ch + " couldn't be mapped to ISO-8859-1 character");
}
function writeFully_4(_this__u8e3s4, src, offset, length) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? src.byteLength - offset | 0 : length;
  // Inline function 'io.ktor.utils.io.core.write' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.core.writeFully.<anonymous>' call
  var memory = _this__u8e3s4.f17_1;
  var dstOffset = _this__u8e3s4.h17_1;
  if ((_this__u8e3s4.j17_1 - dstOffset | 0) < length) {
    throw InsufficientSpaceException.q1d('Not enough free space to write ' + length + ' bytes');
  }
  copyTo_0(src, memory, offset, length, dstOffset);
  var rc = length;
  _this__u8e3s4.v1c(rc);
}
function get_PACKET_MAX_COPY_SIZE() {
  return PACKET_MAX_COPY_SIZE;
}
var PACKET_MAX_COPY_SIZE;
function String_0(bytes, offset, length, charset) {
  offset = offset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 0 : offset;
  length = length === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? bytes.length : length;
  charset = charset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? Charsets_getInstance().l1g_1 : charset;
  if (offset < 0 || length < 0 || (offset + length | 0) > bytes.length) {
    checkIndices(offset, length, bytes);
  }
  // Inline function 'kotlin.js.asDynamic' call
  var i8 = bytes;
  var bufferOffset = i8.byteOffset + offset | 0;
  var buffer = i8.buffer.slice(bufferOffset, bufferOffset + length | 0);
  var view = new ChunkBuffer(of_1(Companion_getInstance_4(), buffer), null, Companion_getInstance_2().w1a_1);
  view.b1d();
  var packet = ByteReadPacket.g1b(view, Companion_getInstance_2().x1a_1);
  return decode(charset.o1g(), packet, 2147483647);
}
function checkIndices(offset, length, bytes) {
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(offset >= 0)) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexOutOfBoundsException1qfr429iumro0.md('offset (' + offset + ") shouldn't be negative");
  }
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!(length >= 0)) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexOutOfBoundsException1qfr429iumro0.md('length (' + length + ") shouldn't be negative");
  }
  // Inline function 'kotlin.require' call
  // Inline function 'kotlin.contracts.contract' call
  if (!((offset + length | 0) <= bytes.length)) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexOutOfBoundsException1qfr429iumro0.md('offset (' + offset + ') + length (' + length + ') > bytes.size (' + bytes.length + ')');
  }
  throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexOutOfBoundsException1qfr429iumro0.ld();
}
function Decoder(encoding, fatal) {
  fatal = fatal === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? true : fatal;
  var tmp;
  try {
    tmp = toKtor(new TextDecoder(encoding, textDecoderOptions(fatal)));
  } catch ($p) {
    var tmp_0;
    if ($p instanceof Error) {
      var cause = $p;
      tmp_0 = new TextDecoderFallback(encoding, fatal);
    } else {
      throw $p;
    }
    tmp = tmp_0;
  }
  return tmp;
}
function decodeOptions(stream) {
  // Inline function 'kotlin.apply' call
  var this_0 = new Object();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.js.decodeOptions.<anonymous>' call
  // Inline function 'kotlin.with' call
  // Inline function 'kotlin.js.asDynamic' call
  // Inline function 'kotlin.contracts.contract' call
  this_0.stream = stream;
  return this_0;
}
function toKtor(_this__u8e3s4) {
  return new toKtor$1(_this__u8e3s4);
}
function textDecoderOptions(fatal) {
  fatal = fatal === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : fatal;
  // Inline function 'kotlin.apply' call
  var this_0 = new Object();
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.utils.io.js.textDecoderOptions.<anonymous>' call
  // Inline function 'kotlin.with' call
  // Inline function 'kotlin.js.asDynamic' call
  // Inline function 'kotlin.contracts.contract' call
  this_0.fatal = fatal;
  return this_0;
}
function get_ENCODING_ALIASES() {
  _init_properties_TextDecoderFallback_kt__nrrftl();
  return ENCODING_ALIASES;
}
var ENCODING_ALIASES;
function get_REPLACEMENT() {
  _init_properties_TextDecoderFallback_kt__nrrftl();
  return REPLACEMENT;
}
var REPLACEMENT;
function toCodePoint(_this__u8e3s4) {
  _init_properties_TextDecoderFallback_kt__nrrftl();
  var value = _this__u8e3s4 & 255;
  if (isASCII(value)) {
    return value;
  }
  return get_WIN1252_TABLE()[value - 128 | 0];
}
function isASCII(_this__u8e3s4) {
  _init_properties_TextDecoderFallback_kt__nrrftl();
  return 0 <= _this__u8e3s4 ? _this__u8e3s4 <= 127 : false;
}
var properties_initialized_TextDecoderFallback_kt_7y92ax;
function _init_properties_TextDecoderFallback_kt__nrrftl() {
  if (!properties_initialized_TextDecoderFallback_kt_7y92ax) {
    properties_initialized_TextDecoderFallback_kt_7y92ax = true;
    ENCODING_ALIASES = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setOf45ia9pnfhe90)(['ansi_x3.4-1968', 'ascii', 'cp1252', 'cp819', 'csisolatin1', 'ibm819', 'iso-8859-1', 'iso-ir-100', 'iso8859-1', 'iso88591', 'iso_8859-1', 'iso_8859-1:1987', 'l1', 'latin1', 'us-ascii', 'windows-1252', 'x-cp1252']);
    // Inline function 'kotlin.byteArrayOf' call
    REPLACEMENT = new Int8Array([-17, -65, -67]);
  }
}
function get_WIN1252_TABLE() {
  _init_properties_Win1252Table_kt__tl0v64();
  return WIN1252_TABLE;
}
var WIN1252_TABLE;
var properties_initialized_Win1252Table_kt_pkmjoq;
function _init_properties_Win1252Table_kt__tl0v64() {
  if (!properties_initialized_Win1252Table_kt_pkmjoq) {
    properties_initialized_Win1252Table_kt_pkmjoq = true;
    // Inline function 'kotlin.intArrayOf' call
    WIN1252_TABLE = new Int32Array([8364, -1, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, -1, 381, -1, -1, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, -1, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]);
  }
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($awaitAtLeastNBytesAvailableForWriteCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($awaitAtLeastNBytesAvailableForReadCOROUTINE$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($writeFullyCOROUTINE$9);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($writeFullyCOROUTINE$10);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($readRemainingCOROUTINE$26);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($readRemainingSuspendCOROUTINE$27);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($readAvailableCOROUTINE$30);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($readAvailableCOROUTINE$33);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($awaitInternalAtLeast1COROUTINE$38);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($awaitSuspendCOROUTINE$39);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(ByteReadChannel, 'ByteReadChannel', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [3, 1, 2, 0, 5]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(ByteChannelSequentialBase).l1b = readRemaining$default;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ByteChannelSequentialBase, 'ByteChannelSequentialBase', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [ByteReadChannel], [1, 3, 0, 2, 5]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ClosedWriteChannelException, 'ClosedWriteChannelException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CloseElement, 'CloseElement');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(WriterScope, 'WriterScope', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.CoroutineScopefcb5f5dwqcas]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(ChannelJob).po = _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.cancel$default2gzemzkga6aea;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(ChannelJob).ko = _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeOnCompletion$default6tc1ee8hzqwd;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChannelJob, 'ChannelJob', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Job29shfjfygy86k], [0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChannelScope, 'ChannelScope', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.CoroutineScopefcb5f5dwqcas, WriterScope]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(launchChannel$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Buffer, 'Buffer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InsufficientSpaceException, 'InsufficientSpaceException', InsufficientSpaceException.q1d);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DefaultPool, 'DefaultPool');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DefaultBufferPool, 'DefaultBufferPool', DefaultBufferPool);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Output, 'Output');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(BytePacketBuilder, 'BytePacketBuilder', BytePacketBuilder);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Input, 'Input');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ByteReadPacket, 'ByteReadPacket');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChunkBuffer$Companion$EmptyPool$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(NoPoolImpl, 'NoPoolImpl');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChunkBuffer$Companion$NoPool$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChunkBuffer$Companion$NoPoolManuallyManaged$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ChunkBuffer, 'ChunkBuffer');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MalformedUTF8InputException, 'MalformedUTF8InputException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($sleepCOROUTINE$52);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($trySuspendCOROUTINE$53);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AwaitingSlot, 'AwaitingSlot', AwaitingSlot, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($copyToSequentialImplCOROUTINE$54);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($copyToTailCOROUTINE$55);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ByteArrayPool$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ByteChannelJS, 'ByteChannelJS', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [3, 1, 0, 2, 5]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_3);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(DefaultAllocator, 'DefaultAllocator');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_4);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Memory, 'Memory');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_5);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Charset, 'Charset');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Charsets, 'Charsets');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(MalformedInputException, 'MalformedInputException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CharsetDecoder, 'CharsetDecoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CharsetEncoder, 'CharsetEncoder');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CharsetImpl, 'CharsetImpl');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CharsetEncoderImpl, 'CharsetEncoderImpl');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CharsetDecoderImpl, 'CharsetDecoderImpl');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DecodeBufferResult, 'DecodeBufferResult');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(IOException, 'IOException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(EOFException, 'EOFException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(toKtor$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(TextDecoderFallback, 'TextDecoderFallback');
//endregion
//region block: init
Companion_instance = new Companion();
Companion_instance_1 = new Companion_1();
DefaultAllocator_instance = new DefaultAllocator();
Companion_instance_5 = new Companion_5();
PACKET_MAX_COPY_SIZE = 200;
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-io.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-serialization-kotlinx-json.mjs":
/*!*********************************************************!*\
  !*** ./kotlin/ktor-ktor-serialization-kotlinx-json.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   jsonu6qnfo3b405p: () => (/* binding */ json)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ktor-ktor-http.mjs */ "./kotlin/ktor-ktor-http.mjs");
/* harmony import */ var _ktor_ktor_serialization_kotlinx_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-serialization-kotlinx.mjs */ "./kotlin/ktor-ktor-serialization-kotlinx.mjs");
/* harmony import */ var _kotlinx_serialization_kotlinx_serialization_json_js_ir_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-json-js-ir.mjs */ "./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.mjs");




//region block: imports
//endregion
//region block: pre-declaration
//endregion
function get_DefaultJson() {
  _init_properties_JsonSupport_kt__yf438r();
  return DefaultJson;
}
var DefaultJson;
function json(_this__u8e3s4, json, contentType) {
  json = json === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? get_DefaultJson() : json;
  contentType = contentType === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_1__.Application_getInstance1d4ly18wdhadx)().i1r_1 : contentType;
  _init_properties_JsonSupport_kt__yf438r();
  (0,_ktor_ktor_serialization_kotlinx_mjs__WEBPACK_IMPORTED_MODULE_2__.serialization1fpeds7cruos4)(_this__u8e3s4, contentType, json);
}
function DefaultJson$lambda($this$Json) {
  _init_properties_JsonSupport_kt__yf438r();
  $this$Json.x3x_1 = true;
  $this$Json.a3y_1 = true;
  $this$Json.h3y_1 = true;
  $this$Json.b3y_1 = true;
  $this$Json.c3y_1 = false;
  $this$Json.f3y_1 = false;
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
}
var properties_initialized_JsonSupport_kt_9cgd93;
function _init_properties_JsonSupport_kt__yf438r() {
  if (!properties_initialized_JsonSupport_kt_9cgd93) {
    properties_initialized_JsonSupport_kt_9cgd93 = true;
    DefaultJson = (0,_kotlinx_serialization_kotlinx_serialization_json_js_ir_mjs__WEBPACK_IMPORTED_MODULE_3__.Jsonsmkyu9xjl7fv)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, DefaultJson$lambda);
  }
}
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-serialization-kotlinx-json.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-serialization-kotlinx.mjs":
/*!****************************************************!*\
  !*** ./kotlin/ktor-ktor-serialization-kotlinx.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serialization1fpeds7cruos4: () => (/* binding */ serialization)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs */ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs");
/* harmony import */ var _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-http.mjs */ "./kotlin/ktor-ktor-http.mjs");
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");
/* harmony import */ var _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ktor-ktor-io.mjs */ "./kotlin/ktor-ktor-io.mjs");
/* harmony import */ var _ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ktor-ktor-serialization.mjs */ "./kotlin/ktor-ktor-serialization.mjs");






//region block: imports
//endregion
//region block: pre-declaration
class KotlinxSerializationConverter$serializeNullable$o$collect$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($$this$unsafeFlow, $contentType, $charset, $typeInfo, $value, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.x3s_1 = $$this$unsafeFlow;
    $box.y3s_1 = $contentType;
    $box.z3s_1 = $charset;
    $box.a3t_1 = $typeInfo;
    $box.b3t_1 = $value;
    super(resultContinuation, $box);
  }
  c25(value, $completion) {
    var tmp = this.d25(value, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.c25((p1 == null ? true : !(p1 == null)) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp_0 = this;
            tmp_0.d3t_1 = this.x3s_1;
            var tmp_1 = this;
            tmp_1.e3t_1 = this.c3t_1;
            var tmp_2 = this;
            tmp_2.f3t_1 = this.e3t_1;
            this.lb_1 = 1;
            suspendResult = this.f3t_1.h3t(this.y3s_1, this.z3s_1, this.a3t_1, this.b3t_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.g3t_1 = suspendResult;
            this.lb_1 = 2;
            suspendResult = this.d3t_1.ly(this.g3t_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  d25(value, completion) {
    var i = new KotlinxSerializationConverter$serializeNullable$o$collect$slambda(this.x3s_1, this.y3s_1, this.z3s_1, this.a3t_1, this.b3t_1, completion);
    i.c3t_1 = value;
    return i;
  }
}
class $collectCOROUTINE$2 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, collector, resultContinuation) {
    super(resultContinuation);
    this.q3t_1 = _this__u8e3s4;
    this.r3t_1 = collector;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp_0 = this;
            tmp_0.s3t_1 = this.r3t_1;
            this.lb_1 = 1;
            var tmp_1 = KotlinxSerializationConverter$serializeNullable$o$collect$slambda_0(this.s3t_1, this.q3t_1.u3t_1, this.q3t_1.v3t_1, this.q3t_1.w3t_1, this.q3t_1.x3t_1, null);
            suspendResult = this.q3t_1.t3t_1.ux(new sam$kotlinx_coroutines_flow_FlowCollector$0(tmp_1), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class KotlinxSerializationConverter$deserialize$o$collect$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($$this$unsafeFlow, $charset, $typeInfo, $content, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.g3u_1 = $$this$unsafeFlow;
    $box.h3u_1 = $charset;
    $box.i3u_1 = $typeInfo;
    $box.j3u_1 = $content;
    super(resultContinuation, $box);
  }
  c25(value, $completion) {
    var tmp = this.d25(value, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.c25((p1 == null ? true : !(p1 == null)) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp_0 = this;
            tmp_0.l3u_1 = this.g3u_1;
            var tmp_1 = this;
            tmp_1.m3u_1 = this.k3u_1;
            var tmp_2 = this;
            tmp_2.n3u_1 = this.m3u_1;
            this.lb_1 = 1;
            suspendResult = this.n3u_1.x23(this.h3u_1, this.i3u_1, this.j3u_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.o3u_1 = suspendResult;
            this.lb_1 = 2;
            suspendResult = this.l3u_1.ly(this.o3u_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  d25(value, completion) {
    var i = new KotlinxSerializationConverter$deserialize$o$collect$slambda(this.g3u_1, this.h3u_1, this.i3u_1, this.j3u_1, completion);
    i.k3u_1 = value;
    return i;
  }
}
class $collectCOROUTINE$3 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, collector, resultContinuation) {
    super(resultContinuation);
    this.x3u_1 = _this__u8e3s4;
    this.y3u_1 = collector;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp_0 = this;
            tmp_0.z3u_1 = this.y3u_1;
            this.lb_1 = 1;
            var tmp_1 = KotlinxSerializationConverter$deserialize$o$collect$slambda_0(this.z3u_1, this.x3u_1.b3v_1, this.x3u_1.c3v_1, this.x3u_1.d3v_1, null);
            suspendResult = this.x3u_1.a3v_1.ux(new sam$kotlinx_coroutines_flow_FlowCollector$0_0(tmp_1), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class sam$kotlinx_coroutines_flow_FlowCollector$0 {
  constructor(function_0) {
    this.e3v_1 = function_0;
  }
  ly(value, $completion) {
    return this.e3v_1(value, $completion);
  }
}
class sam$kotlinx_coroutines_flow_FlowCollector$0_0 {
  constructor(function_0) {
    this.f3v_1 = function_0;
  }
  ly(value, $completion) {
    return this.f3v_1(value, $completion);
  }
}
class _no_name_provided__qut3iv {
  constructor($this, $contentType, $charset, $typeInfo, $value) {
    this.t3t_1 = $this;
    this.u3t_1 = $contentType;
    this.v3t_1 = $charset;
    this.w3t_1 = $typeInfo;
    this.x3t_1 = $value;
  }
  my(collector, $completion) {
    var tmp = new $collectCOROUTINE$2(this, collector, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ux(collector, $completion) {
    return this.my(collector, $completion);
  }
}
class KotlinxSerializationConverter$serializeNullable$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  p3v(it, $completion) {
    var tmp = this.q3v(it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.p3v((p1 == null ? true : p1 instanceof _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__.OutgoingContent3t2ohmyam9o76) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        if (tmp === 0) {
          this.mb_1 = 1;
          return !(this.o3v_1 == null);
        } else if (tmp === 1) {
          throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  }
  q3v(it, completion) {
    var i = new KotlinxSerializationConverter$serializeNullable$slambda(completion);
    i.o3v_1 = it;
    return i;
  }
}
class _no_name_provided__qut3iv_0 {
  constructor($this, $charset, $typeInfo, $content) {
    this.a3v_1 = $this;
    this.b3v_1 = $charset;
    this.c3v_1 = $typeInfo;
    this.d3v_1 = $content;
  }
  my(collector, $completion) {
    var tmp = new $collectCOROUTINE$3(this, collector, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ux(collector, $completion) {
    return this.my(collector, $completion);
  }
}
class KotlinxSerializationConverter$deserialize$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($content, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.z3v_1 = $content;
    super(resultContinuation, $box);
  }
  d26(it, $completion) {
    var tmp = this.d25(it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.d26((p1 == null ? true : !(p1 == null)) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        if (tmp === 0) {
          this.mb_1 = 1;
          return !(this.a3w_1 == null) || this.z3v_1.y15();
        } else if (tmp === 1) {
          throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  }
  d25(it, completion) {
    var i = new KotlinxSerializationConverter$deserialize$slambda(this.z3v_1, completion);
    i.a3w_1 = it;
    return i;
  }
}
class $serializeNullableCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, contentType, charset, typeInfo, value, resultContinuation) {
    super(resultContinuation);
    this.j3w_1 = _this__u8e3s4;
    this.k3w_1 = contentType;
    this.l3w_1 = charset;
    this.m3w_1 = typeInfo;
    this.n3w_1 = value;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            var this_0 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.asFlow3ngsnn5xpz8pw)(this.j3w_1.p3w_1);
            var tmp_0 = new _no_name_provided__qut3iv(this_0, this.k3w_1, this.l3w_1, this.m3w_1, this.n3w_1);
            suspendResult = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.firstOrNull1cr4vijjhhs0e)(tmp_0, KotlinxSerializationConverter$serializeNullable$slambda_0(null), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fromExtension = suspendResult;
            if (!(fromExtension == null))
              return fromExtension;
            var tmp_1;
            try {
              tmp_1 = serializerForTypeInfo(this.j3w_1.o3w_1.e3d(), this.m3w_1);
            } catch ($p) {
              var tmp_2;
              if ($p instanceof _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.SerializationExceptioneqrdve3ts2n9) {
                var cause = $p;
                tmp_2 = guessSerializer(this.n3w_1, this.j3w_1.o3w_1.e3d());
              } else {
                throw $p;
              }
              tmp_1 = tmp_2;
            }

            var serializer = tmp_1;
            return serializeContent(this.j3w_1, serializer, this.j3w_1.o3w_1, this.n3w_1, this.k3w_1, this.l3w_1);
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $deserializeCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, charset, typeInfo, content, resultContinuation) {
    super(resultContinuation);
    this.y3w_1 = _this__u8e3s4;
    this.z3w_1 = charset;
    this.a3x_1 = typeInfo;
    this.b3x_1 = content;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 5;
            this.lb_1 = 1;
            var this_0 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.asFlow3ngsnn5xpz8pw)(this.y3w_1.p3w_1);
            var tmp_0 = new _no_name_provided__qut3iv_0(this_0, this.z3w_1, this.a3x_1, this.b3x_1);
            suspendResult = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.firstOrNull1cr4vijjhhs0e)(tmp_0, KotlinxSerializationConverter$deserialize$slambda_0(this.b3x_1, null), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.c3x_1 = suspendResult;
            var tmp_1;
            if (!this.y3w_1.p3w_1.f1()) {
              tmp_1 = !(this.c3x_1 == null) || this.b3x_1.y15();
            } else {
              tmp_1 = false;
            }

            if (tmp_1)
              return this.c3x_1;
            this.d3x_1 = serializerForTypeInfo(this.y3w_1.o3w_1.e3d(), this.a3x_1);
            this.lb_1 = 2;
            suspendResult = this.b3x_1.l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var contentPacket = suspendResult;
            this.mb_1 = 3;
            var tmp0_subject = this.y3w_1.o3w_1;
            var tmp_2;
            if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp0_subject, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.StringFormat2r2ka8mzcb3mi)) {
              tmp_2 = this.y3w_1.o3w_1.o39(this.d3x_1, (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_4__.readText3x4cv5p7hylp)(contentPacket, this.z3w_1));
            } else {
              if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp0_subject, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.BinaryFormat3f3aelhmz0ro1)) {
                tmp_2 = this.y3w_1.o3w_1.q39(this.d3x_1, (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_4__.readBytes2b47ed7nra7rg)(contentPacket));
              } else {
                (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_4__.discard2nktejhnnvzvk)(contentPacket);
                var message = 'Unsupported format ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.y3w_1.o3w_1);
                throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
              }
            }

            return tmp_2;
          case 3:
            this.mb_1 = 5;
            var tmp_3 = this.ob_1;
            if (tmp_3 instanceof Error) {
              var cause = this.ob_1;
              throw _ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_5__.JsonConvertExceptiongnc5x6xwaf77.s23('Illegal input: ' + cause.message, cause);
            } else {
              throw this.ob_1;
            }

          case 4:
            this.mb_1 = 5;
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 5:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 5) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class KotlinxSerializationConverter {
  constructor(format) {
    this.o3w_1 = format;
    this.p3w_1 = extensions(this.o3w_1);
    // Inline function 'kotlin.require' call
    var tmp;
    var tmp_0 = this.o3w_1;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_0, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.BinaryFormat3f3aelhmz0ro1)) {
      tmp = true;
    } else {
      var tmp_1 = this.o3w_1;
      tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_1, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.StringFormat2r2ka8mzcb3mi);
    }
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp) {
      // Inline function 'io.ktor.serialization.kotlinx.KotlinxSerializationConverter.<anonymous>' call
      var message = 'Only binary and string formats are supported, ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.o3w_1) + ' is not supported.';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalArgumentException2asla15b5jaob.o((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
  }
  e3x(contentType, charset, typeInfo, value, $completion) {
    return this.f3x(contentType, charset, typeInfo, value, $completion);
  }
  v23(contentType, charset, typeInfo, value, $completion) {
    return this.e3x(contentType, charset, typeInfo, value, $completion);
  }
  f3x(contentType, charset, typeInfo, value, $completion) {
    var tmp = new $serializeNullableCOROUTINE$0(this, contentType, charset, typeInfo, value, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  w23(contentType, charset, typeInfo, value, $completion) {
    return this.f3x(contentType, charset, typeInfo, value, $completion);
  }
  x23(charset, typeInfo, content, $completion) {
    var tmp = new $deserializeCOROUTINE$1(this, charset, typeInfo, content, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
}
//endregion
function extensions(format) {
  // Inline function 'kotlin.collections.mapNotNull' call
  // Inline function 'kotlin.collections.mapNotNullTo' call
  var this_0 = get_providers();
  var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  // Inline function 'kotlin.collections.forEach' call
  var tmp0_iterator = this_0.w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'kotlin.collections.mapNotNullTo.<anonymous>' call
    // Inline function 'io.ktor.serialization.kotlinx.extensions.<anonymous>' call
    var tmp0_safe_receiver = element.o3s(format);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      destination.g(tmp0_safe_receiver);
    }
  }
  return destination;
}
function serialization(_this__u8e3s4, contentType, format) {
  _this__u8e3s4.u23(contentType, new KotlinxSerializationConverter(format));
}
function KotlinxSerializationConverter$serializeNullable$o$collect$slambda_0($$this$unsafeFlow, $contentType, $charset, $typeInfo, $value, resultContinuation) {
  var i = new KotlinxSerializationConverter$serializeNullable$o$collect$slambda($$this$unsafeFlow, $contentType, $charset, $typeInfo, $value, resultContinuation);
  var l = function (value, $completion) {
    return i.c25(value, $completion);
  };
  l.$arity = 1;
  return l;
}
function KotlinxSerializationConverter$deserialize$o$collect$slambda_0($$this$unsafeFlow, $charset, $typeInfo, $content, resultContinuation) {
  var i = new KotlinxSerializationConverter$deserialize$o$collect$slambda($$this$unsafeFlow, $charset, $typeInfo, $content, resultContinuation);
  var l = function (value, $completion) {
    return i.c25(value, $completion);
  };
  l.$arity = 1;
  return l;
}
function serializeContent($this, serializer, format, value, contentType, charset) {
  var tmp;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(format, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.StringFormat2r2ka8mzcb3mi)) {
    var content = format.n39((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(serializer, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.KSerializerzf77vz1967fq) ? serializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), value);
    tmp = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__.TextContent1rb6ftlpvl1d2(content, (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__.withCharsetIfNeeded3sz33ys0x9vfx)(contentType, charset));
  } else {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(format, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.BinaryFormat3f3aelhmz0ro1)) {
      var content_0 = format.p39((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(serializer, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.KSerializerzf77vz1967fq) ? serializer : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), value);
      tmp = new _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__.ByteArrayContent9zol65b22hp0(content_0, contentType);
    } else {
      var message = 'Unsupported format ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(format);
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
  }
  return tmp;
}
function KotlinxSerializationConverter$serializeNullable$slambda_0(resultContinuation) {
  var i = new KotlinxSerializationConverter$serializeNullable$slambda(resultContinuation);
  var l = function (it, $completion) {
    return i.p3v(it, $completion);
  };
  l.$arity = 1;
  return l;
}
function KotlinxSerializationConverter$deserialize$slambda_0($content, resultContinuation) {
  var i = new KotlinxSerializationConverter$deserialize$slambda($content, resultContinuation);
  var l = function (it, $completion) {
    return i.d26(it, $completion);
  };
  l.$arity = 1;
  return l;
}
function serializerForTypeInfo(_this__u8e3s4, typeInfo) {
  var module_0 = _this__u8e3s4;
  var tmp0_safe_receiver = typeInfo.b1q_1;
  var tmp;
  if (tmp0_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.serialization.kotlinx.serializerForTypeInfo.<anonymous>' call
    var tmp_0;
    if (tmp0_safe_receiver.we().f1()) {
      tmp_0 = null;
    } else {
      tmp_0 = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.serializerOrNull31x2b6nu6gruj)(module_0, tmp0_safe_receiver);
    }
    tmp = tmp_0;
  }
  var tmp2_elvis_lhs = tmp;
  var tmp_1;
  if (tmp2_elvis_lhs == null) {
    var tmp1_safe_receiver = module_0.q3a(typeInfo.z1p_1);
    tmp_1 = tmp1_safe_receiver == null ? null : maybeNullable(tmp1_safe_receiver, typeInfo);
  } else {
    tmp_1 = tmp2_elvis_lhs;
  }
  var tmp3_elvis_lhs = tmp_1;
  return tmp3_elvis_lhs == null ? maybeNullable((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.serializer1rka18p0rjk4x)(typeInfo.z1p_1), typeInfo) : tmp3_elvis_lhs;
}
function guessSerializer(value, module_0) {
  var tmp;
  if (value == null) {
    tmp = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.get_nullable197rfua9r7fsz)((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.serializer1x79l67jvwntn)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringCompanionObject_instance2odz3s3zbrixa));
  } else {
    if (!(value == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(value, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtList3hktaavzmj137) : false) {
      tmp = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.ListSerializer1hxuk9dx5n9du)(elementSerializer(value, module_0));
    } else {
      if (!(value == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isArray1hxjqtqy632bc)(value) : false) {
        var tmp1_safe_receiver = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.firstOrNull1gk7vzkf4h3nq)(value);
        var tmp_0;
        if (tmp1_safe_receiver == null) {
          tmp_0 = null;
        } else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'io.ktor.serialization.kotlinx.guessSerializer.<anonymous>' call
          tmp_0 = guessSerializer(tmp1_safe_receiver, module_0);
        }
        var tmp2_elvis_lhs = tmp_0;
        tmp = tmp2_elvis_lhs == null ? (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.ListSerializer1hxuk9dx5n9du)((0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.serializer1x79l67jvwntn)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringCompanionObject_instance2odz3s3zbrixa)) : tmp2_elvis_lhs;
      } else {
        if (!(value == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(value, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtSetjrjc7fhfd6b9) : false) {
          tmp = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.SetSerializert3lb0yy9iftr)(elementSerializer(value, module_0));
        } else {
          if (!(value == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(value, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMap140uvy3s5zad8) : false) {
            var keySerializer = elementSerializer(value.r2(), module_0);
            var valueSerializer = elementSerializer(value.s2(), module_0);
            tmp = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.MapSerializer11kmegt3g5c1g)(keySerializer, valueSerializer);
          } else {
            var tmp3_elvis_lhs = module_0.q3a((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(value));
            tmp = tmp3_elvis_lhs == null ? (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.serializer1rka18p0rjk4x)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(value)) : tmp3_elvis_lhs;
          }
        }
      }
    }
  }
  var tmp_1 = tmp;
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp_1, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.KSerializerzf77vz1967fq) ? tmp_1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
}
function maybeNullable(_this__u8e3s4, typeInfo) {
  var tmp;
  var tmp0_safe_receiver = typeInfo.b1q_1;
  if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.xe()) === true) {
    tmp = (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.get_nullable197rfua9r7fsz)(_this__u8e3s4);
  } else {
    tmp = _this__u8e3s4;
  }
  return tmp;
}
function elementSerializer(_this__u8e3s4, module_0) {
  // Inline function 'kotlin.collections.distinctBy' call
  // Inline function 'kotlin.collections.map' call
  var this_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.filterNotNull3qfgcwmxhwfxe)(_this__u8e3s4);
  // Inline function 'kotlin.collections.mapTo' call
  var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(this_0, 10));
  var tmp0_iterator = this_0.w();
  while (tmp0_iterator.x()) {
    var item = tmp0_iterator.y();
    // Inline function 'io.ktor.serialization.kotlinx.elementSerializer.<anonymous>' call
    var tmp$ret$0 = guessSerializer(item, module_0);
    destination.g(tmp$ret$0);
  }
  var set = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.HashSet2dzve9y63nf0v.a9();
  var list = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  var tmp0_iterator_0 = destination.w();
  while (tmp0_iterator_0.x()) {
    var e = tmp0_iterator_0.y();
    // Inline function 'io.ktor.serialization.kotlinx.elementSerializer.<anonymous>' call
    var key = e.u38().x3a();
    if (set.g(key)) {
      list.g(e);
    }
  }
  var serializers = list;
  if (serializers.z() > 1) {
    // Inline function 'kotlin.error' call
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(serializers, 10));
    var tmp0_iterator_1 = serializers.w();
    while (tmp0_iterator_1.x()) {
      var item_0 = tmp0_iterator_1.y();
      // Inline function 'io.ktor.serialization.kotlinx.elementSerializer.<anonymous>' call
      var tmp$ret$5 = item_0.u38().x3a();
      destination_0.g(tmp$ret$5);
    }
    var message = 'Serializing collections of different element types is not yet supported. ' + ('Selected serializers: ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(destination_0));
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  var tmp0_elvis_lhs = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.singleOrNullrknfaxokm1sl)(serializers);
  var selected = tmp0_elvis_lhs == null ? (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.serializer1x79l67jvwntn)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringCompanionObject_instance2odz3s3zbrixa) : tmp0_elvis_lhs;
  if (selected.u38().t3a()) {
    return selected;
  }
  if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(selected, _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.KSerializerzf77vz1967fq))
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  var tmp$ret$8;
  $l$block_0: {
    // Inline function 'kotlin.collections.any' call
    var tmp;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(_this__u8e3s4, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Collection1k04j3hzsbod0)) {
      tmp = _this__u8e3s4.f1();
    } else {
      tmp = false;
    }
    if (tmp) {
      tmp$ret$8 = false;
      break $l$block_0;
    }
    var tmp0_iterator_2 = _this__u8e3s4.w();
    while (tmp0_iterator_2.x()) {
      var element = tmp0_iterator_2.y();
      // Inline function 'io.ktor.serialization.kotlinx.elementSerializer.<anonymous>' call
      if (element == null) {
        tmp$ret$8 = true;
        break $l$block_0;
      }
    }
    tmp$ret$8 = false;
  }
  if (tmp$ret$8) {
    return (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_1__.get_nullable197rfua9r7fsz)(selected);
  }
  return selected;
}
function get_providers() {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(KotlinxSerializationConverter$serializeNullable$o$collect$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($collectCOROUTINE$2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(KotlinxSerializationConverter$deserialize$o$collect$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($collectCOROUTINE$3);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(sam$kotlinx_coroutines_flow_FlowCollector$0, 'sam$kotlinx_coroutines_flow_FlowCollector$0', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.FlowCollector26clgpmzihvke], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(sam$kotlinx_coroutines_flow_FlowCollector$0_0, 'sam$kotlinx_coroutines_flow_FlowCollector$0', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.FlowCollector26clgpmzihvke], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(_no_name_provided__qut3iv, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(KotlinxSerializationConverter$serializeNullable$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(_no_name_provided__qut3iv_0, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(KotlinxSerializationConverter$deserialize$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($serializeNullableCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($deserializeCOROUTINE$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(KotlinxSerializationConverter, 'KotlinxSerializationConverter', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_ktor_ktor_serialization_mjs__WEBPACK_IMPORTED_MODULE_5__.ContentConverteryzo4k0ursexh], [4, 3]);
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-serialization-kotlinx.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-serialization.mjs":
/*!********************************************!*\
  !*** ./kotlin/ktor-ktor-serialization.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Configuration20xgygxdzhlk5: () => (/* binding */ Configuration),
/* harmony export */   ContentConverteryzo4k0ursexh: () => (/* binding */ ContentConverter),
/* harmony export */   JsonConvertExceptiongnc5x6xwaf77: () => (/* binding */ JsonConvertException),
/* harmony export */   deserialize3rwoipl45p8oi: () => (/* binding */ deserialize),
/* harmony export */   register$default3vdkjcc7m2cj0: () => (/* binding */ register$default),
/* harmony export */   suitableCharset1jgdcpdzbzgzn: () => (/* binding */ suitableCharset)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ktor-ktor-io.mjs */ "./kotlin/ktor-ktor-io.mjs");
/* harmony import */ var _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ktor-ktor-http.mjs */ "./kotlin/ktor-ktor-http.mjs");
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");




//region block: imports
//endregion
//region block: pre-declaration
class ContentConvertException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Exceptiondt2hlxn7j7vw {
  static o23(message, cause) {
    cause = cause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cause;
    var $this = this.dd(message, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.n23_1);
    return $this;
  }
}
class JsonConvertException extends ContentConvertException {
  static s23(message, cause) {
    cause = cause === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : cause;
    var $this = this.o23(message, cause);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.r23_1);
    return $this;
  }
}
class Configuration {}
function register$default(contentType, converter, configuration, $super) {
  var tmp;
  if (configuration === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    tmp = Configuration$register$lambda;
  } else {
    tmp = configuration;
  }
  configuration = tmp;
  var tmp_0;
  if ($super === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya) {
    this.t23(contentType, converter, configuration);
    tmp_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  } else {
    tmp_0 = $super.t23.call(this, contentType, converter, configuration);
  }
  return tmp_0;
}
class ContentConverter {}
function serialize(contentType, charset, typeInfo, value, $completion) {
  return this.w23(contentType, charset, typeInfo, value, $completion);
}
function serializeNullable(contentType, charset, typeInfo, value, $completion) {
  return this.v23(contentType, charset, typeInfo, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(value), $completion);
}
class sam$kotlinx_coroutines_flow_FlowCollector$0 {
  constructor(function_0) {
    this.k24_1 = function_0;
  }
  ly(value, $completion) {
    return this.k24_1(value, $completion);
  }
}
class deserialize$o$collect$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($$this$unsafeFlow, $charset, $typeInfo, $body, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.t24_1 = $$this$unsafeFlow;
    $box.u24_1 = $charset;
    $box.v24_1 = $typeInfo;
    $box.w24_1 = $body;
    super(resultContinuation, $box);
  }
  c25(value, $completion) {
    var tmp = this.d25(value, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.c25((p1 == null ? true : !(p1 == null)) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp_0 = this;
            tmp_0.y24_1 = this.t24_1;
            var tmp_1 = this;
            tmp_1.z24_1 = this.x24_1;
            var tmp_2 = this;
            tmp_2.a25_1 = this.z24_1;
            this.lb_1 = 1;
            suspendResult = this.a25_1.x23(this.u24_1, this.v24_1, this.w24_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.b25_1 = suspendResult;
            this.lb_1 = 2;
            suspendResult = this.y24_1.ly(this.b25_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
  d25(value, completion) {
    var i = new deserialize$o$collect$slambda(this.t24_1, this.u24_1, this.v24_1, this.w24_1, completion);
    i.x24_1 = value;
    return i;
  }
}
class $collectCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, collector, resultContinuation) {
    super(resultContinuation);
    this.m25_1 = _this__u8e3s4;
    this.n25_1 = collector;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            var tmp_0 = this;
            tmp_0.o25_1 = this.n25_1;
            this.lb_1 = 1;
            var tmp_1 = deserialize$o$collect$slambda_0(this.o25_1, this.m25_1.q25_1, this.m25_1.r25_1, this.m25_1.s25_1, null);
            suspendResult = this.m25_1.p25_1.ux(new sam$kotlinx_coroutines_flow_FlowCollector$0(tmp_1), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class _no_name_provided__qut3iv {
  constructor($this, $charset, $typeInfo, $body) {
    this.p25_1 = $this;
    this.q25_1 = $charset;
    this.r25_1 = $typeInfo;
    this.s25_1 = $body;
  }
  my(collector, $completion) {
    var tmp = new $collectCOROUTINE$1(this, collector, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ux(collector, $completion) {
    return this.my(collector, $completion);
  }
}
class deserialize$slambda extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor($body, resultContinuation, $box) {
    if ($box === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
      $box = {};
    $box.b26_1 = $body;
    super(resultContinuation, $box);
  }
  d26(it, $completion) {
    var tmp = this.d25(it, $completion);
    tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    tmp.ob_1 = null;
    return tmp.tb();
  }
  ad(p1, $completion) {
    return this.d26((p1 == null ? true : !(p1 == null)) ? p1 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), $completion);
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        if (tmp === 0) {
          this.mb_1 = 1;
          return !(this.c26_1 == null) || this.b26_1.y15();
        } else if (tmp === 1) {
          throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  }
  d25(it, completion) {
    var i = new deserialize$slambda(this.b26_1, completion);
    i.c26_1 = it;
    return i;
  }
}
class $deserializeCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, body, typeInfo, charset, resultContinuation) {
    super(resultContinuation);
    this.g24_1 = _this__u8e3s4;
    this.h24_1 = body;
    this.i24_1 = typeInfo;
    this.j24_1 = charset;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            var this_0 = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.asFlow3ngsnn5xpz8pw)(this.g24_1);
            var tmp_0 = new _no_name_provided__qut3iv(this_0, this.j24_1, this.i24_1, this.h24_1);
            suspendResult = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.firstOrNull1cr4vijjhhs0e)(tmp_0, deserialize$slambda_0(this.h24_1, null), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var result = suspendResult;
            var tmp_1;
            if (!(result == null)) {
              tmp_1 = result;
            } else {
              if (!this.h24_1.y15()) {
                tmp_1 = this.h24_1;
              } else {
                var tmp0_safe_receiver = this.i24_1.b1q_1;
                if ((tmp0_safe_receiver == null ? null : tmp0_safe_receiver.xe()) === true) {
                  tmp_1 = _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__.NullBody_instance9oj4j8z4op1j;
                } else {
                  throw ContentConvertException.o23('No suitable converter found for ' + this.i24_1.toString());
                }
              }
            }

            return tmp_1;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
//endregion
function Configuration$register$lambda($this$null) {
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
}
function deserialize(_this__u8e3s4, body, typeInfo, charset, $completion) {
  var tmp = new $deserializeCOROUTINE$0(_this__u8e3s4, body, typeInfo, charset, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function suitableCharset(_this__u8e3s4, defaultCharset) {
  defaultCharset = defaultCharset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1 : defaultCharset;
  var tmp0_elvis_lhs = suitableCharsetOrNull(_this__u8e3s4, defaultCharset);
  return tmp0_elvis_lhs == null ? defaultCharset : tmp0_elvis_lhs;
}
function suitableCharsetOrNull(_this__u8e3s4, defaultCharset) {
  defaultCharset = defaultCharset === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Charsets_getInstancemd62gu5po4os)().l1g_1 : defaultCharset;
  var tmp0_iterator = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__.parseAndSortHeader33xgq5fx7y6j1)(_this__u8e3s4.f1l((0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_2__.HttpHeaders_getInstancekqele34vb34f)().u1s_1)).w();
  while (tmp0_iterator.x()) {
    var charset = tmp0_iterator.y().bi();
    if (charset === '*')
      return defaultCharset;
    else if (_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_instance2svn8ax26syum.o1j(charset))
      return _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.Companion_instance2svn8ax26syum.n1j(charset);
  }
  return null;
}
function deserialize$o$collect$slambda_0($$this$unsafeFlow, $charset, $typeInfo, $body, resultContinuation) {
  var i = new deserialize$o$collect$slambda($$this$unsafeFlow, $charset, $typeInfo, $body, resultContinuation);
  var l = function (value, $completion) {
    return i.c25(value, $completion);
  };
  l.$arity = 1;
  return l;
}
function deserialize$slambda_0($body, resultContinuation) {
  var i = new deserialize$slambda($body, resultContinuation);
  var l = function (it, $completion) {
    return i.d26(it, $completion);
  };
  l.$arity = 1;
  return l;
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(ContentConvertException, 'ContentConvertException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(JsonConvertException, 'JsonConvertException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Configuration, 'Configuration');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(ContentConverter, 'ContentConverter', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [4, 3]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(sam$kotlinx_coroutines_flow_FlowCollector$0, 'sam$kotlinx_coroutines_flow_FlowCollector$0', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_3__.FlowCollector26clgpmzihvke], [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(deserialize$o$collect$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($collectCOROUTINE$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(_no_name_provided__qut3iv, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForLambda3af3he42mmnh)(deserialize$slambda, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($deserializeCOROUTINE$0);
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-serialization.mjs.map


/***/ }),

/***/ "./kotlin/ktor-ktor-utils.mjs":
/*!************************************!*\
  !*** ./kotlin/ktor-ktor-utils.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AttributeKey3aq8ytwgx54f7: () => (/* binding */ AttributeKey),
/* harmony export */   AttributesJsFn25rjfgcprgprf: () => (/* binding */ AttributesJsFn),
/* harmony export */   CopyOnWriteHashMap2wz01l72sexe7: () => (/* binding */ CopyOnWriteHashMap),
/* harmony export */   GMTDate36bhedawynxlf: () => (/* binding */ GMTDate_0),
/* harmony export */   JsType_instance35xixcvz0qegz: () => (/* binding */ JsType_instance),
/* harmony export */   KtorSimpleLogger1xdphsp5l4e48: () => (/* binding */ KtorSimpleLogger),
/* harmony export */   Pipeline2vw6c5wpzxajt: () => (/* binding */ Pipeline),
/* harmony export */   PipelineContext34fsb0mycu471: () => (/* binding */ PipelineContext),
/* harmony export */   PipelinePhase2q3d54imxjlma: () => (/* binding */ PipelinePhase),
/* harmony export */   PlatformUtils_getInstance3trl22jwg7wgb: () => (/* binding */ PlatformUtils_getInstance),
/* harmony export */   SilentSupervisorlzoikirj0zeo: () => (/* binding */ SilentSupervisor),
/* harmony export */   StringValuesBuilderImpl3ey9etj3bwnqf: () => (/* binding */ StringValuesBuilderImpl),
/* harmony export */   StringValuesImpl2l95y9du7b61t: () => (/* binding */ StringValuesImpl),
/* harmony export */   StringValuesjqid5a6cuday: () => (/* binding */ StringValues),
/* harmony export */   appendAlltwnjnu28pmtx: () => (/* binding */ appendAll),
/* harmony export */   forEachghjt92rkrpzo: () => (/* binding */ forEach),
/* harmony export */   get3oezx9z3zutmm: () => (/* binding */ get_0),
/* harmony export */   get_platform3348u7kp42j9x: () => (/* binding */ get_platform),
/* harmony export */   instanceOf2cx3k00nj6a0p: () => (/* binding */ instanceOf),
/* harmony export */   isLowerCase2jodys5jo7d58: () => (/* binding */ isLowerCase),
/* harmony export */   putAll10o0q8e6mgnzr: () => (/* binding */ putAll),
/* harmony export */   toByteArray2wlo6zvfmc1un: () => (/* binding */ toByteArray),
/* harmony export */   toCharArray1qby3f4cdahde: () => (/* binding */ toCharArray),
/* harmony export */   toLowerCasePreservingASCIIRulesa2d90zyoc6kw: () => (/* binding */ toLowerCasePreservingASCIIRules),
/* harmony export */   typeInfoImpl3ju54ew51hieg: () => (/* binding */ typeInfoImpl)
/* harmony export */ });
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ktor-ktor-io.mjs */ "./kotlin/ktor-ktor-io.mjs");
/* harmony import */ var _kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kotlinx-coroutines-core.mjs */ "./kotlin/kotlinx-coroutines-core.mjs");
/* harmony import */ var _kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kotlinx-atomicfu.mjs */ "./kotlin/kotlinx-atomicfu.mjs");




//region block: imports
var imul = Math.imul;
//endregion
//region block: pre-declaration
class AttributeKey {
  constructor(name) {
    this.k1k_1 = name;
    // Inline function 'kotlin.text.isEmpty' call
    var this_0 = this.k1k_1;
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(this_0) === 0) {
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4("Name can't be blank");
    }
  }
  toString() {
    return 'AttributeKey: ' + this.k1k_1;
  }
  equals(other) {
    if (this === other)
      return true;
    if (other == null || !(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(this).equals((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getKClassFromExpression3vpejubogshaw)(other)))
      return false;
    if (!(other instanceof AttributeKey))
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.k1k_1 === other.k1k_1))
      return false;
    return true;
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(this.k1k_1);
  }
}
class Attributes {}
function get(key) {
  var tmp0_elvis_lhs = this.m1k(key);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('No instance for key ' + key.toString());
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
class $toByteArrayCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, resultContinuation) {
    super(resultContinuation);
    this.a1l_1 = _this__u8e3s4;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            this.lb_1 = 1;
            suspendResult = this.a1l_1.l1b(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            return (0,_ktor_ktor_io_mjs__WEBPACK_IMPORTED_MODULE_1__.readBytes2b47ed7nra7rg)(ARGUMENT);
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class CaseInsensitiveMap {
  constructor() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.d1l_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.ya();
  }
  z() {
    return this.d1l_1.z();
  }
  e1l(key) {
    return this.d1l_1.o2(new CaseInsensitiveString(key));
  }
  o2(key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return false;
    return this.e1l((!(key == null) ? typeof key === 'string' : false) ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  f1l(key) {
    return this.d1l_1.q2(caseInsensitive(key));
  }
  q2(key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.f1l((!(key == null) ? typeof key === 'string' : false) ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  f1() {
    return this.d1l_1.f1();
  }
  j2() {
    this.d1l_1.j2();
  }
  g1l(key, value) {
    return this.d1l_1.t2(caseInsensitive(key), value);
  }
  t2(key, value) {
    var tmp = (!(key == null) ? typeof key === 'string' : false) ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    return this.g1l(tmp, !(value == null) ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  h1l(from) {
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = from.j1().w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'io.ktor.util.CaseInsensitiveMap.putAll.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var key = element.k1();
      // Inline function 'kotlin.collections.component2' call
      var value = element.l1();
      this.g1l(key, value);
    }
  }
  v2(from) {
    return this.h1l(from);
  }
  i1l(key) {
    return this.d1l_1.u2(caseInsensitive(key));
  }
  u2(key) {
    if (!(!(key == null) ? typeof key === 'string' : false))
      return null;
    return this.i1l((!(key == null) ? typeof key === 'string' : false) ? key : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  r2() {
    var tmp = this.d1l_1.r2();
    var tmp_0 = CaseInsensitiveMap$_get_keys_$lambda_ptzlqj;
    return new DelegatingMutableSet(tmp, tmp_0, CaseInsensitiveMap$_get_keys_$lambda_ptzlqj_0);
  }
  j1() {
    var tmp = this.d1l_1.j1();
    var tmp_0 = CaseInsensitiveMap$_get_entries_$lambda_r32w19;
    return new DelegatingMutableSet(tmp, tmp_0, CaseInsensitiveMap$_get_entries_$lambda_r32w19_0);
  }
  s2() {
    return this.d1l_1.s2();
  }
  equals(other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(other instanceof CaseInsensitiveMap);
    }
    if (tmp)
      return false;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(other.d1l_1, this.d1l_1);
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.d1l_1);
  }
}
class Entry_0 {
  constructor(key, value) {
    this.j1l_1 = key;
    this.k1l_1 = value;
  }
  k1() {
    return this.j1l_1;
  }
  l1() {
    return this.k1l_1;
  }
  hashCode() {
    return (527 + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(this.j1l_1)) | 0) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(this.k1l_1)) | 0;
  }
  equals(other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(!(other == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(other, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Entry2xmjmyutzoq3p) : false);
    }
    if (tmp)
      return false;
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(other.k1(), this.j1l_1) && (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(other.l1(), this.k1l_1);
  }
  toString() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.j1l_1) + '=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.k1l_1);
  }
}
class _no_name_provided__qut3iv extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractCoroutineContextElement2rpehg0hv5szw {
  constructor() {
    super(_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.Key_instancexdagtxajq561);
  }
  ss(context, exception) {
    // Inline function 'io.ktor.util.SilentSupervisor.<anonymous>' call
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  }
}
class DelegatingMutableSet$iterator$1 {
  constructor(this$0) {
    this.n1l_1 = this$0;
    this.m1l_1 = this$0.o1l_1.w();
  }
  x() {
    return this.m1l_1.x();
  }
  y() {
    return this.n1l_1.p1l_1(this.m1l_1.y());
  }
  n5() {
    return this.m1l_1.n5();
  }
}
class DelegatingMutableSet {
  constructor(delegate, convertTo, convert) {
    this.o1l_1 = delegate;
    this.p1l_1 = convertTo;
    this.q1l_1 = convert;
    this.r1l_1 = this.o1l_1.z();
  }
  s1l(_this__u8e3s4) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(_this__u8e3s4, 10));
    var tmp0_iterator = _this__u8e3s4.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'io.ktor.util.DelegatingMutableSet.convert.<anonymous>' call
      var tmp$ret$0 = this.q1l_1(item);
      destination.g(tmp$ret$0);
    }
    return destination;
  }
  t1l(_this__u8e3s4) {
    // Inline function 'kotlin.collections.map' call
    // Inline function 'kotlin.collections.mapTo' call
    var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.collectionSizeOrDefault36dulx8yinfqm)(_this__u8e3s4, 10));
    var tmp0_iterator = _this__u8e3s4.w();
    while (tmp0_iterator.x()) {
      var item = tmp0_iterator.y();
      // Inline function 'io.ktor.util.DelegatingMutableSet.convertTo.<anonymous>' call
      var tmp$ret$0 = this.p1l_1(item);
      destination.g(tmp$ret$0);
    }
    return destination;
  }
  z() {
    return this.r1l_1;
  }
  u1l(element) {
    return this.o1l_1.g(this.q1l_1(element));
  }
  g(element) {
    return this.u1l((element == null ? true : !(element == null)) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  v1l(elements) {
    return this.o1l_1.b1(this.s1l(elements));
  }
  b1(elements) {
    return this.v1l(elements);
  }
  j2() {
    this.o1l_1.j2();
  }
  w1l(element) {
    return this.o1l_1.h2(this.q1l_1(element));
  }
  h2(element) {
    if (!(element == null ? true : !(element == null)))
      return false;
    return this.w1l((element == null ? true : !(element == null)) ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  x1l(elements) {
    return this.o1l_1.i2(this.s1l(elements));
  }
  i2(elements) {
    return this.x1l(elements);
  }
  f1() {
    return this.o1l_1.f1();
  }
  w() {
    return new DelegatingMutableSet$iterator$1(this);
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.o1l_1);
  }
  equals(other) {
    var tmp;
    if (other == null) {
      tmp = true;
    } else {
      tmp = !(!(other == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(other, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtSetjrjc7fhfd6b9) : false);
    }
    if (tmp)
      return false;
    var elements = this.t1l(this.o1l_1);
    var tmp_0;
    if (other.i2(elements)) {
      // Inline function 'kotlin.collections.containsAll' call
      tmp_0 = elements.i2(other);
    } else {
      tmp_0 = false;
    }
    return tmp_0;
  }
  toString() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.t1l(this.o1l_1));
  }
}
class Platform extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Enum3alwj03lh1n41 {}
class PlatformUtils {
  constructor() {
    PlatformUtils_instance = this;
    this.y1l_1 = get_platform(this).equals(Platform_Browser_getInstance());
    this.z1l_1 = get_platform(this).equals(Platform_Node_getInstance());
    this.a1m_1 = get_platform(this).equals(Platform_Jvm_getInstance());
    this.b1m_1 = get_platform(this).equals(Platform_Native_getInstance());
    this.c1m_1 = get_isDevelopmentMode(this);
    this.d1m_1 = get_isNewMemoryModel(this);
  }
}
class StringValues {}
function get_0(name) {
  var tmp0_safe_receiver = this.f1m(name);
  return tmp0_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.firstOrNull1982767dljvdy)(tmp0_safe_receiver);
}
function forEach(body) {
  var tmp0_iterator = this.h1m().w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'io.ktor.util.StringValues.forEach.<anonymous>' call
    // Inline function 'kotlin.collections.component1' call
    var k = element.k1();
    // Inline function 'kotlin.collections.component2' call
    var v = element.l1();
    body(k, v);
  }
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
}
class StringValuesBuilderImpl {
  constructor(caseInsensitiveName, size) {
    caseInsensitiveName = caseInsensitiveName === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : caseInsensitiveName;
    size = size === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? 8 : size;
    this.j1m_1 = caseInsensitiveName;
    this.k1m_1 = this.j1m_1 ? caseInsensitiveMap() : _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.za(size);
  }
  e1m() {
    return this.j1m_1;
  }
  f1m(name) {
    return this.k1m_1.q2(name);
  }
  n1m(name, value) {
    var tmp0_safe_receiver = this.k1m_1.q2(name);
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.h2(value);
    return tmp1_elvis_lhs == null ? false : tmp1_elvis_lhs;
  }
  g1m() {
    return this.k1m_1.r2();
  }
  f1() {
    return this.k1m_1.f1();
  }
  h1m() {
    return unmodifiable(this.k1m_1.j1());
  }
  o1m(name, value) {
    this.p1m(value);
    var list = ensureListForKey(this, name);
    list.j2();
    list.g(value);
  }
  f1l(name) {
    var tmp0_safe_receiver = this.f1m(name);
    return tmp0_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.firstOrNull1982767dljvdy)(tmp0_safe_receiver);
  }
  q1m(name, value) {
    this.p1m(value);
    ensureListForKey(this, name).g(value);
  }
  r1m(stringValues) {
    stringValues.i1m(StringValuesBuilderImpl$appendAll$lambda(this));
  }
  m1m(name, values) {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    var list = ensureListForKey(this, name);
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = values.w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'io.ktor.util.StringValuesBuilderImpl.appendAll.<anonymous>.<anonymous>' call
      this.p1m(element);
      list.g(element);
    }
  }
  s1m(name) {
    this.k1m_1.u2(name);
  }
  j2() {
    this.k1m_1.j2();
  }
  l1m(name) {
  }
  p1m(value) {
  }
}
class StringValuesImpl {
  constructor(caseInsensitiveName, values) {
    caseInsensitiveName = caseInsensitiveName === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : caseInsensitiveName;
    values = values === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)() : values;
    this.t1m_1 = caseInsensitiveName;
    var tmp;
    if (this.t1m_1) {
      tmp = caseInsensitiveMap();
    } else {
      // Inline function 'kotlin.collections.mutableMapOf' call
      tmp = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.ya();
    }
    var newMap = tmp;
    // Inline function 'kotlin.collections.forEach' call
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = values.j1().w();
    while (tmp0_iterator.x()) {
      var element = tmp0_iterator.y();
      // Inline function 'io.ktor.util.StringValuesImpl.<anonymous>' call
      // Inline function 'kotlin.collections.component1' call
      var key = element.k1();
      // Inline function 'kotlin.collections.component2' call
      var value = element.l1();
      // Inline function 'kotlin.collections.set' call
      // Inline function 'kotlin.collections.List' call
      // Inline function 'kotlin.collections.MutableList' call
      var size = value.z();
      var list = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.a1(size);
      // Inline function 'kotlin.repeat' call
      // Inline function 'kotlin.contracts.contract' call
      var inductionVariable = 0;
      if (inductionVariable < size)
        do {
          var index = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          // Inline function 'kotlin.collections.MutableList.<anonymous>' call
          // Inline function 'io.ktor.util.StringValuesImpl.<anonymous>.<anonymous>' call
          var tmp$ret$4 = value.c1(index);
          list.g(tmp$ret$4);
        }
         while (inductionVariable < size);
      newMap.t2(key, list);
    }
    this.u1m_1 = newMap;
  }
  e1m() {
    return this.t1m_1;
  }
  f1l(name) {
    var tmp0_safe_receiver = listForKey(this, name);
    return tmp0_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.firstOrNull1982767dljvdy)(tmp0_safe_receiver);
  }
  f1m(name) {
    return listForKey(this, name);
  }
  g1m() {
    return unmodifiable(this.u1m_1.r2());
  }
  f1() {
    return this.u1m_1.f1();
  }
  h1m() {
    return unmodifiable(this.u1m_1.j1());
  }
  i1m(body) {
    // Inline function 'kotlin.collections.iterator' call
    var tmp0_iterator = this.u1m_1.j1().w();
    while (tmp0_iterator.x()) {
      var tmp1_loop_parameter = tmp0_iterator.y();
      // Inline function 'kotlin.collections.component1' call
      var key = tmp1_loop_parameter.k1();
      // Inline function 'kotlin.collections.component2' call
      var value = tmp1_loop_parameter.l1();
      body(key, value);
    }
  }
  toString() {
    return 'StringValues(case=' + !this.t1m_1 + ') ' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.h1m());
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(!(other == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(other, StringValues) : false))
      return false;
    if (!(this.t1m_1 === other.e1m()))
      return false;
    return entriesEquals(this.h1m(), other.h1m());
  }
  hashCode() {
    return entriesHashCode(this.h1m(), imul(31, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getBooleanHashCode1bbj3u6b3v0a7)(this.t1m_1)));
  }
}
class CaseInsensitiveString {
  constructor(content) {
    this.b1l_1 = content;
    var tmp = this;
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$1 = this.b1l_1.toLowerCase();
    tmp.c1l_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.getStringHashCode26igk1bx568vk)(tmp$ret$1);
  }
  equals(other) {
    var tmp0_safe_receiver = other instanceof CaseInsensitiveString ? other : null;
    var tmp1_safe_receiver = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.b1l_1;
    return (tmp1_safe_receiver == null ? null : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2v6cggk171b6e)(tmp1_safe_receiver, this.b1l_1, true)) === true;
  }
  hashCode() {
    return this.c1l_1;
  }
  toString() {
    return this.b1l_1;
  }
}
class CopyOnWriteHashMap {
  constructor() {
    this.v1m_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_3__.atomic$ref$130aurmcwdfdf1)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyMapr06gerzljqtm)());
  }
  w1m(key) {
    return this.v1m_1.kotlinx$atomicfu$value.q2(key);
  }
}
class Companion {
  constructor() {
    Companion_instance_0 = this;
    this.x1m_1 = GMTDate_0(new _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Long2qws0ah9gnpki(0, 0));
  }
}
class GMTDate {
  constructor(seconds, minutes, hours, dayOfWeek, dayOfMonth, dayOfYear, month, year, timestamp) {
    Companion_getInstance();
    this.y1m_1 = seconds;
    this.z1m_1 = minutes;
    this.a1n_1 = hours;
    this.b1n_1 = dayOfWeek;
    this.c1n_1 = dayOfMonth;
    this.d1n_1 = dayOfYear;
    this.e1n_1 = month;
    this.f1n_1 = year;
    this.g1n_1 = timestamp;
  }
  h1n(other) {
    return this.g1n_1.q1(other.g1n_1);
  }
  d(other) {
    return this.h1n(other instanceof GMTDate ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
  }
  toString() {
    return 'GMTDate(seconds=' + this.y1m_1 + ', minutes=' + this.z1m_1 + ', hours=' + this.a1n_1 + ', dayOfWeek=' + this.b1n_1.toString() + ', dayOfMonth=' + this.c1n_1 + ', dayOfYear=' + this.d1n_1 + ', month=' + this.e1n_1.toString() + ', year=' + this.f1n_1 + ', timestamp=' + this.g1n_1.toString() + ')';
  }
  hashCode() {
    var result = this.y1m_1;
    result = imul(result, 31) + this.z1m_1 | 0;
    result = imul(result, 31) + this.a1n_1 | 0;
    result = imul(result, 31) + this.b1n_1.hashCode() | 0;
    result = imul(result, 31) + this.c1n_1 | 0;
    result = imul(result, 31) + this.d1n_1 | 0;
    result = imul(result, 31) + this.e1n_1.hashCode() | 0;
    result = imul(result, 31) + this.f1n_1 | 0;
    result = imul(result, 31) + this.g1n_1.hashCode() | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof GMTDate))
      return false;
    var tmp0_other_with_cast = other instanceof GMTDate ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.y1m_1 === tmp0_other_with_cast.y1m_1))
      return false;
    if (!(this.z1m_1 === tmp0_other_with_cast.z1m_1))
      return false;
    if (!(this.a1n_1 === tmp0_other_with_cast.a1n_1))
      return false;
    if (!this.b1n_1.equals(tmp0_other_with_cast.b1n_1))
      return false;
    if (!(this.c1n_1 === tmp0_other_with_cast.c1n_1))
      return false;
    if (!(this.d1n_1 === tmp0_other_with_cast.d1n_1))
      return false;
    if (!this.e1n_1.equals(tmp0_other_with_cast.e1n_1))
      return false;
    if (!(this.f1n_1 === tmp0_other_with_cast.f1n_1))
      return false;
    if (!this.g1n_1.equals(tmp0_other_with_cast.g1n_1))
      return false;
    return true;
  }
}
class Companion_0 {
  i1n(ordinal) {
    return values()[ordinal];
  }
}
class WeekDay extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Enum3alwj03lh1n41 {
  constructor(name, ordinal, value) {
    super(name, ordinal);
    this.l1n_1 = value;
  }
}
class Companion_1 {
  i1n(ordinal) {
    return values_0()[ordinal];
  }
}
class Month extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Enum3alwj03lh1n41 {
  constructor(name, ordinal, value) {
    super(name, ordinal);
    this.o1n_1 = value;
  }
}
class $proceedLoopCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(_this__u8e3s4, resultContinuation) {
    super(resultContinuation);
    this.x1n_1 = _this__u8e3s4;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 6;
            this.lb_1 = 1;
            continue $sm;
          case 1:
            this.y1n_1 = this.x1n_1.f1o_1;
            if (this.y1n_1 === -1) {
              this.lb_1 = 5;
              continue $sm;
            } else {
              this.lb_1 = 2;
              continue $sm;
            }

          case 2:
            this.z1n_1 = this.x1n_1.c1o_1;
            if (this.y1n_1 >= this.z1n_1.z()) {
              this.x1n_1.g1o();
              this.lb_1 = 5;
              continue $sm;
            } else {
              this.lb_1 = 3;
              continue $sm;
            }

          case 3:
            this.a1o_1 = this.z1n_1.c1(this.y1n_1);
            this.x1n_1.f1o_1 = this.y1n_1 + 1 | 0;
            this.lb_1 = 4;
            var tmp_0 = this.a1o_1;
            suspendResult = ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isSuspendFunction153vlp5l2npj9)(tmp_0, 2) ? tmp_0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)())(this.x1n_1, this.x1n_1.e1o_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            this.lb_1 = 1;
            continue $sm;
          case 5:
            return this.x1n_1.e1o_1;
          case 6:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 6) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class PipelineContext {
  constructor(context) {
    this.g1p_1 = context;
  }
}
class DebugPipelineContext extends PipelineContext {
  constructor(context, interceptors, subject, coroutineContext) {
    super(context);
    this.c1o_1 = interceptors;
    this.d1o_1 = coroutineContext;
    this.e1o_1 = subject;
    this.f1o_1 = 0;
  }
  gn() {
    return this.d1o_1;
  }
  h1o() {
    return this.e1o_1;
  }
  g1o() {
    this.f1o_1 = -1;
  }
  i1o(subject, $completion) {
    this.e1o_1 = subject;
    return this.j1o($completion);
  }
  j1o($completion) {
    var index = this.f1o_1;
    if (index < 0)
      return this.e1o_1;
    if (index >= this.c1o_1.z()) {
      this.g1o();
      return this.e1o_1;
    }
    return proceedLoop(this, $completion);
  }
  k1o(initial, $completion) {
    this.f1o_1 = 0;
    this.e1o_1 = initial;
    return this.j1o($completion);
  }
}
class Companion_2 {
  constructor() {
    Companion_instance_3 = this;
    var tmp = this;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp.q1o_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  }
}
class PhaseContent {
  static r1o(phase, relation, interceptors) {
    Companion_getInstance_2();
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createThis2j2avj17cvnv2)(this);
    $this.l1o_1 = phase;
    $this.m1o_1 = relation;
    $this.n1o_1 = interceptors;
    $this.o1o_1 = true;
    return $this;
  }
  static s1o(phase, relation) {
    Companion_getInstance_2();
    var tmp = Companion_getInstance_2().q1o_1;
    var $this = this.r1o(phase, relation, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(tmp, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableList1beimitadwkna) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)());
    // Inline function 'kotlin.check' call
    // Inline function 'kotlin.contracts.contract' call
    if (!Companion_getInstance_2().q1o_1.f1()) {
      // Inline function 'io.ktor.util.pipeline.PhaseContent.<init>.<anonymous>' call
      var message = 'The shared empty array list has been modified';
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
    }
    return $this;
  }
  q14() {
    return this.n1o_1.f1();
  }
  z() {
    return this.n1o_1.z();
  }
  t1o(interceptor) {
    if (this.o1o_1) {
      copyInterceptors(this);
    }
    this.n1o_1.g(interceptor);
  }
  u1o(destination) {
    var interceptors = this.n1o_1;
    if (destination instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl) {
      destination.x6(destination.z() + interceptors.z() | 0);
    }
    var inductionVariable = 0;
    var last = interceptors.z();
    if (inductionVariable < last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        destination.g(interceptors.c1(index));
      }
       while (inductionVariable < last);
  }
  v1o() {
    this.o1o_1 = true;
    return this.n1o_1;
  }
  p1o() {
    // Inline function 'kotlin.apply' call
    // Inline function 'kotlin.collections.mutableListOf' call
    var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.util.pipeline.PhaseContent.copiedInterceptors.<anonymous>' call
    this_0.b1(this.n1o_1);
    return this_0;
  }
  toString() {
    return 'Phase `' + this.l1o_1.w1o_1 + '`, ' + this.z() + ' handlers';
  }
}
class Pipeline {
  constructor(phases) {
    this.x1o_1 = AttributesJsFn(true);
    this.y1o_1 = false;
    this.z1o_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.mutableListOf6oorvk2mtdmp)(phases.slice());
    this.a1p_1 = 0;
    this.b1p_1 = (0,_kotlinx_atomicfu_mjs__WEBPACK_IMPORTED_MODULE_3__.atomic$ref$130aurmcwdfdf1)(null);
    this.c1p_1 = false;
    this.d1p_1 = null;
  }
  e1p() {
    return this.y1o_1;
  }
  f1p(context, subject, $completion) {
    // Inline function 'kotlin.js.getCoroutineContext' call
    var tmp$ret$0 = $completion.rb();
    return createContext(this, context, subject, tmp$ret$0).k1o(subject, $completion);
  }
  h1p(reference, phase) {
    if (hasPhase(this, phase))
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    var index = findPhaseIndex(this, reference);
    if (index === -1) {
      throw InvalidPhaseException.j1p('Phase ' + reference.toString() + ' was not registered for this pipeline');
    }
    var lastRelatedPhaseIndex = index;
    var inductionVariable = index + 1 | 0;
    var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1yw0x4k50k51w)(this.z1o_1);
    if (inductionVariable <= last)
      $l$loop_0: do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = this.z1o_1.c1(i);
        var tmp1_safe_receiver = tmp instanceof PhaseContent ? tmp : null;
        var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.m1o_1;
        var tmp_0;
        if (tmp2_elvis_lhs == null) {
          break $l$loop_0;
        } else {
          tmp_0 = tmp2_elvis_lhs;
        }
        var relation = tmp_0;
        var tmp3_safe_receiver = relation instanceof After ? relation : null;
        var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.k1p_1;
        var tmp_1;
        if (tmp4_elvis_lhs == null) {
          continue $l$loop_0;
        } else {
          tmp_1 = tmp4_elvis_lhs;
        }
        var relatedTo = tmp_1;
        lastRelatedPhaseIndex = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(relatedTo, reference) ? i : lastRelatedPhaseIndex;
      }
       while (!(i === last));
    this.z1o_1.l2(lastRelatedPhaseIndex + 1 | 0, PhaseContent.s1o(phase, new After(reference)));
  }
  l1p(reference, phase) {
    if (hasPhase(this, phase))
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    var index = findPhaseIndex(this, reference);
    if (index === -1) {
      throw InvalidPhaseException.j1p('Phase ' + reference.toString() + ' was not registered for this pipeline');
    }
    this.z1o_1.l2(index, PhaseContent.s1o(phase, new Before(reference)));
  }
  m1p(phase, block) {
    var tmp0_elvis_lhs = findPhase(this, phase);
    var tmp;
    if (tmp0_elvis_lhs == null) {
      throw InvalidPhaseException.j1p('Phase ' + phase.toString() + ' was not registered for this pipeline');
    } else {
      tmp = tmp0_elvis_lhs;
    }
    var phaseContent = tmp;
    if (typeof block !== 'function')
      (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (tryAddToPhaseFastPath(this, phase, block)) {
      this.a1p_1 = this.a1p_1 + 1 | 0;
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    phaseContent.t1o(block);
    this.a1p_1 = this.a1p_1 + 1 | 0;
    resetInterceptorsList(this);
    this.n1p();
  }
  n1p() {
  }
}
class PipelinePhase {
  constructor(name) {
    this.w1o_1 = name;
  }
  toString() {
    return "Phase('" + this.w1o_1 + "')";
  }
}
class InvalidPhaseException extends Error {
  static j1p(message) {
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createThis2j2avj17cvnv2)(this);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.setPropertiesToThrowableInstance1w2jjvl9y77yc)($this, message);
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.i1p_1);
    return $this;
  }
}
class PipelinePhaseRelation {}
class After extends PipelinePhaseRelation {
  constructor(relativeTo) {
    super();
    this.k1p_1 = relativeTo;
  }
}
class Before extends PipelinePhaseRelation {
  constructor(relativeTo) {
    super();
    this.o1p_1 = relativeTo;
  }
}
class Last extends PipelinePhaseRelation {
  constructor() {
    Last_instance = null;
    super();
    Last_instance = this;
  }
}
class SuspendFunctionGun$continuation$1 {
  constructor(this$0) {
    this.x1p_1 = this$0;
    this.w1p_1 = -2147483648;
  }
  rb() {
    var continuation = this.x1p_1.t1p_1[this.x1p_1.u1p_1];
    if (!(continuation === this) && !(continuation == null))
      return continuation.rb();
    var index = this.x1p_1.u1p_1 - 1 | 0;
    while (index >= 0) {
      var tmp0 = index;
      index = tmp0 - 1 | 0;
      var cont = this.x1p_1.t1p_1[tmp0];
      if (!(cont === this) && !(cont == null))
        return cont.rb();
    }
    // Inline function 'kotlin.error' call
    var message = 'Not started';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  li(result) {
    if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_isFailure__impl__jpiriv1ffgeoyqwuzmr)(result)) {
      // Inline function 'kotlin.Companion.failure' call
      var exception = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result__exceptionOrNull_impl_p6xea91phgcskd46fkx)(result));
      var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(exception));
      resumeRootWith(this.x1p_1, tmp$ret$0);
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    }
    loop(this.x1p_1, false);
  }
  wb(result) {
    return this.li(result);
  }
}
class SuspendFunctionGun extends PipelineContext {
  constructor(initial, context, blocks) {
    super(context);
    this.q1p_1 = blocks;
    var tmp = this;
    tmp.r1p_1 = new SuspendFunctionGun$continuation$1(this);
    this.s1p_1 = initial;
    var tmp_0 = this;
    // Inline function 'kotlin.arrayOfNulls' call
    var size = this.q1p_1.z();
    tmp_0.t1p_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.fillArrayVali8eppxapiek4)(Array(size), null);
    this.u1p_1 = -1;
    this.v1p_1 = 0;
  }
  gn() {
    return this.r1p_1.rb();
  }
  h1o() {
    return this.s1p_1;
  }
  j1o($completion) {
    var tmp$ret$0;
    $l$block_0: {
      // Inline function 'io.ktor.util.pipeline.SuspendFunctionGun.proceed.<anonymous>' call
      if (this.v1p_1 === this.q1p_1.z()) {
        tmp$ret$0 = this.s1p_1;
        break $l$block_0;
      }
      this.y1p((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.intercepted2ogpsikxxj4u0)($completion));
      if (loop(this, true)) {
        discardLastRootContinuation(this);
        tmp$ret$0 = this.s1p_1;
        break $l$block_0;
      }
      tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)();
    }
    return tmp$ret$0;
  }
  i1o(subject, $completion) {
    this.s1p_1 = subject;
    return this.j1o($completion);
  }
  k1o(initial, $completion) {
    this.v1p_1 = 0;
    if (this.v1p_1 === this.q1p_1.z())
      return initial;
    this.s1p_1 = initial;
    if (this.u1p_1 >= 0)
      throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('Already started');
    return this.j1o($completion);
  }
  y1p(continuation) {
    this.u1p_1 = this.u1p_1 + 1 | 0;
    this.t1p_1[this.u1p_1] = continuation;
  }
}
class TypeInfo {
  constructor(type, reifiedType, kotlinType) {
    kotlinType = kotlinType === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : kotlinType;
    this.z1p_1 = type;
    this.a1q_1 = reifiedType;
    this.b1q_1 = kotlinType;
  }
  toString() {
    return 'TypeInfo(type=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.z1p_1) + ', reifiedType=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(this.a1q_1) + ', kotlinType=' + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString30pk9tzaqopn)(this.b1q_1) + ')';
  }
  hashCode() {
    var result = this.z1p_1.hashCode();
    result = imul(result, 31) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.a1q_1) | 0;
    result = imul(result, 31) + (this.b1q_1 == null ? 0 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(this.b1q_1)) | 0;
    return result;
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof TypeInfo))
      return false;
    var tmp0_other_with_cast = other instanceof TypeInfo ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    if (!this.z1p_1.equals(tmp0_other_with_cast.z1p_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.a1q_1, tmp0_other_with_cast.a1q_1))
      return false;
    if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(this.b1q_1, tmp0_other_with_cast.b1q_1))
      return false;
    return true;
  }
}
class AttributesJs {
  constructor() {
    var tmp = this;
    // Inline function 'kotlin.collections.mutableMapOf' call
    tmp.c1q_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.LinkedHashMap1zhqxkxv3xnkl.ya();
  }
  m1k(key) {
    var tmp = this.c1q_1.q2(key);
    return (tmp == null ? true : !(tmp == null)) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  }
  n1k(key) {
    return this.c1q_1.o2(key);
  }
  o1k(key, value) {
    // Inline function 'kotlin.collections.set' call
    this.c1q_1.t2(key, value);
  }
  p1k(key) {
    this.c1q_1.u2(key);
  }
  q1k(key, block) {
    var tmp0_safe_receiver = this.c1q_1.q2(key);
    if (tmp0_safe_receiver == null)
      null;
    else {
      // Inline function 'kotlin.let' call
      // Inline function 'kotlin.contracts.contract' call
      return !(tmp0_safe_receiver == null) ? tmp0_safe_receiver : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
    }
    // Inline function 'kotlin.also' call
    var this_0 = block();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.util.AttributesJs.computeIfAbsent.<anonymous>' call
    // Inline function 'kotlin.collections.set' call
    this.c1q_1.t2(key, this_0);
    return this_0;
  }
  r1k() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toList3jhuyej2anx2q)(this.c1q_1.r2());
  }
}
class InvalidTimestampException extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr {
  static h1q(timestamp) {
    var $this = this.b4('Invalid date timestamp exception: ' + timestamp.toString());
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.captureStack1fzi4aczwc4hg)($this, $this.g1q_1);
    return $this;
  }
}
class KtorSimpleLogger$1 {
  constructor() {
    var tmp = this;
    var tmp_0;
    switch (PlatformUtils_getInstance().z1l_1 || PlatformUtils_getInstance().y1l_1) {
      case true:
        // Inline function 'kotlin.Result.getOrNull' call

        // Inline function 'kotlin.runCatching' call

        var tmp_1;
        try {
          // Inline function 'kotlin.Companion.success' call
          // Inline function 'io.ktor.util.logging.<no name provided>.level.<anonymous>' call
          var tmp_2 = process.env.KTOR_LOG_LEVEL;
          var value = (tmp_2 == null ? true : typeof tmp_2 === 'string') ? tmp_2 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
          tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(value);
        } catch ($p) {
          var tmp_3;
          if ($p instanceof Error) {
            var e = $p;
            // Inline function 'kotlin.Companion.failure' call
            tmp_3 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(e));
          } else {
            throw $p;
          }
          tmp_1 = tmp_3;
        }

        var this_0 = tmp_1;
        var tmp_4;
        if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_isFailure__impl__jpiriv1ffgeoyqwuzmr)(this_0)) {
          tmp_4 = null;
        } else {
          var tmp_5 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_value__impl__bjfvqg1uwg4i093qaqh)(this_0);
          tmp_4 = (tmp_5 == null ? true : !(tmp_5 == null)) ? tmp_5 : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
        }

        var tmp1_safe_receiver = tmp_4;
        var tmp_6;
        if (tmp1_safe_receiver == null) {
          tmp_6 = null;
        } else {
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          // Inline function 'io.ktor.util.logging.<no name provided>.level.<anonymous>' call
          var tmp$ret$6;
          $l$block: {
            // Inline function 'kotlin.collections.firstOrNull' call
            var indexedObject = values_1();
            var inductionVariable = 0;
            var last = indexedObject.length;
            while (inductionVariable < last) {
              var element = indexedObject[inductionVariable];
              inductionVariable = inductionVariable + 1 | 0;
              // Inline function 'io.ktor.util.logging.<no name provided>.level.<anonymous>.<anonymous>' call
              if (element.w2_1 === tmp1_safe_receiver) {
                tmp$ret$6 = element;
                break $l$block;
              }
            }
            tmp$ret$6 = null;
          }
          tmp_6 = tmp$ret$6;
        }

        var tmp2_elvis_lhs = tmp_6;
        tmp_0 = tmp2_elvis_lhs == null ? LogLevel_INFO_getInstance() : tmp2_elvis_lhs;
        break;
      case false:
        tmp_0 = LogLevel_TRACE_getInstance();
        break;
      default:
        (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.noWhenBranchMatchedException2a6r7ubxgky5j)();
        break;
    }
    tmp.i1q_1 = tmp_0;
  }
  j1q(message) {
    if (this.i1q_1.y2(LogLevel_TRACE_getInstance()) > 0)
      return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
    console.debug('TRACE: ' + message);
  }
}
class LogLevel extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Enum3alwj03lh1n41 {}
class JsType {}
//endregion
function putAll(_this__u8e3s4, other) {
  // Inline function 'kotlin.collections.forEach' call
  var tmp0_iterator = other.r1k().w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'io.ktor.util.putAll.<anonymous>' call
    _this__u8e3s4.o1k(element instanceof AttributeKey ? element : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)(), other.l1k(element));
  }
}
function toByteArray(_this__u8e3s4, $completion) {
  var tmp = new $toByteArrayCOROUTINE$0(_this__u8e3s4, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function CaseInsensitiveMap$_get_keys_$lambda_ptzlqj($this$$receiver) {
  return $this$$receiver.b1l_1;
}
function CaseInsensitiveMap$_get_keys_$lambda_ptzlqj_0($this$$receiver) {
  return caseInsensitive($this$$receiver);
}
function CaseInsensitiveMap$_get_entries_$lambda_r32w19($this$$receiver) {
  return new Entry_0($this$$receiver.k1().b1l_1, $this$$receiver.l1());
}
function CaseInsensitiveMap$_get_entries_$lambda_r32w19_0($this$$receiver) {
  return new Entry_0(caseInsensitive($this$$receiver.k1()), $this$$receiver.l1());
}
function toCharArray(_this__u8e3s4) {
  var tmp = 0;
  var tmp_0 = _this__u8e3s4.length;
  var tmp_1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charArray2ujmm1qusno00)(tmp_0);
  while (tmp < tmp_0) {
    var tmp_2 = tmp;
    tmp_1[tmp_2] = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, tmp_2);
    tmp = tmp + 1 | 0;
  }
  return tmp_1;
}
function isLowerCase(_this__u8e3s4) {
  // Inline function 'kotlin.text.lowercaseChar' call
  // Inline function 'kotlin.text.lowercase' call
  // Inline function 'kotlin.js.unsafeCast' call
  // Inline function 'kotlin.js.asDynamic' call
  var tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)(_this__u8e3s4).toLowerCase();
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(tmp$ret$2, 0) === _this__u8e3s4;
}
function caseInsensitiveMap() {
  return new CaseInsensitiveMap();
}
function SilentSupervisor(parent) {
  parent = parent === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : parent;
  var tmp = (0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.SupervisorJobythnfxkr3jxc)(parent);
  // Inline function 'kotlinx.coroutines.CoroutineExceptionHandler' call
  var tmp$ret$0 = new _no_name_provided__qut3iv();
  return tmp.xi(tmp$ret$0);
}
var Platform_Jvm_instance;
var Platform_Native_instance;
var Platform_Browser_instance;
var Platform_Node_instance;
var Platform_entriesInitialized;
function Platform_initEntries() {
  if (Platform_entriesInitialized)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  Platform_entriesInitialized = true;
  Platform_Jvm_instance = new Platform('Jvm', 0);
  Platform_Native_instance = new Platform('Native', 1);
  Platform_Browser_instance = new Platform('Browser', 2);
  Platform_Node_instance = new Platform('Node', 3);
}
var PlatformUtils_instance;
function PlatformUtils_getInstance() {
  if (PlatformUtils_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new PlatformUtils();
  return PlatformUtils_instance;
}
function Platform_Jvm_getInstance() {
  Platform_initEntries();
  return Platform_Jvm_instance;
}
function Platform_Native_getInstance() {
  Platform_initEntries();
  return Platform_Native_instance;
}
function Platform_Browser_getInstance() {
  Platform_initEntries();
  return Platform_Browser_instance;
}
function Platform_Node_getInstance() {
  Platform_initEntries();
  return Platform_Node_instance;
}
function ensureListForKey($this, name) {
  var tmp0_elvis_lhs = $this.k1m_1.q2(name);
  var tmp;
  if (tmp0_elvis_lhs == null) {
    // Inline function 'kotlin.also' call
    // Inline function 'kotlin.collections.mutableListOf' call
    var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.util.StringValuesBuilderImpl.ensureListForKey.<anonymous>' call
    $this.l1m(name);
    // Inline function 'kotlin.collections.set' call
    $this.k1m_1.t2(name, this_0);
    tmp = this_0;
  } else {
    tmp = tmp0_elvis_lhs;
  }
  return tmp;
}
function StringValuesBuilderImpl$appendAll$lambda(this$0) {
  return function (name, values) {
    this$0.m1m(name, values);
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  };
}
function listForKey($this, name) {
  return $this.u1m_1.q2(name);
}
function appendAll(_this__u8e3s4, builder) {
  // Inline function 'kotlin.apply' call
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.util.appendAll.<anonymous>' call
  // Inline function 'kotlin.collections.forEach' call
  var tmp0_iterator = builder.h1m().w();
  while (tmp0_iterator.x()) {
    var element = tmp0_iterator.y();
    // Inline function 'io.ktor.util.appendAll.<anonymous>.<anonymous>' call
    // Inline function 'kotlin.collections.component1' call
    var name = element.k1();
    // Inline function 'kotlin.collections.component2' call
    var values = element.l1();
    _this__u8e3s4.m1m(name, values);
  }
  return _this__u8e3s4;
}
function entriesEquals(a, b) {
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(a, b);
}
function entriesHashCode(entries, seed) {
  return imul(seed, 31) + (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.hashCodeq5arwsb9dgti)(entries) | 0;
}
function toLowerCasePreservingASCIIRules(_this__u8e3s4) {
  var tmp$ret$1;
  $l$block: {
    // Inline function 'kotlin.text.indexOfFirst' call
    var inductionVariable = 0;
    var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceLength3278n89t01tmv)(_this__u8e3s4) - 1 | 0;
    if (inductionVariable <= last)
      do {
        var index = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'io.ktor.util.toLowerCasePreservingASCIIRules.<anonymous>' call
        var it = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(_this__u8e3s4, index);
        if (!(toLowerCasePreservingASCII(it) === it)) {
          tmp$ret$1 = index;
          break $l$block;
        }
      }
       while (inductionVariable <= last);
    tmp$ret$1 = -1;
  }
  var firstIndex = tmp$ret$1;
  if (firstIndex === -1) {
    return _this__u8e3s4;
  }
  var original = _this__u8e3s4;
  // Inline function 'kotlin.text.buildString' call
  var capacity = _this__u8e3s4.length;
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'kotlin.apply' call
  var this_0 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.StringBuildermazzzhj6kkai.qa(capacity);
  // Inline function 'kotlin.contracts.contract' call
  // Inline function 'io.ktor.util.toLowerCasePreservingASCIIRules.<anonymous>' call
  this_0.xf(original, 0, firstIndex);
  var inductionVariable_0 = firstIndex;
  var last_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndexld83bqhfgcdd)(original);
  if (inductionVariable_0 <= last_0)
    do {
      var index_0 = inductionVariable_0;
      inductionVariable_0 = inductionVariable_0 + 1 | 0;
      this_0.ma(toLowerCasePreservingASCII((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(original, index_0)));
    }
     while (!(index_0 === last_0));
  return this_0.toString();
}
function toLowerCasePreservingASCII(ch) {
  var tmp;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(65) <= ch ? ch <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(90) : false) {
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Char__plus_impl_qi7pgjue8oeapgr66d)(ch, 32);
  } else if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(0) <= ch ? ch <= (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Char___init__impl__6a9atx35f3p1971c8nj)(127) : false) {
    tmp = ch;
  } else {
    // Inline function 'kotlin.text.lowercaseChar' call
    // Inline function 'kotlin.text.lowercase' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    var tmp$ret$2 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString26mv3gzfo7fn)(ch).toLowerCase();
    tmp = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.charSequenceGet1vxk1y5n17t1z)(tmp$ret$2, 0);
  }
  return tmp;
}
function caseInsensitive(_this__u8e3s4) {
  return new CaseInsensitiveString(_this__u8e3s4);
}
var Companion_instance_0;
function Companion_getInstance() {
  if (Companion_instance_0 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion();
  return Companion_instance_0;
}
var WeekDay_MONDAY_instance;
var WeekDay_TUESDAY_instance;
var WeekDay_WEDNESDAY_instance;
var WeekDay_THURSDAY_instance;
var WeekDay_FRIDAY_instance;
var WeekDay_SATURDAY_instance;
var WeekDay_SUNDAY_instance;
var Companion_instance_1;
function Companion_getInstance_0() {
  return Companion_instance_1;
}
function values() {
  return [WeekDay_MONDAY_getInstance(), WeekDay_TUESDAY_getInstance(), WeekDay_WEDNESDAY_getInstance(), WeekDay_THURSDAY_getInstance(), WeekDay_FRIDAY_getInstance(), WeekDay_SATURDAY_getInstance(), WeekDay_SUNDAY_getInstance()];
}
var WeekDay_entriesInitialized;
function WeekDay_initEntries() {
  if (WeekDay_entriesInitialized)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  WeekDay_entriesInitialized = true;
  WeekDay_MONDAY_instance = new WeekDay('MONDAY', 0, 'Mon');
  WeekDay_TUESDAY_instance = new WeekDay('TUESDAY', 1, 'Tue');
  WeekDay_WEDNESDAY_instance = new WeekDay('WEDNESDAY', 2, 'Wed');
  WeekDay_THURSDAY_instance = new WeekDay('THURSDAY', 3, 'Thu');
  WeekDay_FRIDAY_instance = new WeekDay('FRIDAY', 4, 'Fri');
  WeekDay_SATURDAY_instance = new WeekDay('SATURDAY', 5, 'Sat');
  WeekDay_SUNDAY_instance = new WeekDay('SUNDAY', 6, 'Sun');
}
var Month_JANUARY_instance;
var Month_FEBRUARY_instance;
var Month_MARCH_instance;
var Month_APRIL_instance;
var Month_MAY_instance;
var Month_JUNE_instance;
var Month_JULY_instance;
var Month_AUGUST_instance;
var Month_SEPTEMBER_instance;
var Month_OCTOBER_instance;
var Month_NOVEMBER_instance;
var Month_DECEMBER_instance;
var Companion_instance_2;
function Companion_getInstance_1() {
  return Companion_instance_2;
}
function values_0() {
  return [Month_JANUARY_getInstance(), Month_FEBRUARY_getInstance(), Month_MARCH_getInstance(), Month_APRIL_getInstance(), Month_MAY_getInstance(), Month_JUNE_getInstance(), Month_JULY_getInstance(), Month_AUGUST_getInstance(), Month_SEPTEMBER_getInstance(), Month_OCTOBER_getInstance(), Month_NOVEMBER_getInstance(), Month_DECEMBER_getInstance()];
}
var Month_entriesInitialized;
function Month_initEntries() {
  if (Month_entriesInitialized)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  Month_entriesInitialized = true;
  Month_JANUARY_instance = new Month('JANUARY', 0, 'Jan');
  Month_FEBRUARY_instance = new Month('FEBRUARY', 1, 'Feb');
  Month_MARCH_instance = new Month('MARCH', 2, 'Mar');
  Month_APRIL_instance = new Month('APRIL', 3, 'Apr');
  Month_MAY_instance = new Month('MAY', 4, 'May');
  Month_JUNE_instance = new Month('JUNE', 5, 'Jun');
  Month_JULY_instance = new Month('JULY', 6, 'Jul');
  Month_AUGUST_instance = new Month('AUGUST', 7, 'Aug');
  Month_SEPTEMBER_instance = new Month('SEPTEMBER', 8, 'Sep');
  Month_OCTOBER_instance = new Month('OCTOBER', 9, 'Oct');
  Month_NOVEMBER_instance = new Month('NOVEMBER', 10, 'Nov');
  Month_DECEMBER_instance = new Month('DECEMBER', 11, 'Dec');
}
function WeekDay_MONDAY_getInstance() {
  WeekDay_initEntries();
  return WeekDay_MONDAY_instance;
}
function WeekDay_TUESDAY_getInstance() {
  WeekDay_initEntries();
  return WeekDay_TUESDAY_instance;
}
function WeekDay_WEDNESDAY_getInstance() {
  WeekDay_initEntries();
  return WeekDay_WEDNESDAY_instance;
}
function WeekDay_THURSDAY_getInstance() {
  WeekDay_initEntries();
  return WeekDay_THURSDAY_instance;
}
function WeekDay_FRIDAY_getInstance() {
  WeekDay_initEntries();
  return WeekDay_FRIDAY_instance;
}
function WeekDay_SATURDAY_getInstance() {
  WeekDay_initEntries();
  return WeekDay_SATURDAY_instance;
}
function WeekDay_SUNDAY_getInstance() {
  WeekDay_initEntries();
  return WeekDay_SUNDAY_instance;
}
function Month_JANUARY_getInstance() {
  Month_initEntries();
  return Month_JANUARY_instance;
}
function Month_FEBRUARY_getInstance() {
  Month_initEntries();
  return Month_FEBRUARY_instance;
}
function Month_MARCH_getInstance() {
  Month_initEntries();
  return Month_MARCH_instance;
}
function Month_APRIL_getInstance() {
  Month_initEntries();
  return Month_APRIL_instance;
}
function Month_MAY_getInstance() {
  Month_initEntries();
  return Month_MAY_instance;
}
function Month_JUNE_getInstance() {
  Month_initEntries();
  return Month_JUNE_instance;
}
function Month_JULY_getInstance() {
  Month_initEntries();
  return Month_JULY_instance;
}
function Month_AUGUST_getInstance() {
  Month_initEntries();
  return Month_AUGUST_instance;
}
function Month_SEPTEMBER_getInstance() {
  Month_initEntries();
  return Month_SEPTEMBER_instance;
}
function Month_OCTOBER_getInstance() {
  Month_initEntries();
  return Month_OCTOBER_instance;
}
function Month_NOVEMBER_getInstance() {
  Month_initEntries();
  return Month_NOVEMBER_instance;
}
function Month_DECEMBER_getInstance() {
  Month_initEntries();
  return Month_DECEMBER_instance;
}
function proceedLoop($this, $completion) {
  var tmp = new $proceedLoopCOROUTINE$1($this, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function copyInterceptors($this) {
  $this.n1o_1 = $this.p1o();
  $this.o1o_1 = false;
}
var Companion_instance_3;
function Companion_getInstance_2() {
  if (Companion_instance_3 === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Companion_2();
  return Companion_instance_3;
}
function _set_interceptors__wod97b($this, value) {
  $this.b1p_1.kotlinx$atomicfu$value = value;
}
function _get_interceptors__h4min7($this) {
  return $this.b1p_1.kotlinx$atomicfu$value;
}
function createContext($this, context, subject, coroutineContext) {
  return pipelineContextFor(context, sharedInterceptorsList($this), subject, coroutineContext, $this.e1p());
}
function findPhase($this, phase) {
  var phasesList = $this.z1o_1;
  var inductionVariable = 0;
  var last = phasesList.z();
  if (inductionVariable < last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var current = phasesList.c1(index);
      if (current === phase) {
        var content = PhaseContent.s1o(phase, Last_getInstance());
        phasesList.k2(index, content);
        return content;
      }
      var tmp;
      if (current instanceof PhaseContent) {
        tmp = current.l1o_1 === phase;
      } else {
        tmp = false;
      }
      if (tmp) {
        return current instanceof PhaseContent ? current : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
      }
    }
     while (inductionVariable < last);
  return null;
}
function findPhaseIndex($this, phase) {
  var phasesList = $this.z1o_1;
  var inductionVariable = 0;
  var last = phasesList.z();
  if (inductionVariable < last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var current = phasesList.c1(index);
      var tmp;
      if (current === phase) {
        tmp = true;
      } else {
        var tmp_0;
        if (current instanceof PhaseContent) {
          tmp_0 = current.l1o_1 === phase;
        } else {
          tmp_0 = false;
        }
        tmp = tmp_0;
      }
      if (tmp) {
        return index;
      }
    }
     while (inductionVariable < last);
  return -1;
}
function hasPhase($this, phase) {
  var phasesList = $this.z1o_1;
  var inductionVariable = 0;
  var last = phasesList.z();
  if (inductionVariable < last)
    do {
      var index = inductionVariable;
      inductionVariable = inductionVariable + 1 | 0;
      var current = phasesList.c1(index);
      var tmp;
      if (current === phase) {
        tmp = true;
      } else {
        var tmp_0;
        if (current instanceof PhaseContent) {
          tmp_0 = current.l1o_1 === phase;
        } else {
          tmp_0 = false;
        }
        tmp = tmp_0;
      }
      if (tmp) {
        return true;
      }
    }
     while (inductionVariable < last);
  return false;
}
function cacheInterceptors($this) {
  var interceptorsQuantity = $this.a1p_1;
  if (interceptorsQuantity === 0) {
    notSharedInterceptorsList($this, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)());
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyList1g2z5xcrvp2zy)();
  }
  var phases = $this.z1o_1;
  if (interceptorsQuantity === 1) {
    var inductionVariable = 0;
    var last = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1yw0x4k50k51w)(phases);
    if (inductionVariable <= last)
      $l$loop_0: do {
        var phaseIndex = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp = phases.c1(phaseIndex);
        var tmp1_elvis_lhs = tmp instanceof PhaseContent ? tmp : null;
        var tmp_0;
        if (tmp1_elvis_lhs == null) {
          continue $l$loop_0;
        } else {
          tmp_0 = tmp1_elvis_lhs;
        }
        var phaseContent = tmp_0;
        if (phaseContent.q14())
          continue $l$loop_0;
        var interceptors = phaseContent.v1o();
        setInterceptorsListFromPhase($this, phaseContent);
        return interceptors;
      }
       while (!(phaseIndex === last));
  }
  // Inline function 'kotlin.collections.mutableListOf' call
  var destination = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ArrayList3it5z8td81qkl.e1();
  var inductionVariable_0 = 0;
  var last_0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1yw0x4k50k51w)(phases);
  if (inductionVariable_0 <= last_0)
    $l$loop_1: do {
      var phaseIndex_0 = inductionVariable_0;
      inductionVariable_0 = inductionVariable_0 + 1 | 0;
      var tmp_1 = phases.c1(phaseIndex_0);
      var tmp3_elvis_lhs = tmp_1 instanceof PhaseContent ? tmp_1 : null;
      var tmp_2;
      if (tmp3_elvis_lhs == null) {
        continue $l$loop_1;
      } else {
        tmp_2 = tmp3_elvis_lhs;
      }
      var phase = tmp_2;
      phase.u1o(destination);
    }
     while (!(phaseIndex_0 === last_0));
  notSharedInterceptorsList($this, destination);
  return destination;
}
function sharedInterceptorsList($this) {
  if (_get_interceptors__h4min7($this) == null) {
    cacheInterceptors($this);
  }
  $this.c1p_1 = true;
  return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(_get_interceptors__h4min7($this));
}
function resetInterceptorsList($this) {
  _set_interceptors__wod97b($this, null);
  $this.c1p_1 = false;
  $this.d1p_1 = null;
}
function notSharedInterceptorsList($this, list) {
  _set_interceptors__wod97b($this, list);
  $this.c1p_1 = false;
  $this.d1p_1 = null;
}
function setInterceptorsListFromPhase($this, phaseContent) {
  _set_interceptors__wod97b($this, phaseContent.v1o());
  $this.c1p_1 = false;
  $this.d1p_1 = phaseContent.l1o_1;
}
function tryAddToPhaseFastPath($this, phase, block) {
  var currentInterceptors = _get_interceptors__h4min7($this);
  if ($this.z1o_1.f1() || currentInterceptors == null) {
    return false;
  }
  var tmp;
  if ($this.c1p_1) {
    tmp = true;
  } else {
    tmp = !(!(currentInterceptors == null) ? (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isInterface3d6p8outrmvmk)(currentInterceptors, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableList1beimitadwkna) : false);
  }
  if (tmp) {
    return false;
  }
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)($this.d1p_1, phase)) {
    currentInterceptors.g(block);
    return true;
  }
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.equals2au1ep9vhcato)(phase, (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.last1vo29oleiqj36)($this.z1o_1)) || findPhaseIndex($this, phase) === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_lastIndex1yw0x4k50k51w)($this.z1o_1)) {
    (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(findPhase($this, phase)).t1o(block);
    currentInterceptors.g(block);
    return true;
  }
  return false;
}
function pipelineContextFor(context, interceptors, subject, coroutineContext, debugMode) {
  debugMode = debugMode === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : debugMode;
  var tmp;
  if (get_DISABLE_SFG() || debugMode) {
    tmp = new DebugPipelineContext(context, interceptors, subject, coroutineContext);
  } else {
    tmp = new SuspendFunctionGun(subject, context, interceptors);
  }
  return tmp;
}
var Last_instance;
function Last_getInstance() {
  if (Last_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya)
    new Last();
  return Last_instance;
}
function recoverStackTraceBridge(exception, continuation) {
  var tmp;
  try {
    tmp = withCause((0,_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.recoverStackTrace2i3si2i8nvw1k)(exception, continuation), exception.cause);
  } catch ($p) {
    var tmp_0;
    if ($p instanceof Error) {
      var _ = $p;
      tmp_0 = exception;
    } else {
      throw $p;
    }
    tmp = tmp_0;
  }
  return tmp;
}
function loop($this, direct) {
  do {
    var currentIndex = $this.v1p_1;
    if (currentIndex === $this.q1p_1.z()) {
      if (!direct) {
        // Inline function 'kotlin.Companion.success' call
        var value = $this.s1p_1;
        var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)(value);
        resumeRootWith($this, tmp$ret$0);
        return false;
      }
      return true;
    }
    $this.v1p_1 = currentIndex + 1 | 0;
    var next = $this.q1p_1.c1(currentIndex);
    try {
      var result = next($this, $this.s1p_1, $this.r1p_1);
      if (result === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)())
        return false;
    } catch ($p) {
      if ($p instanceof Error) {
        var cause = $p;
        // Inline function 'kotlin.Companion.failure' call
        var tmp$ret$1 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(cause));
        resumeRootWith($this, tmp$ret$1);
        return false;
      } else {
        throw $p;
      }
    }
  }
   while (true);
}
function resumeRootWith($this, result) {
  if ($this.u1p_1 < 0) {
    // Inline function 'kotlin.error' call
    var message = 'No more continuations to resume';
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.toString1pkumu07cwy4m)(message));
  }
  var next = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)($this.t1p_1[$this.u1p_1]);
  var tmp1 = $this.u1p_1;
  $this.u1p_1 = tmp1 - 1 | 0;
  $this.t1p_1[tmp1] = null;
  if (!(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___get_isFailure__impl__jpiriv1ffgeoyqwuzmr)(result)) {
    next.wb(result);
  } else {
    var exception = recoverStackTraceBridge((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Result__exceptionOrNull_impl_p6xea91phgcskd46fkx)(result)), next);
    // Inline function 'kotlin.coroutines.resumeWithException' call
    // Inline function 'kotlin.Companion.failure' call
    var tmp$ret$0 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__._Result___init__impl__xyqfz831xktsyjq1qrq)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.createFailure8paxfkfa5dc7)(exception));
    next.wb(tmp$ret$0);
  }
}
function discardLastRootContinuation($this) {
  if ($this.u1p_1 < 0)
    throw _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.IllegalStateExceptionkoljg5n0nrlr.b4('No more continuations to resume');
  var tmp1 = $this.u1p_1;
  $this.u1p_1 = tmp1 - 1 | 0;
  $this.t1p_1[tmp1] = null;
}
function AttributesJsFn(concurrent) {
  concurrent = concurrent === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? false : concurrent;
  return new AttributesJs();
}
function unmodifiable(_this__u8e3s4) {
  return _this__u8e3s4;
}
function get_platform(_this__u8e3s4) {
  var tmp = typeof process !== 'undefined' && process.versions != null && process.versions.node != null || (typeof window !== 'undefined' && typeof window.process !== 'undefined' && window.process.versions != null && window.process.versions.node != null);
  var hasNodeApi = (!(tmp == null) ? typeof tmp === 'boolean' : false) ? tmp : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.THROW_CCE2g6jy02ryeudk)();
  return hasNodeApi ? Platform_Node_getInstance() : Platform_Browser_getInstance();
}
function get_isDevelopmentMode(_this__u8e3s4) {
  return false;
}
function get_isNewMemoryModel(_this__u8e3s4) {
  return true;
}
function GMTDate_0(timestamp) {
  timestamp = timestamp === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya ? null : timestamp;
  var tmp1_safe_receiver = timestamp == null ? null : timestamp.v3();
  var tmp;
  if (tmp1_safe_receiver == null) {
    tmp = null;
  } else {
    // Inline function 'kotlin.let' call
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'io.ktor.util.date.GMTDate.<anonymous>' call
    tmp = new Date(tmp1_safe_receiver);
  }
  var tmp2_elvis_lhs = tmp;
  var date = tmp2_elvis_lhs == null ? new Date() : tmp2_elvis_lhs;
  if ((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.isNaNymqb93xtq8w8)(date.getTime()))
    throw InvalidTimestampException.h1q((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.ensureNotNull1e947j3ixpazm)(timestamp));
  // Inline function 'kotlin.with' call
  // Inline function 'kotlin.contracts.contract' call
  var dayOfWeek = Companion_instance_1.i1n((date.getUTCDay() + 6 | 0) % 7 | 0);
  var month = Companion_instance_2.i1n(date.getUTCMonth());
  return new GMTDate(date.getUTCSeconds(), date.getUTCMinutes(), date.getUTCHours(), dayOfWeek, date.getUTCDate(), date.getUTCFullYear(), month, date.getUTCFullYear(), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.numberToLong1a4cndvg6c52s)(date.getTime()));
}
function KtorSimpleLogger(name) {
  return new KtorSimpleLogger$1();
}
var LogLevel_TRACE_instance;
var LogLevel_DEBUG_instance;
var LogLevel_INFO_instance;
var LogLevel_WARN_instance;
var LogLevel_ERROR_instance;
var LogLevel_NONE_instance;
function values_1() {
  return [LogLevel_TRACE_getInstance(), LogLevel_DEBUG_getInstance(), LogLevel_INFO_getInstance(), LogLevel_WARN_getInstance(), LogLevel_ERROR_getInstance(), LogLevel_NONE_getInstance()];
}
var LogLevel_entriesInitialized;
function LogLevel_initEntries() {
  if (LogLevel_entriesInitialized)
    return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Unit_instance104q5opgivhr8;
  LogLevel_entriesInitialized = true;
  LogLevel_TRACE_instance = new LogLevel('TRACE', 0);
  LogLevel_DEBUG_instance = new LogLevel('DEBUG', 1);
  LogLevel_INFO_instance = new LogLevel('INFO', 2);
  LogLevel_WARN_instance = new LogLevel('WARN', 3);
  LogLevel_ERROR_instance = new LogLevel('ERROR', 4);
  LogLevel_NONE_instance = new LogLevel('NONE', 5);
}
function LogLevel_TRACE_getInstance() {
  LogLevel_initEntries();
  return LogLevel_TRACE_instance;
}
function LogLevel_DEBUG_getInstance() {
  LogLevel_initEntries();
  return LogLevel_DEBUG_instance;
}
function LogLevel_INFO_getInstance() {
  LogLevel_initEntries();
  return LogLevel_INFO_instance;
}
function LogLevel_WARN_getInstance() {
  LogLevel_initEntries();
  return LogLevel_WARN_instance;
}
function LogLevel_ERROR_getInstance() {
  LogLevel_initEntries();
  return LogLevel_ERROR_instance;
}
function LogLevel_NONE_getInstance() {
  LogLevel_initEntries();
  return LogLevel_NONE_instance;
}
function get_DISABLE_SFG() {
  return DISABLE_SFG;
}
var DISABLE_SFG;
function withCause(_this__u8e3s4, cause) {
  return _this__u8e3s4;
}
function instanceOf(_this__u8e3s4, type) {
  return type.ke(_this__u8e3s4);
}
function typeInfoImpl(reifiedType, kClass, kType) {
  return new TypeInfo(kClass, reifiedType, kType);
}
var JsType_instance;
function JsType_getInstance() {
  return JsType_instance;
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AttributeKey, 'AttributeKey');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(Attributes, 'Attributes');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($toByteArrayCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CaseInsensitiveMap, 'CaseInsensitiveMap', CaseInsensitiveMap, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableMap1kqeifoi36kpz]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Entry_0, 'Entry', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Entry2xmjmyutzoq3p]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(_no_name_provided__qut3iv, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractCoroutineContextElement2rpehg0hv5szw, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Element2gr7ezmxqaln7]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DelegatingMutableSet$iterator$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DelegatingMutableSet, 'DelegatingMutableSet', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.KtMutableSetwuwn7k5m570a]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Platform, 'Platform');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(PlatformUtils, 'PlatformUtils');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForInterface1egvbzx539z91)(StringValues, 'StringValues');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(StringValuesBuilderImpl, 'StringValuesBuilderImpl', StringValuesBuilderImpl);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(StringValuesImpl, 'StringValuesImpl', StringValuesImpl, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [StringValues]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CaseInsensitiveString, 'CaseInsensitiveString');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(CopyOnWriteHashMap, 'CopyOnWriteHashMap', CopyOnWriteHashMap);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(GMTDate, 'GMTDate', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Comparable198qfk8pnblz0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(WeekDay, 'WeekDay');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Month, 'Month');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCoroutine1i7lbatuf5bnt)($proceedLoopCOROUTINE$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PipelineContext, 'PipelineContext', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlinx_coroutines_core_mjs__WEBPACK_IMPORTED_MODULE_2__.CoroutineScopefcb5f5dwqcas], [1, 0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(DebugPipelineContext, 'DebugPipelineContext', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [1, 0]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForCompanion1wyw17z38v6ac)(Companion_2);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PhaseContent, 'PhaseContent');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Pipeline, 'Pipeline', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [2]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PipelinePhase, 'PipelinePhase');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InvalidPhaseException, 'InvalidPhaseException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(PipelinePhaseRelation, 'PipelinePhaseRelation');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(After, 'After');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(Before, 'Before');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(Last, 'Last');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SuspendFunctionGun$continuation$1, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.Continuation1aa2oekvx7jm7]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(SuspendFunctionGun, 'SuspendFunctionGun', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [0, 1]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(TypeInfo, 'TypeInfo');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.protoOf180f3jzyo7rfj)(AttributesJs).l1k = get;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(AttributesJs, 'AttributesJs', AttributesJs, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.VOID7hggqo3abtya, [Attributes]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(InvalidTimestampException, 'InvalidTimestampException');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(KtorSimpleLogger$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForClassbxx6q50dy2s7)(LogLevel, 'LogLevel');
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_0__.initMetadataForObject1cxne3s9w65el)(JsType, 'JsType');
//endregion
//region block: init
Companion_instance_1 = new Companion_0();
Companion_instance_2 = new Companion_1();
DISABLE_SFG = false;
JsType_instance = new JsType();
//endregion
//region block: exports

//endregion

//# sourceMappingURL=ktor-ktor-utils.mjs.map


/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/global */
/******/ (() => {
/******/ 	__webpack_require__.g = (function() {
/******/ 		if (typeof globalThis === 'object') return globalThis;
/******/ 		try {
/******/ 			return this || new Function('return this')();
/******/ 		} catch (e) {
/******/ 			if (typeof window === 'object') return window;
/******/ 		}
/******/ 	})();
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!******************************************!*\
  !*** ./kotlin/integration-test-main.mjs ***!
  \******************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _actions_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @actions/core */ "../../node_modules/@actions/core/lib/core.js");
/* harmony import */ var _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kotlin-kotlin-stdlib.mjs */ "./kotlin/kotlin-kotlin-stdlib.mjs");
/* harmony import */ var _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs */ "./kotlin/kotlinx-serialization-kotlinx-serialization-core-js-ir.mjs");
/* harmony import */ var _ktor_ktor_client_content_negotiation_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ktor-ktor-client-content-negotiation.mjs */ "./kotlin/ktor-ktor-client-content-negotiation.mjs");
/* harmony import */ var _kotlinx_serialization_kotlinx_serialization_json_js_ir_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kotlinx-serialization-kotlinx-serialization-json-js-ir.mjs */ "./kotlin/kotlinx-serialization-kotlinx-serialization-json-js-ir.mjs");
/* harmony import */ var _ktor_ktor_serialization_kotlinx_json_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ktor-ktor-serialization-kotlinx-json.mjs */ "./kotlin/ktor-ktor-serialization-kotlinx-json.mjs");
/* harmony import */ var _kotlin_actions_ktor_engine_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kotlin-actions-ktor-engine.mjs */ "./kotlin/kotlin-actions-ktor-engine.mjs");
/* harmony import */ var _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ktor-ktor-client-core.mjs */ "./kotlin/ktor-ktor-client-core.mjs");
/* harmony import */ var _ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ktor-ktor-http.mjs */ "./kotlin/ktor-ktor-http.mjs");
/* harmony import */ var _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ktor-ktor-utils.mjs */ "./kotlin/ktor-ktor-utils.mjs");
/* harmony import */ var _actions_github__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @actions/github */ "../../node_modules/@actions/github/lib/github.js");











//region block: imports
//endregion
//region block: pre-declaration
class $mainCOROUTINE$0 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            this.mb_1 = 2;
            this.lb_1 = 1;
            var this_0 = {};
            this_0.required = true;
            suspendResult = action((0,_actions_core__WEBPACK_IMPORTED_MODULE_0__.getInput)('token', this_0), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.mb_1 = 3;
            this.lb_1 = 4;
            continue $sm;
          case 2:
            this.mb_1 = 3;
            var tmp_0 = this.ob_1;
            if (tmp_0 instanceof _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Error3ofk6owajcepa) {
              var e = this.ob_1;
              (0,_actions_core__WEBPACK_IMPORTED_MODULE_0__.setFailed)(e);
              this.lb_1 = 4;
              continue $sm;
            } else {
              throw this.ob_1;
            }

          case 3:
            throw this.ob_1;
          case 4:
            this.mb_1 = 3;
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
        }
      } catch ($p) {
        var e_0 = $p;
        if (this.mb_1 === 3) {
          throw e_0;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e_0;
        }
      }
     while (true);
  }
}
class Companion {}
class $serializer {
  constructor() {
    $serializer_instance = this;
    var tmp0_serialDesc = new _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_2__.PluginGeneratedSerialDescriptorqdzeg5asqhfg('Branch', this, 1);
    tmp0_serialDesc.s3j('name', false);
    this.u49_1 = tmp0_serialDesc;
  }
  v49(encoder, value) {
    var tmp0_desc = this.u49_1;
    var tmp1_output = encoder.q3c(tmp0_desc);
    tmp1_output.e3e(tmp0_desc, 0, value.w49_1);
    tmp1_output.r3c(tmp0_desc);
  }
  v38(encoder, value) {
    return this.v49(encoder, value instanceof Branch ? value : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)());
  }
  w38(decoder) {
    var tmp0_desc = this.u49_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.q3c(tmp0_desc);
    if (tmp5_input.f3d()) {
      tmp4_local0 = tmp5_input.a3d(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.g3d(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.a3d(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:
            throw _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_2__.UnknownFieldExceptiona60e3a6v1xqo.e3a(tmp2_index);
        }
      }
    tmp5_input.r3c(tmp0_desc);
    return Branch.x49(tmp3_bitMask0, tmp4_local0, null);
  }
  u38() {
    return this.u49_1;
  }
  u3j() {
    // Inline function 'kotlin.arrayOf' call
    // Inline function 'kotlin.js.unsafeCast' call
    // Inline function 'kotlin.js.asDynamic' call
    return [(0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_2__.StringSerializer_getInstance1k1oz5j50sfik)()];
  }
}
class Branch {
  toString() {
    return 'Branch(name=' + this.w49_1 + ')';
  }
  hashCode() {
    return (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getStringHashCode26igk1bx568vk)(this.w49_1);
  }
  equals(other) {
    if (this === other)
      return true;
    if (!(other instanceof Branch))
      return false;
    var tmp0_other_with_cast = other instanceof Branch ? other : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
    if (!(this.w49_1 === tmp0_other_with_cast.w49_1))
      return false;
    return true;
  }
  static x49(seen0, name, serializationConstructorMarker) {
    if (!(1 === (1 & seen0))) {
      (0,_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_2__.throwMissingFieldException2cmke0v3ynf14)(seen0, 1, $serializer_getInstance().u49_1);
    }
    var $this = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createThis2j2avj17cvnv2)(this);
    $this.w49_1 = name;
    return $this;
  }
}
class $actionCOROUTINE$1 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(token, resultContinuation) {
    super(resultContinuation);
    this.z48_1 = token;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 2;
            (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.println2shhhgwwt4c61)('Hello ' + _actions_github__WEBPACK_IMPORTED_MODULE_10__.context.actor);
            this.lb_1 = 1;
            suspendResult = getMainBranch(_actions_github__WEBPACK_IMPORTED_MODULE_10__.context.repo.owner, _actions_github__WEBPACK_IMPORTED_MODULE_10__.context.repo.repo, this.z48_1, this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var user = suspendResult;
            (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.println2shhhgwwt4c61)('Branch ' + user.w49_1);
            return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
          case 2:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 2) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
class $getMainBranchCOROUTINE$2 extends _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.CoroutineImpl2sn3kjnwmfr10 {
  constructor(owner, repo, token, resultContinuation) {
    super(resultContinuation);
    this.i49_1 = owner;
    this.j49_1 = repo;
    this.k49_1 = token;
  }
  tb() {
    var suspendResult = this.nb_1;
    $sm: do
      try {
        var tmp = this.lb_1;
        switch (tmp) {
          case 0:
            this.mb_1 = 3;
            var tmp_0 = this;
            var tmp_1 = _kotlin_actions_ktor_engine_mjs__WEBPACK_IMPORTED_MODULE_6__.JsEsModule_instancea6jusegqa21s;
            tmp_0.l49_1 = (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_7__.HttpClient2x7qc5z8fmeal)(tmp_1, getMainBranch$lambda);
            var tmp_2 = this;
            tmp_2.m49_1 = this.l49_1;
            var tmp_3 = this;
            tmp_3.n49_1 = 'https://api.github.com/repos/' + this.i49_1 + '/' + this.j49_1 + '/branches/main';
            var tmp_4 = this;
            tmp_4.o49_1 = this.m49_1;
            var tmp_5 = this;
            tmp_5.p49_1 = this.o49_1;
            var tmp_6 = this;
            var this_0 = new _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_7__.HttpRequestBuilder15f2nnx9sjuv1();
            (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_7__.url2l6iw5ri21nxb)(this_0, this.n49_1);
            (0,_ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_7__.bearerAuthj128my0vj44j)(this_0, this.k49_1);
            tmp_6.q49_1 = this_0;
            this.q49_1.l28_1 = (0,_ktor_ktor_http_mjs__WEBPACK_IMPORTED_MODULE_8__.Companion_getInstancepumzx9q4106p)().n1x_1;
            var tmp_7 = this;
            tmp_7.r49_1 = this.p49_1;
            var tmp_8 = this;
            tmp_8.s49_1 = this.q49_1;
            this.lb_1 = 1;
            suspendResult = (new _ktor_ktor_client_core_mjs__WEBPACK_IMPORTED_MODULE_7__.HttpStatement3zxb33q8lku(this.s49_1, this.r49_1)).k31(this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.t49_1 = suspendResult;
            this.lb_1 = 2;
            var tmp_9 = this.t49_1.i2c();
            var tmp_10 = _ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_9__.JsType_instance35xixcvz0qegz;
            var tmp_11 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(Branch);
            var tmp_12;
            try {
              tmp_12 = (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.createKType1lgox3mzhchp5)((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.getKClass1s3j9wy1cofik)(Branch), (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.arrayOf1akklvh2at202)([]), false);
            } catch ($p) {
              var tmp_13;
              if ($p instanceof Error) {
                var cause = $p;
                tmp_13 = null;
              } else {
                throw $p;
              }
              tmp_12 = tmp_13;
            }

            suspendResult = tmp_9.m2b((0,_ktor_ktor_utils_mjs__WEBPACK_IMPORTED_MODULE_9__.typeInfoImpl3ju54ew51hieg)(tmp_10, tmp_11, tmp_12), this);
            if (suspendResult === (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_COROUTINE_SUSPENDED3ujt3p13qm4iy)()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var branch = suspendResult instanceof Branch ? suspendResult : (0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.THROW_CCE2g6jy02ryeudk)();
            return branch;
          case 3:
            throw this.ob_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.mb_1 === 3) {
          throw e;
        } else {
          this.lb_1 = this.mb_1;
          this.ob_1 = e;
        }
      }
     while (true);
  }
}
//endregion
function main($completion) {
  var tmp = new $mainCOROUTINE$0($completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function mainWrapper() {
  main((0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.get_EmptyContinuationn1rwa6yr6j5w)());
}
function action(token, $completion) {
  var tmp = new $actionCOROUTINE$1(token, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
function getMainBranch(owner, repo, token, $completion) {
  var tmp = new $getMainBranchCOROUTINE$2(owner, repo, token, $completion);
  tmp.nb_1 = _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
  tmp.ob_1 = null;
  return tmp.tb();
}
var Companion_instance;
function Companion_getInstance_0() {
  return Companion_instance;
}
var $serializer_instance;
function $serializer_getInstance() {
  if ($serializer_instance === _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya)
    new $serializer();
  return $serializer_instance;
}
function getMainBranch$lambda($this$HttpClient) {
  var tmp = (0,_ktor_ktor_client_content_negotiation_mjs__WEBPACK_IMPORTED_MODULE_3__.Plugin_getInstance2kzyrw2awmziu)();
  $this$HttpClient.t29(tmp, getMainBranch$lambda$lambda);
  $this$HttpClient.x28_1 = true;
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function getMainBranch$lambda$lambda($this$install) {
  (0,_ktor_ktor_serialization_kotlinx_json_mjs__WEBPACK_IMPORTED_MODULE_5__.jsonu6qnfo3b405p)($this$install, (0,_kotlinx_serialization_kotlinx_serialization_json_js_ir_mjs__WEBPACK_IMPORTED_MODULE_4__.Jsonsmkyu9xjl7fv)(_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, getMainBranch$lambda$lambda$lambda));
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
function getMainBranch$lambda$lambda$lambda($this$Json) {
  $this$Json.z3x_1 = true;
  $this$Json.i3y_1 = false;
  return _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.Unit_instance104q5opgivhr8;
}
//region block: post-declaration
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($mainCOROUTINE$0);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCompanion1wyw17z38v6ac)(Companion);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.protoOf180f3jzyo7rfj)($serializer).v3j = _kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_2__.typeParametersSerializers2likxjr48tr7y;
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForObject1cxne3s9w65el)($serializer, '$serializer', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, [_kotlinx_serialization_kotlinx_serialization_core_js_ir_mjs__WEBPACK_IMPORTED_MODULE_2__.GeneratedSerializer1f7t7hssdd2ws]);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForClassbxx6q50dy2s7)(Branch, 'Branch', _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, _kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.VOID7hggqo3abtya, {0: $serializer_getInstance});
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($actionCOROUTINE$1);
(0,_kotlin_kotlin_stdlib_mjs__WEBPACK_IMPORTED_MODULE_1__.initMetadataForCoroutine1i7lbatuf5bnt)($getMainBranchCOROUTINE$2);
//endregion
//region block: init
Companion_instance = new Companion();
//endregion
mainWrapper();

//# sourceMappingURL=integration-test-main.mjs.map

})();

